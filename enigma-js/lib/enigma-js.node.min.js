!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("enigma-js",[],t):"object"==typeof exports?exports["enigma-js"]=t():e["enigma-js"]=t()}(global,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=14)}([function(e,t){e.exports=require("node-forge")},function(e,t){e.exports=require("eventemitter3")},function(e,t){e.exports=require("jsbi")},function(e,t){e.exports=require("web3-utils")},function(e,t){e.exports=require("buffer")},function(e,t){e.exports=require("zlib")},function(e,t){e.exports=require("eth-crypto")},function(e,t){e.exports=require("elliptic")},function(e){e.exports=JSON.parse('{"contractName":"Enigma","abi":[{"constant":true,"inputs":[],"name":"getAllSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getWorkersParams","outputs":[{"components":[{"name":"firstBlockNumber","type":"uint256"},{"name":"workers","type":"address[]"},{"name":"stakes","type":"uint256[]"},{"name":"seed","type":"uint256"}],"name":"","type":"tuple[5]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_scAddr","type":"bytes32"}],"name":"getSecretContract","outputs":[{"components":[{"name":"owner","type":"address"},{"name":"preCodeHash","type":"bytes32"},{"name":"codeHash","type":"bytes32"},{"name":"stateDeltaHashes","type":"bytes32[]"},{"name":"status","type":"uint8"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"getTaskRecord","outputs":[{"components":[{"name":"sender","type":"address"},{"name":"inputsHash","type":"bytes32"},{"name":"outputHash","type":"bytes32"},{"name":"gasLimit","type":"uint64"},{"name":"gasPx","type":"uint64"},{"name":"blockNumber","type":"uint256"},{"name":"status","type":"uint8"},{"name":"proof","type":"bytes"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_signer","type":"address"}],"name":"getWorkerFromSigningAddress","outputs":[{"name":"","type":"address"},{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getUpdatedEnigmaContractAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_worker","type":"address"}],"name":"getWorker","outputs":[{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSigningAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEpochSize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_sender","type":"address"}],"name":"getUserTaskDeployments","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_tokenAddress","type":"address"},{"name":"_principal","type":"address"},{"name":"_epochSize","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint64[]"},{"indexed":false,"name":"gasPxs","type":"uint64[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event"},{"constant":false,"inputs":[{"name":"_signer","type":"address"},{"name":"_report","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_custodian","type":"address"},{"name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"login","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"logout","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContractFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_preCodeHash","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_initStateDeltaHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"countSecretContracts","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_start","type":"uint256"},{"name":"_stop","type":"uint256"}],"name":"getSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint64"},{"name":"_gasPx","type":"uint64"},{"name":"_firstBlockNumber","type":"uint256"},{"name":"_nonce","type":"uint256"}],"name":"createDeploymentTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint64"},{"name":"_gasPx","type":"uint64"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHashes","type":"bytes32[]"},{"name":"_gasLimits","type":"uint64[]"},{"name":"_gasPxs","type":"uint64[]"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecords","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_stateDeltaHash","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitReceipt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitTaskFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"returnFeesForTask","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_seed","type":"uint256"},{"name":"_sig","type":"bytes"}],"name":"setWorkersParams","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getActiveWorkers","outputs":[{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getFirstBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getWorkerParams","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_scAddr","type":"bytes32"}],"name":"getWorkerGroup","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_custodian","type":"address"}],"name":"getReport","outputs":[{"name":"","type":"address"},{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_data","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"verifyReport","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_updatedEnigmaContractAddress","type":"address"}],"name":"upgradeEnigmaContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_workerAddress","type":"address"},{"name":"_signer","type":"address"},{"name":"_sig","type":"bytes"}],"name":"transferWorkerStakePostUpgrade","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getActiveWorkers\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getWorkerGroup\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"logout\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitReceipt\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitTaskFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"deposit\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_initStateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_seed\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setWorkersParams\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContractFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getAllSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getWorkersParams\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple[5]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"countSecretContracts\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getSecretContract\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"register\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_workerAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"transferWorkerStakePostUpgrade\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_start\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_stop\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getTaskRecord\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"proof\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"isOwner\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getWorkerParams\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorkerFromSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"login\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_data\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"verifyReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"_gasLimits\\",\\"type\\":\\"uint64[]\\"},{\\"name\\":\\"_gasPxs\\",\\"type\\":\\"uint64[]\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecords\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getUpdatedEnigmaContractAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_worker\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorker\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createDeploymentTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getFirstBlockNumber\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getEpochSize\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"returnFeesForTask\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_updatedEnigmaContractAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"upgradeEnigmaContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_sender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getUserTaskDeployments\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"name\\":\\"_tokenAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_principal\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_epochSize\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"custodian\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"Registered\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"hash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"workerAddr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"ValidatedSig\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"inclusionBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"indexed\\":false,\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WorkersParameterized\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskIds\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimits\\",\\"type\\":\\"uint64[]\\"},{\\"indexed\\":false,\\"name\\":\\"gasPxs\\",\\"type\\":\\"uint64[]\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordsCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"deltaHashIndex\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskIds\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"outputHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptsVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailedETH\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"TaskFeeReturned\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"DepositSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WithdrawSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"initStateDeltaHash\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"SecretContractDeployed\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_optionalEthereumContractAddress\\":\\"Output state hash\\",\\"_optionalEthereumData\\":\\"Output state hash\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_stateDeltaHash\\":\\"Input state delta hash\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"commitTaskFailure(bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"countSecretContracts()\\":{\\"return\\":\\"Number of deployed secret contracts\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\",\\"_nonce\\":\\"Locally-computed nonce value for this deployment\\"}},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"createTaskRecords(bytes32[],uint64[],uint64[],uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimits\\":\\"ENG gas limit\\",\\"_gasPxs\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHashes\\":\\"Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_initStateDeltaHash\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumContractAddress\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumData\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_preCodeHash\\":\\"Predeployed bytecode hash\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deploySecretContractFailure(bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deposit(address,uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\",\\"_custodian\\":\\"The worker\'s ETH address\\"}},\\"getActiveWorkers(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"}},\\"getAllSecretContractAddresses()\\":{\\"return\\":\\"Array of secret contract addresses\\"},\\"getEpochSize()\\":{\\"return\\":\\"Epoch size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Block number\\"},\\"getReport(address)\\":{\\"params\\":{\\"_custodian\\":\\"The worker\'s custodian address\\"}},\\"getSecretContract(bytes32)\\":{\\"params\\":{\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"SecretContract struct\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"params\\":{\\"_start\\":\\"Start of range\\",\\"_stop\\":\\"End of range\\"},\\"return\\":\\"Subset of deployed secret contract addresses\\"},\\"getSigningAddress()\\":{\\"return\\":\\"Signing address\\"},\\"getTaskRecord(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique identifier for a given task\\"},\\"return\\":\\"TaskRecord struct\\"},\\"getUpdatedEnigmaContractAddress()\\":{\\"return\\":\\"Updated Enigma contract address\\"},\\"getUserTaskDeployments(address)\\":{\\"params\\":{\\"_sender\\":\\"Task sender\'s ethereum address\\"},\\"return\\":\\"Current number for task deployments for user\\"},\\"getWorker(address)\\":{\\"params\\":{\\"_worker\\":\\"Worker\'s ethereum address\\"},\\"return\\":\\"Worker struct\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"params\\":{\\"_signer\\":\\"Worker\'s signing address\\"},\\"return\\":\\"Ethereum addressWorker struct\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number the task record was mined\\",\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"Selected workers\' addresses\\"},\\"getWorkerParams(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes\\"},\\"getWorkersParams()\\":{\\"return\\":\\"Array of WorkersParams structs\\"},\\"isOwner()\\":{\\"return\\":\\"true if `msg.sender` is the owner of the contract.\\"},\\"owner()\\":{\\"return\\":\\"the address of the owner.\\"},\\"register(address,bytes,bytes)\\":{\\"params\\":{\\"_report\\":\\"The RLP encoded report returned by the IAS\\",\\"_signature\\":\\"Signature\\",\\"_signer\\":\\"The signer address, derived from the enclave public key\\"}},\\"renounceOwnership()\\":{\\"details\\":\\"Allows the current owner to relinquish control of the contract.\\"},\\"returnFeesForTask(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique taskId\\"}},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number principal node is attempting to set worker params\\",\\"_seed\\":\\"The random integer generated by the enclave\\",\\"_sig\\":\\"Principal node\'s signature\\"}},\\"transferOwnership(address)\\":{\\"details\\":\\"Allows the current owner to transfer control of the contract to a newOwner.\\",\\"params\\":{\\"newOwner\\":\\"The address to transfer ownership to.\\"}},\\"transferWorkerStakePostUpgrade(address,address,bytes)\\":{\\"params\\":{\\"_sig\\":\\"Signature\\",\\"_signer\\":\\"Newly-registered worker address\\",\\"_workerAddress\\":\\"Newly-registered worker address\\"}},\\"upgradeEnigmaContract(address)\\":{\\"params\\":{\\"_updatedEnigmaContractAddress\\":\\"Updated newly-deployed Enigma contract address\\"}},\\"verifyReport(bytes,bytes)\\":{\\"params\\":{\\"_data\\":\\"The report itself\\",\\"_signature\\":\\"The signature of the report\\"}},\\"withdraw(uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\"}}}},\\"userdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee.\\"},\\"commitTaskFailure(bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure.\\"},\\"countSecretContracts()\\":{\\"notice\\":\\"Check if secret contract has been deployed\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"notice\\":\\"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid.\\"},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"notice\\":\\"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"createTaskRecords(bytes32[],uint64[],uint64[],uint256)\\":{\\"notice\\":\\"Create task records for tasks (either contract deployment or regular tasks). This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deploySecretContractFailure(bytes32,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deposit(address,uint256)\\":{\\"notice\\":\\"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\"},\\"getActiveWorkers(uint256)\\":{\\"notice\\":\\"Get active workers before a certain block number\\"},\\"getAllSecretContractAddresses()\\":{\\"notice\\":\\"Get all secret contract addresses\\"},\\"getEpochSize()\\":{\\"notice\\":\\"Get the epoch block size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"notice\\":\\"Get the first block number of an epoch that a given block number belongs to\\"},\\"getReport(address)\\":{\\"notice\\":\\"The RLP encoded report returned by the IAS server\\"},\\"getSecretContract(bytes32)\\":{\\"notice\\":\\"Get a SecretContract struct given a particular secret contract address\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"notice\\":\\"Get deployed secret contract addresses within a range\\"},\\"getSigningAddress()\\":{\\"notice\\":\\"Get signing address of calling worker\\"},\\"getTaskRecord(bytes32)\\":{\\"notice\\":\\"Get a TaskRecord struct given a particular task\'s ID\\"},\\"getUpdatedEnigmaContractAddress()\\":{\\"notice\\":\\"Get updated Enigma contract address\\"},\\"getUserTaskDeployments(address)\\":{\\"notice\\":\\"Get the current number/index (used as unique nonce value) of task deployments for a given user user\\"},\\"getWorker(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s ethereum address\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s signing address\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"notice\\":\\"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address.\\"},\\"getWorkerParams(uint256)\\":{\\"notice\\":\\"Get worker params for an epoch given a particular block number\\"},\\"getWorkersParams()\\":{\\"notice\\":\\"Get epoch-based history of worker params information\\"},\\"login()\\":{\\"notice\\":\\"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process.\\"},\\"logout()\\":{\\"notice\\":\\"Logout worker. Worker must be logged in to do so.\\"},\\"register(address,bytes,bytes)\\":{\\"notice\\":\\"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks.\\"},\\"renounceOwnership()\\":{\\"notice\\":\\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\\"},\\"returnFeesForTask(bytes32)\\":{\\"notice\\":\\"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\"},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"notice\\":\\"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node\\"},\\"transferWorkerStakePostUpgrade(address,address,bytes)\\":{\\"notice\\":\\"Upgrade Enigma Contract\\"},\\"upgradeEnigmaContract(address)\\":{\\"notice\\":\\"Upgrade Enigma Contract\\"},\\"verifyReport(bytes,bytes)\\":{\\"notice\\":\\"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\"},\\"withdraw(uint256)\\":{\\"notice\\":\\"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\"}}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":\\"Enigma\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":{\\"keccak256\\":\\"0x9f74db8a7fa767f53512ef493a167a99bfc432a4f5c73f919eb1ee3b73a1c322\\",\\"urls\\":[\\"bzzr://07b60c4b70fabedcab347d36ba6a48d1d7350278afcbe9365fac6d728f9f6c26\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol\\":{\\"keccak256\\":\\"0x5bd9c996532891c2234021e7a827a8b997352074a0b3dec322adc52d864f14b3\\",\\"urls\\":[\\"bzzr://0b7c3170039b962271adb4d1289e3bf2287853e48720c6dd50213ed8c4f56c96\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol\\":{\\"keccak256\\":\\"0x07eed1a2b7b197abd238a817f74eebb9f4186efbabe196414fe7511dd2e5f5d1\\",\\"urls\\":[\\"bzzr://bf56bc1f444ca985e5f4ae08c0cb455d409d4f551a6180584068f08fd03f7efd\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol\\":{\\"keccak256\\":\\"0xb60ae3a36e5955a9a2ea5d6025984206bc503d546861ccc4b14629c22caafca7\\",\\"urls\\":[\\"bzzr://6d6c88518a482f959ab708aad0b3ae73cdd01eab9a8c418a87c297dadf482485\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol\\":{\\"keccak256\\":\\"0xaba87ac6cd834c8a356a454c9eeca6373a159c772e70c2d444facb024907f087\\",\\"urls\\":[\\"bzzr://e8c6d14b96f76d84c547c841b61e0df7a87fdb3f099621cafbe70f45c79cbf05\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol\\":{\\"keccak256\\":\\"0x8c9c76d05650f05e0074a74d4122ff7bac75b998ae7af273fd028f81ffc7aced\\",\\"urls\\":[\\"bzzr://af3e7b00776d98b98ca147381f0733ceccbee58cc883f759f80eb6adcbc75463\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol\\":{\\"keccak256\\":\\"0xd2620fd3dd9691f88740477d06dd32b4ecb7f090f7c76fd1e99a3117f5072e4f\\",\\"urls\\":[\\"bzzr://1c4cc43db4ca854e6c8d25c09b139000545e942bc05722b95858d6761b425ee7\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol\\":{\\"keccak256\\":\\"0x4e00d7b1cd34e5f91b51a6d6cff4af44221cda6b193ce91e76f71a838fa889f1\\",\\"urls\\":[\\"bzzr://215fe7b649e59d98e2bb8c94efe38336b3364ea428f69fb2871b5896f65432be\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol\\":{\\"keccak256\\":\\"0x068049a46997fcc3f0d2845a55fc53dc075d0cabb031cca15028f9b8ceaaedba\\",\\"urls\\":[\\"bzzr://6080bde417c16a692243cb1f68ff5ad73d60692231c74dd182e55bc129ea76aa\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol\\":{\\"keccak256\\":\\"0xd026eeadac6bc37aea8c00477b89b4a6325f93117133d8d44fef34d67fc14e1e\\",\\"urls\\":[\\"bzzr://83f0920325d1d0b7f402a2a31d0731c4a5ba562a50adc5160000d3e232b36a4a\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol\\":{\\"keccak256\\":\\"0xe918c3a32ffaa3be9a2ca32e0c156fa13f45df3a180b4afb966ed74beac68aee\\",\\"urls\\":[\\"bzzr://4cf87b0dd13996acd984d0964bef0de24f9f5b8a7f9c181ac6fcb2cdf04b2e38\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol\\":{\\"keccak256\\":\\"0xe21e3ce303a61dc1fe7e5ee8c77c94b0a96eaa9015f8abe6eb1fbce2d903b8ee\\",\\"urls\\":[\\"bzzr://ff90e3a82eb6fb10497c419d71bf240f43c544d0071b74b251204200dc08bba1\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Base64.sol\\":{\\"keccak256\\":\\"0x6b6fca483b4fd19ab6f282b45b24f02277ad2b0e2e65269c1f1f9b0672bf8ef3\\",\\"urls\\":[\\"bzzr://227cecb0afb5c808a338d0c757cedf9c085786a8f74fece5d9b14fac332f1301\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Bytes.sol\\":{\\"keccak256\\":\\"0xa9504cd72371444aaec522d40e02f930e9017fc59059c80b4d0b60afe6d3f151\\",\\"urls\\":[\\"bzzr://09e35d59d1fd6c478388e098f8f586d0eb3004af0e8402e5dc0c003b3d555e56\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Memory.sol\\":{\\"keccak256\\":\\"0xbb69933fc38ebf561a60fc4496c8d48f4aef12b5cef49bb9dd2957d8c6478ce0\\",\\"urls\\":[\\"bzzr://a4b1117bcf978aebba7df92a10df9e866cf854033bc2f4d8e426e360ba78d1fa\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol\\":{\\"keccak256\\":\\"0x171f88dc2ce91d601aa659bf84a240a2e7565d26d1a3ef1a0f98ec8181573498\\",\\"urls\\":[\\"bzzr://3830487ad541d0a7df9b761dee0a835cf065e369c6f1b2ac5f8409413f1777b6\\"]},\\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\":{\\"keccak256\\":\\"0xb48974d92a87053dc1d6c5389f3d1b2ad522dec23afcb508eaa935d98dfdc0b6\\",\\"urls\\":[\\"bzzr://e665a84309432c27a26e622665dd97ff29d4d6ad7ad655d6e2c50226a5e99b56\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]},\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\":{\\"keccak256\\":\\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\\",\\"urls\\":[\\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\\"]}},\\"version\\":1}","bytecode":"0x60806040523480156200001157600080fd5b5060405160608062004ef48339810180604052620000339190810190620000f3565b602380546001600160a01b0319163317908190556040516001600160a01b0391909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600080546001600160a01b039485166001600160a01b031991821617909155600191825560c86002556003805493909416928116929092179092556004805490911630179055602181905560225562000181565b8051620000e0816200015c565b92915050565b8051620000e08162000176565b6000806000606084860312156200010957600080fd5b6000620001178686620000d3565b93505060206200012a86828701620000d3565b92505060406200013d86828701620000e6565b9150509250925092565b60006001600160a01b038216620000e0565b90565b620001678162000147565b81146200017357600080fd5b50565b620001678162000159565b614d6380620001916000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80638ed0573711610130578063ba252688116100b8578063df4da4611161007c578063df4da461146104f6578063ee6dcef9146104fe578063f2fde38b14610511578063f74e6e1d14610524578063f9a9b7ae1461053757610232565b8063ba25268814610495578063c011b1c3146104a8578063c652b919146104c8578063cbbc061d146104db578063d855a579146104ee57610232565b8063a3bdae3e116100ff578063a3bdae3e1461043e578063b34e97e81461045f578063b5c1499214610467578063b695ca7a1461047a578063b9758c951461048d57610232565b80638ed05737146103c55780638f32d59b146103e55780639836ca31146103fa578063a0c399821461041d57610232565b8063516c8269116101be5780637624281e116101825780637624281e14610357578063786cd4d7146103775780638056b5591461038a5780638da5cb5b1461039d5780638e055b8b146103b257610232565b8063516c8269146102fd578063550baa2f1461031057806370266a4714610325578063715018a61461033a57806375bbf75b1461034257610232565b8063365a2cb311610205578063365a2cb31461029e5780633a322c52146102b157806347e7ef24146102c457806348cc3761146102d757806350946a9f146102ea57610232565b806316f9a2a4146102375780631d40ff0b146102615780631f3c99c3146102815780632e1a7d4d1461028b575b600080fd5b61024a61024536600461381f565b61054a565b604051610258929190614672565b60405180910390f35b61027461026f366004613b0b565b6105e4565b6040516102589190614661565b610289610683565b005b61028961029936600461381f565b6108dc565b6102896102ac36600461383d565b610c23565b6102896102bf36600461391b565b610efc565b6102896102d2366004613685565b6111c9565b6102896102e536600461383d565b611417565b6102896102f8366004613bad565b6116b2565b61028961030b366004613987565b611939565b610318611c02565b6040516102589190614697565b61032d611c5d565b60405161025891906146a8565b610289611d77565b61034a611dd2565b6040516102589190614b38565b61036a61036536600461381f565b611e64565b60405161025891906147bc565b61028961038536600461363c565b611f2b565b61034a610398366004613587565b61201c565b6103a56120e7565b6040516102589190614613565b6103186103c0366004613b0b565b6120f6565b6103d86103d336600461381f565b61218c565b6040516102589190614af6565b6103ed6122cc565b60405161025891906146b9565b61040d61040836600461381f565b6122dd565b6040516102589493929190614b46565b61043061042b366004613561565b612380565b604051610258929190614641565b61045161044c366004613561565b6125c3565b604051610258929190614621565b610289612845565b61034a610475366004613a72565b612ab1565b61028961048836600461377a565b612b40565b6103a5612bb0565b6102896104a33660046139b9565b612bbf565b6104bb6104b6366004613561565b612c2f565b6040516102589190614b07565b6102896104d63660046139fd565b612de0565b61034a6104e936600461381f565b612e52565b6103a5612ee1565b61034a612efd565b61028961050c36600461381f565b612f03565b61028961051f366004613561565b612f84565b610289610532366004613561565b612fa1565b61034a610545366004613561565b61304f565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b81526004016105879291906148fa565b60006040518083038186803b15801561059f57600080fd5b505af41580156105b3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105db91908101906136e9565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a906106269060009087908790600401614ab3565b60006040518083038186803b15801561063e57600080fd5b505af4158015610652573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067a91908101906136b5565b90505b92915050565b3361068c6130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156106d457fe5b60028111156106df57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561077c5780601f106107515761010080835404028352916020019161077c565b820191906000526020600020905b81548152906001019060200180831161075f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561082757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156107f557fe5b600381111561080057fe5b815260200160018201548152602001600282015481525050815260200190600101906107b4565b505050915250909150600190508160200151600281111561084457fe5b1461086d57604051600160e51b62461bcd0281526004016108649061476c565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f49906108a8906000906004016147cd565b60006040518083038186803b1580156108c057600080fd5b505af41580156108d4573d6000803e3d6000fd5b505050505050565b336108e56130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561092d57fe5b600281111561093857fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109d55780601f106109aa576101008083540402835291602001916109d5565b820191906000526020600020905b8154815290600101906020018083116109b857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610a8057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610a4e57fe5b6003811115610a5957fe5b81526020016001820154815260200160028201548152505081526020019060010190610a0d565b5050509152509091506002905081602001516002811115610a9d57fe5b14610abd57604051600160e51b62461bcd028152600401610864906147ac565b610ac5613108565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610b019085904390600401614b18565b60606040518083038186803b158015610b1957600080fd5b505af4158015610b2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b519190810190613acf565b9050600281516003811115610b6257fe5b14610b8257604051600160e51b62461bcd0281526004016108649061470c565b8060200151610b9043612e52565b11610bb057604051600160e51b62461bcd0281526004016108649061475c565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df46490610bed9060009088906004016148fa565b60006040518083038186803b158015610c0557600080fd5b505af4158015610c19573d6000803e3d6000fd5b5050505050505050565b6004546001600160a01b03163014610c5057604051600160e51b62461bcd0281526004016108649061472c565b33610c596130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610ca157fe5b6002811115610cac57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d495780601f10610d1e57610100808354040283529160200191610d49565b820191906000526020600020905b815481529060010190602001808311610d2c57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610df457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610dc257fe5b6003811115610dcd57fe5b81526020016001820154815260200160028201548152505081526020019060010190610d81565b5050509152509091506001905081602001516002811115610e1157fe5b14610e3157604051600160e51b62461bcd0281526004016108649061476c565b8960016000828152601f602052604090206004015460ff166001811115610e5457fe5b14610e7457604051600160e51b62461bcd0281526004016108649061471c565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610ebf906000908f908f908f908f908f908f908f908f90600401614915565b60006040518083038186803b158015610ed757600080fd5b505af4158015610eeb573d6000803e3d6000fd5b505050505050505050505050505050565b6004546001600160a01b03163014610f2957604051600160e51b62461bcd0281526004016108649061472c565b33610f326130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610f7a57fe5b6002811115610f8557fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110225780601f10610ff757610100808354040283529160200191611022565b820191906000526020600020905b81548152906001019060200180831161100557829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110cd57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561109b57fe5b60038111156110a657fe5b8152602001600182015481526020016002820154815250508152602001906001019061105a565b50505091525090915060019050816020015160028111156110ea57fe5b1461110a57604051600160e51b62461bcd0281526004016108649061476c565b8560016000828152601f602052604090206004015460ff16600181111561112d57fe5b1461114d57604051600160e51b62461bcd0281526004016108649061471c565b604051600160e21b632c5b41b302815273__TaskImpl______________________________9063b16d06cc90611190906000908b908b908b908b906004016149a8565b60006040518083038186803b1580156111a857600080fd5b505af41580156111bc573d6000803e3d6000fd5b5050505050505050505050565b6004546001600160a01b031630146111f657604051600160e51b62461bcd0281526004016108649061472c565b816111ff6130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561124757fe5b600281111561125257fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112ef5780601f106112c4576101008083540402835291602001916112ef565b820191906000526020600020905b8154815290600101906020018083116112d257829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561139a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561136857fe5b600381111561137357fe5b81526020016001820154815260200160028201548152505081526020019060010190611327565b50505091525090915060009050816020015160028111156113b757fe5b14156113d857604051600160e51b62461bcd0281526004016108649061477c565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610bed906000908890889060040161487b565b6004546001600160a01b0316301461144457604051600160e51b62461bcd0281526004016108649061472c565b3361144d6130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561149557fe5b60028111156114a057fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561153d5780601f106115125761010080835404028352916020019161153d565b820191906000526020600020905b81548152906001019060200180831161152057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156115e857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156115b657fe5b60038111156115c157fe5b81526020016001820154815260200160028201548152505081526020019060010190611575565b505050915250909150600190508160200151600281111561160557fe5b1461162557604051600160e51b62461bcd0281526004016108649061476c565b89600080828152601f602052604090206004015460ff16600181111561164757fe5b1461166757604051600160e51b62461bcd0281526004016108649061478c565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610ebf906000908f908f908f908f908f908f908f908f90600401614915565b6004546001600160a01b031630146116df57604051600160e51b62461bcd0281526004016108649061472c565b336116e86130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561173057fe5b600281111561173b57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117d85780601f106117ad576101008083540402835291602001916117d8565b820191906000526020600020905b8154815290600101906020018083116117bb57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561188357838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561185157fe5b600381111561185c57fe5b81526020016001820154815260200160028201548152505081526020019060010190611810565b50505091525090915060009050816020015160028111156118a057fe5b14156118c157604051600160e51b62461bcd0281526004016108649061477c565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b189061190290600090899089908990600401614ace565b60006040518083038186803b15801561191a57600080fd5b505af415801561192e573d6000803e3d6000fd5b505050505050505050565b6004546001600160a01b0316301461196657604051600160e51b62461bcd0281526004016108649061472c565b3361196f6130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156119b757fe5b60028111156119c257fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a5f5780601f10611a3457610100808354040283529160200191611a5f565b820191906000526020600020905b815481529060010190602001808311611a4257829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611b0a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611ad857fe5b6003811115611ae357fe5b81526020016001820154815260200160028201548152505081526020019060010190611a97565b5050509152509091506001905081602001516002811115611b2757fe5b14611b4757604051600160e51b62461bcd0281526004016108649061476c565b84600080828152601f602052604090206004015460ff166001811115611b6957fe5b14611b8957604051600160e51b62461bcd0281526004016108649061478c565b604051600160e01b6370a2e43b02815273__TaskImpl______________________________906370a2e43b90611bca906000908a908a908a906004016149fa565b60006040518083038186803b158015611be257600080fd5b505af4158015611bf6573d6000803e3d6000fd5b50505050505050505050565b60606000601b01805480602002602001604051908101604052809291908181526020018280548015611c5357602002820191906000526020600020905b815481526020019060010190808311611c3f575b5050505050905090565b611c6561312a565b6040805160a08101909152600660056000835b82821015611d6e578382600402016040518060800160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020018280548015611cf457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611cd6575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611d4c57602002820191906000526020600020905b815481526020019060010190808311611d38575b5050505050815260200160038201548152505081526020019060010190611c78565b50505050905090565b611d7f6122cc565b611d8857600080fd5b6023546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3602380546001600160a01b0319169055565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a338690611e0f9084906004016147cd565b60206040518083038186803b158015611e2757600080fd5b505af4158015611e3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e5f9190810190613aed565b905090565b611e6c613158565b6000828152601f6020908152604091829020825160a08101845281546001600160a01b031681526001820154818401526002820154818501526003820180548551818602810186019096528086529194929360608601939290830182828015611ef457602002820191906000526020600020905b815481526020019060010190808311611ee0575b5050509183525050600482015460209091019060ff166001811115611f1557fe5b6001811115611f2057fe5b90525090505b919050565b6004546001600160a01b03163014611f5857604051600160e51b62461bcd0281526004016108649061472c565b8260005b601a54811015611fda57816001600160a01b03166000601c01600080601a018481548110611f8657fe5b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902054161415611fd257604051600160e51b62461bcd028152600401610864906146fc565b600101611f5c565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e2090610bed9060009088908890889060040161483a565b6004546000906001600160a01b0316331461204c57604051600160e51b62461bcd0281526004016108649061479c565b604051600160e01b632b1dfbd902815273__UpgradeImpl___________________________90632b1dfbd99061208d906000908890889088906004016147f6565b60206040518083038186803b1580156120a557600080fd5b505af41580156120b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120dd9190810190613aed565b90505b9392505050565b6023546001600160a01b031690565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a26009906121389060009087908790600401614ab3565b60006040518083038186803b15801561215057600080fd5b505af4158015612164573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067a9190810190613746565b612194613183565b6000828152601d602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff9091169081111561222357fe5b600581111561222e57fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156122bc5780601f10612291576101008083540402835291602001916122bc565b820191906000526020600020905b81548152906001019060200180831161229f57829003601f168201915b5050505050815250509050919050565b6023546001600160a01b0316331490565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b815260040161231d9291906148fa565b60006040518083038186803b15801561233557600080fd5b505af4158015612349573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123719190810190613b2a565b93509350935093509193509193565b600061238a6130d8565b60006123946130d8565b60005b601a548110156125b857601a8054601c91600091849081106123b557fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b90910416600281111561240b57fe5b600281111561241657fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124b35780601f10612488576101008083540402835291602001916124b3565b820191906000526020600020905b81548152906001019060200180831161249657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561255e57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561252c57fe5b600381111561253757fe5b815260200160018201548152602001600282015481525050815260200190600101906124eb565b50505050815250509150856001600160a01b031682600001516001600160a01b031614156125b057601a80548290811061259457fe5b6000918252602090912001546001600160a01b031692506125b8565b600101612397565b509092509050915091565b60006060826125d06130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561261857fe5b600281111561262357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126c05780601f10612695576101008083540402835291602001916126c0565b820191906000526020600020905b8154815290600101906020018083116126a357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561276b57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561273957fe5b600381111561274457fe5b815260200160018201548152602001600282015481525050815260200190600101906126f8565b505050915250909150600090508160200151600281111561278857fe5b14156127a957604051600160e51b62461bcd0281526004016108649061477c565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f031906127e69060009089906004016147db565b60006040518083038186803b1580156127fe57600080fd5b505af4158015612812573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261283a91908101906135eb565b935093505050915091565b3361284e6130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561289657fe5b60028111156128a157fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561293e5780601f106129135761010080835404028352916020019161293e565b820191906000526020600020905b81548152906001019060200180831161292157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156129e957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156129b757fe5b60038111156129c257fe5b81526020016001820154815260200160028201548152505081526020019060010190612976565b505050508152505090506129fc43612e52565b612a1b57604051600160e51b62461bcd0281526004016108649061474c565b600281602001516002811115612a2d57fe5b14612a4d57604051600160e51b62461bcd028152600401610864906147ac565b60215460608201511015612a7657604051600160e51b62461bcd028152600401610864906146ec565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e2906108a8906000906004016147cd565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________90639646236890612af090869086906004016146c7565b60206040518083038186803b158015612b0857600080fd5b505af4158015612b1c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061067a9190810190613aed565b6004546001600160a01b03163014612b6d57604051600160e51b62461bcd0281526004016108649061472c565b604051600160e01b63512e7a1702815273__TaskImpl______________________________9063512e7a1790610bed9060009088908890889088906004016148a3565b6004546001600160a01b031690565b6004546001600160a01b03163014612bec57604051600160e51b62461bcd0281526004016108649061472c565b604051600160e01b638c91056d02815273__TaskImpl______________________________90638c91056d90610bed906000908890889088908890600401614a22565b612c376130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115612c7f57fe5b6002811115612c8a57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d275780601f10612cfc57610100808354040283529160200191612d27565b820191906000526020600020905b815481529060010190602001808311612d0a57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612dd257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612da057fe5b6003811115612dab57fe5b81526020016001820154815260200160028201548152505081526020019060010190612d5f565b505050915250909392505050565b6004546001600160a01b03163014612e0d57604051600160e51b62461bcd0281526004016108649061472c565b604051600160e01b6366e13f4302815273__TaskImpl______________________________906366e13f43906119029060009089908990899089908990600401614a64565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612e9190849086906004016148fa565b60206040518083038186803b158015612ea957600080fd5b505af4158015612ebd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061067d9190810190613aed565b336000908152601c60205260409020546001600160a01b031690565b60015490565b8060016000828152601d6020526040902060059081015460ff1690811115612f2757fe5b14612f4757604051600160e51b62461bcd0281526004016108649061473c565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b906108a89060009086906004016148fa565b612f8c6122cc565b612f9557600080fd5b612f9e81613069565b50565b612fa96122cc565b612fb257600080fd5b6004546001600160a01b03163014612fdf57604051600160e51b62461bcd0281526004016108649061472c565b604051600160e01b6368fac41b02815273__UpgradeImpl___________________________906368fac41b9061301c9060009085906004016147db565b60006040518083038186803b15801561303457600080fd5b505af4158015613048573d6000803e3d6000fd5b5050505050565b6001600160a01b0316600090815260208052604090205490565b6001600160a01b03811661307c57600080fd5b6023546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3602380546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b6131426131c8565b81526020019060019003908161313a5790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b803561067d81614cf6565b805161067d81614cf6565b600082601f83011261321757600080fd5b815161322a61322582614bad565b614b87565b9150818183526020840193506020810190508385602084028201111561324f57600080fd5b60005b8381101561327b578161326588826131fb565b8452506020928301929190910190600101613252565b5050505092915050565b600082601f83011261329657600080fd5b81356132a461322582614bad565b915081818352602084019350602081019050838560208402820111156132c957600080fd5b60005b8381101561327b57816132df8882613445565b84525060209283019291909101906001016132cc565b600082601f83011261330657600080fd5b815161331461322582614bad565b9150818183526020840193506020810190508385602084028201111561333957600080fd5b60005b8381101561327b578161334f8882613450565b845250602092830192919091019060010161333c565b600082601f83011261337657600080fd5b815161338461322582614bad565b915081818352602084019350602081019050838560208402820111156133a957600080fd5b60005b8381101561327b57816133bf8882613450565b84525060209283019291909101906001016133ac565b600082601f8301126133e657600080fd5b81356133f461322582614bad565b9150818183526020840193506020810190508385602084028201111561341957600080fd5b60005b8381101561327b578161342f8882613556565b845250602092830192919091019060010161341c565b803561067d81614d0a565b805161067d81614d0a565b600082601f83011261346c57600080fd5b813561347a61322582614bcd565b9150808252602083016020830185838301111561349657600080fd5b6134a1838284614c8c565b50505092915050565b600082601f8301126134bb57600080fd5b81516134c961322582614bcd565b915080825260208301602083018583830111156134e557600080fd5b6134a1838284614c98565b805161067d81614d13565b60006060828403121561350d57600080fd5b6135176060614b87565b9050600061352584846134f0565b825250602061353684848301613450565b602083015250604061354a84828501613450565b60408301525092915050565b803561067d81614d20565b60006020828403121561357357600080fd5b600061357f84846131f0565b949350505050565b60008060006060848603121561359c57600080fd5b60006135a886866131f0565b93505060206135b9868287016131f0565b92505060408401356001600160401b038111156135d557600080fd5b6135e18682870161345b565b9150509250925092565b600080604083850312156135fe57600080fd5b600061360a85856131fb565b92505060208301516001600160401b0381111561362657600080fd5b613632858286016134aa565b9150509250929050565b60008060006060848603121561365157600080fd5b600061365d86866131f0565b93505060208401356001600160401b0381111561367957600080fd5b6135b98682870161345b565b6000806040838503121561369857600080fd5b60006136a485856131f0565b925050602061363285828601613445565b6000602082840312156136c757600080fd5b81516001600160401b038111156136dd57600080fd5b61357f84828501613206565b600080604083850312156136fc57600080fd5b82516001600160401b0381111561371257600080fd5b61371e85828601613206565b92505060208301516001600160401b0381111561373a57600080fd5b61363285828601613365565b60006020828403121561375857600080fd5b81516001600160401b0381111561376e57600080fd5b61357f848285016132f5565b6000806000806080858703121561379057600080fd5b84356001600160401b038111156137a657600080fd5b6137b287828801613285565b94505060208501356001600160401b038111156137ce57600080fd5b6137da878288016133d5565b93505060408501356001600160401b038111156137f657600080fd5b613802878288016133d5565b925050606061381387828801613445565b91505092959194509250565b60006020828403121561383157600080fd5b600061357f8484613445565b600080600080600080600080610100898b03121561385a57600080fd5b60006138668b8b613445565b98505060206138778b828c01613445565b97505060406138888b828c01613445565b96505060606138998b828c01613445565b95505060808901356001600160401b038111156138b557600080fd5b6138c18b828c0161345b565b94505060a06138d28b828c016131f0565b93505060c06138e38b828c01613556565b92505060e08901356001600160401b038111156138ff57600080fd5b61390b8b828c0161345b565b9150509295985092959890939650565b6000806000806080858703121561393157600080fd5b600061393d8787613445565b945050602061394e87828801613445565b935050604061395f87828801613556565b92505060608501356001600160401b0381111561397b57600080fd5b6138138782880161345b565b60008060006060848603121561399c57600080fd5b60006139a88686613445565b93505060206135b986828701613556565b600080600080608085870312156139cf57600080fd5b60006139db8787613445565b94505060206139ec87828801613556565b935050604061380287828801613556565b600080600080600060a08688031215613a1557600080fd5b6000613a218888613445565b9550506020613a3288828901613556565b9450506040613a4388828901613556565b9350506060613a5488828901613445565b9250506080613a6588828901613445565b9150509295509295909350565b60008060408385031215613a8557600080fd5b82356001600160401b03811115613a9b57600080fd5b613aa78582860161345b565b92505060208301356001600160401b03811115613ac357600080fd5b6136328582860161345b565b600060608284031215613ae157600080fd5b600061357f84846134fb565b600060208284031215613aff57600080fd5b600061357f8484613450565b60008060408385031215613b1e57600080fd5b60006136a48585613445565b60008060008060808587031215613b4057600080fd5b6000613b4c8787613450565b9450506020613b5d87828801613450565b93505060408501516001600160401b03811115613b7957600080fd5b613b8587828801613206565b92505060608501516001600160401b03811115613ba157600080fd5b61381387828801613365565b600080600060608486031215613bc257600080fd5b6000613bce8686613445565b93505060206135b986828701613445565b6000613beb8383613c2b565b505060200190565b6000613beb8383613fc8565b6000613c0b838361449a565b505060600190565b600061067a83836145af565b6000613beb838361460a565b613c3481614c10565b82525050565b6000613c4582614bfd565b613c4f8185614c07565b9350613c5a83614bf4565b8060005b83811015613c88578151613c728882613bdf565b9750613c7d83614bf4565b925050600101613c5e565b509495945050505050565b6000613c9e82614bfd565b613ca88185614c07565b9350613cb383614bf4565b8060005b83811015613c88578151613ccb8882613bdf565b9750613cd683614bf4565b925050600101613cb7565b6000613cec82614bfd565b613cf68185614c07565b9350613d0183614bf4565b8060005b83811015613c88578151613d198882613bf3565b9750613d2483614bf4565b925050600101613d05565b6000613d3a82614bfd565b613d448185614c07565b9350613d4f83614bf4565b8060005b83811015613c88578151613d678882613bf3565b9750613d7283614bf4565b925050600101613d53565b6000613d8882614bfd565b613d928185614c07565b9350613d9d83614bf4565b8060005b83811015613c88578151613db58882613bf3565b9750613dc083614bf4565b925050600101613da1565b6000613dd682614bfd565b613de08185614c07565b9350613deb83614bf4565b8060005b83811015613c88578151613e038882613bff565b9750613e0e83614bf4565b925050600101613def565b6000613e2482614bfd565b613e2e8185614c07565b9350613e3983614bf4565b8060005b83811015613c88578151613e518882613bff565b9750613e5c83614bf4565b925050600101613e3d565b6000613e7282614c01565b613e7c8185611f26565b935083602082028501613e8e85614bfa565b8060005b85811015613ec85784840389528151613eab8582613c13565b9450613eb683614bf4565b60209a909a0199925050600101613e92565b5091979650505050505050565b6000613ee082614bfd565b613eea8185614c07565b9350613ef583614bf4565b8060005b83811015613c88578151613f0d8882613bf3565b9750613f1883614bf4565b925050600101613ef9565b6000613f2e82614bfd565b613f388185614c07565b9350613f4383614bf4565b8060005b83811015613c88578151613f5b8882613bf3565b9750613f6683614bf4565b925050600101613f47565b6000613f7c82614bfd565b613f868185614c07565b9350613f9183614bf4565b8060005b83811015613c88578151613fa98882613c1f565b9750613fb483614bf4565b925050600101613f95565b613c3481614c1b565b613c3481614bfa565b6000613fdc82614bfd565b613fe68185614c07565b9350613ff6818560208601614c98565b613fff81614cc4565b9093019392505050565b613c3481614c60565b613c3481614c6b565b613c3481614c76565b613c3481614c81565b600061403a602283614c07565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b6000614081601883614c07565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b60006140ba602783614c07565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000614106601c83614c07565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b600061413f601b83614c07565b7f4e6f74207570646174656420456e69676d6120636f6e74726163740000000000815260200192915050565b6000614178601383614c07565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b60006141b1602783614c07565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b60006141fd602e83614c07565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b600061425c601483614c07565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b6000614295601383614c07565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b60006142ce602083614c07565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000614307602083614c07565b7f4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374815260200192915050565b6000614340602783614c07565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a08401906143938582613c2b565b5060208301516143a66020860182613fc8565b5060408301516143b96040860182613fc8565b50606083015184820360608601526143d18282613d7d565b91505060808301516143e66080860182614009565b509392505050565b9052565b80516000906101008401906144078582613c2b565b50602083015161441a6020860182613fc8565b50604083015161442d6040860182613fc8565b506060830151614440606086018261460a565b506080830151614453608086018261460a565b5060a083015161446660a0860182613fc8565b5060c083015161447960c0860182614012565b5060e083015184820360e08601526144918282613fd1565b95945050505050565b805160608301906144ab848261401b565b5060208201516144be6020850182613fc8565b5060408201516144d16040850182613fc8565b50505050565b805160009060a08401906144eb8582613c2b565b5060208301516144fe6020860182614024565b50604083015184820360408601526145168282613fd1565b915050606083015161452b6060860182613fc8565b50608083015184820360808601526144918282613dcb565b805160009060a08401906145578582613c2b565b50602083015161456a6020860182614024565b50604083015184820360408601526145828282613fd1565b91505060608301516145976060860182613fc8565b50608083015184820360808601526144918282613e19565b805160009060808401906145c38582613fc8565b50602083015184820360208601526145db8282613c93565b915050604083015184820360408601526145f58282613f23565b91505060608301516143e66060860182613fc8565b613c3481614c54565b6020810161067d8284613c2b565b6040810161462f8285613c2b565b81810360208301526120dd8184613fd1565b6040810161464f8285613c2b565b81810360208301526120dd81846144d7565b6020808252810161067a8184613c3a565b604080825281016146838185613c3a565b905081810360208301526120dd8184613ed5565b6020808252810161067a8184613ce1565b6020808252810161067a8184613e67565b6020810161067d8284613fbf565b604080825281016146d88185613fd1565b905081810360208301526120dd8184613fd1565b6020808252810161067d8161402d565b6020808252810161067d81614074565b6020808252810161067d816140ad565b6020808252810161067d816140f9565b6020808252810161067d81614132565b6020808252810161067d8161416b565b6020808252810161067d816141a4565b6020808252810161067d816141f0565b6020808252810161067d8161424f565b6020808252810161067d81614288565b6020808252810161067d816142c1565b6020808252810161067d816142fa565b6020808252810161067d81614333565b6020808252810161067a818461437f565b6020810161067d82846143ee565b604081016147e982856143ee565b6120e06020830184613c2b565b6080810161480482876143ee565b6148116020830186613c2b565b61481e6040830185613c2b565b81810360608301526148308184613fd1565b9695505050505050565b6080810161484882876143ee565b6148556020830186613c2b565b81810360408301526148678185613fd1565b905081810360608301526148308184613fd1565b6060810161488982866143ee565b6148966020830185613c2b565b61357f6040830184613fc8565b60a081016148b182886143ee565b81810360208301526148c38187613d2f565b905081810360408301526148d78186613f71565b905081810360608301526148eb8185613f71565b90506148306080830184613fc8565b6040810161490882856143ee565b6120e06020830184613fc8565b6101208101614924828c6143ee565b614931602083018b613fc8565b61493e604083018a613fc8565b61494b6060830189613fc8565b6149586080830188613fc8565b81810360a083015261496a8187613fd1565b905061497960c0830186613c2b565b61498660e083018561460a565b8181036101008301526149998184613fd1565b9b9a5050505050505050505050565b60a081016149b682886143ee565b6149c36020830187613fc8565b6149d06040830186613fc8565b6149dd606083018561460a565b81810360808301526149ef8184613fd1565b979650505050505050565b60808101614a0882876143ee565b614a156020830186613fc8565b61481e604083018561460a565b60a08101614a3082886143ee565b614a3d6020830187613fc8565b614a4a604083018661460a565b614a57606083018561460a565b6148306080830184613fc8565b60c08101614a7282896143ee565b614a7f6020830188613fc8565b614a8c604083018761460a565b614a99606083018661460a565b614aa66080830185613fc8565b6149ef60a0830184613fc8565b60608101614ac182866143ee565b6148966020830185613fc8565b60808101614adc82876143ee565b614ae96020830186613fc8565b61481e6040830185613fc8565b6020808252810161067a81846143f2565b6020808252810161067a81846144d7565b60408082528101614b298185614543565b90506120e06020830184613fc8565b6020810161067d8284613fc8565b60808101614b548287613fc8565b614b616020830186613fc8565b8181036040830152614b738185613c3a565b905081810360608301526148308184613ed5565b6040518181016001600160401b0381118282101715614ba557600080fd5b604052919050565b60006001600160401b03821115614bc357600080fd5b5060209081020190565b60006001600160401b03821115614be357600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b600061067d82614c48565b151590565b80611f2681614cce565b80611f2681614cd8565b80611f2681614ce2565b80611f2681614cec565b6001600160a01b031690565b6001600160401b031690565b600061067d82614c20565b600061067d82614c2a565b600061067d82614c34565b600061067d82614c3e565b82818337506000910152565b60005b83811015614cb3578181015183820152602001614c9b565b838111156144d15750506000910152565b601f01601f191690565b60028110612f9e57fe5b60068110612f9e57fe5b60048110612f9e57fe5b60038110612f9e57fe5b614cff81614c10565b8114612f9e57600080fd5b614cff81614bfa565b60048110612f9e57600080fd5b614cff81614c5456fea265627a7a7230582042084e88269fe866f9fc0dd30a5caca99ce0859329671180ce27155164cca3eb6c6578706572696d656e74616cf50037","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106102325760003560e01c80638ed0573711610130578063ba252688116100b8578063df4da4611161007c578063df4da461146104f6578063ee6dcef9146104fe578063f2fde38b14610511578063f74e6e1d14610524578063f9a9b7ae1461053757610232565b8063ba25268814610495578063c011b1c3146104a8578063c652b919146104c8578063cbbc061d146104db578063d855a579146104ee57610232565b8063a3bdae3e116100ff578063a3bdae3e1461043e578063b34e97e81461045f578063b5c1499214610467578063b695ca7a1461047a578063b9758c951461048d57610232565b80638ed05737146103c55780638f32d59b146103e55780639836ca31146103fa578063a0c399821461041d57610232565b8063516c8269116101be5780637624281e116101825780637624281e14610357578063786cd4d7146103775780638056b5591461038a5780638da5cb5b1461039d5780638e055b8b146103b257610232565b8063516c8269146102fd578063550baa2f1461031057806370266a4714610325578063715018a61461033a57806375bbf75b1461034257610232565b8063365a2cb311610205578063365a2cb31461029e5780633a322c52146102b157806347e7ef24146102c457806348cc3761146102d757806350946a9f146102ea57610232565b806316f9a2a4146102375780631d40ff0b146102615780631f3c99c3146102815780632e1a7d4d1461028b575b600080fd5b61024a61024536600461381f565b61054a565b604051610258929190614672565b60405180910390f35b61027461026f366004613b0b565b6105e4565b6040516102589190614661565b610289610683565b005b61028961029936600461381f565b6108dc565b6102896102ac36600461383d565b610c23565b6102896102bf36600461391b565b610efc565b6102896102d2366004613685565b6111c9565b6102896102e536600461383d565b611417565b6102896102f8366004613bad565b6116b2565b61028961030b366004613987565b611939565b610318611c02565b6040516102589190614697565b61032d611c5d565b60405161025891906146a8565b610289611d77565b61034a611dd2565b6040516102589190614b38565b61036a61036536600461381f565b611e64565b60405161025891906147bc565b61028961038536600461363c565b611f2b565b61034a610398366004613587565b61201c565b6103a56120e7565b6040516102589190614613565b6103186103c0366004613b0b565b6120f6565b6103d86103d336600461381f565b61218c565b6040516102589190614af6565b6103ed6122cc565b60405161025891906146b9565b61040d61040836600461381f565b6122dd565b6040516102589493929190614b46565b61043061042b366004613561565b612380565b604051610258929190614641565b61045161044c366004613561565b6125c3565b604051610258929190614621565b610289612845565b61034a610475366004613a72565b612ab1565b61028961048836600461377a565b612b40565b6103a5612bb0565b6102896104a33660046139b9565b612bbf565b6104bb6104b6366004613561565b612c2f565b6040516102589190614b07565b6102896104d63660046139fd565b612de0565b61034a6104e936600461381f565b612e52565b6103a5612ee1565b61034a612efd565b61028961050c36600461381f565b612f03565b61028961051f366004613561565b612f84565b610289610532366004613561565b612fa1565b61034a610545366004613561565b61304f565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b81526004016105879291906148fa565b60006040518083038186803b15801561059f57600080fd5b505af41580156105b3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105db91908101906136e9565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a906106269060009087908790600401614ab3565b60006040518083038186803b15801561063e57600080fd5b505af4158015610652573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067a91908101906136b5565b90505b92915050565b3361068c6130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156106d457fe5b60028111156106df57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561077c5780601f106107515761010080835404028352916020019161077c565b820191906000526020600020905b81548152906001019060200180831161075f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561082757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156107f557fe5b600381111561080057fe5b815260200160018201548152602001600282015481525050815260200190600101906107b4565b505050915250909150600190508160200151600281111561084457fe5b1461086d57604051600160e51b62461bcd0281526004016108649061476c565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f49906108a8906000906004016147cd565b60006040518083038186803b1580156108c057600080fd5b505af41580156108d4573d6000803e3d6000fd5b505050505050565b336108e56130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561092d57fe5b600281111561093857fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109d55780601f106109aa576101008083540402835291602001916109d5565b820191906000526020600020905b8154815290600101906020018083116109b857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610a8057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610a4e57fe5b6003811115610a5957fe5b81526020016001820154815260200160028201548152505081526020019060010190610a0d565b5050509152509091506002905081602001516002811115610a9d57fe5b14610abd57604051600160e51b62461bcd028152600401610864906147ac565b610ac5613108565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610b019085904390600401614b18565b60606040518083038186803b158015610b1957600080fd5b505af4158015610b2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b519190810190613acf565b9050600281516003811115610b6257fe5b14610b8257604051600160e51b62461bcd0281526004016108649061470c565b8060200151610b9043612e52565b11610bb057604051600160e51b62461bcd0281526004016108649061475c565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df46490610bed9060009088906004016148fa565b60006040518083038186803b158015610c0557600080fd5b505af4158015610c19573d6000803e3d6000fd5b5050505050505050565b6004546001600160a01b03163014610c5057604051600160e51b62461bcd0281526004016108649061472c565b33610c596130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610ca157fe5b6002811115610cac57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d495780601f10610d1e57610100808354040283529160200191610d49565b820191906000526020600020905b815481529060010190602001808311610d2c57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610df457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610dc257fe5b6003811115610dcd57fe5b81526020016001820154815260200160028201548152505081526020019060010190610d81565b5050509152509091506001905081602001516002811115610e1157fe5b14610e3157604051600160e51b62461bcd0281526004016108649061476c565b8960016000828152601f602052604090206004015460ff166001811115610e5457fe5b14610e7457604051600160e51b62461bcd0281526004016108649061471c565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610ebf906000908f908f908f908f908f908f908f908f90600401614915565b60006040518083038186803b158015610ed757600080fd5b505af4158015610eeb573d6000803e3d6000fd5b505050505050505050505050505050565b6004546001600160a01b03163014610f2957604051600160e51b62461bcd0281526004016108649061472c565b33610f326130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610f7a57fe5b6002811115610f8557fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110225780601f10610ff757610100808354040283529160200191611022565b820191906000526020600020905b81548152906001019060200180831161100557829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110cd57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561109b57fe5b60038111156110a657fe5b8152602001600182015481526020016002820154815250508152602001906001019061105a565b50505091525090915060019050816020015160028111156110ea57fe5b1461110a57604051600160e51b62461bcd0281526004016108649061476c565b8560016000828152601f602052604090206004015460ff16600181111561112d57fe5b1461114d57604051600160e51b62461bcd0281526004016108649061471c565b604051600160e21b632c5b41b302815273__TaskImpl______________________________9063b16d06cc90611190906000908b908b908b908b906004016149a8565b60006040518083038186803b1580156111a857600080fd5b505af41580156111bc573d6000803e3d6000fd5b5050505050505050505050565b6004546001600160a01b031630146111f657604051600160e51b62461bcd0281526004016108649061472c565b816111ff6130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561124757fe5b600281111561125257fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112ef5780601f106112c4576101008083540402835291602001916112ef565b820191906000526020600020905b8154815290600101906020018083116112d257829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561139a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561136857fe5b600381111561137357fe5b81526020016001820154815260200160028201548152505081526020019060010190611327565b50505091525090915060009050816020015160028111156113b757fe5b14156113d857604051600160e51b62461bcd0281526004016108649061477c565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610bed906000908890889060040161487b565b6004546001600160a01b0316301461144457604051600160e51b62461bcd0281526004016108649061472c565b3361144d6130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561149557fe5b60028111156114a057fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561153d5780601f106115125761010080835404028352916020019161153d565b820191906000526020600020905b81548152906001019060200180831161152057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156115e857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156115b657fe5b60038111156115c157fe5b81526020016001820154815260200160028201548152505081526020019060010190611575565b505050915250909150600190508160200151600281111561160557fe5b1461162557604051600160e51b62461bcd0281526004016108649061476c565b89600080828152601f602052604090206004015460ff16600181111561164757fe5b1461166757604051600160e51b62461bcd0281526004016108649061478c565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610ebf906000908f908f908f908f908f908f908f908f90600401614915565b6004546001600160a01b031630146116df57604051600160e51b62461bcd0281526004016108649061472c565b336116e86130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561173057fe5b600281111561173b57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117d85780601f106117ad576101008083540402835291602001916117d8565b820191906000526020600020905b8154815290600101906020018083116117bb57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561188357838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561185157fe5b600381111561185c57fe5b81526020016001820154815260200160028201548152505081526020019060010190611810565b50505091525090915060009050816020015160028111156118a057fe5b14156118c157604051600160e51b62461bcd0281526004016108649061477c565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b189061190290600090899089908990600401614ace565b60006040518083038186803b15801561191a57600080fd5b505af415801561192e573d6000803e3d6000fd5b505050505050505050565b6004546001600160a01b0316301461196657604051600160e51b62461bcd0281526004016108649061472c565b3361196f6130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156119b757fe5b60028111156119c257fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a5f5780601f10611a3457610100808354040283529160200191611a5f565b820191906000526020600020905b815481529060010190602001808311611a4257829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611b0a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611ad857fe5b6003811115611ae357fe5b81526020016001820154815260200160028201548152505081526020019060010190611a97565b5050509152509091506001905081602001516002811115611b2757fe5b14611b4757604051600160e51b62461bcd0281526004016108649061476c565b84600080828152601f602052604090206004015460ff166001811115611b6957fe5b14611b8957604051600160e51b62461bcd0281526004016108649061478c565b604051600160e01b6370a2e43b02815273__TaskImpl______________________________906370a2e43b90611bca906000908a908a908a906004016149fa565b60006040518083038186803b158015611be257600080fd5b505af4158015611bf6573d6000803e3d6000fd5b50505050505050505050565b60606000601b01805480602002602001604051908101604052809291908181526020018280548015611c5357602002820191906000526020600020905b815481526020019060010190808311611c3f575b5050505050905090565b611c6561312a565b6040805160a08101909152600660056000835b82821015611d6e578382600402016040518060800160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020018280548015611cf457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611cd6575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611d4c57602002820191906000526020600020905b815481526020019060010190808311611d38575b5050505050815260200160038201548152505081526020019060010190611c78565b50505050905090565b611d7f6122cc565b611d8857600080fd5b6023546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3602380546001600160a01b0319169055565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a338690611e0f9084906004016147cd565b60206040518083038186803b158015611e2757600080fd5b505af4158015611e3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e5f9190810190613aed565b905090565b611e6c613158565b6000828152601f6020908152604091829020825160a08101845281546001600160a01b031681526001820154818401526002820154818501526003820180548551818602810186019096528086529194929360608601939290830182828015611ef457602002820191906000526020600020905b815481526020019060010190808311611ee0575b5050509183525050600482015460209091019060ff166001811115611f1557fe5b6001811115611f2057fe5b90525090505b919050565b6004546001600160a01b03163014611f5857604051600160e51b62461bcd0281526004016108649061472c565b8260005b601a54811015611fda57816001600160a01b03166000601c01600080601a018481548110611f8657fe5b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902054161415611fd257604051600160e51b62461bcd028152600401610864906146fc565b600101611f5c565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e2090610bed9060009088908890889060040161483a565b6004546000906001600160a01b0316331461204c57604051600160e51b62461bcd0281526004016108649061479c565b604051600160e01b632b1dfbd902815273__UpgradeImpl___________________________90632b1dfbd99061208d906000908890889088906004016147f6565b60206040518083038186803b1580156120a557600080fd5b505af41580156120b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120dd9190810190613aed565b90505b9392505050565b6023546001600160a01b031690565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a26009906121389060009087908790600401614ab3565b60006040518083038186803b15801561215057600080fd5b505af4158015612164573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067a9190810190613746565b612194613183565b6000828152601d602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff9091169081111561222357fe5b600581111561222e57fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156122bc5780601f10612291576101008083540402835291602001916122bc565b820191906000526020600020905b81548152906001019060200180831161229f57829003601f168201915b5050505050815250509050919050565b6023546001600160a01b0316331490565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b815260040161231d9291906148fa565b60006040518083038186803b15801561233557600080fd5b505af4158015612349573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123719190810190613b2a565b93509350935093509193509193565b600061238a6130d8565b60006123946130d8565b60005b601a548110156125b857601a8054601c91600091849081106123b557fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b90910416600281111561240b57fe5b600281111561241657fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124b35780601f10612488576101008083540402835291602001916124b3565b820191906000526020600020905b81548152906001019060200180831161249657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561255e57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561252c57fe5b600381111561253757fe5b815260200160018201548152602001600282015481525050815260200190600101906124eb565b50505050815250509150856001600160a01b031682600001516001600160a01b031614156125b057601a80548290811061259457fe5b6000918252602090912001546001600160a01b031692506125b8565b600101612397565b509092509050915091565b60006060826125d06130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561261857fe5b600281111561262357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126c05780601f10612695576101008083540402835291602001916126c0565b820191906000526020600020905b8154815290600101906020018083116126a357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561276b57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561273957fe5b600381111561274457fe5b815260200160018201548152602001600282015481525050815260200190600101906126f8565b505050915250909150600090508160200151600281111561278857fe5b14156127a957604051600160e51b62461bcd0281526004016108649061477c565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f031906127e69060009089906004016147db565b60006040518083038186803b1580156127fe57600080fd5b505af4158015612812573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261283a91908101906135eb565b935093505050915091565b3361284e6130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561289657fe5b60028111156128a157fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561293e5780601f106129135761010080835404028352916020019161293e565b820191906000526020600020905b81548152906001019060200180831161292157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156129e957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156129b757fe5b60038111156129c257fe5b81526020016001820154815260200160028201548152505081526020019060010190612976565b505050508152505090506129fc43612e52565b612a1b57604051600160e51b62461bcd0281526004016108649061474c565b600281602001516002811115612a2d57fe5b14612a4d57604051600160e51b62461bcd028152600401610864906147ac565b60215460608201511015612a7657604051600160e51b62461bcd028152600401610864906146ec565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e2906108a8906000906004016147cd565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________90639646236890612af090869086906004016146c7565b60206040518083038186803b158015612b0857600080fd5b505af4158015612b1c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061067a9190810190613aed565b6004546001600160a01b03163014612b6d57604051600160e51b62461bcd0281526004016108649061472c565b604051600160e01b63512e7a1702815273__TaskImpl______________________________9063512e7a1790610bed9060009088908890889088906004016148a3565b6004546001600160a01b031690565b6004546001600160a01b03163014612bec57604051600160e51b62461bcd0281526004016108649061472c565b604051600160e01b638c91056d02815273__TaskImpl______________________________90638c91056d90610bed906000908890889088908890600401614a22565b612c376130d8565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115612c7f57fe5b6002811115612c8a57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d275780601f10612cfc57610100808354040283529160200191612d27565b820191906000526020600020905b815481529060010190602001808311612d0a57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612dd257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612da057fe5b6003811115612dab57fe5b81526020016001820154815260200160028201548152505081526020019060010190612d5f565b505050915250909392505050565b6004546001600160a01b03163014612e0d57604051600160e51b62461bcd0281526004016108649061472c565b604051600160e01b6366e13f4302815273__TaskImpl______________________________906366e13f43906119029060009089908990899089908990600401614a64565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612e9190849086906004016148fa565b60206040518083038186803b158015612ea957600080fd5b505af4158015612ebd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061067d9190810190613aed565b336000908152601c60205260409020546001600160a01b031690565b60015490565b8060016000828152601d6020526040902060059081015460ff1690811115612f2757fe5b14612f4757604051600160e51b62461bcd0281526004016108649061473c565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b906108a89060009086906004016148fa565b612f8c6122cc565b612f9557600080fd5b612f9e81613069565b50565b612fa96122cc565b612fb257600080fd5b6004546001600160a01b03163014612fdf57604051600160e51b62461bcd0281526004016108649061472c565b604051600160e01b6368fac41b02815273__UpgradeImpl___________________________906368fac41b9061301c9060009085906004016147db565b60006040518083038186803b15801561303457600080fd5b505af4158015613048573d6000803e3d6000fd5b5050505050565b6001600160a01b0316600090815260208052604090205490565b6001600160a01b03811661307c57600080fd5b6023546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3602380546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b6131426131c8565b81526020019060019003908161313a5790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b803561067d81614cf6565b805161067d81614cf6565b600082601f83011261321757600080fd5b815161322a61322582614bad565b614b87565b9150818183526020840193506020810190508385602084028201111561324f57600080fd5b60005b8381101561327b578161326588826131fb565b8452506020928301929190910190600101613252565b5050505092915050565b600082601f83011261329657600080fd5b81356132a461322582614bad565b915081818352602084019350602081019050838560208402820111156132c957600080fd5b60005b8381101561327b57816132df8882613445565b84525060209283019291909101906001016132cc565b600082601f83011261330657600080fd5b815161331461322582614bad565b9150818183526020840193506020810190508385602084028201111561333957600080fd5b60005b8381101561327b578161334f8882613450565b845250602092830192919091019060010161333c565b600082601f83011261337657600080fd5b815161338461322582614bad565b915081818352602084019350602081019050838560208402820111156133a957600080fd5b60005b8381101561327b57816133bf8882613450565b84525060209283019291909101906001016133ac565b600082601f8301126133e657600080fd5b81356133f461322582614bad565b9150818183526020840193506020810190508385602084028201111561341957600080fd5b60005b8381101561327b578161342f8882613556565b845250602092830192919091019060010161341c565b803561067d81614d0a565b805161067d81614d0a565b600082601f83011261346c57600080fd5b813561347a61322582614bcd565b9150808252602083016020830185838301111561349657600080fd5b6134a1838284614c8c565b50505092915050565b600082601f8301126134bb57600080fd5b81516134c961322582614bcd565b915080825260208301602083018583830111156134e557600080fd5b6134a1838284614c98565b805161067d81614d13565b60006060828403121561350d57600080fd5b6135176060614b87565b9050600061352584846134f0565b825250602061353684848301613450565b602083015250604061354a84828501613450565b60408301525092915050565b803561067d81614d20565b60006020828403121561357357600080fd5b600061357f84846131f0565b949350505050565b60008060006060848603121561359c57600080fd5b60006135a886866131f0565b93505060206135b9868287016131f0565b92505060408401356001600160401b038111156135d557600080fd5b6135e18682870161345b565b9150509250925092565b600080604083850312156135fe57600080fd5b600061360a85856131fb565b92505060208301516001600160401b0381111561362657600080fd5b613632858286016134aa565b9150509250929050565b60008060006060848603121561365157600080fd5b600061365d86866131f0565b93505060208401356001600160401b0381111561367957600080fd5b6135b98682870161345b565b6000806040838503121561369857600080fd5b60006136a485856131f0565b925050602061363285828601613445565b6000602082840312156136c757600080fd5b81516001600160401b038111156136dd57600080fd5b61357f84828501613206565b600080604083850312156136fc57600080fd5b82516001600160401b0381111561371257600080fd5b61371e85828601613206565b92505060208301516001600160401b0381111561373a57600080fd5b61363285828601613365565b60006020828403121561375857600080fd5b81516001600160401b0381111561376e57600080fd5b61357f848285016132f5565b6000806000806080858703121561379057600080fd5b84356001600160401b038111156137a657600080fd5b6137b287828801613285565b94505060208501356001600160401b038111156137ce57600080fd5b6137da878288016133d5565b93505060408501356001600160401b038111156137f657600080fd5b613802878288016133d5565b925050606061381387828801613445565b91505092959194509250565b60006020828403121561383157600080fd5b600061357f8484613445565b600080600080600080600080610100898b03121561385a57600080fd5b60006138668b8b613445565b98505060206138778b828c01613445565b97505060406138888b828c01613445565b96505060606138998b828c01613445565b95505060808901356001600160401b038111156138b557600080fd5b6138c18b828c0161345b565b94505060a06138d28b828c016131f0565b93505060c06138e38b828c01613556565b92505060e08901356001600160401b038111156138ff57600080fd5b61390b8b828c0161345b565b9150509295985092959890939650565b6000806000806080858703121561393157600080fd5b600061393d8787613445565b945050602061394e87828801613445565b935050604061395f87828801613556565b92505060608501356001600160401b0381111561397b57600080fd5b6138138782880161345b565b60008060006060848603121561399c57600080fd5b60006139a88686613445565b93505060206135b986828701613556565b600080600080608085870312156139cf57600080fd5b60006139db8787613445565b94505060206139ec87828801613556565b935050604061380287828801613556565b600080600080600060a08688031215613a1557600080fd5b6000613a218888613445565b9550506020613a3288828901613556565b9450506040613a4388828901613556565b9350506060613a5488828901613445565b9250506080613a6588828901613445565b9150509295509295909350565b60008060408385031215613a8557600080fd5b82356001600160401b03811115613a9b57600080fd5b613aa78582860161345b565b92505060208301356001600160401b03811115613ac357600080fd5b6136328582860161345b565b600060608284031215613ae157600080fd5b600061357f84846134fb565b600060208284031215613aff57600080fd5b600061357f8484613450565b60008060408385031215613b1e57600080fd5b60006136a48585613445565b60008060008060808587031215613b4057600080fd5b6000613b4c8787613450565b9450506020613b5d87828801613450565b93505060408501516001600160401b03811115613b7957600080fd5b613b8587828801613206565b92505060608501516001600160401b03811115613ba157600080fd5b61381387828801613365565b600080600060608486031215613bc257600080fd5b6000613bce8686613445565b93505060206135b986828701613445565b6000613beb8383613c2b565b505060200190565b6000613beb8383613fc8565b6000613c0b838361449a565b505060600190565b600061067a83836145af565b6000613beb838361460a565b613c3481614c10565b82525050565b6000613c4582614bfd565b613c4f8185614c07565b9350613c5a83614bf4565b8060005b83811015613c88578151613c728882613bdf565b9750613c7d83614bf4565b925050600101613c5e565b509495945050505050565b6000613c9e82614bfd565b613ca88185614c07565b9350613cb383614bf4565b8060005b83811015613c88578151613ccb8882613bdf565b9750613cd683614bf4565b925050600101613cb7565b6000613cec82614bfd565b613cf68185614c07565b9350613d0183614bf4565b8060005b83811015613c88578151613d198882613bf3565b9750613d2483614bf4565b925050600101613d05565b6000613d3a82614bfd565b613d448185614c07565b9350613d4f83614bf4565b8060005b83811015613c88578151613d678882613bf3565b9750613d7283614bf4565b925050600101613d53565b6000613d8882614bfd565b613d928185614c07565b9350613d9d83614bf4565b8060005b83811015613c88578151613db58882613bf3565b9750613dc083614bf4565b925050600101613da1565b6000613dd682614bfd565b613de08185614c07565b9350613deb83614bf4565b8060005b83811015613c88578151613e038882613bff565b9750613e0e83614bf4565b925050600101613def565b6000613e2482614bfd565b613e2e8185614c07565b9350613e3983614bf4565b8060005b83811015613c88578151613e518882613bff565b9750613e5c83614bf4565b925050600101613e3d565b6000613e7282614c01565b613e7c8185611f26565b935083602082028501613e8e85614bfa565b8060005b85811015613ec85784840389528151613eab8582613c13565b9450613eb683614bf4565b60209a909a0199925050600101613e92565b5091979650505050505050565b6000613ee082614bfd565b613eea8185614c07565b9350613ef583614bf4565b8060005b83811015613c88578151613f0d8882613bf3565b9750613f1883614bf4565b925050600101613ef9565b6000613f2e82614bfd565b613f388185614c07565b9350613f4383614bf4565b8060005b83811015613c88578151613f5b8882613bf3565b9750613f6683614bf4565b925050600101613f47565b6000613f7c82614bfd565b613f868185614c07565b9350613f9183614bf4565b8060005b83811015613c88578151613fa98882613c1f565b9750613fb483614bf4565b925050600101613f95565b613c3481614c1b565b613c3481614bfa565b6000613fdc82614bfd565b613fe68185614c07565b9350613ff6818560208601614c98565b613fff81614cc4565b9093019392505050565b613c3481614c60565b613c3481614c6b565b613c3481614c76565b613c3481614c81565b600061403a602283614c07565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b6000614081601883614c07565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b60006140ba602783614c07565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000614106601c83614c07565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b600061413f601b83614c07565b7f4e6f74207570646174656420456e69676d6120636f6e74726163740000000000815260200192915050565b6000614178601383614c07565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b60006141b1602783614c07565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b60006141fd602e83614c07565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b600061425c601483614c07565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b6000614295601383614c07565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b60006142ce602083614c07565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000614307602083614c07565b7f4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374815260200192915050565b6000614340602783614c07565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a08401906143938582613c2b565b5060208301516143a66020860182613fc8565b5060408301516143b96040860182613fc8565b50606083015184820360608601526143d18282613d7d565b91505060808301516143e66080860182614009565b509392505050565b9052565b80516000906101008401906144078582613c2b565b50602083015161441a6020860182613fc8565b50604083015161442d6040860182613fc8565b506060830151614440606086018261460a565b506080830151614453608086018261460a565b5060a083015161446660a0860182613fc8565b5060c083015161447960c0860182614012565b5060e083015184820360e08601526144918282613fd1565b95945050505050565b805160608301906144ab848261401b565b5060208201516144be6020850182613fc8565b5060408201516144d16040850182613fc8565b50505050565b805160009060a08401906144eb8582613c2b565b5060208301516144fe6020860182614024565b50604083015184820360408601526145168282613fd1565b915050606083015161452b6060860182613fc8565b50608083015184820360808601526144918282613dcb565b805160009060a08401906145578582613c2b565b50602083015161456a6020860182614024565b50604083015184820360408601526145828282613fd1565b91505060608301516145976060860182613fc8565b50608083015184820360808601526144918282613e19565b805160009060808401906145c38582613fc8565b50602083015184820360208601526145db8282613c93565b915050604083015184820360408601526145f58282613f23565b91505060608301516143e66060860182613fc8565b613c3481614c54565b6020810161067d8284613c2b565b6040810161462f8285613c2b565b81810360208301526120dd8184613fd1565b6040810161464f8285613c2b565b81810360208301526120dd81846144d7565b6020808252810161067a8184613c3a565b604080825281016146838185613c3a565b905081810360208301526120dd8184613ed5565b6020808252810161067a8184613ce1565b6020808252810161067a8184613e67565b6020810161067d8284613fbf565b604080825281016146d88185613fd1565b905081810360208301526120dd8184613fd1565b6020808252810161067d8161402d565b6020808252810161067d81614074565b6020808252810161067d816140ad565b6020808252810161067d816140f9565b6020808252810161067d81614132565b6020808252810161067d8161416b565b6020808252810161067d816141a4565b6020808252810161067d816141f0565b6020808252810161067d8161424f565b6020808252810161067d81614288565b6020808252810161067d816142c1565b6020808252810161067d816142fa565b6020808252810161067d81614333565b6020808252810161067a818461437f565b6020810161067d82846143ee565b604081016147e982856143ee565b6120e06020830184613c2b565b6080810161480482876143ee565b6148116020830186613c2b565b61481e6040830185613c2b565b81810360608301526148308184613fd1565b9695505050505050565b6080810161484882876143ee565b6148556020830186613c2b565b81810360408301526148678185613fd1565b905081810360608301526148308184613fd1565b6060810161488982866143ee565b6148966020830185613c2b565b61357f6040830184613fc8565b60a081016148b182886143ee565b81810360208301526148c38187613d2f565b905081810360408301526148d78186613f71565b905081810360608301526148eb8185613f71565b90506148306080830184613fc8565b6040810161490882856143ee565b6120e06020830184613fc8565b6101208101614924828c6143ee565b614931602083018b613fc8565b61493e604083018a613fc8565b61494b6060830189613fc8565b6149586080830188613fc8565b81810360a083015261496a8187613fd1565b905061497960c0830186613c2b565b61498660e083018561460a565b8181036101008301526149998184613fd1565b9b9a5050505050505050505050565b60a081016149b682886143ee565b6149c36020830187613fc8565b6149d06040830186613fc8565b6149dd606083018561460a565b81810360808301526149ef8184613fd1565b979650505050505050565b60808101614a0882876143ee565b614a156020830186613fc8565b61481e604083018561460a565b60a08101614a3082886143ee565b614a3d6020830187613fc8565b614a4a604083018661460a565b614a57606083018561460a565b6148306080830184613fc8565b60c08101614a7282896143ee565b614a7f6020830188613fc8565b614a8c604083018761460a565b614a99606083018661460a565b614aa66080830185613fc8565b6149ef60a0830184613fc8565b60608101614ac182866143ee565b6148966020830185613fc8565b60808101614adc82876143ee565b614ae96020830186613fc8565b61481e6040830185613fc8565b6020808252810161067a81846143f2565b6020808252810161067a81846144d7565b60408082528101614b298185614543565b90506120e06020830184613fc8565b6020810161067d8284613fc8565b60808101614b548287613fc8565b614b616020830186613fc8565b8181036040830152614b738185613c3a565b905081810360608301526148308184613ed5565b6040518181016001600160401b0381118282101715614ba557600080fd5b604052919050565b60006001600160401b03821115614bc357600080fd5b5060209081020190565b60006001600160401b03821115614be357600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b600061067d82614c48565b151590565b80611f2681614cce565b80611f2681614cd8565b80611f2681614ce2565b80611f2681614cec565b6001600160a01b031690565b6001600160401b031690565b600061067d82614c20565b600061067d82614c2a565b600061067d82614c34565b600061067d82614c3e565b82818337506000910152565b60005b83811015614cb3578181015183820152602001614c9b565b838111156144d15750506000910152565b601f01601f191690565b60028110612f9e57fe5b60068110612f9e57fe5b60048110612f9e57fe5b60038110612f9e57fe5b614cff81614c10565b8114612f9e57600080fd5b614cff81614bfa565b60048110612f9e57600080fd5b614cff81614c5456fea265627a7a7230582042084e88269fe866f9fc0dd30a5caca99ce0859329671180ce27155164cca3eb6c6578706572696d656e74616cf50037","sourceMap":"885:18324:0:-;;;1124:381;8:9:-1;5:2;;;30:1;27;20:12;5:2;1124:381:0;;;;;;;;;;;;;;;;;;;;;;515:6:32;:19;;-1:-1:-1;;;;;;515:19:32;524:10;515:19;;;;;549:40;;-1:-1:-1;;;;;582:6:32;;;;;515;;549:40;;515:6;;549:40;1217:5:0;:37;;-1:-1:-1;;;;;1217:37:0;;;-1:-1:-1;;;;;;1217:37:0;;;;;;;;1264:28;;;1326:3;1302:21;:27;1339:15;:28;;;;;;;;;;;;;;;;1377:34;:50;;;;;1422:4;1377:50;;;1437:22;:26;;;1473:21;:25;885:18324;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:134;224:13;;242:33;224:13;242:33;;287:535;;;;436:2;424:9;415:7;411:23;407:32;404:2;;;452:1;449;442:12;404:2;487:1;504:64;560:7;540:9;504:64;;;494:74;;466:108;605:2;623:64;679:7;670:6;659:9;655:22;623:64;;;613:74;;584:109;724:2;742:64;798:7;789:6;778:9;774:22;742:64;;;732:74;;703:109;398:424;;;;;;829:91;;-1:-1;;;;;989:54;;891:24;972:76;1055:72;1117:5;1100:27;1134:117;1203:24;1221:5;1203:24;;;1196:5;1193:35;1183:2;;1242:1;1239;1232:12;1183:2;1177:74;;1258:117;1327:24;1345:5;1327:24;;1301:74;885:18324:0;;;;;;","deployedSourceMap":"885:18324:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;885:18324:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16095:194;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17450:199;;;;;;;;;:::i;:::-;;;;;;;;7590:98;;;:::i;:::-;;7128:132;;;;;;;;;:::i;13838:574::-;;;;;;;;;:::i;14760:327::-;;;;;;;;;:::i;6735:195::-;;;;;;;;;:::i;8939:603::-;;;;;;;;;:::i;15737:237::-;;;;;;;;;:::i;7950:314::-;;;;;;;;;:::i;3069:121:10:-;;;:::i;:::-;;;;;;;;2823:130;;;:::i;:::-;;;;;;;;1347:137:32;;;:::i;9669:149:0:-;;;:::i;:::-;;;;;;;;2543::10;;;;;;;;;:::i;:::-;;;;;;;;6257:235:0;;;;;;;;;:::i;18932:275::-;;;;;;;;;:::i;659:77:32:-;;;:::i;:::-;;;;;;;;10031:211:0;;;;;;;;;:::i;2221:137:10:-;;;;;;;;;:::i;:::-;;;;;;;;979:90:32;;;:::i;:::-;;;;;;;;16915:198:0;;;;;;;;;:::i;:::-;;;;;;;;;;;1004:492:10;;;;;;;;;:::i;:::-;;;;;;;;;17787:200:0;;;;;;;;;:::i;:::-;;;;;;;;;7423:90;;;:::i;18192:181::-;;;;;;;;;:::i;12908:326::-;;;;;;;;;:::i;3305:131:10:-;;;:::i;12008:289:0:-;;;;;;;;;:::i;679:131:10:-;;;;;;;;;:::i;:::-;;;;;;;;11095:338:0;;;;;;;;;:::i;16464:167::-;;;;;;;;;:::i;399:115:10:-;;;:::i;1957:90::-;;;:::i;15254:147:0:-;;;;;;;;;:::i;1655:107:32:-;;;;;;;;;:::i;18514:226:0:-;;;;;;;;;:::i;1740:134:10:-;;;;;;;;;:::i;16095:194:0:-;16173:16;16191:13;16227;:34;16262:5;16269:12;16227:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16227:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16227:55:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16227:55:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16227:55:0;;;;;;;;;16220:62;;;;16095:194;;;:::o;17450:199::-;17582:60;;-1:-1:-1;;;;;17582:60:0;;17543:16;;17582:11;;:30;;:60;;17613:5;;17620:12;;17634:7;;17582:60;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17582:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17582:60:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;17582:60:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;17582:60:0;;;;;;;;;17575:67;;17450:199;;;;;:::o;7590:98::-;7630:10;2169:33;;:::i;:::-;-1:-1:-1;;;;;2205:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2169:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;-1:-1:-1;2169:56:0;;-1:-1:-1;2260:34:0;;-1:-1:-1;2243:6:0;:13;;;:51;;;;;;;;;2235:84;;;;-1:-1:-1;;;;;2235:84:0;;;;;;;;;;;;;;;;;7652:29;;-1:-1:-1;;;;;7652:29:0;;:11;;:22;;:29;;7675:5;;7652:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7652:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7652:29:0;;;;7590:98;;:::o;7128:132::-;7187:10;3414:33;;:::i;:::-;-1:-1:-1;;;;;3450:20:0;;;:5;:20;;;:13;:20;;;;;;;;;3414:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3414:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3414:56:0;;-1:-1:-1;3414:56:0;;-1:-1:-1;3505:35:0;;-1:-1:-1;3488:6:0;:13;;;:52;;;;;;;;;3480:104;;;;-1:-1:-1;;;;;3480:104:0;;;;;;;;;3594:39;;:::i;:::-;3636:56;;-1:-1:-1;;;;;3636:56:0;;:11;;:34;;:56;;3671:6;;3679:12;;3636:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3636:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3636:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3636:56:0;;;;;;;;;3594:98;-1:-1:-1;3739:33:0;3710:25;;:62;;;;;;;;;3702:126;;;;-1:-1:-1;;;;;3702:126:0;;;;;;;;;3882:9;:21;;;3846:33;3866:12;3846:19;:33::i;:::-;:57;3838:128;;;;-1:-1:-1;;;;;3838:128:0;;;;;;;;;7213:40;;-1:-1:-1;;;;;7213:40:0;;:11;;:24;;:40;;7238:5;;7245:7;;7213:40;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7213:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7213:40:0;;;;7128:132;;;;:::o;13838:574::-;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;14183:10;2169:33;;:::i;:::-;-1:-1:-1;;;;;2205:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2169:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;-1:-1:-1;2169:56:0;;-1:-1:-1;2260:34:0;;-1:-1:-1;2243:6:0;:13;;;:51;;;;;;;;;2235:84;;;;-1:-1:-1;;;;;2235:84:0;;;;;;;;;14216:7;4517:42;4482:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4474:118;;;;-1:-1:-1;;;;;4474:118:0;;;;;;;;;14239:166;;-1:-1:-1;;;;;14239:166:0;;:8;;:26;;:166;;14266:5;;14273:7;;14282;;14291:15;;14308:11;;14321:21;;14356:32;;14390:8;;14400:4;;14239:166;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14239:166:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14239:166:0;;;;2329:1;5505;;13838:574;;;;;;;;:::o;14760:327::-;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;14953:10;2169:33;;:::i;:::-;-1:-1:-1;;;;;2205:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2169:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;-1:-1:-1;2169:56:0;;-1:-1:-1;2260:34:0;;-1:-1:-1;2243:6:0;:13;;;:51;;;;;;;;;2235:84;;;;-1:-1:-1;;;;;2235:84:0;;;;;;;;;14986:7;4517:42;4482:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4474:118;;;;-1:-1:-1;;;;;4474:118:0;;;;;;;;;15009:71;;-1:-1:-1;;;;;15009:71:0;;:8;;:30;;:71;;15040:5;;15047:7;;15056;;15065:8;;15075:4;;15009:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15009:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15009:71:0;;;;2329:1;5505;;14760:327;;;;:::o;6735:195::-;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;6846:10;1805:33;;:::i;:::-;-1:-1:-1;;;;;1841:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1805:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1805:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1805:56:0;;-1:-1:-1;1805:56:0;;-1:-1:-1;1896:38:0;;-1:-1:-1;1879:6:0;:13;;;:55;;;;;;;;;;1871:87;;;;-1:-1:-1;;;;;1871:87:0;;;;;;;;;6872:51;;-1:-1:-1;;;;;6872:51:0;;:11;;:23;;:51;;6896:5;;6903:10;;6915:7;;6872:51;;;;8939:603;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;9298:10;2169:33;;:::i;:::-;-1:-1:-1;;;;;2205:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2169:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;-1:-1:-1;2169:56:0;;-1:-1:-1;2260:34:0;;-1:-1:-1;2243:6:0;:13;;;:51;;;;;;;;;2235:84;;;;-1:-1:-1;;;;;2235:84:0;;;;;;;;;9332:7;4204:43;4169:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;4161:123;;;;-1:-1:-1;;;;;4161:123:0;;;;;;;;;9355:180;;-1:-1:-1;;;;;9355:180:0;;:8;;:33;;:180;;9389:5;;9396:7;;9405:12;;9419:9;;9430:19;;9463:21;;9486:32;;9520:8;;9530:4;;9355:180;;;;15737:237;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;15873:10;1805:33;;:::i;:::-;-1:-1:-1;;;;;1841:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1805:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1805:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1805:56:0;;-1:-1:-1;1805:56:0;;-1:-1:-1;1896:38:0;;-1:-1:-1;1879:6:0;:13;;;:55;;;;;;;;;;1871:87;;;;-1:-1:-1;;;;;1871:87:0;;;;;;;;;15899:68;;-1:-1:-1;;;;;15899:68:0;;:13;;:34;;:68;;15934:5;;15941:12;;15955:5;;15962:4;;15899:68;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15899:68:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15899:68:0;;;;5505:1;;15737:237;;;:::o;7950:314::-;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;8128:10;2169:33;;:::i;:::-;-1:-1:-1;;;;;2205:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2169:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;-1:-1:-1;2169:56:0;;-1:-1:-1;2260:34:0;;-1:-1:-1;2243:6:0;:13;;;:51;;;;;;;;;2235:84;;;;-1:-1:-1;;;;;2235:84:0;;;;;;;;;8162:7;4204:43;4169:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;4161:123;;;;-1:-1:-1;;;;;4161:123:0;;;;;;;;;8185:72;;-1:-1:-1;;;;;8185:72:0;;:8;;:40;;:72;;8226:5;;8233:7;;8242:8;;8252:4;;8185:72;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8185:72:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8185:72:0;;;;2329:1;5505;;7950:314;;;:::o;3069:121:10:-;3131:16;3166:5;:17;;3159:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:121;:::o;2823:130::-;2872:36;;:::i;:::-;2920:26;;;;;;;;;2927:19;2920:26;2927:5;2920:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2920:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2823:130;:::o;1347:137:32:-;863:9;:7;:9::i;:::-;855:18;;;;;;1429:6;;1408:40;;1445:1;;-1:-1:-1;;;;;1429:6:32;;1408:40;;1445:1;;1408:40;1458:6;:19;;-1:-1:-1;;;;;;1458:19:32;;;1347:137::o;9669:149:0:-;9761:50;;-1:-1:-1;;;;;9761:50:0;;9734:4;;9761:18;;:43;;:50;;9734:4;;9761:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9761:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9761:50:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9761:50:0;;;;;;;;;9754:57;;9669:149;:::o;2543::10:-;2608:34;;:::i;:::-;2661:5;:24;;;:15;:24;;;;;;;;;2654:31;;;;;;;;;-1:-1:-1;;;;;2654:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2661:24;;2654:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2654:31:10;;;-1:-1:-1;;2654:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2654:31:10;-1:-1:-1;2543:149:10;;;;:::o;6257:235:0:-;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;6401:7;5080:6;5075:175;5096:21;:28;5092:32;;5075:175;;;5203:7;-1:-1:-1;;;;;5153:57:0;:5;:13;;:39;5167:5;:21;;5189:1;5167:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5167:24:0;;;5153:39;;;;;;;;;;;;;;;:46;;:57;;5145:94;;;;-1:-1:-1;;;;;5145:94:0;;;;;;;;;5126:3;;5075:175;;;-1:-1:-1;6424:61:0;;-1:-1:-1;;;;;6424:61:0;;:11;;:24;;:61;;6449:5;;6456:7;;6465;;6474:10;;6424:61;;;;18932:275;5676:34;;19086:7;;-1:-1:-1;;;;;5676:34:0;5662:10;:48;5654:93;;;;-1:-1:-1;;;;;5654:93:0;;;;;;;;;19116:84;;-1:-1:-1;;;;;19116:84:0;;:11;;:46;;:84;;19163:5;;19170:14;;19186:7;;19195:4;;19116:84;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19116:84:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19116:84:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;19116:84:0;;;;;;;;;19109:91;;5757:1;18932:275;;;;;:::o;659:77:32:-;723:6;;-1:-1:-1;;;;;723:6:32;659:77;:::o;10031:211:0:-;10164:71;;-1:-1:-1;;;;;10164:71:0;;10125:16;;10164:18;;:49;;:71;;10214:5;;10221:6;;10229:5;;10164:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10164:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10164:71:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;10164:71:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;10164:71:0;;;;;;;;2221:137:10;2282:30;;:::i;:::-;2331:5;:20;;;:11;:20;;;;;;;;;2324:27;;;;;;;;;-1:-1:-1;;;;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2331:20;2324:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2221:137;;;:::o;979:90:32:-;1056:6;;-1:-1:-1;;;;;1056:6:32;1042:10;:20;;979:90::o;16915:198:0:-;16992:4;16998;17004:16;17022:13;17054:11;:31;17086:5;17093:12;17054:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17054:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17054:52:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;17054:52:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;17054:52:0;;;;;;;;;17047:59;;;;;;;;16915:198;;;;;:::o;1004:492:10:-;1079:7;1088:26;;:::i;:::-;1126:15;1151:33;;:::i;:::-;1199:6;1194:262;1215:21;:28;1211:32;;1194:262;;;1287:21;:24;;1273:13;;:5;;1309:1;;1287:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1287:24:10;;;1273:39;;;;;;;;;;;;;;;;1264:48;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1264:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:7;-1:-1:-1;;;;;1330:24:10;:6;:13;;;-1:-1:-1;;;;;1330:24:10;;1326:120;;;1384:21;:24;;1406:1;;1384:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1384:24:10;;-1:-1:-1;1426:5:10;;1326:120;1245:3;;1194:262;;;-1:-1:-1;1473:7:10;;-1:-1:-1;1482:6:10;-1:-1:-1;1004:492:10;;;:::o;17787:200:0:-;17892:7;17901:12;17867:10;1805:33;;:::i;:::-;-1:-1:-1;;;;;1841:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1805:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1805:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1805:56:0;;-1:-1:-1;1805:56:0;;-1:-1:-1;1896:38:0;;-1:-1:-1;1879:6:0;:13;;;:55;;;;;;;;;;1871:87;;;;-1:-1:-1;;;;;1871:87:0;;;;;;;;;17936:44;;-1:-1:-1;;;;;17936:44:0;;:11;;:25;;:44;;17962:5;;17969:10;;17936:44;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17936:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17936:44:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;17936:44:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;17936:44:0;;;;;;;;;17929:51;;;;17787:200;;;;;:::o;7423:90::-;7456:10;2861:33;;:::i;:::-;-1:-1:-1;;;;;2897:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2861:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2861:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2935:33;2955:12;2935:19;:33::i;:::-;2927:90;;;;-1:-1:-1;;;;;2927:90:0;;;;;;;;;3052:35;3035:6;:13;;;:52;;;;;;;;;3027:104;;;;-1:-1:-1;;;;;3027:104:0;;;;;;;;;3167:22;;3149:14;;;;:40;;3141:87;;;;-1:-1:-1;;;;;3141:87:0;;;;;;;;;7478:28;;-1:-1:-1;;;;;7478:28:0;;:11;;:21;;:28;;7500:5;;7478:28;;;;18192:181;18319:47;;-1:-1:-1;;;;;18319:47:0;;18292:4;;18319:11;;:28;;:47;;18348:5;;18355:10;;18319:47;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18319:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18319:47:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18319:47:0;;;;;;;;12908:326;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;13135:92;;-1:-1:-1;;;;;13135:92:0;;:8;;:30;;:92;;13166:5;;13173:13;;13188:10;;13200:7;;13209:17;;13135:92;;;;3305:131:10;3395:34;;-1:-1:-1;;;;;3395:34:10;3305:131;:::o;12008:289:0:-;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;12203:87;;-1:-1:-1;;;;;12203:87:0;;:8;;:29;;:87;;12233:5;;12240:11;;12253:9;;12264:6;;12272:17;;12203:87;;;;679:131:10;736:26;;:::i;:::-;-1:-1:-1;;;;;781:22:10;;;:5;:22;;;:13;:22;;;;;;;;;774:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;-1:-1:-1;774:29:10;;679:131;-1:-1:-1;;;679:131:10:o;11095:338:0:-;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;11321:105;;-1:-1:-1;;;;;11321:105:0;;:8;;:39;;:105;;11361:5;;11368:11;;11381:9;;11392:6;;11400:17;;11419:6;;11321:105;;;;16464:167;16568:56;;-1:-1:-1;;;;;16568:56:0;;16545:4;;16568:11;;:35;;:56;;16545:4;;16611:12;;16568:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16568:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16568:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;16568:56:0;;;;;;;;399:115:10;489:10;449:7;475:25;;;:13;:25;;;;;:32;-1:-1:-1;;;;;475:32:10;399:115;:::o;1957:90::-;2025:15;;1957:90;:::o;15254:147:0:-;15325:7;4824:37;4793:5;:20;;;:11;:20;;;;;:27;;;;;;;;:68;;;;;;;;4785:100;;;;-1:-1:-1;;;;;4785:100:0;;;;;;;;;15348:46;;-1:-1:-1;;;;;15348:46:0;;:8;;:30;;:46;;15379:5;;15386:7;;15348:46;;;;1655:107:32;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;18514:226:0:-;863:9:32;:7;:9::i;:::-;855:18;;;;;;5429:34:0;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;18658:75;;-1:-1:-1;;;;;18658:75:0;;:11;;:37;;:75;;18696:5;;18703:29;;18658:75;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18658:75:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18658:75:0;;;;18514:226;:::o;1740:134:10:-;-1:-1:-1;;;;;1833:34:10;1810:4;1833:34;;;:25;:34;;;;;;;1740:134::o;1906:183:32:-;-1:-1:-1;;;;;1979:22:32;;1971:31;;;;;;2038:6;;2017:38;;-1:-1:-1;;;;;2017:38:32;;;;2038:6;;2017:38;;2038:6;;2017:38;2065:6;:17;;-1:-1:-1;;;;;;2065:17:32;-1:-1:-1;;;;;2065:17:32;;;;;;;;;;1906:183::o;885:18324:0:-;;;;;;;;;;-1:-1:-1;885:18324:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;885:18324:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;885:18324:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;885:18324:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:722;;429:3;422:4;414:6;410:17;406:27;396:2;;447:1;444;437:12;396:2;477:6;471:13;499:80;514:64;571:6;514:64;;;499:80;;;490:89;;596:5;621:6;614:5;607:21;651:4;643:6;639:17;629:27;;673:4;668:3;664:14;657:21;;726:6;773:3;765:4;757:6;753:17;748:3;744:27;741:36;738:2;;;790:1;787;780:12;738:2;815:1;800:217;825:6;822:1;819:13;800:217;;;883:3;905:48;949:3;937:10;905:48;;;893:61;;-1:-1;977:4;968:14;;;;996;;;;;847:1;840:9;800:217;;;804:14;389:634;;;;;;;;1049:707;;1166:3;1159:4;1151:6;1147:17;1143:27;1133:2;;1184:1;1181;1174:12;1133:2;1221:6;1208:20;1243:80;1258:64;1315:6;1258:64;;1243:80;1234:89;;1340:5;1365:6;1358:5;1351:21;1395:4;1387:6;1383:17;1373:27;;1417:4;1412:3;1408:14;1401:21;;1470:6;1517:3;1509:4;1501:6;1497:17;1492:3;1488:27;1485:36;1482:2;;;1534:1;1531;1524:12;1482:2;1559:1;1544:206;1569:6;1566:1;1563:13;1544:206;;;1627:3;1649:37;1682:3;1670:10;1649:37;;;1637:50;;-1:-1;1710:4;1701:14;;;;1729;;;;;1591:1;1584:9;1544:206;;1782:722;;1910:3;1903:4;1895:6;1891:17;1887:27;1877:2;;1928:1;1925;1918:12;1877:2;1958:6;1952:13;1980:80;1995:64;2052:6;1995:64;;1980:80;1971:89;;2077:5;2102:6;2095:5;2088:21;2132:4;2124:6;2120:17;2110:27;;2154:4;2149:3;2145:14;2138:21;;2207:6;2254:3;2246:4;2238:6;2234:17;2229:3;2225:27;2222:36;2219:2;;;2271:1;2268;2261:12;2219:2;2296:1;2281:217;2306:6;2303:1;2300:13;2281:217;;;2364:3;2386:48;2430:3;2418:10;2386:48;;;2374:61;;-1:-1;2458:4;2449:14;;;;2477;;;;;2328:1;2321:9;2281:217;;2530:722;;2658:3;2651:4;2643:6;2639:17;2635:27;2625:2;;2676:1;2673;2666:12;2625:2;2706:6;2700:13;2728:80;2743:64;2800:6;2743:64;;2728:80;2719:89;;2825:5;2850:6;2843:5;2836:21;2880:4;2872:6;2868:17;2858:27;;2902:4;2897:3;2893:14;2886:21;;2955:6;3002:3;2994:4;2986:6;2982:17;2977:3;2973:27;2970:36;2967:2;;;3019:1;3016;3009:12;2967:2;3044:1;3029:217;3054:6;3051:1;3048:13;3029:217;;;3112:3;3134:48;3178:3;3166:10;3134:48;;;3122:61;;-1:-1;3206:4;3197:14;;;;3225;;;;;3076:1;3069:9;3029:217;;3277:704;;3393:3;3386:4;3378:6;3374:17;3370:27;3360:2;;3411:1;3408;3401:12;3360:2;3448:6;3435:20;3470:79;3485:63;3541:6;3485:63;;3470:79;3461:88;;3566:5;3591:6;3584:5;3577:21;3621:4;3613:6;3609:17;3599:27;;3643:4;3638:3;3634:14;3627:21;;3696:6;3743:3;3735:4;3727:6;3723:17;3718:3;3714:27;3711:36;3708:2;;;3760:1;3757;3750:12;3708:2;3785:1;3770:205;3795:6;3792:1;3789:13;3770:205;;;3853:3;3875:36;3907:3;3895:10;3875:36;;;3863:49;;-1:-1;3935:4;3926:14;;;;3954;;;;;3817:1;3810:9;3770:205;;3989:130;4056:20;;4081:33;4056:20;4081:33;;4126:134;4204:13;;4222:33;4204:13;4222:33;;4268:440;;4369:3;4362:4;4354:6;4350:17;4346:27;4336:2;;4387:1;4384;4377:12;4336:2;4424:6;4411:20;4446:64;4461:48;4502:6;4461:48;;4446:64;4437:73;;4530:6;4523:5;4516:21;4566:4;4558:6;4554:17;4599:4;4592:5;4588:16;4634:3;4625:6;4620:3;4616:16;4613:25;4610:2;;;4651:1;4648;4641:12;4610:2;4661:41;4695:6;4690:3;4685;4661:41;;;4329:379;;;;;;;;4717:442;;4829:3;4822:4;4814:6;4810:17;4806:27;4796:2;;4847:1;4844;4837:12;4796:2;4877:6;4871:13;4899:64;4914:48;4955:6;4914:48;;4899:64;4890:73;;4983:6;4976:5;4969:21;5019:4;5011:6;5007:17;5052:4;5045:5;5041:16;5087:3;5078:6;5073:3;5069:16;5066:25;5063:2;;;5104:1;5101;5094:12;5063:2;5114:39;5146:6;5141:3;5136;5114:39;;5167:170;5263:13;;5281:51;5263:13;5281:51;;5380:695;;5507:4;5495:9;5490:3;5486:19;5482:30;5479:2;;;5525:1;5522;5515:12;5479:2;5543:20;5558:4;5543:20;;;5534:29;-1:-1;5624:1;5655:78;5729:3;5709:9;5655:78;;;5631:103;;-1:-1;5802:2;5835:60;5891:3;5867:22;;;5835:60;;;5828:4;5821:5;5817:16;5810:86;5755:152;5960:2;5993:60;6049:3;6040:6;6029:9;6025:22;5993:60;;;5986:4;5979:5;5975:16;5968:86;5917:148;5473:602;;;;;6360:128;6426:20;;6451:32;6426:20;6451:32;;6495:241;;6599:2;6587:9;6578:7;6574:23;6570:32;6567:2;;;6615:1;6612;6605:12;6567:2;6650:1;6667:53;6712:7;6692:9;6667:53;;;6657:63;6561:175;-1:-1;;;;6561:175;6743:595;;;;6890:2;6878:9;6869:7;6865:23;6861:32;6858:2;;;6906:1;6903;6896:12;6858:2;6941:1;6958:53;7003:7;6983:9;6958:53;;;6948:63;;6920:97;7048:2;7066:53;7111:7;7102:6;7091:9;7087:22;7066:53;;;7056:63;;7027:98;7184:2;7173:9;7169:18;7156:32;-1:-1;;;;;7200:6;7197:30;7194:2;;;7240:1;7237;7230:12;7194:2;7260:62;7314:7;7305:6;7294:9;7290:22;7260:62;;;7250:72;;7135:193;6852:486;;;;;;7345:496;;;7486:2;7474:9;7465:7;7461:23;7457:32;7454:2;;;7502:1;7499;7492:12;7454:2;7537:1;7554:64;7610:7;7590:9;7554:64;;;7544:74;;7516:108;7676:2;7665:9;7661:18;7655:25;-1:-1;;;;;7692:6;7689:30;7686:2;;;7732:1;7729;7722:12;7686:2;7752:73;7817:7;7808:6;7797:9;7793:22;7752:73;;;7742:83;;7634:197;7448:393;;;;;;7848:699;;;;8004:2;7992:9;7983:7;7979:23;7975:32;7972:2;;;8020:1;8017;8010:12;7972:2;8055:1;8072:53;8117:7;8097:9;8072:53;;;8062:63;;8034:97;8190:2;8179:9;8175:18;8162:32;-1:-1;;;;;8206:6;8203:30;8200:2;;;8246:1;8243;8236:12;8200:2;8266:62;8320:7;8311:6;8300:9;8296:22;8266:62;;8554:366;;;8675:2;8663:9;8654:7;8650:23;8646:32;8643:2;;;8691:1;8688;8681:12;8643:2;8726:1;8743:53;8788:7;8768:9;8743:53;;;8733:63;;8705:97;8833:2;8851:53;8896:7;8887:6;8876:9;8872:22;8851:53;;8927:392;;9067:2;9055:9;9046:7;9042:23;9038:32;9035:2;;;9083:1;9080;9073:12;9035:2;9118:24;;-1:-1;;;;;9151:30;;9148:2;;;9194:1;9191;9184:12;9148:2;9214:89;9295:7;9286:6;9275:9;9271:22;9214:89;;9326:657;;;9508:2;9496:9;9487:7;9483:23;9479:32;9476:2;;;9524:1;9521;9514:12;9476:2;9559:24;;-1:-1;;;;;9592:30;;9589:2;;;9635:1;9632;9625:12;9589:2;9655:89;9736:7;9727:6;9716:9;9712:22;9655:89;;;9645:99;;9538:212;9802:2;9791:9;9787:18;9781:25;-1:-1;;;;;9818:6;9815:30;9812:2;;;9858:1;9855;9848:12;9812:2;9878:89;9959:7;9950:6;9939:9;9935:22;9878:89;;9990:392;;10130:2;10118:9;10109:7;10105:23;10101:32;10098:2;;;10146:1;10143;10136:12;10098:2;10181:24;;-1:-1;;;;;10214:30;;10211:2;;;10257:1;10254;10247:12;10211:2;10277:89;10358:7;10349:6;10338:9;10334:22;10277:89;;10389:1021;;;;;10617:3;10605:9;10596:7;10592:23;10588:33;10585:2;;;10634:1;10631;10624:12;10585:2;10669:31;;-1:-1;;;;;10709:30;;10706:2;;;10752:1;10749;10742:12;10706:2;10772:78;10842:7;10833:6;10822:9;10818:22;10772:78;;;10762:88;;10648:208;10915:2;10904:9;10900:18;10887:32;-1:-1;;;;;10931:6;10928:30;10925:2;;;10971:1;10968;10961:12;10925:2;10991:77;11060:7;11051:6;11040:9;11036:22;10991:77;;;10981:87;;10866:208;11133:2;11122:9;11118:18;11105:32;-1:-1;;;;;11149:6;11146:30;11143:2;;;11189:1;11186;11179:12;11143:2;11209:77;11278:7;11269:6;11258:9;11254:22;11209:77;;;11199:87;;11084:208;11323:2;11341:53;11386:7;11377:6;11366:9;11362:22;11341:53;;;11331:63;;11302:98;10579:831;;;;;;;;11417:241;;11521:2;11509:9;11500:7;11496:23;11492:32;11489:2;;;11537:1;11534;11527:12;11489:2;11572:1;11589:53;11634:7;11614:9;11589:53;;11665:1327;;;;;;;;;11905:3;11893:9;11884:7;11880:23;11876:33;11873:2;;;11922:1;11919;11912:12;11873:2;11957:1;11974:53;12019:7;11999:9;11974:53;;;11964:63;;11936:97;12064:2;12082:53;12127:7;12118:6;12107:9;12103:22;12082:53;;;12072:63;;12043:98;12172:2;12190:53;12235:7;12226:6;12215:9;12211:22;12190:53;;;12180:63;;12151:98;12280:2;12298:53;12343:7;12334:6;12323:9;12319:22;12298:53;;;12288:63;;12259:98;12416:3;12405:9;12401:19;12388:33;-1:-1;;;;;12433:6;12430:30;12427:2;;;12473:1;12470;12463:12;12427:2;12493:62;12547:7;12538:6;12527:9;12523:22;12493:62;;;12483:72;;12367:194;12592:3;12611:53;12656:7;12647:6;12636:9;12632:22;12611:53;;;12601:63;;12571:99;12701:3;12720:52;12764:7;12755:6;12744:9;12740:22;12720:52;;;12710:62;;12680:98;12837:3;12826:9;12822:19;12809:33;-1:-1;;;;;12854:6;12851:30;12848:2;;;12894:1;12891;12884:12;12848:2;12914:62;12968:7;12959:6;12948:9;12944:22;12914:62;;;12904:72;;12788:194;11867:1125;;;;;;;;;;;;12999:719;;;;;13162:3;13150:9;13141:7;13137:23;13133:33;13130:2;;;13179:1;13176;13169:12;13130:2;13214:1;13231:53;13276:7;13256:9;13231:53;;;13221:63;;13193:97;13321:2;13339:53;13384:7;13375:6;13364:9;13360:22;13339:53;;;13329:63;;13300:98;13429:2;13447:52;13491:7;13482:6;13471:9;13467:22;13447:52;;;13437:62;;13408:97;13564:2;13553:9;13549:18;13536:32;-1:-1;;;;;13580:6;13577:30;13574:2;;;13620:1;13617;13610:12;13574:2;13640:62;13694:7;13685:6;13674:9;13670:22;13640:62;;13725:593;;;;13871:2;13859:9;13850:7;13846:23;13842:32;13839:2;;;13887:1;13884;13877:12;13839:2;13922:1;13939:53;13984:7;13964:9;13939:53;;;13929:63;;13901:97;14029:2;14047:52;14091:7;14082:6;14071:9;14067:22;14047:52;;14325:613;;;;;14478:3;14466:9;14457:7;14453:23;14449:33;14446:2;;;14495:1;14492;14485:12;14446:2;14530:1;14547:53;14592:7;14572:9;14547:53;;;14537:63;;14509:97;14637:2;14655:52;14699:7;14690:6;14679:9;14675:22;14655:52;;;14645:62;;14616:97;14744:2;14762:52;14806:7;14797:6;14786:9;14782:22;14762:52;;14945:739;;;;;;15115:3;15103:9;15094:7;15090:23;15086:33;15083:2;;;15132:1;15129;15122:12;15083:2;15167:1;15184:53;15229:7;15209:9;15184:53;;;15174:63;;15146:97;15274:2;15292:52;15336:7;15327:6;15316:9;15312:22;15292:52;;;15282:62;;15253:97;15381:2;15399:52;15443:7;15434:6;15423:9;15419:22;15399:52;;;15389:62;;15360:97;15488:2;15506:53;15551:7;15542:6;15531:9;15527:22;15506:53;;;15496:63;;15467:98;15596:3;15615:53;15660:7;15651:6;15640:9;15636:22;15615:53;;;15605:63;;15575:99;15077:607;;;;;;;;;15691:574;;;15830:2;15818:9;15809:7;15805:23;15801:32;15798:2;;;15846:1;15843;15836:12;15798:2;15881:31;;-1:-1;;;;;15921:30;;15918:2;;;15964:1;15961;15954:12;15918:2;15984:62;16038:7;16029:6;16018:9;16014:22;15984:62;;;15974:72;;15860:192;16111:2;16100:9;16096:18;16083:32;-1:-1;;;;;16127:6;16124:30;16121:2;;;16167:1;16164;16157:12;16121:2;16187:62;16241:7;16232:6;16221:9;16217:22;16187:62;;16272:317;;16414:2;16402:9;16393:7;16389:23;16385:32;16382:2;;;16430:1;16427;16420:12;16382:2;16465:1;16482:91;16565:7;16545:9;16482:91;;16844:263;;16959:2;16947:9;16938:7;16934:23;16930:32;16927:2;;;16975:1;16972;16965:12;16927:2;17010:1;17027:64;17083:7;17063:9;17027:64;;17114:366;;;17235:2;17223:9;17214:7;17210:23;17206:32;17203:2;;;17251:1;17248;17241:12;17203:2;17286:1;17303:53;17348:7;17328:9;17303:53;;17860:930;;;;;18076:3;18064:9;18055:7;18051:23;18047:33;18044:2;;;18093:1;18090;18083:12;18044:2;18128:1;18145:64;18201:7;18181:9;18145:64;;;18135:74;;18107:108;18246:2;18264:64;18320:7;18311:6;18300:9;18296:22;18264:64;;;18254:74;;18225:109;18386:2;18375:9;18371:18;18365:25;-1:-1;;;;;18402:6;18399:30;18396:2;;;18442:1;18439;18432:12;18396:2;18462:89;18543:7;18534:6;18523:9;18519:22;18462:89;;;18452:99;;18344:213;18609:2;18598:9;18594:18;18588:25;-1:-1;;;;;18625:6;18622:30;18619:2;;;18665:1;18662;18655:12;18619:2;18685:89;18766:7;18757:6;18746:9;18742:22;18685:89;;18797:595;;;;18944:2;18932:9;18923:7;18919:23;18915:32;18912:2;;;18960:1;18957;18950:12;18912:2;18995:1;19012:53;19057:7;19037:9;19012:53;;;19002:63;;18974:97;19102:2;19120:53;19165:7;19156:6;19145:9;19141:22;19120:53;;19400:173;;19487:46;19529:3;19521:6;19487:46;;;-1:-1;;19562:4;19553:14;;19480:93;19582:173;;19669:46;19711:3;19703:6;19669:46;;19962:269;;20095:96;20187:3;20179:6;20095:96;;;-1:-1;;20220:4;20211:14;;20088:143;20534:265;;20689:104;20789:3;20781:6;20689:104;;20990:185;;21083:52;21131:3;21123:6;21083:52;;21183:103;21256:24;21274:5;21256:24;;;21251:3;21244:37;21238:48;;;21690:690;;21835:54;21883:5;21835:54;;;21902:86;21981:6;21976:3;21902:86;;;21895:93;;22009:56;22059:5;22009:56;;;22085:7;22113:1;22098:260;22123:6;22120:1;22117:13;22098:260;;;22190:6;22184:13;22211:63;22270:3;22255:13;22211:63;;;22204:70;;22291:60;22344:6;22291:60;;;22281:70;-1:-1;;22145:1;22138:9;22098:260;;;-1:-1;22371:3;;21814:566;-1:-1;;;;;21814:566;22419:654;;22550:50;22594:5;22550:50;;;22613:76;22682:6;22677:3;22613:76;;;22606:83;;22710:52;22756:5;22710:52;;;22782:7;22810:1;22795:256;22820:6;22817:1;22814:13;22795:256;;;22887:6;22881:13;22908:63;22967:3;22952:13;22908:63;;;22901:70;;22988:56;23037:6;22988:56;;;22978:66;-1:-1;;22842:1;22835:9;22795:256;;23112:690;;23257:54;23305:5;23257:54;;;23324:86;23403:6;23398:3;23324:86;;;23317:93;;23431:56;23481:5;23431:56;;;23507:7;23535:1;23520:260;23545:6;23542:1;23539:13;23520:260;;;23612:6;23606:13;23633:63;23692:3;23677:13;23633:63;;;23626:70;;23713:60;23766:6;23713:60;;;23703:70;-1:-1;;23567:1;23560:9;23520:260;;23841:714;;23994:54;24042:5;23994:54;;;24061:94;24148:6;24143:3;24061:94;;;24054:101;;24176:56;24226:5;24176:56;;;24252:7;24280:1;24265:268;24290:6;24287:1;24284:13;24265:268;;;24357:6;24351:13;24378:71;24445:3;24430:13;24378:71;;;24371:78;;24466:60;24519:6;24466:60;;;24456:70;-1:-1;;24312:1;24305:9;24265:268;;24594:654;;24725:50;24769:5;24725:50;;;24788:76;24857:6;24852:3;24788:76;;;24781:83;;24885:52;24931:5;24885:52;;;24957:7;24985:1;24970:256;24995:6;24992:1;24989:13;24970:256;;;25062:6;25056:13;25083:63;25142:3;25127:13;25083:63;;;25076:70;;25163:56;25212:6;25163:56;;;25153:66;-1:-1;;25017:1;25010:9;24970:256;;25331:838;;25508:73;25575:5;25508:73;;;25594:99;25686:6;25681:3;25594:99;;;25587:106;;25714:75;25783:5;25714:75;;;25809:7;25837:1;25822:325;25847:6;25844:1;25841:13;25822:325;;;25914:6;25908:13;25935:109;26040:3;26025:13;25935:109;;;25928:116;;26061:79;26133:6;26061:79;;;26051:89;-1:-1;;25869:1;25862:9;25822:325;;26252:862;;26437:73;26504:5;26437:73;;;26523:107;26623:6;26618:3;26523:107;;;26516:114;;26651:75;26720:5;26651:75;;;26746:7;26774:1;26759:333;26784:6;26781:1;26778:13;26759:333;;;26851:6;26845:13;26872:117;26985:3;26970:13;26872:117;;;26865:124;;27006:79;27078:6;27006:79;;;26996:89;-1:-1;;26806:1;26799:9;26759:333;;27207:1052;;27402:79;27475:5;27402:79;;;27494:111;27598:6;27593:3;27494:111;;;27487:118;;27628:3;27670:4;27662:6;27658:17;27653:3;27649:27;27697:81;27772:5;27697:81;;;27798:7;27826:1;27811:409;27836:6;27833:1;27830:13;27811:409;;;27898:9;27892:4;27888:20;27883:3;27876:33;27943:6;27937:13;27965:118;28078:4;28063:13;27965:118;;;27957:126;;28100:85;28178:6;28100:85;;;28208:4;28199:14;;;;;28090:95;-1:-1;;27858:1;27851:9;27811:409;;;-1:-1;28233:4;;27381:878;-1:-1;;;;;;;27381:878;28298:690;;28443:54;28491:5;28443:54;;;28510:86;28589:6;28584:3;28510:86;;;28503:93;;28617:56;28667:5;28617:56;;;28693:7;28721:1;28706:260;28731:6;28728:1;28725:13;28706:260;;;28798:6;28792:13;28819:63;28878:3;28863:13;28819:63;;;28812:70;;28899:60;28952:6;28899:60;;;28889:70;-1:-1;;28753:1;28746:9;28706:260;;29027:654;;29158:50;29202:5;29158:50;;;29221:76;29290:6;29285:3;29221:76;;;29214:83;;29318:52;29364:5;29318:52;;;29390:7;29418:1;29403:256;29428:6;29425:1;29422:13;29403:256;;;29495:6;29489:13;29516:63;29575:3;29560:13;29516:63;;;29509:70;;29596:56;29645:6;29596:56;;;29586:66;-1:-1;;29450:1;29443:9;29403:256;;29718:706;;29869:53;29916:5;29869:53;;;29935:93;30021:6;30016:3;29935:93;;;29928:100;;30049:55;30098:5;30049:55;;;30124:7;30152:1;30137:265;30162:6;30159:1;30156:13;30137:265;;;30229:6;30223:13;30250:69;30315:3;30300:13;30250:69;;;30243:76;;30336:59;30388:6;30336:59;;;30326:69;-1:-1;;30184:1;30177:9;30137:265;;30432:104;30509:21;30524:5;30509:21;;30543:103;30616:24;30634:5;30616:24;;30899:343;;31009:38;31041:5;31009:38;;;31059:70;31122:6;31117:3;31059:70;;;31052:77;;31134:52;31179:6;31174:3;31167:4;31160:5;31156:16;31134:52;;;31207:29;31229:6;31207:29;;;31198:39;;;;30989:253;-1:-1;;;30989:253;32275:162;32371:60;32425:5;32371:60;;32444:142;32530:50;32574:5;32530:50;;32593:148;32682:53;32729:5;32682:53;;32911:146;32999:52;33045:5;32999:52;;33226:465;;33386:67;33450:2;33445:3;33386:67;;;33486:66;33466:87;;-1:-1;;;;;33582:2;33573:12;;33566:88;33682:2;33673:12;;33372:319;-1:-1;;33372:319;33700:364;;33860:67;33924:2;33919:3;33860:67;;;33960:66;33940:87;;34055:2;34046:12;;33846:218;-1:-1;;33846:218;34073:465;;34233:67;34297:2;34292:3;34233:67;;;34333:66;34313:87;;-1:-1;;;;;34429:2;34420:12;;34413:88;34529:2;34520:12;;34219:319;-1:-1;;34219:319;34547:364;;34707:67;34771:2;34766:3;34707:67;;;34807:66;34787:87;;34902:2;34893:12;;34693:218;-1:-1;;34693:218;34920:364;;35080:67;35144:2;35139:3;35080:67;;;35180:66;35160:87;;35275:2;35266:12;;35066:218;-1:-1;;35066:218;35293:364;;35453:67;35517:2;35512:3;35453:67;;;35553:66;35533:87;;35648:2;35639:12;;35439:218;-1:-1;;35439:218;35666:465;;35826:67;35890:2;35885:3;35826:67;;;35926:66;35906:87;;-1:-1;;;;;36022:2;36013:12;;36006:88;36122:2;36113:12;;35812:319;-1:-1;;35812:319;36140:465;;36300:67;36364:2;36359:3;36300:67;;;36400:66;36380:87;;36501:66;36496:2;36487:12;;36480:88;36596:2;36587:12;;36286:319;-1:-1;;36286:319;36614:364;;36774:67;36838:2;36833:3;36774:67;;;36874:66;36854:87;;36969:2;36960:12;;36760:218;-1:-1;;36760:218;36987:364;;37147:67;37211:2;37206:3;37147:67;;;37247:66;37227:87;;37342:2;37333:12;;37133:218;-1:-1;;37133:218;37360:364;;37520:67;37584:2;37579:3;37520:67;;;37620:66;37600:87;;37715:2;37706:12;;37506:218;-1:-1;;37506:218;37733:364;;37893:67;37957:2;37952:3;37893:67;;;37993:66;37973:87;;38088:2;38079:12;;37879:218;-1:-1;;37879:218;38106:465;;38266:67;38330:2;38325:3;38266:67;;;38366:66;38346:87;;-1:-1;;;;;38462:2;38453:12;;38446:88;38562:2;38553:12;;38252:319;-1:-1;;38252:319;38658:1120;38890:22;;38658:1120;;38823:4;38814:14;;;38918:62;38818:3;38890:22;38918:62;;;38843:143;39066:4;39059:5;39055:16;39049:23;39078:63;39135:4;39130:3;39126:14;39112:12;39078:63;;;38996:151;39224:4;39217:5;39213:16;39207:23;39236:63;39293:4;39288:3;39284:14;39270:12;39236:63;;;39157:148;39390:4;39383:5;39379:16;39373:23;39442:3;39436:4;39432:14;39425:4;39420:3;39416:14;39409:38;39462:99;39556:4;39542:12;39462:99;;;39454:107;;39315:258;39648:4;39641:5;39637:16;39631:23;39660:86;39740:4;39735:3;39731:14;39717:12;39660:86;;;-1:-1;39769:4;38796:982;-1:-1;;;38796:982;39785:122;39884:18;;39878:29;39985:1532;40211:22;;39985:1532;;40142:5;40133:15;;;40239:62;40137:3;40211:22;40239:62;;;40163:144;40386:4;40379:5;40375:16;40369:23;40398:63;40455:4;40450:3;40446:14;40432:12;40398:63;;;40317:150;40546:4;40539:5;40535:16;40529:23;40558:63;40615:4;40610:3;40606:14;40592:12;40558:63;;;40477:150;40704:4;40697:5;40693:16;40687:23;40716:61;40771:4;40766:3;40762:14;40748:12;40716:61;;;40637:146;40857:4;40850:5;40846:16;40840:23;40869:61;40924:4;40919:3;40915:14;40901:12;40869:61;;;40793:143;41016:4;41009:5;41005:16;40999:23;41028:63;41085:4;41080:3;41076:14;41062:12;41028:63;;;40946:151;41172:4;41165:5;41161:16;41155:23;41184:76;41254:4;41249:3;41245:14;41231:12;41184:76;;;41107:159;41340:4;41333:5;41329:16;41323:23;41392:3;41386:4;41382:14;41375:4;41370:3;41366:14;41359:38;41412:67;41474:4;41460:12;41412:67;;;41404:75;40115:1402;-1:-1;;;;;40115:1402;41593:655;41803:22;;41726:4;41717:14;;;41831:78;41721:3;41803:22;41831:78;;;41746:169;41995:4;41988:5;41984:16;41978:23;42007:63;42064:4;42059:3;42055:14;42041:12;42007:63;;;41925:151;42152:4;42145:5;42141:16;42135:23;42164:63;42221:4;42216:3;42212:14;42198:12;42164:63;;;42086:147;41699:549;;;;43081:1201;43298:22;;43081:1201;;43230:4;43221:14;;;43326:62;43225:3;43298:22;43326:62;;;43250:144;43469:4;43462:5;43458:16;43452:23;43481:78;43553:4;43548:3;43544:14;43530:12;43481:78;;;43404:161;43640:4;43633:5;43629:16;43623:23;43692:3;43686:4;43682:14;43675:4;43670:3;43666:14;43659:38;43712:67;43774:4;43760:12;43712:67;;;43704:75;;43575:216;43867:4;43860:5;43856:16;43850:23;43879:63;43936:4;43931:3;43927:14;43913:12;43879:63;;;43801:147;44027:4;44020:5;44016:16;44010:23;44079:3;44073:4;44069:14;44062:4;44057:3;44053:14;44046:38;44099:145;44239:4;44225:12;44099:145;;44352:1249;44577:22;;44352:1249;;44509:4;44500:14;;;44605:70;44504:3;44577:22;44605:70;;;44529:152;44756:4;44749:5;44745:16;44739:23;44768:86;44848:4;44843:3;44839:14;44825:12;44768:86;;;44691:169;44935:4;44928:5;44924:16;44918:23;44987:3;44981:4;44977:14;44970:4;44965:3;44961:14;44954:38;45007:75;45077:4;45063:12;45007:75;;;44999:83;;44870:224;45170:4;45163:5;45159:16;45153:23;45182:71;45247:4;45242:3;45238:14;45224:12;45182:71;;;45104:155;45338:4;45331:5;45327:16;45321:23;45390:3;45384:4;45380:14;45373:4;45368:3;45364:14;45357:38;45410:153;45558:4;45544:12;45410:153;;45685:1020;45912:22;;45685:1020;;45834:4;45825:14;;;45940:62;45829:3;45912:22;45940:62;;;45854:154;46084:4;46077:5;46073:16;46067:23;46136:3;46130:4;46126:14;46119:4;46114:3;46110:14;46103:38;46156:99;46250:4;46236:12;46156:99;;;46148:107;;46018:249;46342:4;46335:5;46331:16;46325:23;46394:3;46388:4;46384:14;46377:4;46372:3;46368:14;46361:38;46414:99;46508:4;46494:12;46414:99;;;46406:107;;46277:248;46598:4;46591:5;46587:16;46581:23;46610:63;46667:4;46662:3;46658:14;46644:12;46610:63;;47188:100;47259:23;47276:5;47259:23;;47535:213;47653:2;47638:18;;47667:71;47642:9;47711:6;47667:71;;47755:408;47919:2;47904:18;;47933:71;47908:9;47977:6;47933:71;;;48052:9;48046:4;48042:20;48037:2;48026:9;48022:18;48015:48;48077:76;48148:4;48139:6;48077:76;;48170:468;48364:2;48349:18;;48378:71;48353:9;48422:6;48378:71;;;48497:9;48491:4;48487:20;48482:2;48471:9;48467:18;48460:48;48522:106;48623:4;48614:6;48522:106;;48645:361;48813:2;48827:47;;;48798:18;;48888:108;48798:18;48982:6;48888:108;;49013:620;49259:2;49273:47;;;49244:18;;49334:108;49244:18;49428:6;49334:108;;;49326:116;;49490:9;49484:4;49480:20;49475:2;49464:9;49460:18;49453:48;49515:108;49618:4;49609:6;49515:108;;49640:361;49808:2;49822:47;;;49793:18;;49883:108;49793:18;49977:6;49883:108;;50008:461;50226:2;50240:47;;;50211:18;;50301:158;50211:18;50445:6;50301:158;;50476:201;50588:2;50573:18;;50602:65;50577:9;50640:6;50602:65;;50684:516;50874:2;50888:47;;;50859:18;;50949:84;50859:18;51019:6;50949:84;;;50941:92;;51081:9;51075:4;51071:20;51066:2;51055:9;51051:18;51044:48;51106:84;51185:4;51176:6;51106:84;;51207:407;51398:2;51412:47;;;51383:18;;51473:131;51383:18;51473:131;;51621:407;51812:2;51826:47;;;51797:18;;51887:131;51797:18;51887:131;;52035:407;52226:2;52240:47;;;52211:18;;52301:131;52211:18;52301:131;;52449:407;52640:2;52654:47;;;52625:18;;52715:131;52625:18;52715:131;;52863:407;53054:2;53068:47;;;53039:18;;53129:131;53039:18;53129:131;;53277:407;53468:2;53482:47;;;53453:18;;53543:131;53453:18;53543:131;;53691:407;53882:2;53896:47;;;53867:18;;53957:131;53867:18;53957:131;;54105:407;54296:2;54310:47;;;54281:18;;54371:131;54281:18;54371:131;;54519:407;54710:2;54724:47;;;54695:18;;54785:131;54695:18;54785:131;;54933:407;55124:2;55138:47;;;55109:18;;55199:131;55109:18;55199:131;;55347:407;55538:2;55552:47;;;55523:18;;55613:131;55523:18;55613:131;;55761:407;55952:2;55966:47;;;55937:18;;56027:131;55937:18;56027:131;;56175:407;56366:2;56380:47;;;56351:18;;56441:131;56351:18;56441:131;;56589:389;56771:2;56785:47;;;56756:18;;56846:122;56756:18;56954:6;56846:122;;56985:269;57131:2;57116:18;;57145:99;57120:9;57217:6;57145:99;;57261:388;57435:2;57420:18;;57449:99;57424:9;57521:6;57449:99;;;57559:80;57635:2;57624:9;57620:18;57611:6;57559:80;;57656:711;57904:3;57889:19;;57919:99;57893:9;57991:6;57919:99;;;58029:80;58105:2;58094:9;58090:18;58081:6;58029:80;;;58120;58196:2;58185:9;58181:18;58172:6;58120:80;;;58248:9;58242:4;58238:20;58233:2;58222:9;58218:18;58211:48;58273:84;58352:4;58343:6;58273:84;;;58265:92;57875:492;-1:-1;;;;;;57875:492;58374:795;58640:3;58625:19;;58655:99;58629:9;58727:6;58655:99;;;58765:80;58841:2;58830:9;58826:18;58817:6;58765:80;;;58893:9;58887:4;58883:20;58878:2;58867:9;58863:18;58856:48;58918:84;58997:4;58988:6;58918:84;;;58910:92;;59050:9;59044:4;59040:20;59035:2;59024:9;59020:18;59013:48;59075:84;59154:4;59145:6;59075:84;;59176:507;59378:2;59363:18;;59392:99;59367:9;59464:6;59392:99;;;59502:80;59578:2;59567:9;59563:18;59554:6;59502:80;;;59593;59669:2;59658:9;59654:18;59645:6;59593:80;;59690:1183;60094:3;60079:19;;60109:99;60083:9;60181:6;60109:99;;;60256:9;60250:4;60246:20;60241:2;60230:9;60226:18;60219:48;60281:116;60392:4;60383:6;60281:116;;;60273:124;;60445:9;60439:4;60435:20;60430:2;60419:9;60415:18;60408:48;60470:114;60579:4;60570:6;60470:114;;;60462:122;;60632:9;60626:4;60622:20;60617:2;60606:9;60602:18;60595:48;60657:114;60766:4;60757:6;60657:114;;;60649:122;;60782:81;60858:3;60847:9;60843:19;60834:6;60782:81;;60880:388;61054:2;61039:18;;61068:99;61043:9;61140:6;61068:99;;;61178:80;61254:2;61243:9;61239:18;61230:6;61178:80;;61275:1391;61679:3;61664:19;;61694:99;61668:9;61766:6;61694:99;;;61804:80;61880:2;61869:9;61865:18;61856:6;61804:80;;;61895;61971:2;61960:9;61956:18;61947:6;61895:80;;;61986;62062:2;62051:9;62047:18;62038:6;61986:80;;;62077:81;62153:3;62142:9;62138:19;62129:6;62077:81;;;62207:9;62201:4;62197:20;62191:3;62180:9;62176:19;62169:49;62232:84;62311:4;62302:6;62232:84;;;62224:92;;62327:81;62403:3;62392:9;62388:19;62379:6;62327:81;;;62419:79;62493:3;62482:9;62478:19;62469:6;62419:79;;;62547:9;62541:4;62537:20;62531:3;62520:9;62516:19;62509:49;62572:84;62651:4;62642:6;62572:84;;;62564:92;61650:1016;-1:-1;;;;;;;;;;;61650:1016;62673:827;62947:3;62932:19;;62962:99;62936:9;63034:6;62962:99;;;63072:80;63148:2;63137:9;63133:18;63124:6;63072:80;;;63163;63239:2;63228:9;63224:18;63215:6;63163:80;;;63254:78;63328:2;63317:9;63313:18;63304:6;63254:78;;;63381:9;63375:4;63371:20;63365:3;63354:9;63350:19;63343:49;63406:84;63485:4;63476:6;63406:84;;;63398:92;62918:582;-1:-1;;;;;;;62918:582;63507:707;63753:3;63738:19;;63768:99;63742:9;63840:6;63768:99;;;63878:80;63954:2;63943:9;63939:18;63930:6;63878:80;;;63969:78;64043:2;64032:9;64028:18;64019:6;63969:78;;64221:739;64475:3;64460:19;;64490:99;64464:9;64562:6;64490:99;;;64600:80;64676:2;64665:9;64661:18;64652:6;64600:80;;;64691:78;64765:2;64754:9;64750:18;64741:6;64691:78;;;64780;64854:2;64843:9;64839:18;64830:6;64780:78;;;64869:81;64945:3;64934:9;64930:19;64921:6;64869:81;;64967:859;65249:3;65234:19;;65264:99;65238:9;65336:6;65264:99;;;65374:80;65450:2;65439:9;65435:18;65426:6;65374:80;;;65465:78;65539:2;65528:9;65524:18;65515:6;65465:78;;;65554;65628:2;65617:9;65613:18;65604:6;65554:78;;;65643:81;65719:3;65708:9;65704:19;65695:6;65643:81;;;65735;65811:3;65800:9;65796:19;65787:6;65735:81;;66228:507;66430:2;66415:18;;66444:99;66419:9;66516:6;66444:99;;;66554:80;66630:2;66619:9;66615:18;66606:6;66554:80;;67256:711;67504:3;67489:19;;67519:99;67493:9;67591:6;67519:99;;;67629:80;67705:2;67694:9;67690:18;67681:6;67629:80;;;67720;67796:2;67785:9;67781:18;67772:6;67720:80;;67974:373;68148:2;68162:47;;;68133:18;;68223:114;68133:18;68323:6;68223:114;;68354:357;68520:2;68534:47;;;68505:18;;68595:106;68505:18;68687:6;68595:106;;68718:492;68920:2;68934:47;;;68905:18;;68995:114;68905:18;69095:6;68995:114;;;68987:122;;69120:80;69196:2;69185:9;69181:18;69172:6;69120:80;;69217:213;69335:2;69320:18;;69349:71;69324:9;69393:6;69349:71;;69437:843;69739:3;69724:19;;69754:71;69728:9;69798:6;69754:71;;;69836:72;69904:2;69893:9;69889:18;69880:6;69836:72;;;69956:9;69950:4;69946:20;69941:2;69930:9;69926:18;69919:48;69981:108;70084:4;70075:6;69981:108;;;69973:116;;70137:9;70131:4;70127:20;70122:2;70111:9;70107:18;70100:48;70162:108;70265:4;70256:6;70162:108;;70287:256;70349:2;70343:9;70375:17;;;-1:-1;;;;;70435:34;;70471:22;;;70432:62;70429:2;;;70507:1;70504;70497:12;70429:2;70523;70516:22;70327:216;;-1:-1;70327:216;70550:258;;-1:-1;;;;;70701:6;70698:30;70695:2;;;70741:1;70738;70731:12;70695:2;-1:-1;70770:4;70758:17;;;70788:15;;70632:176;71609:258;;-1:-1;;;;;71744:6;71741:30;71738:2;;;71784:1;71781;71774:12;71738:2;-1:-1;71857:4;71828;71805:17;;;;-1:-1;;71801:33;71847:15;;71675:192;71877:119;71983:4;71971:17;;71951:45;72568:137;72691:6;72671:34;73118:103;73204:12;;73188:33;73699:123;-1:-1;73814:3;;73798:24;75605:168;75713:19;;;75762:4;75753:14;;75706:67;78521:91;;78583:24;78601:5;78583:24;;78619:85;78685:13;78678:21;;78661:43;78790:156;78877:5;78883:58;78877:5;78883:58;;78953:136;79030:5;79036:48;79030:5;79036:48;;79096:142;79176:5;79182:51;79176:5;79182:51;;79245:140;79324:5;79330:50;79324:5;79330:50;;79392:121;-1:-1;;;;;79454:54;;79437:76;79599:96;-1:-1;;;;;79660:30;;79643:52;79702:156;;79804:49;79847:5;79804:49;;79865:136;;79957:39;79990:5;79957:39;;80008:142;;80103:42;80139:5;80103:42;;80157:140;;80251:41;80286:5;80251:41;;80305:145;80386:6;80381:3;80376;80363:30;-1:-1;80442:1;80424:16;;80417:27;80356:94;80459:268;80524:1;80531:101;80545:6;80542:1;80539:13;80531:101;;;80612:11;;;80606:18;80593:11;;;80586:39;80567:2;80560:10;80531:101;;;80647:6;80644:1;80641:13;80638:2;;;-1:-1;;80712:1;80694:16;;80687:27;80508:219;80735:97;80823:2;80803:14;-1:-1;;80799:28;;80783:49;80840:116;80934:1;80927:5;80924:12;80914:2;;80940:9;80963:106;81047:1;81040:5;81037:12;81027:2;;81053:9;81076:109;81163:1;81156:5;81153:12;81143:2;;81169:9;81192:108;81278:1;81271:5;81268:12;81258:2;;81284:9;81307:117;81376:24;81394:5;81376:24;;;81369:5;81366:35;81356:2;;81415:1;81412;81405:12;81431:117;81500:24;81518:5;81500:24;;81555:112;81642:1;81635:5;81632:12;81622:2;;81658:1;81655;81648:12;81798:115;81866:23;81883:5;81866:23;","source":"pragma solidity ^0.5.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\"openzeppelin-solidity/contracts/math/SafeMath.sol\\";\\nimport \\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\";\\nimport \\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\";\\nimport \\"./utils/SolRsaVerify.sol\\";\\n\\nimport { WorkersImpl } from \\"./impl/WorkersImpl.sol\\";\\nimport { PrincipalImpl } from \\"./impl/PrincipalImpl.sol\\";\\nimport { TaskImpl } from \\"./impl/TaskImpl.sol\\";\\nimport { UpgradeImpl } from \\"./impl/UpgradeImpl.sol\\";\\nimport { SecretContractImpl } from \\"./impl/SecretContractImpl.sol\\";\\nimport { EnigmaCommon } from \\"./impl/EnigmaCommon.sol\\";\\nimport { EnigmaState } from \\"./impl/EnigmaState.sol\\";\\nimport { EnigmaEvents } from \\"./impl/EnigmaEvents.sol\\";\\nimport { EnigmaStorage } from \\"./impl/EnigmaStorage.sol\\";\\nimport { Getters } from \\"./impl/Getters.sol\\";\\nimport { ERC20 } from \\"./interfaces/ERC20.sol\\";\\n\\ncontract Enigma is EnigmaStorage, EnigmaEvents, Getters, Ownable {\\n    using SafeMath for uint256;\\n    using ECDSA for bytes32;\\n\\n    // ========================================== Constructor ==========================================\\n\\n    constructor(address _tokenAddress, address _principal, uint _epochSize)\\n    public {\\n        state.engToken = ERC20(_tokenAddress);\\n        state.epochSize = _epochSize;\\n        state.taskTimeoutSize = 200;\\n        state.principal = _principal;\\n        state.updatedEnigmaContractAddress = address(this);\\n        state.stakingThreshold = 1;\\n        state.workerGroupSize = 1;\\n    }\\n\\n    // ========================================== Modifiers ==========================================\\n\\n    /**\\n    * Checks if the custodian wallet is registered as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerRegistered(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status != EnigmaCommon.WorkerStatus.Unregistered, \\"Unregistered worker\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged in as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedIn, \\"Worker not logged in\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged out as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedOut(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not logged out\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if worker can log in\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canLogIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(getFirstBlockNumber(block.number) != 0, \\"Principal node has not been initialized\\");\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        require(worker.balance >= state.stakingThreshold, \\"Worker\'s balance is not sufficient\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the worker can withdraw\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canWithdraw(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        EnigmaCommon.WorkerLog memory workerLog = WorkersImpl.getLatestWorkerLogImpl(worker, block.number);\\n        require(workerLog.workerEventType == EnigmaCommon.WorkerLogType.LogOut,\\n            \\"Worker\'s last log is not of LogOut type\\");\\n        require(getFirstBlockNumber(block.number) > workerLog.blockNumber,\\n            \\"Cannot withdraw in same epoch as log out event\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has not been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractUndefined(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Undefined, \\"Secret contract already deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractDeployed(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Deployed, \\"Secret contract not deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks task record has been created and is still pending receipt\\n    *\\n    * @param _taskId Task ID\\n    */\\n    modifier taskWaiting(bytes32 _taskId) {\\n        require(state.tasks[_taskId].status == EnigmaCommon.TaskStatus.RecordCreated, \\"Task is not waiting\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure signing key used for registration is unique\\n    *\\n    * @param _signer Signing key\\n    */\\n    modifier isUniqueSigningKey(address _signer) {\\n        for (uint i = 0; i < state.workerAddresses.length; i++) {\\n            require(state.workers[state.workerAddresses[i]].signer != _signer, \\"Not a unique signing key\\");\\n        }\\n        _;\\n    }\\n\\n    /**\\n    * Ensure that the contract\'s context is the updated contract\\n    *\\n    */\\n    modifier isUpdatedEnigmaContract() {\\n        require(address(this) == state.updatedEnigmaContractAddress, \\"Not updated Enigma contract\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure the sender of the recent call is the updated contract\\n    *\\n    */\\n    modifier fromUpdatedEnigmaContract() {\\n        require(msg.sender == state.updatedEnigmaContractAddress, \\"Not from updated Enigma contract\\");\\n        _;\\n    }\\n\\n    // ========================================== Functions ==========================================\\n\\n    /**\\n    * Registers a new worker or change the signer parameters of an existing\\n    * worker. This should be called by every worker (and the principal)\\n    * node in order to receive tasks.\\n    *\\n    * @param _signer The signer address, derived from the enclave public key\\n    * @param _report The RLP encoded report returned by the IAS\\n    * @param _signature Signature\\n    */\\n    function register(address _signer, bytes memory _report, bytes memory _signature)\\n    public\\n    isUpdatedEnigmaContract\\n    isUniqueSigningKey(_signer)\\n    {\\n        WorkersImpl.registerImpl(state, _signer, _report, _signature);\\n    }\\n\\n    /**\\n    * Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    *\\n    * @param _custodian The worker\'s ETH address\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function deposit(address _custodian, uint _amount)\\n    public\\n    isUpdatedEnigmaContract\\n    workerRegistered(_custodian)\\n    {\\n        WorkersImpl.depositImpl(state, _custodian, _amount);\\n    }\\n\\n    /**\\n    * Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    *\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function withdraw(uint _amount)\\n    public\\n    canWithdraw(msg.sender)\\n    {\\n        WorkersImpl.withdrawImpl(state, _amount);\\n    }\\n\\n    /**\\n    * Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\n    * selection process.\\n    */\\n    function login() public canLogIn(msg.sender) {\\n        WorkersImpl.loginImpl(state);\\n    }\\n\\n    /**\\n    * Logout worker. Worker must be logged in to do so.\\n    */\\n    function logout() public workerLoggedIn(msg.sender) {\\n        WorkersImpl.logoutImpl(state);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContractFailure(\\n        bytes32 _taskId,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractFailureImpl(state, _taskId, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _preCodeHash Predeployed bytecode hash\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContract(\\n        bytes32 _taskId,\\n        bytes32 _preCodeHash,\\n        bytes32 _codeHash,\\n        bytes32 _initStateDeltaHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractImpl(state, _taskId, _preCodeHash, _codeHash, _initStateDeltaHash,\\n            _optionalEthereumData, _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Check if secret contract has been deployed\\n    *\\n    * @return  Number of deployed secret contracts\\n    */\\n    function countSecretContracts()\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return SecretContractImpl.countSecretContractsImpl(state);\\n    }\\n\\n    /**\\n    * Get deployed secret contract addresses within a range\\n    *\\n    * @param _start Start of range\\n    * @param _stop End of range\\n    * @return Subset of deployed secret contract addresses\\n    */\\n    function getSecretContractAddresses(uint _start, uint _stop)\\n    public\\n    view\\n    returns (bytes32[] memory)\\n    {\\n        return SecretContractImpl.getSecretContractAddressesImpl(state, _start, _stop);\\n    }\\n\\n    /**\\n    * Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\n    * generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\n    * task deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\n    * the on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\n    * invalid.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    * @param _nonce Locally-computed nonce value for this deployment\\n    */\\n    function createDeploymentTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber,\\n        uint _nonce\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createDeploymentTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber, _nonce);\\n    }\\n\\n    /**\\n    * Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\n    * contract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\n    * the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\n    * transferring task fee from sender to contract, generating the unique taskId, saving the block number\\n    * when the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimits ENG gas limit\\n    * @param _gasPxs ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecords(\\n        bytes32[] memory _inputsHashes,\\n        uint64[] memory _gasLimits,\\n        uint64[] memory _gasPxs,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createTaskRecordsImpl(state, _inputsHashes, _gasLimits, _gasPxs, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\n    * The task record is finalized and the worker is credited with the task fee.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _stateDeltaHash Input state delta hash\\n    * @param _outputHash Output state hash\\n    * @param _optionalEthereumData Output state hash\\n    * @param _optionalEthereumContractAddress Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitReceipt(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _stateDeltaHash,\\n        bytes32 _outputHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitReceiptImpl(state, _scAddr, _taskId, _stateDeltaHash, _outputHash, _optionalEthereumData,\\n            _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\n    * updated to indicate task failure.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitTaskFailure(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitTaskFailureImpl(state, _scAddr, _taskId, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    *\\n    * @param _taskId Unique taskId\\n    */\\n    function returnFeesForTask(bytes32 _taskId)\\n    public\\n    taskWaiting(_taskId)\\n    {\\n        TaskImpl.returnFeesForTaskImpl(state, _taskId);\\n    }\\n\\n    /**\\n    * Reparameterizing workers with a new seed\\n    * This should be called for each epoch by the Principal node\\n    *\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n    * @param _seed The random integer generated by the enclave\\n    * @param _sig Principal node\'s signature\\n    */\\n    function setWorkersParams(uint _blockNumber, uint _seed, bytes memory _sig)\\n    public\\n    isUpdatedEnigmaContract\\n    workerRegistered(msg.sender)\\n    {\\n        PrincipalImpl.setWorkersParamsImpl(state, _blockNumber, _seed, _sig);\\n    }\\n\\n    /**\\n    * Get active workers before a certain block number\\n    *\\n    * @param _blockNumber Block number\\n    */\\n    function getActiveWorkers(uint _blockNumber)\\n    public\\n    view\\n    returns (address[] memory, uint[] memory)\\n    {\\n        return PrincipalImpl.getActiveWorkersImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get the first block number of an epoch that a given block number belongs to\\n    *\\n    * @param _blockNumber Block number\\n    * @return Block number\\n    */\\n    function getFirstBlockNumber(uint _blockNumber)\\n    public\\n    view\\n    returns (uint) {\\n        return WorkersImpl.getFirstBlockNumberImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get worker params for an epoch given a particular block number\\n    *\\n    * @param _blockNumber Block number\\n    * @return Epoch\'s first block number\\n    * @return Seed\\n    * @return Array of worker\'s signing addresses\\n    * @return Array of worker\'s stakes\\n    */\\n    function getWorkerParams(uint _blockNumber)\\n    public\\n    view\\n    returns (uint, uint, address[] memory, uint[] memory) {\\n        return WorkersImpl.getWorkerParamsImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\n    * and the secret contract address.\\n    *\\n    * @param _blockNumber Block number the task record was mined\\n    * @param _scAddr Secret contract address\\n    * @return Selected workers\' addresses\\n    */\\n    function getWorkerGroup(uint _blockNumber, bytes32 _scAddr)\\n    public\\n    view\\n    returns (address[] memory)\\n    {\\n        return WorkersImpl.getWorkerGroupImpl(state, _blockNumber, _scAddr);\\n    }\\n\\n    /**\\n    * The RLP encoded report returned by the IAS server\\n    *\\n    * @param _custodian The worker\'s custodian address\\n    */\\n    function getReport(address _custodian)\\n    public\\n    view\\n    workerRegistered(_custodian)\\n    returns (address, bytes memory)\\n    {\\n        return WorkersImpl.getReportImpl(state, _custodian);\\n    }\\n\\n    /**\\n    * This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n    * @param _data The report itself\\n    * @param _signature The signature of the report\\n    */\\n    function verifyReport(bytes memory _data, bytes memory _signature)\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return WorkersImpl.verifyReportImpl(_data, _signature);\\n    }\\n\\n    /**\\n    * Upgrade Enigma Contract\\n    * @param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address\\n    */\\n    function upgradeEnigmaContract(address _updatedEnigmaContractAddress)\\n    public\\n    onlyOwner\\n    isUpdatedEnigmaContract\\n    {\\n        return UpgradeImpl.upgradeEnigmaContractImpl(state, _updatedEnigmaContractAddress);\\n    }\\n\\n    /**\\n    * Upgrade Enigma Contract\\n    * @param _workerAddress Newly-registered worker address\\n    * @param _signer Newly-registered worker address\\n    * @param _sig Signature\\n    */\\n    function transferWorkerStakePostUpgrade(address _workerAddress, address _signer, bytes memory _sig)\\n    public\\n    fromUpdatedEnigmaContract\\n    returns (uint256)\\n    {\\n        return UpgradeImpl.transferWorkerStakePostUpgradeImpl(state, _workerAddress, _signer, _sig);\\n    }\\n}\\n","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[921]},"id":922,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":922,"sourceUnit":17646,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":922,"sourceUnit":17518,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"openzeppelin-solidity/contracts/ownership/Ownable.sol","id":5,"nodeType":"ImportDirective","scope":922,"sourceUnit":17755,"src":"184:63:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":6,"nodeType":"ImportDirective","scope":922,"sourceUnit":17437,"src":"248:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":8,"nodeType":"ImportDirective","scope":922,"sourceUnit":9782,"src":"284:53:0","symbolAliases":[{"foreign":7,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":10,"nodeType":"ImportDirective","scope":922,"sourceUnit":3310,"src":"338:57:0","symbolAliases":[{"foreign":9,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":12,"nodeType":"ImportDirective","scope":922,"sourceUnit":6264,"src":"396:47:0","symbolAliases":[{"foreign":11,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol","file":"./impl/UpgradeImpl.sol","id":14,"nodeType":"ImportDirective","scope":922,"sourceUnit":8762,"src":"444:53:0","symbolAliases":[{"foreign":13,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":16,"nodeType":"ImportDirective","scope":922,"sourceUnit":3948,"src":"498:67:0","symbolAliases":[{"foreign":15,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":18,"nodeType":"ImportDirective","scope":922,"sourceUnit":2410,"src":"566:55:0","symbolAliases":[{"foreign":17,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":20,"nodeType":"ImportDirective","scope":922,"sourceUnit":2603,"src":"622:53:0","symbolAliases":[{"foreign":19,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":22,"nodeType":"ImportDirective","scope":922,"sourceUnit":2549,"src":"676:55:0","symbolAliases":[{"foreign":21,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":24,"nodeType":"ImportDirective","scope":922,"sourceUnit":2611,"src":"732:57:0","symbolAliases":[{"foreign":23,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":26,"nodeType":"ImportDirective","scope":922,"sourceUnit":2785,"src":"790:45:0","symbolAliases":[{"foreign":25,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":28,"nodeType":"ImportDirective","scope":922,"sourceUnit":10767,"src":"836:47:0","symbolAliases":[{"foreign":27,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":29,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2610,"src":"904:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2610","typeString":"contract EnigmaStorage"}},"id":30,"nodeType":"InheritanceSpecifier","src":"904:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":31,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2548,"src":"919:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2548","typeString":"contract EnigmaEvents"}},"id":32,"nodeType":"InheritanceSpecifier","src":"919:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":33,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2784,"src":"933:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2784","typeString":"contract Getters"}},"id":34,"nodeType":"InheritanceSpecifier","src":"933:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":35,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":17754,"src":"942:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$17754","typeString":"contract Ownable"}},"id":36,"nodeType":"InheritanceSpecifier","src":"942:7:0"}],"contractDependencies":[2548,2610,2784,17754],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":921,"linearizedBaseContracts":[921,17754,2784,2548,2610],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":39,"libraryName":{"contractScope":null,"id":37,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":17645,"src":"962:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$17645","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"956:27:0","typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":42,"libraryName":{"contractScope":null,"id":40,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":17517,"src":"994:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$17517","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"988:24:0","typeName":{"id":41,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1004:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":97,"nodeType":"Block","src":"1207:298:0","statements":[{"expression":{"argumentTypes":null,"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":51,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1217:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":53,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2557,"src":"1217:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10766","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":55,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1240:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":54,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10766,"src":"1234:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10766_$","typeString":"type(contract ERC20)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1234:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10766","typeString":"contract ERC20"}},"src":"1217:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10766","typeString":"contract ERC20"}},"id":58,"nodeType":"ExpressionStatement","src":"1217:37:0"},{"expression":{"argumentTypes":null,"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":59,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1264:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":61,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2559,"src":"1264:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":62,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1282:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1264:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":64,"nodeType":"ExpressionStatement","src":"1264:28:0"},{"expression":{"argumentTypes":null,"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":65,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1302:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":67,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2561,"src":"1302:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"323030","id":68,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1326:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"1302:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":70,"nodeType":"ExpressionStatement","src":"1302:27:0"},{"expression":{"argumentTypes":null,"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":71,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1339:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":73,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2563,"src":"1339:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":74,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1357:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1339:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":76,"nodeType":"ExpressionStatement","src":"1339:28:0"},{"expression":{"argumentTypes":null,"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":77,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1377:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":79,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2565,"src":"1377:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":81,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18378,"src":"1422:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$921","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$921","typeString":"contract Enigma"}],"id":80,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1377:50:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":84,"nodeType":"ExpressionStatement","src":"1377:50:0"},{"expression":{"argumentTypes":null,"id":89,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":85,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1437:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":87,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2598,"src":"1437:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":88,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1462:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1437:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":90,"nodeType":"ExpressionStatement","src":"1437:26:0"},{"expression":{"argumentTypes":null,"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":91,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1473:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":93,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2600,"src":"1473:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1497:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1473:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":96,"nodeType":"ExpressionStatement","src":"1473:25:0"}]},"documentation":null,"id":98,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":98,"src":"1136:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":46,"name":"_principal","nodeType":"VariableDeclaration","scope":98,"src":"1159:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":48,"name":"_epochSize","nodeType":"VariableDeclaration","scope":98,"src":"1179:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint","nodeType":"ElementaryTypeName","src":"1179:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1135:60:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[],"src":"1207:0:0"},"scope":921,"src":"1124:381:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":122,"nodeType":"Block","src":"1795:181:0","statements":[{"assignments":[105],"declarations":[{"constant":false,"id":105,"name":"worker","nodeType":"VariableDeclaration","scope":122,"src":"1805:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":104,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2316,"src":"1805:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":110,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":106,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1841:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"1841:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2316_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":109,"indexExpression":{"argumentTypes":null,"id":108,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1841:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1805:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":112,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"1879:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"1879:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":114,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"1896:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"1896:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2357_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1896:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1879:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1936:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":111,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"1871:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1871:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":120,"nodeType":"ExpressionStatement","src":"1871:87:0"},{"id":121,"nodeType":"PlaceholderStatement","src":"1968:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":123,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"name":"_user","nodeType":"VariableDeclaration","scope":123,"src":"1780:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"1780:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1779:15:0"},"src":"1754:222:0","visibility":"internal"},{"body":{"id":147,"nodeType":"Block","src":"2159:178:0","statements":[{"assignments":[130],"declarations":[{"constant":false,"id":130,"name":"worker","nodeType":"VariableDeclaration","scope":147,"src":"2169:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":129,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2316,"src":"2169:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":135,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":131,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"2205:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"2205:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2316_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":134,"indexExpression":{"argumentTypes":null,"id":133,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2219:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2205:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2169:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":137,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2243:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"2243:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":139,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"2260:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"2260:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2357_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2260:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2243:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2296:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":136,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"2235:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2235:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":145,"nodeType":"ExpressionStatement","src":"2235:84:0"},{"id":146,"nodeType":"PlaceholderStatement","src":"2329:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":148,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"name":"_user","nodeType":"VariableDeclaration","scope":148,"src":"2144:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"2144:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2143:15:0"},"src":"2120:217:0","visibility":"internal"},{"body":{"id":172,"nodeType":"Block","src":"2522:180:0","statements":[{"assignments":[155],"declarations":[{"constant":false,"id":155,"name":"worker","nodeType":"VariableDeclaration","scope":172,"src":"2532:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":154,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2316,"src":"2532:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":160,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":156,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"2568:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"2568:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2316_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":159,"indexExpression":{"argumentTypes":null,"id":158,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"2582:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2568:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2532:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":162,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2606:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"2606:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":164,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"2623:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"2623:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2357_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2623:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2606:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2660:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"2598:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2598:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":170,"nodeType":"ExpressionStatement","src":"2598:86:0"},{"id":171,"nodeType":"PlaceholderStatement","src":"2694:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":173,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"name":"_user","nodeType":"VariableDeclaration","scope":173,"src":"2507:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"2507:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2506:15:0"},"src":"2482:220:0","visibility":"internal"},{"body":{"id":216,"nodeType":"Block","src":"2851:395:0","statements":[{"assignments":[180],"declarations":[{"constant":false,"id":180,"name":"worker","nodeType":"VariableDeclaration","scope":216,"src":"2861:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":179,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2316,"src":"2861:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":185,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":181,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"2897:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"2897:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2316_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":184,"indexExpression":{"argumentTypes":null,"id":183,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"2911:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2897:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2861:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":188,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18318,"src":"2955:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2955:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":187,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"2935:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2935:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2972:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2935:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2975:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"2927:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2927:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"2927:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":197,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3035:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"3035:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":199,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"3052:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"3052:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2357_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3052:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3035:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3089:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":196,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"3027:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3027:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":205,"nodeType":"ExpressionStatement","src":"3027:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":207,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3149:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"3149:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":209,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"3167:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2598,"src":"3167:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3149:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3191:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"3141:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3141:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":214,"nodeType":"ExpressionStatement","src":"3141:87:0"},{"id":215,"nodeType":"PlaceholderStatement","src":"3238:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":217,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"name":"_user","nodeType":"VariableDeclaration","scope":217,"src":"2836:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"2836:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2835:15:0"},"src":"2818:428:0","visibility":"internal"},{"body":{"id":273,"nodeType":"Block","src":"3404:580:0","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"name":"worker","nodeType":"VariableDeclaration","scope":273,"src":"3414:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":223,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2316,"src":"3414:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":229,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":225,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"3450:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"3450:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2316_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":228,"indexExpression":{"argumentTypes":null,"id":227,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3464:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3450:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3414:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":231,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"3488:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"3488:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":233,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"3505:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"3505:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2357_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3505:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3488:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3542:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":230,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3480:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":239,"nodeType":"ExpressionStatement","src":"3480:104:0"},{"assignments":[243],"declarations":[{"constant":false,"id":243,"name":"workerLog","nodeType":"VariableDeclaration","scope":273,"src":"3594:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2334_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":242,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2334,"src":"3594:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2334_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":250,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":246,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"3671:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":247,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18318,"src":"3679:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3679:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":244,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"3636:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9780,"src":"3636:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2316_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2334_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3636:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2334_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3594:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2365","typeString":"enum EnigmaCommon.WorkerLogType"},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":252,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"3710:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2334_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2329,"src":"3710:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2365","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":254,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"3739:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2365,"src":"3739:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2365_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3739:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2365","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3710:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3786:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":251,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"3702:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3702:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":260,"nodeType":"ExpressionStatement","src":"3702:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":263,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18318,"src":"3866:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3866:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":262,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"3846:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":266,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"3882:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2334_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"3882:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3846:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3917:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"3838:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3838:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"ExpressionStatement","src":"3838:128:0"},{"id":272,"nodeType":"PlaceholderStatement","src":"3976:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":274,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"name":"_user","nodeType":"VariableDeclaration","scope":274,"src":"3389:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"3389:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3388:15:0"},"src":"3368:616:0","visibility":"internal"},{"body":{"id":292,"nodeType":"Block","src":"4151:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2360","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":279,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4169:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2592,"src":"4169:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2346_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":282,"indexExpression":{"argumentTypes":null,"id":281,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"4185:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4169:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2346_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2345,"src":"4169:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2360","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":284,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"4204:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2360,"src":"4204:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2360_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4204:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2360","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4169:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4249:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"4161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4161:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":290,"nodeType":"ExpressionStatement","src":"4161:123:0"},{"id":291,"nodeType":"PlaceholderStatement","src":"4294:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":293,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"name":"_scAddr","nodeType":"VariableDeclaration","scope":293,"src":"4134:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4134:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4133:17:0"},"src":"4107:195:0","visibility":"internal"},{"body":{"id":311,"nodeType":"Block","src":"4464:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2360","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":298,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4482:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2592,"src":"4482:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2346_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":301,"indexExpression":{"argumentTypes":null,"id":300,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4498:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4482:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2346_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2345,"src":"4482:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2360","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":303,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"4517:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2360,"src":"4517:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2360_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4517:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2360","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4482:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4561:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"4474:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4474:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":309,"nodeType":"ExpressionStatement","src":"4474:118:0"},{"id":310,"nodeType":"PlaceholderStatement","src":"4602:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":312,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"name":"_scAddr","nodeType":"VariableDeclaration","scope":312,"src":"4447:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4447:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4446:17:0"},"src":"4421:189:0","visibility":"internal"},{"body":{"id":330,"nodeType":"Block","src":"4775:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2353","typeString":"enum EnigmaCommon.TaskStatus"},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":317,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4793:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2585,"src":"4793:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2304_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":320,"indexExpression":{"argumentTypes":null,"id":319,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"4805:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4793:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2304_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2301,"src":"4793:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2353","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":322,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"4824:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"4824:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2353_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4824:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2353","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4793:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4863:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"4785:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4785:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"4785:100:0"},{"id":329,"nodeType":"PlaceholderStatement","src":"4895:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":331,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"name":"_taskId","nodeType":"VariableDeclaration","scope":331,"src":"4758:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4758:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4757:17:0"},"src":"4737:166:0","visibility":"internal"},{"body":{"id":364,"nodeType":"Block","src":"5065:202:0","statements":[{"body":{"id":361,"nodeType":"Block","src":"5131:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":348,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5153:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"5153:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2316_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":354,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":350,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5167:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"5167:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":353,"indexExpression":{"argumentTypes":null,"id":352,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"5189:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5167:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5153:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2306,"src":"5153:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":356,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"5203:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5153:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5212:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"5145:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":360,"nodeType":"ExpressionStatement","src":"5145:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"5092:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":340,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5096:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"5096:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5096:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5092:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":362,"initializationExpression":{"assignments":[336],"declarations":[{"constant":false,"id":336,"name":"i","nodeType":"VariableDeclaration","scope":362,"src":"5080:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint","nodeType":"ElementaryTypeName","src":"5080:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":338,"initialValue":{"argumentTypes":null,"hexValue":"30","id":337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5080:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5126:3:0","subExpression":{"argumentTypes":null,"id":344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"5126:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":346,"nodeType":"ExpressionStatement","src":"5126:3:0"},"nodeType":"ForStatement","src":"5075:175:0"},{"id":363,"nodeType":"PlaceholderStatement","src":"5259:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":365,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"name":"_signer","nodeType":"VariableDeclaration","scope":365,"src":"5048:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"5048:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5047:17:0"},"src":"5020:247:0","visibility":"internal"},{"body":{"id":378,"nodeType":"Block","src":"5394:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":369,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18378,"src":"5420:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$921","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$921","typeString":"contract Enigma"}],"id":368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5412:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5412:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":371,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5429:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2565,"src":"5429:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5412:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74207570646174656420456e69676d6120636f6e7472616374","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5465:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""},"value":"Not updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""}],"id":367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"5404:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5404:91:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":376,"nodeType":"ExpressionStatement","src":"5404:91:0"},{"id":377,"nodeType":"PlaceholderStatement","src":"5505:1:0"}]},"documentation":"Ensure that the contract\'s context is the updated contract\\n    ","id":379,"name":"isUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"5391:2:0"},"src":"5359:154:0","visibility":"internal"},{"body":{"id":391,"nodeType":"Block","src":"5644:121:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":382,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"5662:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5662:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":384,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5676:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2565,"src":"5676:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5662:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5712:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""},"value":"Not from updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""}],"id":381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"5654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5654:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":389,"nodeType":"ExpressionStatement","src":"5654:93:0"},{"id":390,"nodeType":"PlaceholderStatement","src":"5757:1:0"}]},"documentation":"Ensure the sender of the recent call is the updated contract\\n    ","id":392,"name":"fromUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"5641:2:0"},"src":"5607:158:0","visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"6414:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":409,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":410,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"6456:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":411,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"6465:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":412,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"6474:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":406,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"6424:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":9048,"src":"6424:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6424:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"ExpressionStatement","src":"6424:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":416,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":401,"modifierName":{"argumentTypes":null,"id":400,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6354:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6354:23:0"},{"arguments":[{"argumentTypes":null,"id":403,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"6401:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":404,"modifierName":{"argumentTypes":null,"id":402,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"6382:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6382:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"name":"_signer","nodeType":"VariableDeclaration","scope":416,"src":"6275:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"6275:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":396,"name":"_report","nodeType":"VariableDeclaration","scope":416,"src":"6292:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":395,"name":"bytes","nodeType":"ElementaryTypeName","src":"6292:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":398,"name":"_signature","nodeType":"VariableDeclaration","scope":416,"src":"6314:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":397,"name":"bytes","nodeType":"ElementaryTypeName","src":"6314:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6274:64:0"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"6414:0:0"},"scope":921,"src":"6257:235:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":436,"nodeType":"Block","src":"6862:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":431,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"6896:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":432,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"6903:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":433,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6915:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":428,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"6872:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":9254,"src":"6872:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6872:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"6872:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":437,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":423,"modifierName":{"argumentTypes":null,"id":422,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6801:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6801:23:0"},{"arguments":[{"argumentTypes":null,"id":425,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"6846:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":426,"modifierName":{"argumentTypes":null,"id":424,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"6829:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6829:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"name":"_custodian","nodeType":"VariableDeclaration","scope":437,"src":"6752:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"6752:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":420,"name":"_amount","nodeType":"VariableDeclaration","scope":437,"src":"6772:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint","nodeType":"ElementaryTypeName","src":"6772:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6751:34:0"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"6862:0:0"},"scope":921,"src":"6735:195:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":453,"nodeType":"Block","src":"7203:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":449,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7238:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":450,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"7245:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":446,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"7213:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":9307,"src":"7213:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7213:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":452,"nodeType":"ExpressionStatement","src":"7213:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":454,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"7187:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7187:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":444,"modifierName":{"argumentTypes":null,"id":441,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7175:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7175:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"name":"_amount","nodeType":"VariableDeclaration","scope":454,"src":"7146:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint","nodeType":"ElementaryTypeName","src":"7146:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7145:14:0"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"7203:0:0"},"scope":921,"src":"7128:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":467,"nodeType":"Block","src":"7468:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":464,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7500:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":461,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"7478:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":9152,"src":"7478:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7478:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"ExpressionStatement","src":"7478:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":468,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":457,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"7456:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7456:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":459,"modifierName":{"argumentTypes":null,"id":456,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"7447:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7447:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"7437:2:0"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"7468:0:0"},"scope":921,"src":"7423:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":481,"nodeType":"Block","src":"7642:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":478,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7675:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":475,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"7652:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":9193,"src":"7652:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7652:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":480,"nodeType":"ExpressionStatement","src":"7652:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":482,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":471,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"7630:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7630:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":473,"modifierName":{"argumentTypes":null,"id":470,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"7615:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7615:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"7605:2:0"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"7642:0:0"},"scope":921,"src":"7590:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":509,"nodeType":"Block","src":"8175:89:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":503,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"8226:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":504,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"8233:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":505,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"8242:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":506,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"8252:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":500,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"8185:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"8185:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,bytes memory)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8185:72:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":508,"nodeType":"ExpressionStatement","src":"8185:72:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":510,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":491,"modifierName":{"argumentTypes":null,"id":490,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"8085:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8085:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":493,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"8128:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8128:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":495,"modifierName":{"argumentTypes":null,"id":492,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"8113:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8113:26:0"},{"arguments":[{"argumentTypes":null,"id":497,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"8162:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":498,"modifierName":{"argumentTypes":null,"id":496,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"8144:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8144:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"name":"_taskId","nodeType":"VariableDeclaration","scope":510,"src":"7996:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7996:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":486,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":510,"src":"8021:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":485,"name":"uint64","nodeType":"ElementaryTypeName","src":"8021:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":488,"name":"_sig","nodeType":"VariableDeclaration","scope":510,"src":"8046:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":487,"name":"bytes","nodeType":"ElementaryTypeName","src":"8046:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"7986:83:0"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"8175:0:0"},"scope":921,"src":"7950:314:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":552,"nodeType":"Block","src":"9345:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":541,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"9389:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":542,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"9396:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":543,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"9405:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":544,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"9419:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":545,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"9430:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":546,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9463:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":547,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"9486:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":548,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"9520:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":549,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"9530:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":538,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"9355:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4802,"src":"9355:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9355:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":551,"nodeType":"ExpressionStatement","src":"9355:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":553,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":529,"modifierName":{"argumentTypes":null,"id":528,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"9255:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9255:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":531,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"9298:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9298:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":533,"modifierName":{"argumentTypes":null,"id":530,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"9283:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"9283:26:0"},{"arguments":[{"argumentTypes":null,"id":535,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"9332:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":536,"modifierName":{"argumentTypes":null,"id":534,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"9314:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"9314:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"name":"_taskId","nodeType":"VariableDeclaration","scope":553,"src":"8978:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8978:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":514,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":553,"src":"9003:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9003:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":516,"name":"_codeHash","nodeType":"VariableDeclaration","scope":553,"src":"9033:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9033:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":518,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":553,"src":"9060:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":520,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":553,"src":"9097:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":519,"name":"bytes","nodeType":"ElementaryTypeName","src":"9097:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":522,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":553,"src":"9141:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"9141:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":524,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":553,"src":"9191:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":523,"name":"uint64","nodeType":"ElementaryTypeName","src":"9191:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":526,"name":"_sig","nodeType":"VariableDeclaration","scope":553,"src":"9216:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":525,"name":"bytes","nodeType":"ElementaryTypeName","src":"9216:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8968:271:0"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"9345:0:0"},"scope":921,"src":"8939:603:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":563,"nodeType":"Block","src":"9744:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":560,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"9805:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":558,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"9761:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3947_$","typeString":"type(library SecretContractImpl)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3879,"src":"9761:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2601_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9761:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":557,"id":562,"nodeType":"Return","src":"9754:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":564,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[],"src":"9698:2:0"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"name":"","nodeType":"VariableDeclaration","scope":564,"src":"9734:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint","nodeType":"ElementaryTypeName","src":"9734:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9733:6:0"},"scope":921,"src":"9669:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":581,"nodeType":"Block","src":"10147:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":576,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"10214:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":577,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"10221:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":578,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"10229:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":574,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"10164:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3947_$","typeString":"type(library SecretContractImpl)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"10164:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2601_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10164:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":573,"id":580,"nodeType":"Return","src":"10157:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":582,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"name":"_start","nodeType":"VariableDeclaration","scope":582,"src":"10067:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint","nodeType":"ElementaryTypeName","src":"10067:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":568,"name":"_stop","nodeType":"VariableDeclaration","scope":582,"src":"10080:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint","nodeType":"ElementaryTypeName","src":"10080:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10066:25:0"},"returnParameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"name":"","nodeType":"VariableDeclaration","scope":582,"src":"10125:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10125:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":571,"length":null,"nodeType":"ArrayTypeName","src":"10125:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"10124:18:0"},"scope":921,"src":"10031:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":608,"nodeType":"Block","src":"11311:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":600,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"11361:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":601,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"11368:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":602,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"11381:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":603,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"11392:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":604,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"11400:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":605,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"11419:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":597,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"11321:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"11321:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11321:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"11321:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":609,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":595,"modifierName":{"argumentTypes":null,"id":594,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"11283:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11283:23:0"}],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":609,"src":"11140:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":586,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":609,"src":"11169:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":585,"name":"uint64","nodeType":"ElementaryTypeName","src":"11169:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":588,"name":"_gasPx","nodeType":"VariableDeclaration","scope":609,"src":"11195:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":587,"name":"uint64","nodeType":"ElementaryTypeName","src":"11195:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":590,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":609,"src":"11218:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":589,"name":"uint","nodeType":"ElementaryTypeName","src":"11218:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":592,"name":"_nonce","nodeType":"VariableDeclaration","scope":609,"src":"11250:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint","nodeType":"ElementaryTypeName","src":"11250:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11130:137:0"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"11311:0:0"},"scope":921,"src":"11095:338:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":632,"nodeType":"Block","src":"12193:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":625,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"12233:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":626,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"12240:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":627,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"12253:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":628,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"12264:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":629,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"12272:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":622,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"12203:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":5045,"src":"12203:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12203:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"ExpressionStatement","src":"12203:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":633,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":620,"modifierName":{"argumentTypes":null,"id":619,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"12165:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12165:23:0"}],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":633,"src":"12043:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12043:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":613,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":633,"src":"12072:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":612,"name":"uint64","nodeType":"ElementaryTypeName","src":"12072:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":615,"name":"_gasPx","nodeType":"VariableDeclaration","scope":633,"src":"12098:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":614,"name":"uint64","nodeType":"ElementaryTypeName","src":"12098:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":617,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":633,"src":"12121:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint","nodeType":"ElementaryTypeName","src":"12121:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12033:116:0"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[],"src":"12193:0:0"},"scope":921,"src":"12008:289:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":659,"nodeType":"Block","src":"13125:109:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":652,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"13166:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":653,"name":"_inputsHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"13173:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"argumentTypes":null,"id":654,"name":"_gasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"13188:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"}},{"argumentTypes":null,"id":655,"name":"_gasPxs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"13200:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"}},{"argumentTypes":null,"id":656,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"13209:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"},{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":649,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"13135:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordsImpl","nodeType":"MemberAccess","referencedDeclaration":5903,"src":"13135:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint64_$dyn_memory_ptr_$_t_array$_t_uint64_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32[] memory,uint64[] memory,uint64[] memory,uint256)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13135:92:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":658,"nodeType":"ExpressionStatement","src":"13135:92:0"}]},"documentation":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\ntransferring task fee from sender to contract, generating the unique taskId, saving the block number\\nwhen the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimits ENG gas limit\\n@param _gasPxs ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":660,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":647,"modifierName":{"argumentTypes":null,"id":646,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"13097:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13097:23:0"}],"name":"createTaskRecords","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"name":"_inputsHashes","nodeType":"VariableDeclaration","scope":660,"src":"12944:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12944:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":635,"length":null,"nodeType":"ArrayTypeName","src":"12944:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":639,"name":"_gasLimits","nodeType":"VariableDeclaration","scope":660,"src":"12984:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":637,"name":"uint64","nodeType":"ElementaryTypeName","src":"12984:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":638,"length":null,"nodeType":"ArrayTypeName","src":"12984:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":642,"name":"_gasPxs","nodeType":"VariableDeclaration","scope":660,"src":"13020:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":640,"name":"uint64","nodeType":"ElementaryTypeName","src":"13020:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":641,"length":null,"nodeType":"ArrayTypeName","src":"13020:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":644,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":660,"src":"13053:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint","nodeType":"ElementaryTypeName","src":"13053:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12934:147:0"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[],"src":"13125:0:0"},"scope":921,"src":"12908:326:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":702,"nodeType":"Block","src":"14229:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":691,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"14266:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":692,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"14273:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":693,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"14282:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":694,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"14291:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":695,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"14308:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":696,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"14321:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":697,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"14356:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":698,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"14390:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":699,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"14400:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":688,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"14239:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5705,"src":"14239:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14239:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"14239:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":703,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":679,"modifierName":{"argumentTypes":null,"id":678,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"14140:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14140:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":681,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"14183:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14183:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":683,"modifierName":{"argumentTypes":null,"id":680,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"14168:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14168:26:0"},{"arguments":[{"argumentTypes":null,"id":685,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"14216:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":686,"modifierName":{"argumentTypes":null,"id":684,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"14199:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14199:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"name":"_scAddr","nodeType":"VariableDeclaration","scope":703,"src":"13870:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":664,"name":"_taskId","nodeType":"VariableDeclaration","scope":703,"src":"13895:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13895:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":666,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":703,"src":"13920:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13920:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":668,"name":"_outputHash","nodeType":"VariableDeclaration","scope":703,"src":"13953:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13953:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":670,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":703,"src":"13982:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":669,"name":"bytes","nodeType":"ElementaryTypeName","src":"13982:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":672,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":703,"src":"14026:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"14026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":674,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":703,"src":"14076:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":673,"name":"uint64","nodeType":"ElementaryTypeName","src":"14076:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":676,"name":"_sig","nodeType":"VariableDeclaration","scope":703,"src":"14101:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":675,"name":"bytes","nodeType":"ElementaryTypeName","src":"14101:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13860:264:0"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"14229:0:0"},"scope":921,"src":"13838:574:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":733,"nodeType":"Block","src":"14999:88:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":726,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"15040:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":727,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"15047:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":728,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"15056:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":729,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"15065:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":730,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"15075:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":723,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"15009:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5231,"src":"15009:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15009:71:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":732,"nodeType":"ExpressionStatement","src":"15009:71:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":734,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":714,"modifierName":{"argumentTypes":null,"id":713,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"14910:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14910:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":716,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"14953:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14953:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":718,"modifierName":{"argumentTypes":null,"id":715,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"14938:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14938:26:0"},{"arguments":[{"argumentTypes":null,"id":720,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"14986:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":721,"modifierName":{"argumentTypes":null,"id":719,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"14969:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14969:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"name":"_scAddr","nodeType":"VariableDeclaration","scope":734,"src":"14796:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14796:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":707,"name":"_taskId","nodeType":"VariableDeclaration","scope":734,"src":"14821:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14821:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":709,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":734,"src":"14846:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":708,"name":"uint64","nodeType":"ElementaryTypeName","src":"14846:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":711,"name":"_sig","nodeType":"VariableDeclaration","scope":734,"src":"14871:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":710,"name":"bytes","nodeType":"ElementaryTypeName","src":"14871:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14786:108:0"},"returnParameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"14999:0:0"},"scope":921,"src":"14760:327:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":749,"nodeType":"Block","src":"15338:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":745,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"15379:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":746,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"15386:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":742,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"15348:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6262,"src":"15348:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15348:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":748,"nodeType":"ExpressionStatement","src":"15348:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":750,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":739,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"15325:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":740,"modifierName":{"argumentTypes":null,"id":738,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"15313:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"15313:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"name":"_taskId","nodeType":"VariableDeclaration","scope":750,"src":"15281:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15281:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"15280:17:0"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[],"src":"15338:0:0"},"scope":921,"src":"15254:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":774,"nodeType":"Block","src":"15889:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":768,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"15934:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":769,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"15941:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":770,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"15955:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":771,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"15962:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":765,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"15899:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3309_$","typeString":"type(library PrincipalImpl)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"15899:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15899:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"15899:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":775,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":759,"modifierName":{"argumentTypes":null,"id":758,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"15828:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15828:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"15873:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15873:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":763,"modifierName":{"argumentTypes":null,"id":760,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"15856:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"15856:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":775,"src":"15763:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint","nodeType":"ElementaryTypeName","src":"15763:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":754,"name":"_seed","nodeType":"VariableDeclaration","scope":775,"src":"15782:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint","nodeType":"ElementaryTypeName","src":"15782:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":756,"name":"_sig","nodeType":"VariableDeclaration","scope":775,"src":"15794:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":755,"name":"bytes","nodeType":"ElementaryTypeName","src":"15794:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"15762:50:0"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"15889:0:0"},"scope":921,"src":"15737:237:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":792,"nodeType":"Block","src":"16210:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":788,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"16262:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":789,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"16269:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":786,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"16227:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3309_$","typeString":"type(library PrincipalImpl)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3308,"src":"16227:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2601_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16227:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":785,"id":791,"nodeType":"Return","src":"16220:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":793,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":793,"src":"16121:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint","nodeType":"ElementaryTypeName","src":"16121:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16120:19:0"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"name":"","nodeType":"VariableDeclaration","scope":793,"src":"16173:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"16173:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":780,"length":null,"nodeType":"ArrayTypeName","src":"16173:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":784,"name":"","nodeType":"VariableDeclaration","scope":793,"src":"16191:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":782,"name":"uint","nodeType":"ElementaryTypeName","src":"16191:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":783,"length":null,"nodeType":"ArrayTypeName","src":"16191:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16172:33:0"},"scope":921,"src":"16095:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":806,"nodeType":"Block","src":"16551:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":802,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"16604:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":803,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"16611:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":800,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"16568:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":9427,"src":"16568:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2601_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16568:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":799,"id":805,"nodeType":"Return","src":"16561:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":807,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":807,"src":"16493:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint","nodeType":"ElementaryTypeName","src":"16493:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16492:19:0"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"name":"","nodeType":"VariableDeclaration","scope":807,"src":"16545:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint","nodeType":"ElementaryTypeName","src":"16545:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16544:6:0"},"scope":921,"src":"16464:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":828,"nodeType":"Block","src":"17037:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":824,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"17086:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":825,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"17093:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":822,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"17054:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":9464,"src":"17054:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2601_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17054:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":821,"id":827,"nodeType":"Return","src":"17047:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":829,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":829,"src":"16940:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint","nodeType":"ElementaryTypeName","src":"16940:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16939:19:0"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"name":"","nodeType":"VariableDeclaration","scope":829,"src":"16992:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint","nodeType":"ElementaryTypeName","src":"16992:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":814,"name":"","nodeType":"VariableDeclaration","scope":829,"src":"16998:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint","nodeType":"ElementaryTypeName","src":"16998:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":817,"name":"","nodeType":"VariableDeclaration","scope":829,"src":"17004:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"17004:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":816,"length":null,"nodeType":"ArrayTypeName","src":"17004:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":820,"name":"","nodeType":"VariableDeclaration","scope":829,"src":"17022:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":818,"name":"uint","nodeType":"ElementaryTypeName","src":"17022:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":819,"length":null,"nodeType":"ArrayTypeName","src":"17022:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16991:45:0"},"scope":921,"src":"16915:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":846,"nodeType":"Block","src":"17565:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":841,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"17613:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":842,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"17620:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":843,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"17634:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":839,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"17582:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9728,"src":"17582:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2601_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17582:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":838,"id":845,"nodeType":"Return","src":"17575:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":847,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":847,"src":"17474:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint","nodeType":"ElementaryTypeName","src":"17474:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":833,"name":"_scAddr","nodeType":"VariableDeclaration","scope":847,"src":"17493:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17493:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"17473:36:0"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"name":"","nodeType":"VariableDeclaration","scope":847,"src":"17543:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"17543:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":836,"length":null,"nodeType":"ArrayTypeName","src":"17543:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"17542:18:0"},"scope":921,"src":"17450:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":865,"nodeType":"Block","src":"17919:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":861,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"17962:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":862,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"17969:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":859,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"17936:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":9085,"src":"17936:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2601_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17936:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":858,"id":864,"nodeType":"Return","src":"17929:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":866,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":852,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"17867:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":853,"modifierName":{"argumentTypes":null,"id":851,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"17850:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"17850:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"name":"_custodian","nodeType":"VariableDeclaration","scope":866,"src":"17806:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"17806:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17805:20:0"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"name":"","nodeType":"VariableDeclaration","scope":866,"src":"17892:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"17892:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":857,"name":"","nodeType":"VariableDeclaration","scope":866,"src":"17901:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":856,"name":"bytes","nodeType":"ElementaryTypeName","src":"17901:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17891:23:0"},"scope":921,"src":"17787:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":881,"nodeType":"Block","src":"18302:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":877,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"18348:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":878,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"18355:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":875,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"18319:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":9111,"src":"18319:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18319:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":874,"id":880,"nodeType":"Return","src":"18312:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":882,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"name":"_data","nodeType":"VariableDeclaration","scope":882,"src":"18214:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":867,"name":"bytes","nodeType":"ElementaryTypeName","src":"18214:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":870,"name":"_signature","nodeType":"VariableDeclaration","scope":882,"src":"18234:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":869,"name":"bytes","nodeType":"ElementaryTypeName","src":"18234:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18213:45:0"},"returnParameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"name":"","nodeType":"VariableDeclaration","scope":882,"src":"18292:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint","nodeType":"ElementaryTypeName","src":"18292:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18291:6:0"},"scope":921,"src":"18192:181:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":897,"nodeType":"Block","src":"18641:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":893,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"18696:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":894,"name":"_updatedEnigmaContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"18703:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":891,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8761,"src":"18658:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8761_$","typeString":"type(library UpgradeImpl)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeEnigmaContractImpl","nodeType":"MemberAccess","referencedDeclaration":8682,"src":"18658:37:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18658:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":890,"id":896,"nodeType":"Return","src":"18651:82:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address","id":898,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":887,"modifierName":{"argumentTypes":null,"id":886,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17688,"src":"18599:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18599:9:0"},{"arguments":null,"id":889,"modifierName":{"argumentTypes":null,"id":888,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"18613:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18613:23:0"}],"name":"upgradeEnigmaContract","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"name":"_updatedEnigmaContractAddress","nodeType":"VariableDeclaration","scope":898,"src":"18545:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"18545:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"18544:39:0"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[],"src":"18641:0:0"},"scope":921,"src":"18514:226:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":919,"nodeType":"Block","src":"19099:108:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":913,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"19163:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":914,"name":"_workerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"19170:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":915,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"19186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":916,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"19195:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":911,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8761,"src":"19116:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8761_$","typeString":"type(library UpgradeImpl)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferWorkerStakePostUpgradeImpl","nodeType":"MemberAccess","referencedDeclaration":8760,"src":"19116:46:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,address,address,bytes memory) returns (uint256)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19116:84:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":910,"id":918,"nodeType":"Return","src":"19109:91:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _workerAddress Newly-registered worker address\\n@param _signer Newly-registered worker address\\n@param _sig Signature","id":920,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":907,"modifierName":{"argumentTypes":null,"id":906,"name":"fromUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"19047:25:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"19047:25:0"}],"name":"transferWorkerStakePostUpgrade","nodeType":"FunctionDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"name":"_workerAddress","nodeType":"VariableDeclaration","scope":920,"src":"18972:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"18972:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":902,"name":"_signer","nodeType":"VariableDeclaration","scope":920,"src":"18996:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"18996:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":904,"name":"_sig","nodeType":"VariableDeclaration","scope":920,"src":"19013:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":903,"name":"bytes","nodeType":"ElementaryTypeName","src":"19013:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18971:60:0"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"name":"","nodeType":"VariableDeclaration","scope":920,"src":"19086:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"19086:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"19085:9:0"},"scope":921,"src":"18932:275:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":922,"src":"885:18324:0"}],"src":"0:19210:0"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[921]},"id":922,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":922,"sourceUnit":17646,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":922,"sourceUnit":17518,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"openzeppelin-solidity/contracts/ownership/Ownable.sol","id":5,"nodeType":"ImportDirective","scope":922,"sourceUnit":17755,"src":"184:63:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":6,"nodeType":"ImportDirective","scope":922,"sourceUnit":17437,"src":"248:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":8,"nodeType":"ImportDirective","scope":922,"sourceUnit":9782,"src":"284:53:0","symbolAliases":[{"foreign":7,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":10,"nodeType":"ImportDirective","scope":922,"sourceUnit":3310,"src":"338:57:0","symbolAliases":[{"foreign":9,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":12,"nodeType":"ImportDirective","scope":922,"sourceUnit":6264,"src":"396:47:0","symbolAliases":[{"foreign":11,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol","file":"./impl/UpgradeImpl.sol","id":14,"nodeType":"ImportDirective","scope":922,"sourceUnit":8762,"src":"444:53:0","symbolAliases":[{"foreign":13,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":16,"nodeType":"ImportDirective","scope":922,"sourceUnit":3948,"src":"498:67:0","symbolAliases":[{"foreign":15,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":18,"nodeType":"ImportDirective","scope":922,"sourceUnit":2410,"src":"566:55:0","symbolAliases":[{"foreign":17,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":20,"nodeType":"ImportDirective","scope":922,"sourceUnit":2603,"src":"622:53:0","symbolAliases":[{"foreign":19,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":22,"nodeType":"ImportDirective","scope":922,"sourceUnit":2549,"src":"676:55:0","symbolAliases":[{"foreign":21,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":24,"nodeType":"ImportDirective","scope":922,"sourceUnit":2611,"src":"732:57:0","symbolAliases":[{"foreign":23,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":26,"nodeType":"ImportDirective","scope":922,"sourceUnit":2785,"src":"790:45:0","symbolAliases":[{"foreign":25,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":28,"nodeType":"ImportDirective","scope":922,"sourceUnit":10767,"src":"836:47:0","symbolAliases":[{"foreign":27,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":29,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2610,"src":"904:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2610","typeString":"contract EnigmaStorage"}},"id":30,"nodeType":"InheritanceSpecifier","src":"904:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":31,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2548,"src":"919:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2548","typeString":"contract EnigmaEvents"}},"id":32,"nodeType":"InheritanceSpecifier","src":"919:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":33,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2784,"src":"933:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2784","typeString":"contract Getters"}},"id":34,"nodeType":"InheritanceSpecifier","src":"933:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":35,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":17754,"src":"942:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$17754","typeString":"contract Ownable"}},"id":36,"nodeType":"InheritanceSpecifier","src":"942:7:0"}],"contractDependencies":[2548,2610,2784,17754],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":921,"linearizedBaseContracts":[921,17754,2784,2548,2610],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":39,"libraryName":{"contractScope":null,"id":37,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":17645,"src":"962:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$17645","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"956:27:0","typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":42,"libraryName":{"contractScope":null,"id":40,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":17517,"src":"994:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$17517","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"988:24:0","typeName":{"id":41,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1004:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":97,"nodeType":"Block","src":"1207:298:0","statements":[{"expression":{"argumentTypes":null,"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":51,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1217:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":53,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2557,"src":"1217:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10766","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":55,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1240:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":54,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10766,"src":"1234:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10766_$","typeString":"type(contract ERC20)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1234:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10766","typeString":"contract ERC20"}},"src":"1217:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10766","typeString":"contract ERC20"}},"id":58,"nodeType":"ExpressionStatement","src":"1217:37:0"},{"expression":{"argumentTypes":null,"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":59,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1264:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":61,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2559,"src":"1264:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":62,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1282:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1264:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":64,"nodeType":"ExpressionStatement","src":"1264:28:0"},{"expression":{"argumentTypes":null,"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":65,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1302:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":67,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2561,"src":"1302:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"323030","id":68,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1326:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"1302:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":70,"nodeType":"ExpressionStatement","src":"1302:27:0"},{"expression":{"argumentTypes":null,"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":71,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1339:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":73,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2563,"src":"1339:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":74,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1357:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1339:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":76,"nodeType":"ExpressionStatement","src":"1339:28:0"},{"expression":{"argumentTypes":null,"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":77,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1377:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":79,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2565,"src":"1377:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":81,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18378,"src":"1422:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$921","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$921","typeString":"contract Enigma"}],"id":80,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1377:50:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":84,"nodeType":"ExpressionStatement","src":"1377:50:0"},{"expression":{"argumentTypes":null,"id":89,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":85,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1437:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":87,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2598,"src":"1437:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":88,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1462:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1437:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":90,"nodeType":"ExpressionStatement","src":"1437:26:0"},{"expression":{"argumentTypes":null,"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":91,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1473:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":93,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2600,"src":"1473:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1497:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1473:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":96,"nodeType":"ExpressionStatement","src":"1473:25:0"}]},"documentation":null,"id":98,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":98,"src":"1136:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":46,"name":"_principal","nodeType":"VariableDeclaration","scope":98,"src":"1159:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":48,"name":"_epochSize","nodeType":"VariableDeclaration","scope":98,"src":"1179:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint","nodeType":"ElementaryTypeName","src":"1179:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1135:60:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[],"src":"1207:0:0"},"scope":921,"src":"1124:381:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":122,"nodeType":"Block","src":"1795:181:0","statements":[{"assignments":[105],"declarations":[{"constant":false,"id":105,"name":"worker","nodeType":"VariableDeclaration","scope":122,"src":"1805:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":104,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2316,"src":"1805:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":110,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":106,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1841:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"1841:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2316_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":109,"indexExpression":{"argumentTypes":null,"id":108,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1841:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1805:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":112,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"1879:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"1879:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":114,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"1896:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"1896:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2357_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1896:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1879:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1936:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":111,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"1871:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1871:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":120,"nodeType":"ExpressionStatement","src":"1871:87:0"},{"id":121,"nodeType":"PlaceholderStatement","src":"1968:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":123,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"name":"_user","nodeType":"VariableDeclaration","scope":123,"src":"1780:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"1780:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1779:15:0"},"src":"1754:222:0","visibility":"internal"},{"body":{"id":147,"nodeType":"Block","src":"2159:178:0","statements":[{"assignments":[130],"declarations":[{"constant":false,"id":130,"name":"worker","nodeType":"VariableDeclaration","scope":147,"src":"2169:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":129,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2316,"src":"2169:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":135,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":131,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"2205:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"2205:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2316_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":134,"indexExpression":{"argumentTypes":null,"id":133,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2219:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2205:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2169:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":137,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2243:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"2243:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":139,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"2260:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"2260:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2357_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2260:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2243:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2296:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":136,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"2235:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2235:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":145,"nodeType":"ExpressionStatement","src":"2235:84:0"},{"id":146,"nodeType":"PlaceholderStatement","src":"2329:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":148,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"name":"_user","nodeType":"VariableDeclaration","scope":148,"src":"2144:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"2144:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2143:15:0"},"src":"2120:217:0","visibility":"internal"},{"body":{"id":172,"nodeType":"Block","src":"2522:180:0","statements":[{"assignments":[155],"declarations":[{"constant":false,"id":155,"name":"worker","nodeType":"VariableDeclaration","scope":172,"src":"2532:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":154,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2316,"src":"2532:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":160,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":156,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"2568:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"2568:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2316_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":159,"indexExpression":{"argumentTypes":null,"id":158,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"2582:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2568:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2532:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":162,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2606:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"2606:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":164,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"2623:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"2623:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2357_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2623:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2606:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2660:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"2598:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2598:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":170,"nodeType":"ExpressionStatement","src":"2598:86:0"},{"id":171,"nodeType":"PlaceholderStatement","src":"2694:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":173,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"name":"_user","nodeType":"VariableDeclaration","scope":173,"src":"2507:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"2507:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2506:15:0"},"src":"2482:220:0","visibility":"internal"},{"body":{"id":216,"nodeType":"Block","src":"2851:395:0","statements":[{"assignments":[180],"declarations":[{"constant":false,"id":180,"name":"worker","nodeType":"VariableDeclaration","scope":216,"src":"2861:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":179,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2316,"src":"2861:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":185,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":181,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"2897:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"2897:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2316_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":184,"indexExpression":{"argumentTypes":null,"id":183,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"2911:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2897:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2861:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":188,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18318,"src":"2955:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2955:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":187,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"2935:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2935:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2972:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2935:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2975:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"2927:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2927:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"2927:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":197,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3035:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"3035:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":199,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"3052:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"3052:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2357_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3052:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3035:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3089:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":196,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"3027:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3027:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":205,"nodeType":"ExpressionStatement","src":"3027:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":207,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3149:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"3149:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":209,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"3167:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2598,"src":"3167:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3149:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3191:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"3141:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3141:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":214,"nodeType":"ExpressionStatement","src":"3141:87:0"},{"id":215,"nodeType":"PlaceholderStatement","src":"3238:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":217,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"name":"_user","nodeType":"VariableDeclaration","scope":217,"src":"2836:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"2836:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2835:15:0"},"src":"2818:428:0","visibility":"internal"},{"body":{"id":273,"nodeType":"Block","src":"3404:580:0","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"name":"worker","nodeType":"VariableDeclaration","scope":273,"src":"3414:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":223,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2316,"src":"3414:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":229,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":225,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"3450:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"3450:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2316_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":228,"indexExpression":{"argumentTypes":null,"id":227,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3464:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3450:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3414:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":231,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"3488:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"3488:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":233,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"3505:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"3505:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2357_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3505:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2357","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3488:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3542:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":230,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3480:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":239,"nodeType":"ExpressionStatement","src":"3480:104:0"},{"assignments":[243],"declarations":[{"constant":false,"id":243,"name":"workerLog","nodeType":"VariableDeclaration","scope":273,"src":"3594:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2334_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":242,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2334,"src":"3594:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2334_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":250,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":246,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"3671:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":247,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18318,"src":"3679:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3679:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2316_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":244,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"3636:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9780,"src":"3636:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2316_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2334_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3636:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2334_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3594:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2365","typeString":"enum EnigmaCommon.WorkerLogType"},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":252,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"3710:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2334_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2329,"src":"3710:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2365","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":254,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"3739:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2365,"src":"3739:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2365_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3739:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2365","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3710:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3786:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":251,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"3702:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3702:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":260,"nodeType":"ExpressionStatement","src":"3702:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":263,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18318,"src":"3866:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3866:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":262,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"3846:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":266,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"3882:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2334_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"3882:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3846:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3917:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"3838:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3838:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"ExpressionStatement","src":"3838:128:0"},{"id":272,"nodeType":"PlaceholderStatement","src":"3976:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":274,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"name":"_user","nodeType":"VariableDeclaration","scope":274,"src":"3389:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"3389:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3388:15:0"},"src":"3368:616:0","visibility":"internal"},{"body":{"id":292,"nodeType":"Block","src":"4151:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2360","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":279,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4169:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2592,"src":"4169:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2346_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":282,"indexExpression":{"argumentTypes":null,"id":281,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"4185:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4169:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2346_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2345,"src":"4169:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2360","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":284,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"4204:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2360,"src":"4204:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2360_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4204:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2360","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4169:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4249:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"4161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4161:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":290,"nodeType":"ExpressionStatement","src":"4161:123:0"},{"id":291,"nodeType":"PlaceholderStatement","src":"4294:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":293,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"name":"_scAddr","nodeType":"VariableDeclaration","scope":293,"src":"4134:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4134:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4133:17:0"},"src":"4107:195:0","visibility":"internal"},{"body":{"id":311,"nodeType":"Block","src":"4464:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2360","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":298,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4482:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2592,"src":"4482:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2346_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":301,"indexExpression":{"argumentTypes":null,"id":300,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4498:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4482:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2346_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2345,"src":"4482:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2360","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":303,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"4517:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2360,"src":"4517:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2360_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4517:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2360","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4482:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4561:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"4474:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4474:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":309,"nodeType":"ExpressionStatement","src":"4474:118:0"},{"id":310,"nodeType":"PlaceholderStatement","src":"4602:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":312,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"name":"_scAddr","nodeType":"VariableDeclaration","scope":312,"src":"4447:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4447:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4446:17:0"},"src":"4421:189:0","visibility":"internal"},{"body":{"id":330,"nodeType":"Block","src":"4775:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2353","typeString":"enum EnigmaCommon.TaskStatus"},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":317,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4793:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2585,"src":"4793:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2304_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":320,"indexExpression":{"argumentTypes":null,"id":319,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"4805:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4793:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2304_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2301,"src":"4793:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2353","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":322,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"4824:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2409_$","typeString":"type(library EnigmaCommon)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"4824:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2353_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4824:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2353","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4793:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4863:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"4785:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4785:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"4785:100:0"},{"id":329,"nodeType":"PlaceholderStatement","src":"4895:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":331,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"name":"_taskId","nodeType":"VariableDeclaration","scope":331,"src":"4758:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4758:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4757:17:0"},"src":"4737:166:0","visibility":"internal"},{"body":{"id":364,"nodeType":"Block","src":"5065:202:0","statements":[{"body":{"id":361,"nodeType":"Block","src":"5131:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":348,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5153:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"5153:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2316_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":354,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":350,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5167:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"5167:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":353,"indexExpression":{"argumentTypes":null,"id":352,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"5189:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5167:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5153:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2316_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2306,"src":"5153:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":356,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"5203:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5153:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5212:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"5145:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":360,"nodeType":"ExpressionStatement","src":"5145:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"5092:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":340,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5096:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"5096:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5096:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5092:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":362,"initializationExpression":{"assignments":[336],"declarations":[{"constant":false,"id":336,"name":"i","nodeType":"VariableDeclaration","scope":362,"src":"5080:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint","nodeType":"ElementaryTypeName","src":"5080:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":338,"initialValue":{"argumentTypes":null,"hexValue":"30","id":337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5080:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5126:3:0","subExpression":{"argumentTypes":null,"id":344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"5126:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":346,"nodeType":"ExpressionStatement","src":"5126:3:0"},"nodeType":"ForStatement","src":"5075:175:0"},{"id":363,"nodeType":"PlaceholderStatement","src":"5259:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":365,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"name":"_signer","nodeType":"VariableDeclaration","scope":365,"src":"5048:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"5048:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5047:17:0"},"src":"5020:247:0","visibility":"internal"},{"body":{"id":378,"nodeType":"Block","src":"5394:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":369,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18378,"src":"5420:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$921","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$921","typeString":"contract Enigma"}],"id":368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5412:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5412:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":371,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5429:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2565,"src":"5429:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5412:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74207570646174656420456e69676d6120636f6e7472616374","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5465:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""},"value":"Not updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""}],"id":367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"5404:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5404:91:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":376,"nodeType":"ExpressionStatement","src":"5404:91:0"},{"id":377,"nodeType":"PlaceholderStatement","src":"5505:1:0"}]},"documentation":"Ensure that the contract\'s context is the updated contract\\n    ","id":379,"name":"isUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"5391:2:0"},"src":"5359:154:0","visibility":"internal"},{"body":{"id":391,"nodeType":"Block","src":"5644:121:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":382,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"5662:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5662:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":384,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5676:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},"id":385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2565,"src":"5676:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5662:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5712:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""},"value":"Not from updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""}],"id":381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18331,18332],"referencedDeclaration":18332,"src":"5654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5654:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":389,"nodeType":"ExpressionStatement","src":"5654:93:0"},{"id":390,"nodeType":"PlaceholderStatement","src":"5757:1:0"}]},"documentation":"Ensure the sender of the recent call is the updated contract\\n    ","id":392,"name":"fromUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"5641:2:0"},"src":"5607:158:0","visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"6414:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":409,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":410,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"6456:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":411,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"6465:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":412,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"6474:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":406,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"6424:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":9048,"src":"6424:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6424:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"ExpressionStatement","src":"6424:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":416,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":401,"modifierName":{"argumentTypes":null,"id":400,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6354:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6354:23:0"},{"arguments":[{"argumentTypes":null,"id":403,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"6401:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":404,"modifierName":{"argumentTypes":null,"id":402,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"6382:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6382:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"name":"_signer","nodeType":"VariableDeclaration","scope":416,"src":"6275:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"6275:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":396,"name":"_report","nodeType":"VariableDeclaration","scope":416,"src":"6292:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":395,"name":"bytes","nodeType":"ElementaryTypeName","src":"6292:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":398,"name":"_signature","nodeType":"VariableDeclaration","scope":416,"src":"6314:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":397,"name":"bytes","nodeType":"ElementaryTypeName","src":"6314:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6274:64:0"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"6414:0:0"},"scope":921,"src":"6257:235:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":436,"nodeType":"Block","src":"6862:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":431,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"6896:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":432,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"6903:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":433,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6915:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":428,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"6872:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":9254,"src":"6872:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6872:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"6872:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":437,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":423,"modifierName":{"argumentTypes":null,"id":422,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6801:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6801:23:0"},{"arguments":[{"argumentTypes":null,"id":425,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"6846:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":426,"modifierName":{"argumentTypes":null,"id":424,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"6829:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6829:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"name":"_custodian","nodeType":"VariableDeclaration","scope":437,"src":"6752:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"6752:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":420,"name":"_amount","nodeType":"VariableDeclaration","scope":437,"src":"6772:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint","nodeType":"ElementaryTypeName","src":"6772:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6751:34:0"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"6862:0:0"},"scope":921,"src":"6735:195:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":453,"nodeType":"Block","src":"7203:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":449,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7238:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":450,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"7245:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":446,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"7213:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":9307,"src":"7213:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7213:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":452,"nodeType":"ExpressionStatement","src":"7213:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":454,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"7187:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7187:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":444,"modifierName":{"argumentTypes":null,"id":441,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7175:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7175:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"name":"_amount","nodeType":"VariableDeclaration","scope":454,"src":"7146:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint","nodeType":"ElementaryTypeName","src":"7146:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7145:14:0"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"7203:0:0"},"scope":921,"src":"7128:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":467,"nodeType":"Block","src":"7468:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":464,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7500:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":461,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"7478:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":9152,"src":"7478:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7478:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"ExpressionStatement","src":"7478:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":468,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":457,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"7456:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7456:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":459,"modifierName":{"argumentTypes":null,"id":456,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"7447:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7447:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"7437:2:0"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"7468:0:0"},"scope":921,"src":"7423:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":481,"nodeType":"Block","src":"7642:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":478,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7675:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":475,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"7652:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":9193,"src":"7652:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7652:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":480,"nodeType":"ExpressionStatement","src":"7652:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":482,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":471,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"7630:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7630:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":473,"modifierName":{"argumentTypes":null,"id":470,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"7615:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7615:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"7605:2:0"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"7642:0:0"},"scope":921,"src":"7590:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":509,"nodeType":"Block","src":"8175:89:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":503,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"8226:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":504,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"8233:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":505,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"8242:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":506,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"8252:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":500,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"8185:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"8185:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,bytes memory)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8185:72:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":508,"nodeType":"ExpressionStatement","src":"8185:72:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":510,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":491,"modifierName":{"argumentTypes":null,"id":490,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"8085:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8085:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":493,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"8128:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8128:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":495,"modifierName":{"argumentTypes":null,"id":492,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"8113:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8113:26:0"},{"arguments":[{"argumentTypes":null,"id":497,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"8162:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":498,"modifierName":{"argumentTypes":null,"id":496,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"8144:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8144:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"name":"_taskId","nodeType":"VariableDeclaration","scope":510,"src":"7996:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7996:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":486,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":510,"src":"8021:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":485,"name":"uint64","nodeType":"ElementaryTypeName","src":"8021:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":488,"name":"_sig","nodeType":"VariableDeclaration","scope":510,"src":"8046:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":487,"name":"bytes","nodeType":"ElementaryTypeName","src":"8046:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"7986:83:0"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"8175:0:0"},"scope":921,"src":"7950:314:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":552,"nodeType":"Block","src":"9345:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":541,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"9389:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":542,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"9396:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":543,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"9405:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":544,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"9419:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":545,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"9430:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":546,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9463:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":547,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"9486:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":548,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"9520:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":549,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"9530:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":538,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"9355:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4802,"src":"9355:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9355:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":551,"nodeType":"ExpressionStatement","src":"9355:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":553,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":529,"modifierName":{"argumentTypes":null,"id":528,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"9255:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9255:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":531,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"9298:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9298:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":533,"modifierName":{"argumentTypes":null,"id":530,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"9283:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"9283:26:0"},{"arguments":[{"argumentTypes":null,"id":535,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"9332:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":536,"modifierName":{"argumentTypes":null,"id":534,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"9314:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"9314:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"name":"_taskId","nodeType":"VariableDeclaration","scope":553,"src":"8978:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8978:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":514,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":553,"src":"9003:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9003:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":516,"name":"_codeHash","nodeType":"VariableDeclaration","scope":553,"src":"9033:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9033:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":518,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":553,"src":"9060:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":520,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":553,"src":"9097:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":519,"name":"bytes","nodeType":"ElementaryTypeName","src":"9097:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":522,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":553,"src":"9141:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"9141:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":524,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":553,"src":"9191:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":523,"name":"uint64","nodeType":"ElementaryTypeName","src":"9191:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":526,"name":"_sig","nodeType":"VariableDeclaration","scope":553,"src":"9216:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":525,"name":"bytes","nodeType":"ElementaryTypeName","src":"9216:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8968:271:0"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"9345:0:0"},"scope":921,"src":"8939:603:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":563,"nodeType":"Block","src":"9744:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":560,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"9805:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":558,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"9761:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3947_$","typeString":"type(library SecretContractImpl)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3879,"src":"9761:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2601_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9761:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":557,"id":562,"nodeType":"Return","src":"9754:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":564,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[],"src":"9698:2:0"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"name":"","nodeType":"VariableDeclaration","scope":564,"src":"9734:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint","nodeType":"ElementaryTypeName","src":"9734:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9733:6:0"},"scope":921,"src":"9669:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":581,"nodeType":"Block","src":"10147:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":576,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"10214:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":577,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"10221:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":578,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"10229:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":574,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"10164:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3947_$","typeString":"type(library SecretContractImpl)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"10164:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2601_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10164:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":573,"id":580,"nodeType":"Return","src":"10157:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":582,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"name":"_start","nodeType":"VariableDeclaration","scope":582,"src":"10067:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint","nodeType":"ElementaryTypeName","src":"10067:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":568,"name":"_stop","nodeType":"VariableDeclaration","scope":582,"src":"10080:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint","nodeType":"ElementaryTypeName","src":"10080:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10066:25:0"},"returnParameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"name":"","nodeType":"VariableDeclaration","scope":582,"src":"10125:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10125:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":571,"length":null,"nodeType":"ArrayTypeName","src":"10125:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"10124:18:0"},"scope":921,"src":"10031:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":608,"nodeType":"Block","src":"11311:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":600,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"11361:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":601,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"11368:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":602,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"11381:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":603,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"11392:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":604,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"11400:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":605,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"11419:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":597,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"11321:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"11321:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11321:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"11321:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":609,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":595,"modifierName":{"argumentTypes":null,"id":594,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"11283:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11283:23:0"}],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":609,"src":"11140:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":586,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":609,"src":"11169:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":585,"name":"uint64","nodeType":"ElementaryTypeName","src":"11169:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":588,"name":"_gasPx","nodeType":"VariableDeclaration","scope":609,"src":"11195:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":587,"name":"uint64","nodeType":"ElementaryTypeName","src":"11195:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":590,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":609,"src":"11218:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":589,"name":"uint","nodeType":"ElementaryTypeName","src":"11218:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":592,"name":"_nonce","nodeType":"VariableDeclaration","scope":609,"src":"11250:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint","nodeType":"ElementaryTypeName","src":"11250:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11130:137:0"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"11311:0:0"},"scope":921,"src":"11095:338:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":632,"nodeType":"Block","src":"12193:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":625,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"12233:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":626,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"12240:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":627,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"12253:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":628,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"12264:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":629,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"12272:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":622,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"12203:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":5045,"src":"12203:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12203:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"ExpressionStatement","src":"12203:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":633,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":620,"modifierName":{"argumentTypes":null,"id":619,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"12165:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12165:23:0"}],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":633,"src":"12043:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12043:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":613,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":633,"src":"12072:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":612,"name":"uint64","nodeType":"ElementaryTypeName","src":"12072:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":615,"name":"_gasPx","nodeType":"VariableDeclaration","scope":633,"src":"12098:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":614,"name":"uint64","nodeType":"ElementaryTypeName","src":"12098:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":617,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":633,"src":"12121:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint","nodeType":"ElementaryTypeName","src":"12121:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12033:116:0"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[],"src":"12193:0:0"},"scope":921,"src":"12008:289:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":659,"nodeType":"Block","src":"13125:109:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":652,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"13166:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":653,"name":"_inputsHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"13173:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"argumentTypes":null,"id":654,"name":"_gasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"13188:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"}},{"argumentTypes":null,"id":655,"name":"_gasPxs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"13200:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"}},{"argumentTypes":null,"id":656,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"13209:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"},{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":649,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"13135:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordsImpl","nodeType":"MemberAccess","referencedDeclaration":5903,"src":"13135:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint64_$dyn_memory_ptr_$_t_array$_t_uint64_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32[] memory,uint64[] memory,uint64[] memory,uint256)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13135:92:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":658,"nodeType":"ExpressionStatement","src":"13135:92:0"}]},"documentation":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\ntransferring task fee from sender to contract, generating the unique taskId, saving the block number\\nwhen the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimits ENG gas limit\\n@param _gasPxs ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":660,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":647,"modifierName":{"argumentTypes":null,"id":646,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"13097:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13097:23:0"}],"name":"createTaskRecords","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"name":"_inputsHashes","nodeType":"VariableDeclaration","scope":660,"src":"12944:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12944:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":635,"length":null,"nodeType":"ArrayTypeName","src":"12944:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":639,"name":"_gasLimits","nodeType":"VariableDeclaration","scope":660,"src":"12984:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":637,"name":"uint64","nodeType":"ElementaryTypeName","src":"12984:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":638,"length":null,"nodeType":"ArrayTypeName","src":"12984:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":642,"name":"_gasPxs","nodeType":"VariableDeclaration","scope":660,"src":"13020:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":640,"name":"uint64","nodeType":"ElementaryTypeName","src":"13020:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":641,"length":null,"nodeType":"ArrayTypeName","src":"13020:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":644,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":660,"src":"13053:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint","nodeType":"ElementaryTypeName","src":"13053:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12934:147:0"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[],"src":"13125:0:0"},"scope":921,"src":"12908:326:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":702,"nodeType":"Block","src":"14229:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":691,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"14266:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":692,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"14273:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":693,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"14282:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":694,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"14291:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":695,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"14308:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":696,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"14321:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":697,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"14356:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":698,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"14390:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":699,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"14400:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":688,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"14239:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5705,"src":"14239:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14239:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"14239:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":703,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":679,"modifierName":{"argumentTypes":null,"id":678,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"14140:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14140:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":681,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"14183:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14183:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":683,"modifierName":{"argumentTypes":null,"id":680,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"14168:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14168:26:0"},{"arguments":[{"argumentTypes":null,"id":685,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"14216:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":686,"modifierName":{"argumentTypes":null,"id":684,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"14199:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14199:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"name":"_scAddr","nodeType":"VariableDeclaration","scope":703,"src":"13870:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":664,"name":"_taskId","nodeType":"VariableDeclaration","scope":703,"src":"13895:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13895:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":666,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":703,"src":"13920:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13920:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":668,"name":"_outputHash","nodeType":"VariableDeclaration","scope":703,"src":"13953:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13953:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":670,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":703,"src":"13982:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":669,"name":"bytes","nodeType":"ElementaryTypeName","src":"13982:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":672,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":703,"src":"14026:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"14026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":674,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":703,"src":"14076:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":673,"name":"uint64","nodeType":"ElementaryTypeName","src":"14076:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":676,"name":"_sig","nodeType":"VariableDeclaration","scope":703,"src":"14101:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":675,"name":"bytes","nodeType":"ElementaryTypeName","src":"14101:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13860:264:0"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"14229:0:0"},"scope":921,"src":"13838:574:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":733,"nodeType":"Block","src":"14999:88:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":726,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"15040:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":727,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"15047:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":728,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"15056:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":729,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"15065:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":730,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"15075:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":723,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"15009:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5231,"src":"15009:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15009:71:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":732,"nodeType":"ExpressionStatement","src":"15009:71:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":734,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":714,"modifierName":{"argumentTypes":null,"id":713,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"14910:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14910:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":716,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"14953:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14953:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":718,"modifierName":{"argumentTypes":null,"id":715,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"14938:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14938:26:0"},{"arguments":[{"argumentTypes":null,"id":720,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"14986:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":721,"modifierName":{"argumentTypes":null,"id":719,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"14969:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14969:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"name":"_scAddr","nodeType":"VariableDeclaration","scope":734,"src":"14796:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14796:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":707,"name":"_taskId","nodeType":"VariableDeclaration","scope":734,"src":"14821:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14821:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":709,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":734,"src":"14846:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":708,"name":"uint64","nodeType":"ElementaryTypeName","src":"14846:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":711,"name":"_sig","nodeType":"VariableDeclaration","scope":734,"src":"14871:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":710,"name":"bytes","nodeType":"ElementaryTypeName","src":"14871:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14786:108:0"},"returnParameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"14999:0:0"},"scope":921,"src":"14760:327:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":749,"nodeType":"Block","src":"15338:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":745,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"15379:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":746,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"15386:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":742,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"15348:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6263_$","typeString":"type(library TaskImpl)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6262,"src":"15348:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15348:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":748,"nodeType":"ExpressionStatement","src":"15348:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":750,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":739,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"15325:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":740,"modifierName":{"argumentTypes":null,"id":738,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"15313:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"15313:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"name":"_taskId","nodeType":"VariableDeclaration","scope":750,"src":"15281:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15281:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"15280:17:0"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[],"src":"15338:0:0"},"scope":921,"src":"15254:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":774,"nodeType":"Block","src":"15889:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":768,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"15934:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":769,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"15941:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":770,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"15955:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":771,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"15962:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":765,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"15899:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3309_$","typeString":"type(library PrincipalImpl)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"15899:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15899:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"15899:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":775,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":759,"modifierName":{"argumentTypes":null,"id":758,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"15828:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15828:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18328,"src":"15873:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15873:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":763,"modifierName":{"argumentTypes":null,"id":760,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"15856:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"15856:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":775,"src":"15763:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint","nodeType":"ElementaryTypeName","src":"15763:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":754,"name":"_seed","nodeType":"VariableDeclaration","scope":775,"src":"15782:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint","nodeType":"ElementaryTypeName","src":"15782:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":756,"name":"_sig","nodeType":"VariableDeclaration","scope":775,"src":"15794:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":755,"name":"bytes","nodeType":"ElementaryTypeName","src":"15794:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"15762:50:0"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"15889:0:0"},"scope":921,"src":"15737:237:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":792,"nodeType":"Block","src":"16210:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":788,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"16262:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":789,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"16269:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":786,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"16227:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3309_$","typeString":"type(library PrincipalImpl)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3308,"src":"16227:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2601_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16227:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":785,"id":791,"nodeType":"Return","src":"16220:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":793,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":793,"src":"16121:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint","nodeType":"ElementaryTypeName","src":"16121:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16120:19:0"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"name":"","nodeType":"VariableDeclaration","scope":793,"src":"16173:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"16173:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":780,"length":null,"nodeType":"ArrayTypeName","src":"16173:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":784,"name":"","nodeType":"VariableDeclaration","scope":793,"src":"16191:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":782,"name":"uint","nodeType":"ElementaryTypeName","src":"16191:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":783,"length":null,"nodeType":"ArrayTypeName","src":"16191:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16172:33:0"},"scope":921,"src":"16095:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":806,"nodeType":"Block","src":"16551:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":802,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"16604:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":803,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"16611:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":800,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"16568:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":9427,"src":"16568:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2601_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16568:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":799,"id":805,"nodeType":"Return","src":"16561:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":807,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":807,"src":"16493:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint","nodeType":"ElementaryTypeName","src":"16493:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16492:19:0"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"name":"","nodeType":"VariableDeclaration","scope":807,"src":"16545:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint","nodeType":"ElementaryTypeName","src":"16545:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16544:6:0"},"scope":921,"src":"16464:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":828,"nodeType":"Block","src":"17037:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":824,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"17086:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":825,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"17093:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":822,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"17054:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":9464,"src":"17054:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2601_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17054:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":821,"id":827,"nodeType":"Return","src":"17047:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":829,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":829,"src":"16940:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint","nodeType":"ElementaryTypeName","src":"16940:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16939:19:0"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"name":"","nodeType":"VariableDeclaration","scope":829,"src":"16992:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint","nodeType":"ElementaryTypeName","src":"16992:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":814,"name":"","nodeType":"VariableDeclaration","scope":829,"src":"16998:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint","nodeType":"ElementaryTypeName","src":"16998:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":817,"name":"","nodeType":"VariableDeclaration","scope":829,"src":"17004:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"17004:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":816,"length":null,"nodeType":"ArrayTypeName","src":"17004:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":820,"name":"","nodeType":"VariableDeclaration","scope":829,"src":"17022:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":818,"name":"uint","nodeType":"ElementaryTypeName","src":"17022:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":819,"length":null,"nodeType":"ArrayTypeName","src":"17022:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16991:45:0"},"scope":921,"src":"16915:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":846,"nodeType":"Block","src":"17565:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":841,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"17613:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":842,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"17620:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":843,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"17634:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":839,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"17582:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9728,"src":"17582:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2601_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17582:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":838,"id":845,"nodeType":"Return","src":"17575:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":847,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":847,"src":"17474:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint","nodeType":"ElementaryTypeName","src":"17474:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":833,"name":"_scAddr","nodeType":"VariableDeclaration","scope":847,"src":"17493:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17493:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"17473:36:0"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"name":"","nodeType":"VariableDeclaration","scope":847,"src":"17543:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"17543:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":836,"length":null,"nodeType":"ArrayTypeName","src":"17543:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"17542:18:0"},"scope":921,"src":"17450:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":865,"nodeType":"Block","src":"17919:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":861,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"17962:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":862,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"17969:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":859,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"17936:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":9085,"src":"17936:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2601_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17936:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":858,"id":864,"nodeType":"Return","src":"17929:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":866,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":852,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"17867:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":853,"modifierName":{"argumentTypes":null,"id":851,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"17850:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"17850:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"name":"_custodian","nodeType":"VariableDeclaration","scope":866,"src":"17806:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"17806:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17805:20:0"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"name":"","nodeType":"VariableDeclaration","scope":866,"src":"17892:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"17892:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":857,"name":"","nodeType":"VariableDeclaration","scope":866,"src":"17901:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":856,"name":"bytes","nodeType":"ElementaryTypeName","src":"17901:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17891:23:0"},"scope":921,"src":"17787:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":881,"nodeType":"Block","src":"18302:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":877,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"18348:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":878,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"18355:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":875,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"18319:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9781_$","typeString":"type(library WorkersImpl)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":9111,"src":"18319:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18319:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":874,"id":880,"nodeType":"Return","src":"18312:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":882,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"name":"_data","nodeType":"VariableDeclaration","scope":882,"src":"18214:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":867,"name":"bytes","nodeType":"ElementaryTypeName","src":"18214:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":870,"name":"_signature","nodeType":"VariableDeclaration","scope":882,"src":"18234:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":869,"name":"bytes","nodeType":"ElementaryTypeName","src":"18234:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18213:45:0"},"returnParameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"name":"","nodeType":"VariableDeclaration","scope":882,"src":"18292:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint","nodeType":"ElementaryTypeName","src":"18292:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18291:6:0"},"scope":921,"src":"18192:181:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":897,"nodeType":"Block","src":"18641:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":893,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"18696:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":894,"name":"_updatedEnigmaContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"18703:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":891,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8761,"src":"18658:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8761_$","typeString":"type(library UpgradeImpl)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeEnigmaContractImpl","nodeType":"MemberAccess","referencedDeclaration":8682,"src":"18658:37:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18658:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":890,"id":896,"nodeType":"Return","src":"18651:82:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address","id":898,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":887,"modifierName":{"argumentTypes":null,"id":886,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17688,"src":"18599:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18599:9:0"},{"arguments":null,"id":889,"modifierName":{"argumentTypes":null,"id":888,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"18613:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18613:23:0"}],"name":"upgradeEnigmaContract","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"name":"_updatedEnigmaContractAddress","nodeType":"VariableDeclaration","scope":898,"src":"18545:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"18545:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"18544:39:0"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[],"src":"18641:0:0"},"scope":921,"src":"18514:226:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":919,"nodeType":"Block","src":"19099:108:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":913,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"19163:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":914,"name":"_workerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"19170:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":915,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"19186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":916,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"19195:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2601_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":911,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8761,"src":"19116:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8761_$","typeString":"type(library UpgradeImpl)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferWorkerStakePostUpgradeImpl","nodeType":"MemberAccess","referencedDeclaration":8760,"src":"19116:46:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2601_storage_ptr_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,address,address,bytes memory) returns (uint256)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19116:84:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":910,"id":918,"nodeType":"Return","src":"19109:91:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _workerAddress Newly-registered worker address\\n@param _signer Newly-registered worker address\\n@param _sig Signature","id":920,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":907,"modifierName":{"argumentTypes":null,"id":906,"name":"fromUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"19047:25:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"19047:25:0"}],"name":"transferWorkerStakePostUpgrade","nodeType":"FunctionDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"name":"_workerAddress","nodeType":"VariableDeclaration","scope":920,"src":"18972:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"18972:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":902,"name":"_signer","nodeType":"VariableDeclaration","scope":920,"src":"18996:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"18996:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":904,"name":"_sig","nodeType":"VariableDeclaration","scope":920,"src":"19013:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":903,"name":"bytes","nodeType":"ElementaryTypeName","src":"19013:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18971:60:0"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"name":"","nodeType":"VariableDeclaration","scope":920,"src":"19086:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"19086:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"19085:9:0"},"scope":921,"src":"18932:275:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":922,"src":"885:18324:0"}],"src":"0:19210:0"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event","signature":"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"},"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55":{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event","signature":"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55"},"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb":{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event","signature":"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb"},"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd":{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event","signature":"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd"},"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7"},"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7"},"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142"},"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event","signature":"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f"},"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454"},"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f"},"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event","signature":"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f"},"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5":{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event","signature":"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5"},"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9":{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event","signature":"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9"},"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158":{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event","signature":"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158"},"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d"},"0x5b00db39a072b9c10ede0c598bf9c262cd8e40a7057c19e3691a7d38dfa2c84e":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint64[]"},{"indexed":false,"name":"gasPxs","type":"uint64[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0x5b00db39a072b9c10ede0c598bf9c262cd8e40a7057c19e3691a7d38dfa2c84e"}},"links":{"WorkersImpl":"0xd000c374f42B9F7A3D41cD3F558257AC0e9f095D","PrincipalImpl":"0xA4a17067E2bE89b44F2C29B14c542a092Ca97188","TaskImpl":"0x50D93d6F75a55E748E1250889c4C3f40F279b2b6","SecretContractImpl":"0x9bA7B13Bcbe6870156af64AfF238783C43A95Ff1","UpgradeImpl":"0xEA89D8795a4C7635956dB0Ad45E02BfF2f92FC8b"},"address":"0x6BC487Bf1b844F973Ce850c1fb6EFB55cC9aF664","transactionHash":"0x209ae913c8a8e8964bbdc1ea73af7d8b85b571b5740200784a0b9c03c4a3318f"}},"schemaVersion":"3.0.10","updatedAt":"2019-10-08T15:15:00.754Z","devdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_optionalEthereumContractAddress":"Output state hash","_optionalEthereumData":"Output state hash","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_stateDeltaHash":"Input state delta hash","_taskId":"Unique taskId"}},"commitTaskFailure(bytes32,bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_taskId":"Unique taskId"}},"countSecretContracts()":{"return":"Number of deployed secret contracts"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash","_nonce":"Locally-computed nonce value for this deployment"}},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"createTaskRecords(bytes32[],uint64[],uint64[],uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimits":"ENG gas limit","_gasPxs":"ENG gas price in grains format (10 ** 8)","_inputsHashes":"Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_initStateDeltaHash":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumContractAddress":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumData":"Initial state delta hash as a result of the contract\'s constructor","_preCodeHash":"Predeployed bytecode hash","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deploySecretContractFailure(bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deposit(address,uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit","_custodian":"The worker\'s ETH address"}},"getActiveWorkers(uint256)":{"params":{"_blockNumber":"Block number"}},"getAllSecretContractAddresses()":{"return":"Array of secret contract addresses"},"getEpochSize()":{"return":"Epoch size"},"getFirstBlockNumber(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Block number"},"getReport(address)":{"params":{"_custodian":"The worker\'s custodian address"}},"getSecretContract(bytes32)":{"params":{"_scAddr":"Secret contract address"},"return":"SecretContract struct"},"getSecretContractAddresses(uint256,uint256)":{"params":{"_start":"Start of range","_stop":"End of range"},"return":"Subset of deployed secret contract addresses"},"getSigningAddress()":{"return":"Signing address"},"getTaskRecord(bytes32)":{"params":{"_taskId":"Unique identifier for a given task"},"return":"TaskRecord struct"},"getUpdatedEnigmaContractAddress()":{"return":"Updated Enigma contract address"},"getUserTaskDeployments(address)":{"params":{"_sender":"Task sender\'s ethereum address"},"return":"Current number for task deployments for user"},"getWorker(address)":{"params":{"_worker":"Worker\'s ethereum address"},"return":"Worker struct"},"getWorkerFromSigningAddress(address)":{"params":{"_signer":"Worker\'s signing address"},"return":"Ethereum addressWorker struct"},"getWorkerGroup(uint256,bytes32)":{"params":{"_blockNumber":"Block number the task record was mined","_scAddr":"Secret contract address"},"return":"Selected workers\' addresses"},"getWorkerParams(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes"},"getWorkersParams()":{"return":"Array of WorkersParams structs"},"isOwner()":{"return":"true if `msg.sender` is the owner of the contract."},"owner()":{"return":"the address of the owner."},"register(address,bytes,bytes)":{"params":{"_report":"The RLP encoded report returned by the IAS","_signature":"Signature","_signer":"The signer address, derived from the enclave public key"}},"renounceOwnership()":{"details":"Allows the current owner to relinquish control of the contract."},"returnFeesForTask(bytes32)":{"params":{"_taskId":"Unique taskId"}},"setWorkersParams(uint256,uint256,bytes)":{"params":{"_blockNumber":"Block number principal node is attempting to set worker params","_seed":"The random integer generated by the enclave","_sig":"Principal node\'s signature"}},"transferOwnership(address)":{"details":"Allows the current owner to transfer control of the contract to a newOwner.","params":{"newOwner":"The address to transfer ownership to."}},"transferWorkerStakePostUpgrade(address,address,bytes)":{"params":{"_sig":"Signature","_signer":"Newly-registered worker address","_workerAddress":"Newly-registered worker address"}},"upgradeEnigmaContract(address)":{"params":{"_updatedEnigmaContractAddress":"Updated newly-deployed Enigma contract address"}},"verifyReport(bytes,bytes)":{"params":{"_data":"The report itself","_signature":"The signature of the report"}},"withdraw(uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit"}}}},"userdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee."},"commitTaskFailure(bytes32,bytes32,uint64,bytes)":{"notice":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure."},"countSecretContracts()":{"notice":"Check if secret contract has been deployed"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"notice":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid."},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"notice":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"createTaskRecords(bytes32[],uint64[],uint64[],uint256)":{"notice":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deploySecretContractFailure(bytes32,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deposit(address,uint256)":{"notice":"Deposits ENG stake into contract from worker. Worker must be registered to do so."},"getActiveWorkers(uint256)":{"notice":"Get active workers before a certain block number"},"getAllSecretContractAddresses()":{"notice":"Get all secret contract addresses"},"getEpochSize()":{"notice":"Get the epoch block size"},"getFirstBlockNumber(uint256)":{"notice":"Get the first block number of an epoch that a given block number belongs to"},"getReport(address)":{"notice":"The RLP encoded report returned by the IAS server"},"getSecretContract(bytes32)":{"notice":"Get a SecretContract struct given a particular secret contract address"},"getSecretContractAddresses(uint256,uint256)":{"notice":"Get deployed secret contract addresses within a range"},"getSigningAddress()":{"notice":"Get signing address of calling worker"},"getTaskRecord(bytes32)":{"notice":"Get a TaskRecord struct given a particular task\'s ID"},"getUpdatedEnigmaContractAddress()":{"notice":"Get updated Enigma contract address"},"getUserTaskDeployments(address)":{"notice":"Get the current number/index (used as unique nonce value) of task deployments for a given user user"},"getWorker(address)":{"notice":"Get Worker struct from a given worker\'s ethereum address"},"getWorkerFromSigningAddress(address)":{"notice":"Get Worker struct from a given worker\'s signing address"},"getWorkerGroup(uint256,bytes32)":{"notice":"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address."},"getWorkerParams(uint256)":{"notice":"Get worker params for an epoch given a particular block number"},"getWorkersParams()":{"notice":"Get epoch-based history of worker params information"},"login()":{"notice":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process."},"logout()":{"notice":"Logout worker. Worker must be logged in to do so."},"register(address,bytes,bytes)":{"notice":"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks."},"renounceOwnership()":{"notice":"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."},"returnFeesForTask(bytes32)":{"notice":"Return the task fee to the task creator when too many blocks have elapsed without task resolution."},"setWorkersParams(uint256,uint256,bytes)":{"notice":"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node"},"transferWorkerStakePostUpgrade(address,address,bytes)":{"notice":"Upgrade Enigma Contract"},"upgradeEnigmaContract(address)":{"notice":"Upgrade Enigma Contract"},"verifyReport(bytes,bytes)":{"notice":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate."},"withdraw(uint256)":{"notice":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so."}}}}')},function(e){e.exports=JSON.parse('{"contractName":"EnigmaToken","abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"INITIAL_SUPPLY","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_from\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"INITIAL_SUPPLY\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"details\\":\\"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. \\",\\"methods\\":{\\"approve(address,uint256)\\":{\\"details\\":\\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\",\\"params\\":{\\"_spender\\":\\"The address which will spend the funds.\\",\\"_value\\":\\"The amount of tokens to be spent.\\"}},\\"balanceOf(address)\\":{\\"details\\":\\"Gets the balance of the specified address.\\",\\"params\\":{\\"owner\\":\\"The address to query the balance of.\\"},\\"return\\":\\"An uint256 representing the amount owned by the passed address.\\"},\\"constructor\\":{\\"details\\":\\"EnigmaToken Constructor Runs only on initial contract creation.\\"},\\"decimals()\\":{\\"return\\":\\"the number of decimals of the token.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"spender\\":\\"The address which will spend the funds.\\",\\"subtractedValue\\":\\"The amount of tokens to decrease the allowance by.\\"}},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"addedValue\\":\\"The amount of tokens to increase the allowance by.\\",\\"spender\\":\\"The address which will spend the funds.\\"}},\\"name()\\":{\\"return\\":\\"the name of the token.\\"},\\"symbol()\\":{\\"return\\":\\"the symbol of the token.\\"},\\"totalSupply()\\":{\\"details\\":\\"Total number of tokens in existence\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"Transfer token for a specified address when not paused\\",\\"params\\":{\\"_to\\":\\"The address to transfer to.\\",\\"_value\\":\\"The amount to be transferred.\\"}},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"Transfer tokens from one address to another when not paused\\",\\"params\\":{\\"_from\\":\\"address The address which you want to send tokens from\\",\\"_to\\":\\"address The address which you want to transfer to\\",\\"_value\\":\\"uint256 the amount of tokens to be transferred\\"}}},\\"title\\":\\"Enigma Token\\"},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":\\"EnigmaToken\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":{\\"keccak256\\":\\"0x1d072d408420008c3d39b1006b9adbbe472f55fc314a8eb80d9861edfeb54c73\\",\\"urls\\":[\\"bzzr://9ec40fae3d143258454c5d7c25811f7969f1ef64abbf88ab96d753d6322906a4\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\":{\\"keccak256\\":\\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\\",\\"urls\\":[\\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\":{\\"keccak256\\":\\"0xe195405e9993d575173cdb5dd408db7459a026b9a98085c1a3b676f020f46584\\",\\"urls\\":[\\"bzzr://4463a0d4f49767f59c02f2a987b90d48e0d31b3ed3424f3e743496f102f96044\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\":{\\"keccak256\\":\\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\\",\\"urls\\":[\\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b506040518060400160405280600681526020017f456e69676d6100000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f454e470000000000000000000000000000000000000000000000000000000000815250600882600390805190602001906100959291906101a9565b5081516100a99060049060208501906101a9565b506005805460ff191660ff92909216919091179055506100d990503366354a6ba7a180006100de602090811b901c565b610244565b6001600160a01b0382166100f157600080fd5b61010a8160025461019060201b6106741790919060201c565b6002556001600160a01b0382166000908152602081815260409091205461013a918390610674610190821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156101a257600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101ea57805160ff1916838001178555610217565b82800160010185558215610217579182015b828111156102175782518255916020019190600101906101fc565b50610223929150610227565b5090565b61024191905b80821115610223576000815560010161022d565b90565b6107d3806102536000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610452565b6100c161046d565b6101626004803603604081101561025c57600080fd5b506001600160a01b0381351690602001356104ce565b6101626004803603604081101561028857600080fd5b506001600160a01b038135169060200135610517565b61017e600480360360408110156102b457600080fd5b506001600160a01b0381358116916020013516610523565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e838361052f565b9392505050565b60025490565b60006103888484846105ab565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006001600160a01b0383166103b957600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61067416565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006001600160a01b0383166104e357600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61068616565b600061036e838361069b565b600061036e83836106b1565b60006001600160a01b03831661054457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6001600160a01b03831660009081526001602090815260408083203384529091528120546105df908363ffffffff61068616565b6001600160a01b038516600090815260016020908152604080832033845290915290205561060e8484846106dc565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561036e57600080fd5b60008282111561069557600080fd5b50900390565b60006106a83384846106dc565b50600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166106ef57600080fd5b6001600160a01b038316600090815260208190526040902054610718908263ffffffff61068616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461074d908263ffffffff61067416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820cd0470b2dddcc56c882132081664f5106c4c77a70e625dbc86f5a15d248f86ec0029","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610452565b6100c161046d565b6101626004803603604081101561025c57600080fd5b506001600160a01b0381351690602001356104ce565b6101626004803603604081101561028857600080fd5b506001600160a01b038135169060200135610517565b61017e600480360360408110156102b457600080fd5b506001600160a01b0381358116916020013516610523565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e838361052f565b9392505050565b60025490565b60006103888484846105ab565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006001600160a01b0383166103b957600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61067416565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006001600160a01b0383166104e357600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61068616565b600061036e838361069b565b600061036e83836106b1565b60006001600160a01b03831661054457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6001600160a01b03831660009081526001602090815260408083203384529091528120546105df908363ffffffff61068616565b6001600160a01b038516600090815260016020908152604080832033845290915290205561060e8484846106dc565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561036e57600080fd5b60008282111561069557600080fd5b50900390565b60006106a83384846106dc565b50600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166106ef57600080fd5b6001600160a01b038316600090815260208190526040902054610718908263ffffffff61068616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461074d908263ffffffff61067416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820cd0470b2dddcc56c882132081664f5106c4c77a70e625dbc86f5a15d248f86ec0029","sourceMap":"660:1642:2:-;;;913:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;913:105:2;405:163:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:1:2;501:4:28;493:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;515:16:28;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:28;:20;;-1:-1:-1;;541:20:28;;;;;;;;;;;;-1:-1:-1;978:33:2;;-1:-1:-1;984:10:2;753:17;978:5;;;;;:33;;:::i;:::-;660:1642;;6198:263:27;-1:-1:-1;;;;;6272:21:27;;6264:30;;;;;;6320:23;6337:5;6320:12;;:16;;;;;;:23;;;;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:27;;:9;:18;;;;;;;;;;;;:29;;6397:5;;6374:22;;;;;:29;;:::i;:::-;-1:-1:-1;;;;;6353:18:27;;:9;:18;;;;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;:9;;6418:36;;;;;;;;;;6198:263;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:26:o;660:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;660:1642:2;;;-1:-1:-1;660:1642:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","deployedSourceMap":"660:1642:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:1642:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:128:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2026:128:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;936:89:27;;;:::i;:::-;;;;;;;;;;;;;;;;1620:150:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1620:150:2;;;;;;;;;;;;;;;;;:::i;712:58::-;;;:::i;930:81:28:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4233:317:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:27;;;;;;;;:::i;1234:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:27;-1:-1:-1;;;;;1234:104:27;;:::i;771:85:28:-;;;:::i;5058:327:27:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:27;;;;;;;;:::i;1200:120:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1200:120:2;;;;;;;;:::i;2160:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2160:139:2;;;;;;;;;;:::i;628:81:28:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2026:128:2:-;2093:4;2116:31;2130:8;2140:6;2116:13;:31::i;:::-;2109:38;2026:128;-1:-1:-1;;;2026:128:2:o;936:89:27:-;1006:12;;936:89;:::o;1620:150:2:-;1702:4;1725:38;1744:5;1751:3;1756:6;1725:18;:38::i;:::-;1718:45;1620:150;-1:-1:-1;;;;1620:150:2:o;712:58::-;753:17;712:58;:::o;930:81:28:-;995:9;;;;930:81;:::o;4233:317:27:-;4313:4;-1:-1:-1;;;;;4337:21:27;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:27;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:27;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;4462:60;;;;;;;;;;;-1:-1:-1;4539:4:27;4233:317;;;;:::o;1234:104::-;-1:-1:-1;;;;;1315:16:27;1289:7;1315:16;;;;;;;;;;;;1234:104::o;771:85:28:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;5058:327:27;5143:4;-1:-1:-1;;;;;5167:21:27;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:27;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1200:120:2:-;1263:4;1286:27;1301:3;1306:6;1286:14;:27::i;2160:139::-;2234:7;2260:32;2276:6;2283:8;2260:15;:32::i;2735:238:27:-;2800:4;-1:-1:-1;;;;;2824:21:27;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:27;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;2909:36;;;;;;;;;;;-1:-1:-1;2962:4:27;2735:238;;;;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:27;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:27;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:27;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;;;;;;;;;;;;-1:-1:-1;3719:4:27;3436:294;;;;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;1205:145;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:26;;;1205:145::o;1962:137:27:-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;:::-;-1:-1:-1;2088:4:27;1962:137;;;;:::o;1669:129::-;-1:-1:-1;;;;;1767:15:27;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;5599:256::-;-1:-1:-1;;;;;5686:16:27;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:27;;:9;:15;;;;;;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:27;;;:9;:15;;;;;;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:27;;;:9;:13;;;;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o","source":"pragma solidity ^0.5.0;\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\";\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\";\\n\\n/**\\n * @title Enigma Token\\n * @dev ERC20 Enigma Token (ENG)\\n *\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\n * units referred to as \'Grains\'.\\n *\\n * ENG are displayed using 8 decimal places of precision.\\n *\\n * 1 ENG is equivalent to:\\n *   100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n *\\n * 150 million ENG (total supply) is equivalent to:\\n *   15000000000000000 == 150000000 * 10**8 == 1e17\\n *\\n * All initial ENG Grains are assigned to the creator of\\n * this contract.\\n *\\n */\\ncontract EnigmaToken is ERC20, ERC20Detailed {\\n\\n    uint256 public constant INITIAL_SUPPLY = 150000000 * 10**8;  // 150 million ENG specified in Grains\\n\\n    /**\\n    * @dev EnigmaToken Constructor\\n    * Runs only on initial contract creation.\\n    */\\n    constructor() public ERC20Detailed(\\"Enigma\\", \\"ENG\\", 8) {\\n        _mint(msg.sender, INITIAL_SUPPLY);\\n    }\\n\\n    /**\\n    * @dev Transfer token for a specified address when not paused\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\n        return super.transfer(_to, _value);\\n    }\\n\\n    /**\\n    * @dev Transfer tokens from one address to another when not paused\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint256 the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\n        return super.transferFrom(_from, _to, _value);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint256 _value) public returns (bool) {\\n        return super.approve(_spender, _value);\\n    }\\n\\n    function allowance(address _owner, address _spender) public view returns (uint256) {\\n        return super.allowance(_owner,_spender);\\n    }\\n\\n}","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1745]},"id":1746,"nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1650,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12706,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1651,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12764,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1652,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":12705,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$12705","typeString":"contract ERC20"}},"id":1653,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1654,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":12763,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$12763","typeString":"contract ERC20Detailed"}},"id":1655,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[12705,12763,12832],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1745,"linearizedBaseContracts":[1745,12763,12705,12832],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1662,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1745,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1676,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12847,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1673,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1670,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12620,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1677,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1668,"modifierName":{"argumentTypes":null,"id":1664,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12763,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$12763_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1745,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1692,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1688,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1689,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1686,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12349,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1685,"id":1691,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"name":"_to","nodeType":"VariableDeclaration","scope":1693,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1681,"name":"_value","nodeType":"VariableDeclaration","scope":1693,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"name":"","nodeType":"VariableDeclaration","scope":1693,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1745,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12349,"visibility":"public"},{"body":{"id":1711,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1706,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1707,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1708,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1704,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":12434,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1703,"id":1710,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"name":"_from","nodeType":"VariableDeclaration","scope":1712,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1697,"name":"_to","nodeType":"VariableDeclaration","scope":1712,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1699,"name":"_value","nodeType":"VariableDeclaration","scope":1712,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"name":"","nodeType":"VariableDeclaration","scope":1712,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1745,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":12434,"visibility":"public"},{"body":{"id":1727,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1723,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1724,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1721,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":12385,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1720,"id":1726,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"name":"_spender","nodeType":"VariableDeclaration","scope":1728,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1716,"name":"_value","nodeType":"VariableDeclaration","scope":1728,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"name":"","nodeType":"VariableDeclaration","scope":1728,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1745,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":12385,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1739,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1740,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1737,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12330,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1742,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"name":"_owner","nodeType":"VariableDeclaration","scope":1744,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1732,"name":"_spender","nodeType":"VariableDeclaration","scope":1744,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"name":"","nodeType":"VariableDeclaration","scope":1744,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1745,"src":"2160:139:2","stateMutability":"view","superFunction":12330,"visibility":"public"}],"scope":1746,"src":"660:1642:2"}],"src":"0:2302:2"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1745]},"id":1746,"nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1650,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12706,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1651,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12764,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1652,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":12705,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$12705","typeString":"contract ERC20"}},"id":1653,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1654,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":12763,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$12763","typeString":"contract ERC20Detailed"}},"id":1655,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[12705,12763,12832],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1745,"linearizedBaseContracts":[1745,12763,12705,12832],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1662,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1745,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1676,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12847,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1673,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1670,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12620,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1677,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1668,"modifierName":{"argumentTypes":null,"id":1664,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12763,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$12763_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1745,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1692,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1688,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1689,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1686,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12349,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1685,"id":1691,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"name":"_to","nodeType":"VariableDeclaration","scope":1693,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1681,"name":"_value","nodeType":"VariableDeclaration","scope":1693,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"name":"","nodeType":"VariableDeclaration","scope":1693,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1745,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12349,"visibility":"public"},{"body":{"id":1711,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1706,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1707,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1708,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1704,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":12434,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1703,"id":1710,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"name":"_from","nodeType":"VariableDeclaration","scope":1712,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1697,"name":"_to","nodeType":"VariableDeclaration","scope":1712,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1699,"name":"_value","nodeType":"VariableDeclaration","scope":1712,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"name":"","nodeType":"VariableDeclaration","scope":1712,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1745,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":12434,"visibility":"public"},{"body":{"id":1727,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1723,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1724,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1721,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":12385,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1720,"id":1726,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"name":"_spender","nodeType":"VariableDeclaration","scope":1728,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1716,"name":"_value","nodeType":"VariableDeclaration","scope":1728,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"name":"","nodeType":"VariableDeclaration","scope":1728,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1745,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":12385,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1739,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1740,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1737,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12330,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1742,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"name":"_owner","nodeType":"VariableDeclaration","scope":1744,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1732,"name":"_spender","nodeType":"VariableDeclaration","scope":1744,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"name":"","nodeType":"VariableDeclaration","scope":1744,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1745,"src":"2160:139:2","stateMutability":"view","superFunction":12330,"visibility":"public"}],"scope":1746,"src":"660:1642:2"}],"src":"0:2302:2"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}},"links":{},"address":"0x620b9C04c5Ec920EB563bD5089Fe91bC117231D4","transactionHash":"0x1d80f371b4f0df83c3aa5ef6b787db1c24ac5624eab16da2dbd91273d4573927"}},"schemaVersion":"3.0.10","updatedAt":"2019-10-08T15:15:00.709Z","devdoc":{"details":"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. ","methods":{"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.","params":{"_spender":"The address which will spend the funds.","_value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"Gets the balance of the specified address.","params":{"owner":"The address to query the balance of."},"return":"An uint256 representing the amount owned by the passed address."},"constructor":{"details":"EnigmaToken Constructor Runs only on initial contract creation."},"decimals()":{"return":"the number of decimals of the token."},"decreaseAllowance(address,uint256)":{"details":"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"spender":"The address which will spend the funds.","subtractedValue":"The amount of tokens to decrease the allowance by."}},"increaseAllowance(address,uint256)":{"details":"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"addedValue":"The amount of tokens to increase the allowance by.","spender":"The address which will spend the funds."}},"name()":{"return":"the name of the token."},"symbol()":{"return":"the symbol of the token."},"totalSupply()":{"details":"Total number of tokens in existence"},"transfer(address,uint256)":{"details":"Transfer token for a specified address when not paused","params":{"_to":"The address to transfer to.","_value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another when not paused","params":{"_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}}},"title":"Enigma Token"},"userdoc":{"methods":{}}}')},function(e,t){e.exports=require("jayson/lib/client/browser")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("retry")},function(e,t){e.exports=require("ethereumjs-abi")},function(e,t,n){e.exports=n(17)},function(e,t){e.exports=require("core-js/stable")},function(e,t){e.exports=require("regenerator-runtime/runtime")},function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"ERROR",function(){return h}),n.d(r,"DEPOSIT_TRANSACTION_HASH",function(){return v}),n.d(r,"DEPOSIT_CONFIRMATION",function(){return C}),n.d(r,"DEPOSIT_RECEIPT",function(){return E}),n.d(r,"WITHDRAW_TRANSACTION_HASH",function(){return V}),n.d(r,"WITHDRAW_CONFIRMATION",function(){return x}),n.d(r,"WITHDRAW_RECEIPT",function(){return N}),n.d(r,"LOGIN_TRANSACTION_HASH",function(){return L}),n.d(r,"LOGIN_CONFIRMATION",function(){return w}),n.d(r,"LOGIN_RECEIPT",function(){return P}),n.d(r,"LOGOUT_TRANSACTION_HASH",function(){return R}),n.d(r,"LOGOUT_CONFIRMATION",function(){return A}),n.d(r,"LOGOUT_RECEIPT",function(){return W}),n.d(r,"DEPLOY_SC_ADDR_RESULT",function(){return q}),n.d(r,"DEPLOY_SC_ETH_TRANSACTION_HASH",function(){return M}),n.d(r,"DEPLOY_SC_ETH_CONFIRMATION",function(){return U}),n.d(r,"DEPLOY_SC_ETH_RECEIPT",function(){return F}),n.d(r,"DEPLOY_SC_ENG_RECEIPT",function(){return B}),n.d(r,"CREATE_TASK",function(){return H}),n.d(r,"CREATE_TASK_INPUT",function(){return O}),n.d(r,"CREATE_TASK_RECORD_TRANSACTION_HASH",function(){return G}),n.d(r,"CREATE_TASK_RECORD_CONFIRMATION",function(){return z}),n.d(r,"CREATE_TASK_RECORD_RECEIPT",function(){return K}),n.d(r,"CREATE_TASK_RECORD",function(){return j}),n.d(r,"CREATE_TASK_RECORDS_TRANSACTION_HASH",function(){return Y}),n.d(r,"CREATE_TASK_RECORDS_CONFIRMATION",function(){return J}),n.d(r,"CREATE_TASK_RECORDS_RECEIPT",function(){return Z}),n.d(r,"CREATE_TASK_RECORDS",function(){return X}),n.d(r,"SEND_TASK_INPUT_RESULT",function(){return Q}),n.d(r,"POLL_TASK_STATUS_RESULT",function(){return ee}),n.d(r,"GET_TASK_RESULT_RESULT",function(){return te}),n.d(r,"DEPLOY_SECRET_CONTRACT_RESULT",function(){return ne}),n.d(r,"POLL_TASK_ETH_RESULT",function(){return re});n(15),n(16);var a=n(2),i=n.n(a),s=n(3),o=n.n(s),d=n(0),p=n.n(d),l=n(7),c=n.n(l),y=n(4),u=n(5),m=n.n(u);p.a.options.usePureJavaScript=!0;var f=c.a.ec;function _(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;d=g(d),e+=i.a.BigInt(d.length/2).toString(16).padStart(16,"0")+d}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function b(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;e=_(e+=i.a.BigInt(d.length).toString(16).padStart(16,"0"),d)}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function g(e){return"0x"==e.substring(0,2)?e.substring(2):e}var T={test:function(){return"hello2"},generateScAddr:function(e,t){return o.a.soliditySha3({t:"bytes",v:e},{t:"uint",v:t})},hash:function(e){var t=_("",e);return o.a.soliditySha3({t:"bytes",v:t})},principalHash:function(e,t,n,r){var a="";return a=b(a=_(a,[e,t]),[n,r]),o.a.soliditySha3({t:"bytes",v:a})},commitReceiptsHash:function(e,t,n,r,a,i,s,d,p){var l="";return l=_(l,[e]),l=_(l=b(l,[t]),[n]),l=_(l=b(l,[r,a,i]),[s,d,p]),o.a.soliditySha3({t:"bytes",v:l})},getDerivedKey:function(e,t){var n=new f("secp256k1");128==e.length&&(e="04"+e);var r=n.keyFromPrivate(t,"hex"),a=n.keyFromPublic(e,"hex").getPublic().mul(r.getPrivate()),i=2|(a.getY().isOdd()?1:0),s=a.getX(),o=y.Buffer.from([i]),d=s.toArrayLike(y.Buffer,"be",32),l=p.a.md.sha256.create();return l.update(o.toString("binary")),l.update(d.toString("binary")),l.digest().toHex()},encryptMessage:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:p.a.random.getBytesSync(12),r=p.a.util.hexToBytes(e),a=p.a.cipher.createCipher("AES-GCM",r);return a.start({iv:n}),a.update(p.a.util.createBuffer(t)),a.finish(),a.output.putBuffer(a.mode.tag).putBytes(n).toHex()},decryptMessage:function(e,t){var n=p.a.util.hexToBytes(e),r=y.Buffer.from(t,"hex"),a=p.a.util.createBuffer(r.slice(-12)),i=p.a.util.createBuffer(r.slice(-28,-12)),s=p.a.cipher.createDecipher("AES-GCM",n);if(s.start({iv:a,tag:i}),s.update(p.a.util.createBuffer(r.slice(0,-28))),s.finish())return s.output.toHex();throw new Error("decipher did not finish")},toGrains:function(e){return e*Math.pow(10,8)}};T.remove0x=g,T.hexToAscii=function(e){if("number"!=typeof e&&"string"!=typeof e)return"";e=e.toString().replace(/\s+/gi,"");for(var t=[],n=0;n<e.length;n+=2){var r=parseInt(e.substr(n,2),16);isNaN(r)||0===r||t.push(String.fromCharCode(r))}return t.join("")},T.sleep=function(e){return new Promise(function(t){return setTimeout(t,e)})},T.gzip=function(e){return new Promise(function(t,n){m.a.gzip(e,function(e,r){e?n(e):t(r)})})},T.gunzip=function(e){return new Promise(function(t,n){m.a.gunzip(e,function(e,r){e?n(e):t(r)})})};var D=T,S=n(8),I=n(9),k=n(1),$=n.n(k),h="error",v="depositTransactionHash",C="depositConfirmation",E="depositReceipt",V="withdrawTransactionHash",x="withdrawConfirmation",N="withdrawReceipt",L="loginTransactionHash",w="loginConfirmation",P="loginReceipt",R="logoutTransactionHash",A="logoutConfirmation",W="logoutReceipt",q="deploySCAddrResult",M="deploySCEthTransactionHash",U="deploySCEthConfirmation",F="deploySCEthReceipt",B="deploySCEngReceipt",H="createTask",O="createTaskInput",G="createTaskRecordTransactionHash",z="createTaskRecordConfirmation",K="createTaskRecordReceipt",j="createTaskRecord",Y="createTaskRecordsTransactionHash",J="createTaskRecordsConfirmation",Z="createTaskRecordsReceipt",X="createTaskRecords",Q="sendTaskInputResult",ee="pollTaskStatusResult",te="getTaskResultResult",ne="deploySecretContractResult",re="pollTaskETHResult";function ae(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function ie(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){ae(i,r,a,s,o,"next",e)}function o(e){ae(i,r,a,s,o,"throw",e)}s(void 0)})}}function se(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var oe=function(){function e(t,n,r,a,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.enigmaContract=n,this.tokenContract=r,this.txDefaults=a,this.enigma=i}var t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_;return t=e,(n=[{key:"findBySigningAddress",value:(_=ie(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorkerFromSigningAddress(t).call();case 2:return n=e.sent,e.abrupt("return",{account:n[0],status:parseInt(n[1][1]),report:n[1][2],balance:parseInt(n[1][3]),logs:n[1][4]});case 4:case"end":return e.stop()}},e,this)})),function(e){return _.apply(this,arguments)})},{key:"getWorkerStatus",value:(f=ie(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return n=e.sent,e.abrupt("return",parseInt(n.status));case 4:case"end":return e.stop()}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"isDeployed",value:(m=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getSecretContract(t).call();case 3:return e.t1=e.sent.status,e.t2=(0,e.t0)(e.t1),e.abrupt("return",1===e.t2);case 6:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"countSecretContracts",value:(u=ie(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.countSecretContracts().call();case 3:return e.t1=e.sent,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(){return u.apply(this,arguments)})},{key:"getSecretContractAddresses",value:(y=ie(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContractAddresses(t,n).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e,t){return y.apply(this,arguments)})},{key:"getAllSecretContractAddresses",value:(c=ie(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getAllSecretContractAddresses().call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(){return c.apply(this,arguments)})},{key:"getCodeHash",value:(l=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.codeHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"countStateDeltas",value:(p=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.stateDeltaHashes.length);case 3:case"end":return e.stop()}},e,this)})),function(e){return p.apply(this,arguments)})},{key:"getStateDeltaHash",value:(d=ie(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes[e.t0]);case 4:case"end":return e.stop()}},e,this)})),function(e,t){return d.apply(this,arguments)})},{key:"getStateDeltaHashes",value:(o=ie(regeneratorRuntime.mark(function e(t,n,r){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.t1=r,e.abrupt("return",e.sent.stateDeltaHashes.slice(e.t0,e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e,t,n){return o.apply(this,arguments)})},{key:"isValidDeltaHash",value:(s=ie(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes.includes(e.t0));case 4:case"end":return e.stop()}},e,this)})),function(e,t){return s.apply(this,arguments)})},{key:"login",value:function(e){var t=this,n=new $.a;return ie(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.login().send({from:e}).on("transactionHash",function(e){n.emit(L,e)}).on("confirmation",function(e,t){n.emit(w,e,t)}).on("receipt",function(e){n.emit(P,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(h,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"logout",value:function(e){var t=this,n=new $.a;return ie(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.logout().send({from:e}).on("transactionHash",function(e){n.emit(R,e)}).on("confirmation",function(e,t){n.emit(A,e,t)}).on("receipt",function(e){n.emit(W,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(h,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"deposit",value:function(e,t){var n=this,r=new $.a;return ie(regeneratorRuntime.mark(function a(){var i;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,n.tokenContract.methods.balanceOf(e).call();case 2:if(!(a.sent<t)){a.next=7;break}return"Not enough tokens in wallet",r.emit("error",{name:"NotEnoughTokens",message:"Not enough tokens in wallet"}),a.abrupt("return");case 7:return a.next=9,n.tokenContract.methods.approve(n.enigmaContract.options.address,t).send({from:e});case 9:return a.prev=9,a.next=12,n.enigmaContract.methods.deposit(e,t).send({from:e}).on("transactionHash",function(e){r.emit(v,e)}).on("confirmation",function(e,t){r.emit(C,e,t)});case 12:i=a.sent,r.emit(E,i),a.next=19;break;case 16:a.prev=16,a.t0=a.catch(9),r.emit(h,a.t0.message);case 19:case"end":return a.stop()}},a,null,[[9,16]])}))(),r}},{key:"withdraw",value:function(e,t){var n=this,r=new $.a;return ie(regeneratorRuntime.mark(function a(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,n.enigmaContract.methods.withdraw(t).send({from:e}).on("transactionHash",function(e){r.emit(V,e)}).on("confirmation",function(e,t){r.emit(x,e,t)}).on("receipt",function(e){r.emit(N,e)});case 3:a.next=8;break;case 5:a.prev=5,a.t0=a.catch(0),r.emit(h,a.t0.message);case 8:case"end":return a.stop()}},a,null,[[0,5]])}))(),r}},{key:"getBalance",value:(i=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getWorker(t).call();case 3:return e.t1=e.sent.balance,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e){return i.apply(this,arguments)})},{key:"getWorkerSignerAddr",value:(a=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return e.abrupt("return",e.sent.signer);case 3:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})}])&&se(t.prototype,n),r&&se(t,r),e}();var de=function e(t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.inputsHash=D.hash([n,r,_?f:t,o]),this.scAddr=t,this.encryptedFn=n,this.encryptedAbiEncodedArgs=r,this.gasLimit=a,this.gasPx=i,this.msgId=s,this.userPubKey=o,this.firstBlockNumber=d,this.workerAddress=p,this.workerEncryptionKey=l,this.sender=c,this.userTaskSig=y,this.nonce=u,this.preCode=m,this.preCodeHash=f,this.isContractDeploymentTask=_,this.transactionHash="",this.taskId="",this.receipt="",this.ethStatus=0,this.proof="",this.creationBlockNumber=-1,this.encryptedAbiEncodedOutputs="",this.delta="",this.usedGas="",this.ethereumPayload="",this.ethereumAddress="",this.workerTaskSig="",this.engStatus="null",this.decryptedOutput=""},pe=n(10),le=n.n(pe),ce=n(11),ye=n.n(ce),ue=n(12),me=n.n(ue),fe=n(13),_e=n(6),be=n.n(_e);function ge(e){return(ge="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Te(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function De(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){Te(i,r,a,s,o,"next",e)}function o(e){Te(i,r,a,s,o,"throw",e)}s(void 0)})}}function Se(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Ie=function(){function e(t,n,r,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.txDefaults=i,this.config={},this.config.retry={},this.config.retry.retries=s.retry&&null!=s.retry.retries?s.retry.retries:5,this.config.retry.factor=s.retry&&null!=s.retry.factor?s.retry.factor:2,this.config.retry.minTimeout=s.retry&&null!=s.retry.minTimeout?s.retry.minTimeout:2e3,this.config.retry.maxTimeout=s.retry&&null!=s.retry.maxTimeout?s.retry.maxTimeout:"Infinity",this.config.retry.randomize=!s.retry||(null==s.retry.randomize||s.retry.randomize);this.client=le()(function(e,t){ye.a.post(a,JSON.parse(e),{headers:{"Content-Type":"application/json",credentials:"include"}}).then(function(e){if(h in e.data)t(e.data.error,null);else{var n=JSON.stringify(e.data.result);t(null,n)}}).catch(function(e){t({code:-32e3,message:e.message},null)})},{}),this.workerParamsCache={},this.selectedWorkerGroupCache={},this.taskKeyLocalStorage={},this.createContracts(n,r)}var t,n,r,a,s,d,l,c,y;return t=e,n=[{key:"admin",value:function(){this.admin=new oe(this.web3,this.enigmaContract,this.tokenContract,this.txDefaults,this)}},{key:"createContracts",value:function(e,t){this.enigmaContract=new this.web3.eth.Contract(S.abi,e,this.txDefaults),this.tokenContract=new this.web3.eth.Contract(I.abi,t,this.txDefaults)}},{key:"createTask",value:function(e,t,n,r,a,i,s){var o=this,d=new $.a;return De(regeneratorRuntime.mark(function p(){var l,c,y,u,m,f,_,b,g,T,S,I,k,$,v,C,E,V,x,N,L,w,P,R,A,W,q,M;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:return p.t0=parseInt,p.next=3,o.enigmaContract.methods.getUserTaskDeployments(a).call();case 3:if(p.t1=p.sent,l=(0,p.t0)(p.t1),c=s?D.generateScAddr(a,l):i,!s){p.next=17;break}if(!Buffer.isBuffer(i)){p.next=14;break}return y=i,p.next=11,D.gzip(y);case 11:u=p.sent,p.next=15;break;case 14:throw Error("PreCode expected to be a Buffer, instead got "+ge(i));case 15:p.next=19;break;case 17:y="",u="";case 19:for(m=s?o.web3.utils.soliditySha3({t:"bytes",value:y.toString("hex")}):"",f=void 0===t||0===t.length?[[],[]]:t[0].map(function(e,n){return t.map(function(e){return e[n]})}),_=D.remove0x(o.web3.eth.abi.encodeParameters(f[1],f[0])),b=[],g=0;g<_.length;g+=2)b.push(parseInt(_.substr(g,2),16));return p.next=26,o.web3.eth.getBlockNumber();case 26:return T=p.sent,p.next=29,o.getWorkerParams(T);case 29:return S=p.sent,I=S.firstBlockNumber,p.next=33,o.selectWorkerGroup(c,S,1)[0];case 33:return k=(k=p.sent).toLowerCase().slice(-40),$=o.obtainTaskKeyPair(),v=$.publicKey,C=$.privateKey,p.prev=36,p.next=39,new Promise(function(e,t){o.client.request("getWorkerEncryptionKey",{workerAddress:k,userPubKey:v},function(n,r){n?t(n):e(r)})});case 39:if(E=p.sent,V=E.result,x=E.id,N=V.workerEncryptionKey,L=V.workerSig,w="0x0000000000000013456e69676d612055736572204d6573736167650000000000000040"+N,P=(P=be.a.recover("0x"+L,o.web3.utils.soliditySha3({t:"bytes",value:w}))).toLowerCase().slice(-40),k===P){p.next=50;break}console.error("Worker address",k,"!= recovered address",P),d.emit(h,{name:"InvalidWorker",message:"Invalid worker encryption key + signature combo ".concat(k," != ").concat(P)}),p.next=58;break;case 50:return R=D.getDerivedKey(N,C),A=D.encryptMessage(R,e),W=D.encryptMessage(R,Buffer.from(b)),q=o.web3.utils.soliditySha3({t:"bytes",v:A},{t:"bytes",v:W}),p.next=56,o.web3.eth.sign(q,a);case 56:M=p.sent,d.emit(H,new de(c,A,W,n,r,x,v,I,k,N,a,M,l,u.toString("base64"),m,s));case 58:p.next=63;break;case 60:p.prev=60,p.t2=p.catch(36),d.emit(h,p.t2);case 63:case"end":return p.stop()}},p,null,[[36,60]])}))(),d}},{key:"createTaskRecord",value:function(e){var t=this,n=new $.a;return De(regeneratorRuntime.mark(function r(){var a;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.tokenContract.methods.balanceOf(e.sender).call();case 2:if(!(r.sent<e.gasLimit*e.gasPx)){r.next=6;break}return n.emit(h,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 6:return r.next=8,t.tokenContract.methods.approve(t.enigmaContract.options.address,e.gasLimit*e.gasPx).send({from:e.sender});case 8:if(r.prev=8,!e.isContractDeploymentTask){r.next=15;break}return r.next=12,t.enigmaContract.methods.createDeploymentTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber,e.nonce).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(G,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 12:r.t0=r.sent,r.next=18;break;case 15:return r.next=17,t.enigmaContract.methods.createTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(G,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 17:r.t0=r.sent;case 18:a=r.t0,e.taskId=a.events.TaskRecordCreated.returnValues.taskId,e.receipt=a,e.ethStatus=1,e.creationBlockNumber=a.blockNumber,n.emit(K,a),n.emit(j,e),r.next=30;break;case 27:r.prev=27,r.t1=r.catch(8),n.emit(h,r.t1.message);case 30:case"end":return r.stop()}},r,null,[[8,27]])}))(),n}},{key:"createTaskRecords",value:function(e){var t=this,n=new $.a;return De(regeneratorRuntime.mark(function r(){var a,i,s,o,d,p;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return a=e.map(function(e){return e.inputsHash}),i=e.map(function(e){return e.gasLimit}),s=e.map(function(e){return e.gasPx}),o=e.map(function(e){return e.gasLimit*e.gasPx}),r.next=6,t.tokenContract.methods.balanceOf(e[0].sender).call();case 6:if(d=r.sent,p=o.reduce(function(e,t){return e+t},0),!(d<p)){r.next=11;break}return n.emit(h,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 11:return r.next=13,t.tokenContract.methods.approve(t.enigmaContract.options.address,p).send({from:e[0].sender});case 13:return r.next=15,t.enigmaContract.methods.createTaskRecords(a,i,s,e[0].firstBlockNumber).send({from:e[0].sender}).on("transactionHash",function(t){for(var r=0;r<e.length;r++)e[r].transactionHash=t;n.emit(Y,t)}).on("confirmation",function(e,t){n.emit(J,e,t)}).then(function(t){for(var r=t.events.TaskRecordsCreated.returnValues.taskIds,a=0;a<e.length;a++)e[a].taskId=r[a],e[a].receipt=t,e[a].ethStatus=1,e[a].creationBlockNumber=t.blockNumber;n.emit(Z,t),n.emit(X,e)});case 15:case"end":return r.stop()}},r)}))(),n}},{key:"getTaskRecordStatus",value:(y=De(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return n=e.sent,t.ethStatus=parseInt(n.status),t.proof=n.proof,e.abrupt("return",t);case 6:case"end":return e.stop()}},e,this)})),function(e){return y.apply(this,arguments)})},{key:"getTaskOutputHash",value:(c=De(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return e.abrupt("return",e.sent.outputHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return c.apply(this,arguments)})},{key:"getReport",value:(l=De(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getReport(t).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"getWorkerParams",value:(d=De(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(0===Object.keys(this.workerParamsCache).length||t-this.workerParamsCache.firstBlockNumber>=this.epochSize)){e.next=8;break}return e.next=3,this.enigmaContract.methods.getEpochSize().call();case 3:return this.epochSize=e.sent,e.next=6,this.enigmaContract.methods.getWorkerParams(t).call();case 6:n=e.sent,this.workerParamsCache={firstBlockNumber:parseInt(n[0]),seed:i.a.BigInt(n[1]),workers:n[2],stakes:n[3].map(function(e){return i.a.BigInt(e)})};case 8:return e.abrupt("return",this.workerParamsCache);case 9:case"end":return e.stop()}},e,this)})),function(e){return d.apply(this,arguments)})},{key:"selectWorkerGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5,r=t.stakes.reduce(function(e,t){return i.a.add(e,t)},i.a.BigInt(0)),a=0,s=[];do{for(var d=fe.rawEncode(["uint256","bytes32","uint256"],[t.seed.toString(10),e,a]),p=o.a.keccak256(d),l=i.a.remainder(i.a.BigInt(p),r),c=t.workers[t.workers.length-1],y=0;y<t.workers.length;y++)if((l=i.a.subtract(l,t.stakes[y]))<=0){c=t.workers[y];break}s.includes(c)||s.push(c),a++}while(s.length<n);return s}},{key:"sendTaskInput",value:function(t){var n=this,r=new $.a;return De(regeneratorRuntime.mark(function a(){var i,s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return i="sendTaskInput",s=Q,t.isContractDeploymentTask&&(i="deploySecretContract",s=ne),a.prev=3,a.next=6,new Promise(function(r,a){n.client.request(i,e.serializeTask(t),function(e,t){e?a(e):r(t)})});case 6:r.emit(s,t),a.next=12;break;case 9:a.prev=9,a.t0=a.catch(3),r.emit(h,a.t0);case 12:case"end":return a.stop()}},a,null,[[3,9]])}))(),r}},{key:"getTaskResult",value:function(e){var t=this,n=new $.a,r=me.a.operation(this.config.retry);return r.attempt(function(){var a=De(regeneratorRuntime.mark(function a(i){var s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,new Promise(function(n,r){t.client.request("getTaskResult",{taskId:D.remove0x(e.taskId)},function(e,t){e?r(e):n(t)})});case 3:if(!(s=a.sent).result){a.next=20;break}a.t0=s.result.status,a.next="SUCCESS"===a.t0?8:"FAILED"===a.t0?12:"UNVERIFIED"===a.t0?15:"INPROGRESS"===a.t0?15:17;break;case 8:e.delta=s.result.delta,e.ethereumPayload=s.result.ethereumPayload,e.ethereumAddress=s.result.ethereumAddress,e.preCodeHash=s.result.preCodeHash;case 12:e.encryptedAbiEncodedOutputs=s.result.output,e.usedGas=s.result.usedGas,e.workerTaskSig=s.result.signature;case 15:return e.engStatus=s.result.status,a.abrupt("break",18);case 17:throw new Error("Invalid task result status").message;case 18:a.next=26;break;case 20:if(!r.retry(!0)){a.next=25;break}return console.log("Warning: Got an empty TaskResult on attempt "+i+" of "+(t.config.retry.retries+1)+". Retrying..."),a.abrupt("return");case 25:e.engStatus=null;case 26:n.emit(te,e),a.next=32;break;case 29:a.prev=29,a.t1=a.catch(0),n.emit(h,a.t1);case 32:case"end":return a.stop()}},a,null,[[0,29]])}));return function(e){return a.apply(this,arguments)}}()),n}},{key:"decryptTaskResult",value:(s=De(regeneratorRuntime.mark(function e(t){var n,r,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("task.encryptedAbiEncodedOutputs is "+t.encryptedAbiEncodedOutputs),t.encryptedAbiEncodedOutputs?(n=this.obtainTaskKeyPair(),r=n.privateKey,a=D.getDerivedKey(t.workerEncryptionKey,r),t.decryptedOutput=D.decryptMessage(a,t.encryptedAbiEncodedOutputs)):(console.log("Warning: task.encryptedAbiEncodedOutputs is empty, there is nothing to decrypt."),t.decryptedOutput=null),e.abrupt("return",t);case 3:case"end":return e.stop()}},e,this)})),function(e){return s.apply(this,arguments)})},{key:"pollTaskStatusGen",value:regeneratorRuntime.mark(function e(t,n){var r=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,new Promise(function(e,a){r.client.request("getTaskStatus",{taskId:D.remove0x(t.taskId),workerAddress:t.workerAddress,withResult:n},function(r,i){r?a(r):(t.engStatus=i.result.status,n&&(t.encryptedAbiEncodedOutputs=i.result.output),e(t))})});case 3:e.next=0;break;case 5:case"end":return e.stop()}},e)})},{key:"innerPollTaskStatus",value:function(e,t,n){var r=this;t.next().value.then(function(a){n.emit(ee,a),"SUCCESS"!==a.engStatus&&"FAILED"!==a.engStatus&&r.innerPollTaskStatus(e,t,n)}).catch(function(e){n.emit(h,e)})}},{key:"pollTaskStatus",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=new $.a,r=this.pollTaskStatusGen(e,t);return this.innerPollTaskStatus(e,r,n),n}},{key:"pollTaskETH",value:(a=De(regeneratorRuntime.mark(function e(t){var n,r=arguments;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=r.length>1&&void 0!==r[1]?r[1]:1e3;case 1:if(1!==t.ethStatus){e.next=9;break}return e.next=4,this.getTaskRecordStatus(t);case 4:return t=e.sent,e.next=7,D.sleep(n);case 7:e.next=1;break;case 9:return e.abrupt("return",t);case 10:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})},{key:"obtainTaskKeyPair",value:function(){var e,t="undefined"!=typeof window,n=t?window.localStorage.getItem("encodedPrivateKey"):this.taskKeyLocalStorage.encodedPrivateKey;if(null==n){var r=p.a.random.createInstance();r.seedFileSync=function(e){return p.a.util.fillString("cupcake",e)},e=p.a.util.bytesToHex(r.getBytes(32)),t?window.localStorage.setItem("encodedPrivateKey",btoa(e)):this.taskKeyLocalStorage.encodedPrivateKey=Buffer.from(e,"binary").toString("base64")}else e=t?atob(n):Buffer.from(n,"base64").toString("binary");return{publicKey:be.a.publicKeyByPrivateKey(e),privateKey:e}}},{key:"deploySecretContract",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return De(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!0).on(H,function(e){return o(e)}).on(h,function(e){return d(e)})});case 2:return p=o.sent,d.emit(H,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(h,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(ne,function(t){return e(t)}).on(h,function(e){return t(e)})});case 10:return d.emit(ne,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(h,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}},{key:"computeTask",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return De(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!1).on(H,function(e){return o(e)}).on(h,function(e){return d(e)})});case 2:return p=o.sent,d.emit(H,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(h,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(Q,function(t){return e(t)}).on(h,function(e){return t(e)})});case 10:return d.emit(Q,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(h,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}}],r=[{key:"serializeTask",value:function(e){return e.isContractDeploymentTask?{preCode:e.preCode,encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),encryptedFn:D.remove0x(e.encryptedFn),userDHKey:D.remove0x(e.userPubKey),contractAddress:D.remove0x(e.scAddr),workerAddress:e.workerAddress}:{taskId:D.remove0x(e.taskId),workerAddress:e.workerAddress,encryptedFn:D.remove0x(e.encryptedFn),encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),contractAddress:D.remove0x(e.scAddr),userDHKey:D.remove0x(e.userPubKey)}}},{key:"version",value:function(){return"0.0.1"}}],n&&Se(t.prototype,n),r&&Se(t,r),e}();n.d(t,"Enigma",function(){return Ie}),n.d(t,"utils",function(){return D}),n.d(t,"eeConstants",function(){return r})}])});
//# sourceMappingURL=enigma-js.node.min.js.map