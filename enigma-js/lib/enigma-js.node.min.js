!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("enigma-js",[],t):"object"==typeof exports?exports["enigma-js"]=t():e["enigma-js"]=t()}(global,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=14)}([function(e,t){e.exports=require("node-forge")},function(e,t){e.exports=require("eventemitter3")},function(e,t){e.exports=require("jsbi")},function(e,t){e.exports=require("web3-utils")},function(e,t){e.exports=require("buffer")},function(e,t){e.exports=require("zlib")},function(e,t){e.exports=require("eth-crypto")},function(e,t){e.exports=require("elliptic")},function(e){e.exports=JSON.parse('{"contractName":"Enigma","abi":[{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"address","name":"_principal","type":"address"},{"internalType":"address","name":"_exchangeRate","type":"address"},{"internalType":"uint256","name":"_epochSize","type":"uint256"},{"internalType":"uint256","name":"_timeoutThreshold","type":"uint256"},{"internalType":"bool","name":"_debug","type":"bool"},{"internalType":"bytes","name":"_mrSigner","type":"bytes"},{"internalType":"bytes","name":"_isvSvn","type":"bytes"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"}],"name":"LoggedIn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"}],"name":"LoggedOut","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"scAddr","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"gasUsed","type":"uint256"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"scAddr","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"gasUsed","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasUsedTotal","type":"uint256"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"gasUsed","type":"uint64"},{"indexed":false,"internalType":"address","name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"internalType":"bytes32[4]","name":"bytes32s","type":"bytes32[4]"},{"indexed":false,"internalType":"uint256","name":"deltaHashIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasUsedTotal","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"optionalEthereumData","type":"bytes"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"custodian","type":"address"},{"indexed":false,"internalType":"address","name":"signer","type":"address"}],"name":"Registered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"gasUsed","type":"uint64"},{"indexed":false,"internalType":"address","name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"internalType":"bytes32[4]","name":"bytes32s","type":"bytes32[4]"},{"indexed":false,"internalType":"uint256","name":"gasUsedTotal","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"optionalEthereumData","type":"bytes"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"}],"name":"SecretContractDeployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"inputsHash","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"gasLimit","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"gasPx","type":"uint64"},{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"seed","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"firstBlockNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"internalType":"address[]","name":"workers","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"stakes","type":"uint256[]"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event"},{"constant":true,"inputs":[],"name":"getAllSecretContractAddresses","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getDebug","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEpochSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getIsvSvn","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getMrSigner","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_scAddr","type":"bytes32"}],"name":"getSecretContract","outputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32","name":"preCodeHash","type":"bytes32"},{"internalType":"bytes32","name":"codeHash","type":"bytes32"},{"internalType":"bytes32[]","name":"stateDeltaHashes","type":"bytes32[]"},{"internalType":"enum EnigmaCommon.SecretContractStatus","name":"status","type":"uint8"}],"internalType":"struct EnigmaCommon.SecretContract","name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSigningAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_taskId","type":"bytes32"}],"name":"getTaskRecord","outputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes32","name":"inputsHash","type":"bytes32"},{"internalType":"bytes32","name":"outputHash","type":"bytes32"},{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasPx","type":"uint64"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"enum EnigmaCommon.TaskStatus","name":"status","type":"uint8"},{"internalType":"bytes","name":"proof","type":"bytes"}],"internalType":"struct EnigmaCommon.TaskRecord","name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getTaskTimeoutSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getUpdatedEnigmaContractAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_sender","type":"address"}],"name":"getUserTaskDeployments","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_worker","type":"address"}],"name":"getWorker","outputs":[{"components":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"enum EnigmaCommon.WorkerStatus","name":"status","type":"uint8"},{"internalType":"bytes","name":"report","type":"bytes"},{"internalType":"uint256","name":"balance","type":"uint256"},{"components":[{"internalType":"enum EnigmaCommon.WorkerLogType","name":"workerEventType","type":"uint8"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"}],"internalType":"struct EnigmaCommon.WorkerLog[]","name":"workerLogs","type":"tuple[]"}],"internalType":"struct EnigmaCommon.Worker","name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_signer","type":"address"}],"name":"getWorkerFromSigningAddress","outputs":[{"internalType":"address","name":"","type":"address"},{"components":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"enum EnigmaCommon.WorkerStatus","name":"status","type":"uint8"},{"internalType":"bytes","name":"report","type":"bytes"},{"internalType":"uint256","name":"balance","type":"uint256"},{"components":[{"internalType":"enum EnigmaCommon.WorkerLogType","name":"workerEventType","type":"uint8"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"}],"internalType":"struct EnigmaCommon.WorkerLog[]","name":"workerLogs","type":"tuple[]"}],"internalType":"struct EnigmaCommon.Worker","name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getWorkersParams","outputs":[{"components":[{"internalType":"uint256","name":"firstBlockNumber","type":"uint256"},{"internalType":"address[]","name":"workers","type":"address[]"},{"internalType":"uint256[]","name":"stakes","type":"uint256[]"},{"internalType":"uint256","name":"seed","type":"uint256"}],"internalType":"struct EnigmaCommon.WorkersParams[5]","name":"","type":"tuple[5]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_signer","type":"address"},{"internalType":"bytes","name":"_report","type":"bytes"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_custodian","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"login","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"logout","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_taskId","type":"bytes32"},{"internalType":"bytes32","name":"_codeHash","type":"bytes32"},{"internalType":"uint64","name":"_gasUsed","type":"uint64"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"deploySecretContractFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint64","name":"_gasUsed","type":"uint64"},{"internalType":"address","name":"_optionalEthereumContractAddress","type":"address"},{"internalType":"bytes32[4]","name":"_bytes32s","type":"bytes32[4]"},{"internalType":"bytes","name":"_optionalEthereumData","type":"bytes"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"deploySecretContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"countSecretContracts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_start","type":"uint256"},{"internalType":"uint256","name":"_stop","type":"uint256"}],"name":"getSecretContractAddresses","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_inputsHash","type":"bytes32"},{"internalType":"uint64","name":"_gasLimit","type":"uint64"},{"internalType":"uint64","name":"_gasPx","type":"uint64"},{"internalType":"uint256","name":"_firstBlockNumber","type":"uint256"},{"internalType":"uint256","name":"_nonce","type":"uint256"}],"name":"createDeploymentTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_inputsHash","type":"bytes32"},{"internalType":"uint64","name":"_gasLimit","type":"uint64"},{"internalType":"uint64","name":"_gasPx","type":"uint64"},{"internalType":"uint256","name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint64","name":"_gasUsed","type":"uint64"},{"internalType":"address","name":"_optionalEthereumContractAddress","type":"address"},{"internalType":"bytes32[4]","name":"_bytes32s","type":"bytes32[4]"},{"internalType":"bytes","name":"_optionalEthereumData","type":"bytes"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"commitReceipt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_scAddr","type":"bytes32"},{"internalType":"bytes32","name":"_taskId","type":"bytes32"},{"internalType":"bytes32","name":"_outputHash","type":"bytes32"},{"internalType":"uint64","name":"_gasUsed","type":"uint64"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"commitTaskFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_taskId","type":"bytes32"}],"name":"returnFeesForTask","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"},{"internalType":"uint256","name":"_seed","type":"uint256"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"setWorkersParams","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"}],"name":"getActiveWorkers","outputs":[{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"}],"name":"getFirstBlockNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"}],"name":"getWorkerParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"},{"internalType":"bytes32","name":"_scAddr","type":"bytes32"}],"name":"getWorkerGroup","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_custodian","type":"address"}],"name":"getReport","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"verifyReport","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_updatedEnigmaContractAddress","type":"address"}],"name":"upgradeEnigmaContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_workerAddress","type":"address"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"transferWorkerStakePostUpgrade","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes","name":"_mrSigner","type":"bytes"}],"name":"setMrSigner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes","name":"_isvSvn","type":"bytes"}],"name":"setIsvSvn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.12+commit.7709ece9\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_tokenAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_principal\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_exchangeRate\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_epochSize\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_timeoutThreshold\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"_debug\\",\\"type\\":\\"bool\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_mrSigner\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_isvSvn\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"DepositSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"LoggedIn\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"LoggedOut\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsedTotal\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailedETH\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32[4]\\",\\"name\\":\\"bytes32s\\",\\"type\\":\\"bytes32[4]\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"deltaHashIndex\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsedTotal\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"custodian\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"Registered\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32[4]\\",\\"name\\":\\"bytes32s\\",\\"type\\":\\"bytes32[4]\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsedTotal\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"SecretContractDeployed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"TaskFeeReturned\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WithdrawSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"inclusionBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"address[]\\",\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WorkersParameterized\\",\\"type\\":\\"event\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes32[4]\\",\\"name\\":\\"_bytes32s\\",\\"type\\":\\"bytes32[4]\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitReceipt\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitTaskFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"countSecretContracts\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createDeploymentTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes32[4]\\",\\"name\\":\\"_bytes32s\\",\\"type\\":\\"bytes32[4]\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContractFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"deposit\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getActiveWorkers\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getAllSecretContractAddresses\\",\\"outputs\\":[{\\"internalType\\":\\"bytes32[]\\",\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getDebug\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getEpochSize\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getFirstBlockNumber\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getIsvSvn\\",\\"outputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getMrSigner\\",\\"outputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getReport\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getSecretContract\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32[]\\",\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"internalType\\":\\"enum EnigmaCommon.SecretContractStatus\\",\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"}],\\"internalType\\":\\"struct EnigmaCommon.SecretContract\\",\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_start\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_stop\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getSecretContractAddresses\\",\\"outputs\\":[{\\"internalType\\":\\"bytes32[]\\",\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getSigningAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getTaskRecord\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"enum EnigmaCommon.TaskStatus\\",\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"proof\\",\\"type\\":\\"bytes\\"}],\\"internalType\\":\\"struct EnigmaCommon.TaskRecord\\",\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getTaskTimeoutSize\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getUpdatedEnigmaContractAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_sender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getUserTaskDeployments\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_worker\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorker\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"enum EnigmaCommon.WorkerStatus\\",\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"internalType\\":\\"enum EnigmaCommon.WorkerLogType\\",\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"internalType\\":\\"struct EnigmaCommon.WorkerLog[]\\",\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"internalType\\":\\"struct EnigmaCommon.Worker\\",\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorkerFromSigningAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"enum EnigmaCommon.WorkerStatus\\",\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"internalType\\":\\"enum EnigmaCommon.WorkerLogType\\",\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"internalType\\":\\"struct EnigmaCommon.WorkerLog[]\\",\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"internalType\\":\\"struct EnigmaCommon.Worker\\",\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getWorkerGroup\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getWorkerParams\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getWorkersParams\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address[]\\",\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"}],\\"internalType\\":\\"struct EnigmaCommon.WorkersParams[5]\\",\\"name\\":\\"\\",\\"type\\":\\"tuple[5]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"isOwner\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"login\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"logout\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_report\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"register\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"returnFeesForTask\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_isvSvn\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setIsvSvn\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_mrSigner\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setMrSigner\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_seed\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setWorkersParams\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_workerAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"transferWorkerStakePostUpgrade\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_updatedEnigmaContractAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"upgradeEnigmaContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_data\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"verifyReport\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"methods\\":{\\"commitReceipt(uint64,address,bytes32[4],bytes,bytes)\\":{\\"params\\":{\\"_bytes32s\\":\\"[scAddr, taskId, stateDeltaHash, outputHash]\\",\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_optionalEthereumContractAddress\\":\\"Output state hash\\",\\"_optionalEthereumData\\":\\"Output state hash\\",\\"_sig\\":\\"Worker\'s signature\\"}},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"countSecretContracts()\\":{\\"return\\":\\"Number of deployed secret contracts\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\",\\"_nonce\\":\\"Locally-computed nonce value for this deployment\\"}},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"deploySecretContract(uint64,address,bytes32[4],bytes,bytes)\\":{\\"params\\":{\\"_bytes32s\\":\\"[taskId, preCodeHash, codeHash, initStateDeltaHash]\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_optionalEthereumContractAddress\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumData\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_sig\\":\\"Worker\'s signature for deployment\\"}},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deposit(address,uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\",\\"_custodian\\":\\"The worker\'s ETH address\\"}},\\"getActiveWorkers(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"}},\\"getAllSecretContractAddresses()\\":{\\"return\\":\\"Array of secret contract addresses\\"},\\"getDebug()\\":{\\"return\\":\\"debug\\"},\\"getEpochSize()\\":{\\"return\\":\\"Epoch size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Block number\\"},\\"getIsvSvn()\\":{\\"return\\":\\"isvSvn\\"},\\"getMrSigner()\\":{\\"return\\":\\"mrSigner\\"},\\"getReport(address)\\":{\\"params\\":{\\"_custodian\\":\\"The worker\'s custodian address\\"}},\\"getSecretContract(bytes32)\\":{\\"params\\":{\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"SecretContract struct\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"params\\":{\\"_start\\":\\"Start of range\\",\\"_stop\\":\\"End of range\\"},\\"return\\":\\"Subset of deployed secret contract addresses\\"},\\"getSigningAddress()\\":{\\"return\\":\\"Signing address\\"},\\"getTaskRecord(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique identifier for a given task\\"},\\"return\\":\\"TaskRecord struct\\"},\\"getTaskTimeoutSize()\\":{\\"return\\":\\"task timeout\\"},\\"getUpdatedEnigmaContractAddress()\\":{\\"return\\":\\"Updated Enigma contract address\\"},\\"getUserTaskDeployments(address)\\":{\\"params\\":{\\"_sender\\":\\"Task sender\'s ethereum address\\"},\\"return\\":\\"Current number for task deployments for user\\"},\\"getWorker(address)\\":{\\"params\\":{\\"_worker\\":\\"Worker\'s ethereum address\\"},\\"return\\":\\"Worker struct\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"params\\":{\\"_signer\\":\\"Worker\'s signing address\\"},\\"return\\":\\"Ethereum addressWorker struct\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number the task record was mined\\",\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"Selected workers\' addresses\\"},\\"getWorkerParams(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes\\"},\\"getWorkersParams()\\":{\\"return\\":\\"Array of WorkersParams structs\\"},\\"isOwner()\\":{\\"details\\":\\"Returns true if the caller is the current owner.\\"},\\"owner()\\":{\\"details\\":\\"Returns the address of the current owner.\\"},\\"register(address,bytes,bytes)\\":{\\"params\\":{\\"_report\\":\\"The RLP encoded report returned by the IAS\\",\\"_signature\\":\\"Signature\\",\\"_signer\\":\\"The signer address, derived from the enclave public key\\"}},\\"renounceOwnership()\\":{\\"details\\":\\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\\"},\\"returnFeesForTask(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique taskId\\"}},\\"setIsvSvn(bytes)\\":{\\"params\\":{\\"_isvSvn\\":\\"mrSigner\\"}},\\"setMrSigner(bytes)\\":{\\"params\\":{\\"_mrSigner\\":\\"mrSigner\\"}},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number principal node is attempting to set worker params\\",\\"_seed\\":\\"The random integer generated by the enclave\\",\\"_sig\\":\\"Principal node\'s signature\\"}},\\"transferOwnership(address)\\":{\\"details\\":\\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\\"},\\"transferWorkerStakePostUpgrade(address,bytes)\\":{\\"params\\":{\\"_sig\\":\\"Signature\\",\\"_workerAddress\\":\\"Newly-registered worker address\\"}},\\"upgradeEnigmaContract(address)\\":{\\"params\\":{\\"_updatedEnigmaContractAddress\\":\\"Updated newly-deployed Enigma contract address\\"}},\\"verifyReport(bytes,bytes)\\":{\\"params\\":{\\"_data\\":\\"The report itself\\",\\"_signature\\":\\"The signature of the report\\"}},\\"withdraw(uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\"}}}},\\"userdoc\\":{\\"methods\\":{\\"commitReceipt(uint64,address,bytes32[4],bytes,bytes)\\":{\\"notice\\":\\"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee.\\"},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure.\\"},\\"countSecretContracts()\\":{\\"notice\\":\\"Check if secret contract has been deployed\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"notice\\":\\"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid.\\"},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"notice\\":\\"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"deploySecretContract(uint64,address,bytes32[4],bytes,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deposit(address,uint256)\\":{\\"notice\\":\\"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\"},\\"getActiveWorkers(uint256)\\":{\\"notice\\":\\"Get active workers before a certain block number\\"},\\"getAllSecretContractAddresses()\\":{\\"notice\\":\\"Get all secret contract addresses\\"},\\"getDebug()\\":{\\"notice\\":\\"Get debug\\"},\\"getEpochSize()\\":{\\"notice\\":\\"Get the epoch block size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"notice\\":\\"Get the first block number of an epoch that a given block number belongs to\\"},\\"getIsvSvn()\\":{\\"notice\\":\\"Get isvSvn\\"},\\"getMrSigner()\\":{\\"notice\\":\\"Get mrSigner\\"},\\"getReport(address)\\":{\\"notice\\":\\"The RLP encoded report returned by the IAS server\\"},\\"getSecretContract(bytes32)\\":{\\"notice\\":\\"Get a SecretContract struct given a particular secret contract address\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"notice\\":\\"Get deployed secret contract addresses within a range\\"},\\"getSigningAddress()\\":{\\"notice\\":\\"Get signing address of calling worker\\"},\\"getTaskRecord(bytes32)\\":{\\"notice\\":\\"Get a TaskRecord struct given a particular task\'s ID\\"},\\"getTaskTimeoutSize()\\":{\\"notice\\":\\"Get the task timeout size\\"},\\"getUpdatedEnigmaContractAddress()\\":{\\"notice\\":\\"Get updated Enigma contract address\\"},\\"getUserTaskDeployments(address)\\":{\\"notice\\":\\"Get the current number/index (used as unique nonce value) of task deployments for a given user user\\"},\\"getWorker(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s ethereum address\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s signing address\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"notice\\":\\"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address.\\"},\\"getWorkerParams(uint256)\\":{\\"notice\\":\\"Get worker params for an epoch given a particular block number\\"},\\"getWorkersParams()\\":{\\"notice\\":\\"Get epoch-based history of worker params information\\"},\\"login()\\":{\\"notice\\":\\"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process.\\"},\\"logout()\\":{\\"notice\\":\\"Logout worker. Worker must be logged in to do so.\\"},\\"register(address,bytes,bytes)\\":{\\"notice\\":\\"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks.\\"},\\"returnFeesForTask(bytes32)\\":{\\"notice\\":\\"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\"},\\"setIsvSvn(bytes)\\":{\\"notice\\":\\"Set isvSvn\\"},\\"setMrSigner(bytes)\\":{\\"notice\\":\\"Set mrSigner\\"},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"notice\\":\\"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node\\"},\\"transferWorkerStakePostUpgrade(address,bytes)\\":{\\"notice\\":\\"Transfer worker stake from old contract to new contract upon registration\\"},\\"upgradeEnigmaContract(address)\\":{\\"notice\\":\\"Upgrade Enigma Contract\\"},\\"verifyReport(bytes,bytes)\\":{\\"notice\\":\\"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\"},\\"withdraw(uint256)\\":{\\"notice\\":\\"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\"}}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol\\":\\"Enigma\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol\\":{\\"keccak256\\":\\"0x8da9492eb228bcf18e239893b3e1338b66e42fb51bbd4b96efe67b577a8babe0\\",\\"urls\\":[\\"bzz-raw://070bf5f276c8cbac9a1ee16762b5f0620f4f600542fd971bbb0b78765d6a5e36\\",\\"dweb:/ipfs/QmNMTXeKaGuSRYw1jtbgm1YciNSdxvvJeKpSz6vokrmnR9\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaCommon.sol\\":{\\"keccak256\\":\\"0x14afecf484aee26ed212d36f48f342b5332856d6c6519a8e02d4a71039240b28\\",\\"urls\\":[\\"bzz-raw://b64ffcf2e8bf756f08a729d5a445a21b393400d4589f3adf4f3997bccb93e621\\",\\"dweb:/ipfs/QmaKC6yRnm8HhGkRiDjpzUBsV1HzkaMTzckvTFpH3iMbxP\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaEvents.sol\\":{\\"keccak256\\":\\"0xa03c7485b1181be87377003502e3674fd2fd877d0115698ad938b78bfe16d53c\\",\\"urls\\":[\\"bzz-raw://b9da4c37e63eb41320cd3b9844e0de963b635092b050773a742a2b50ab56ea1b\\",\\"dweb:/ipfs/QmfH9S53Y98xFJc2aoR2AvqpUvFmK1YuwBGAMHDF6ZnJvn\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaState.sol\\":{\\"keccak256\\":\\"0x43530107114c181f8aa55de19dceb829ab375b47929945208c123fa248c3c699\\",\\"urls\\":[\\"bzz-raw://7105c96069b89f7f62dd9f80a9a29db9fb7d48668309ae6b24c61aeb214b1af0\\",\\"dweb:/ipfs/Qmej15623UQthMZ7au5v4cCqYfWiwsUskf2f66qL89tYaW\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaStorage.sol\\":{\\"keccak256\\":\\"0xd7ce9ab44bc7239498b55a8a9ac1d64c1b1fa7ad56aabe59585de77fb21e37db\\",\\"urls\\":[\\"bzz-raw://a1653dd4bbbfa0c2415338afba52aee0d32c3f0c395b252247cf669e2595ea4d\\",\\"dweb:/ipfs/QmcZJtNkMnrkzLdhXC6QE1hDiLx22N9m3Be8x2YbyHiTxd\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/Getters.sol\\":{\\"keccak256\\":\\"0xde75abacb7500820c3df61a1564ff92710a3b8d075b04b013ae7e86b2d82c464\\",\\"urls\\":[\\"bzz-raw://1fcca6a5965547b21c3d0ac9d8beaa888b19a9375166b7ff31bc08827f86dfef\\",\\"dweb:/ipfs/QmNXcs4pKu4QASmqYPJxwqT9bATk14qFhG2WJMXTwMUozB\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/PrincipalImpl.sol\\":{\\"keccak256\\":\\"0x35a66b5ae64db01822739961a8176eba2898daff9bce5d54667aa306737c289a\\",\\"urls\\":[\\"bzz-raw://2c437f745dc51ba58b0c520371ff8919f21c16137aa024fefcdf858057568395\\",\\"dweb:/ipfs/QmZi8kkuF6FKuCBSwjBjutp9wc2TUw74EMeKoEZN84npBi\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/SecretContractImpl.sol\\":{\\"keccak256\\":\\"0x6b77e8e0924ae55ad17e609e23d096f8e54f6f67ca88cc1e9b751d400b2cbe31\\",\\"urls\\":[\\"bzz-raw://cada7f8518df930e2cc3e6e0ae1fefdd6a1ba50dfa53be5bf6e238dae4c5f887\\",\\"dweb:/ipfs/QmexqtRPaFdXsbxdS6RAL83QNvxPZM4kuSgdezrfj5Gy2h\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/TaskImpl.sol\\":{\\"keccak256\\":\\"0x0c3fb1e1a0ff47c4cffb77fe36782d0238ea23b17e3fd5a529ba51a4dd41a1de\\",\\"urls\\":[\\"bzz-raw://0151866020012eabd1577ad53cf6635816f5963848fb18ab539b4c866abbb306\\",\\"dweb:/ipfs/QmV7yiRMHot5NkiWndjWsah3rVieYuSHVn9yCcmhPoJihW\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/UpgradeImpl.sol\\":{\\"keccak256\\":\\"0xe22cb5d41ed126665f72c49ead70f4f1ffe2b65460bb255bcb166f554b886147\\",\\"urls\\":[\\"bzz-raw://2831a8250df5aa15cfb5ae3106ca94e7ca83f66bc5fe84e370f0be0deb6675e0\\",\\"dweb:/ipfs/QmTwthxqG1S4miwCzDR6QXNebwjjVwrCv58EWfFW3u95PU\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/WorkersImpl.sol\\":{\\"keccak256\\":\\"0xfda265ec21ea6d541f0849f1b5a1b00875261c9dd15bb919905055d03dfd1c3c\\",\\"urls\\":[\\"bzz-raw://a2cb25c314caa298d5c00e2390fb46360f50de62a71bb793f0bad576aef4e078\\",\\"dweb:/ipfs/QmQ7uzq3KyoamDcvajDwR4oxQDas2CentB64w3JBSpoFH8\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/interfaces/ERC20.sol\\":{\\"keccak256\\":\\"0x11b6c01cdb9e1ff4ba857a4718ce1171258d84110906ada1c33447c40dba8ad6\\",\\"urls\\":[\\"bzz-raw://33460d163c92ef5a8706dff534be88fcb8f2258f0705a50fb519f2f94cd60cd4\\",\\"dweb:/ipfs/QmSc8CnUbAgybSAPzwLoEhXZVZHapWVdfV8ScXuBBVyvR7\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/interfaces/IExchangeRate.sol\\":{\\"keccak256\\":\\"0x72684d1da1c6ddaadf849beddac8011ff9269d8636c260588b71c326b4cdbf43\\",\\"urls\\":[\\"bzz-raw://de98a9ccd1c5223961221774ceb26e3c7558a430cb1ef9ae45e0aa74562d687b\\",\\"dweb:/ipfs/QmXgdoUC5GL4DpZZqXB7xNrAGh8vRpwbwhuK5DvbXabqEd\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/Base64.sol\\":{\\"keccak256\\":\\"0xbfcd1367551dde54f9ffc9356abc09d046b7ff7844194cc0990ef7447cebb877\\",\\"urls\\":[\\"bzz-raw://f29e15a2635f2b49bb860869c30ae906e2682f3bae11e4d05dfe8f0e07195dfc\\",\\"dweb:/ipfs/Qmdj1PELeNPx5SRWmMofUCNHUrWDwynx7YXLNAUqgNzW6U\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/Bytes.sol\\":{\\"keccak256\\":\\"0x84392879b363a868f71f3870633e82e7fe2af4e196eb60d997bbfcf2d0dc181f\\",\\"urls\\":[\\"bzz-raw://c8ecd1e882532601f67f36250da3e47b21e34bd3bad195a8612446f9ca608f36\\",\\"dweb:/ipfs/QmT3SrvDqVXn82X7je4mhTYZjfwPdvb9dXurgAbbVC7tAe\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/Memory.sol\\":{\\"keccak256\\":\\"0xc1b5d2074bf8c427993f284502618a3db6c5adebb29162d5b72da26260855f62\\",\\"urls\\":[\\"bzz-raw://f01a3d6f19bde637ea68af0096c459409d3ab79424f3239e68698d395a165aff\\",\\"dweb:/ipfs/QmWGq9TmYyQCmSirs5R7AVpPXKh8Rr7mrk2xsoEMdC1TSp\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/SolRsaVerify.sol\\":{\\"keccak256\\":\\"0x2a48149b76c46dde6b8161e0a990e82cd4632de8bb65b9ebabc9e85531f00870\\",\\"urls\\":[\\"bzz-raw://b43df5d21392467e152fab29af01a1d7a8142bdd9d035cd9f7d10dd73f6f5473\\",\\"dweb:/ipfs/QmPbZBMCs9Y7Uv5jDCiSANwnd5NKUFghYKuYUkeZoq6s6P\\"]},\\"openzeppelin-solidity/contracts/GSN/Context.sol\\":{\\"keccak256\\":\\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\\",\\"urls\\":[\\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\\",\\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\\"]},\\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\":{\\"keccak256\\":\\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\\",\\"urls\\":[\\"bzz-raw://b736ddad8143f8f1cd13c20809d4ebce5f5a8c7725081b0b703294078bd506d1\\",\\"dweb:/ipfs/QmdhTWCXFCuwG9JaPMjwnhkQoDj9su8R7KMPNvD5z9KeWD\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\\",\\"urls\\":[\\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\\",\\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\\"]},\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\":{\\"keccak256\\":\\"0xecd8ab29d9a5771c3964d0cd1788c4a5098a0081b20fb275da850a22b1c59806\\",\\"urls\\":[\\"bzz-raw://696a75bc2c55407ce8251ccc7d19ecb1b7b2be1796a160a6524312babcc7e3d4\\",\\"dweb:/ipfs/QmQViKEp3y99h9uhRssE29TmjBKRnFMaoz3eJZ4eggggg2\\"]}},\\"version\\":1}","bytecode":"0x60806040523480156200001157600080fd5b506040516200520a3803806200520a833981016040819052620000349162000268565b620000476001600160e01b036200013816565b602780546001600160a01b0319166001600160a01b0392831617908190556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600080546001600160a01b03808b166001600160a01b0319928316179092556001878155868802600255600380548b851690841617905560048054938a1693831693909317909255600580549091163017905560228190556023556024805484151560ff199091161790558151620001139060259060208501906200013d565b508051620001299060269060208401906200013d565b50505050505050505062000429565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200018057805160ff1916838001178555620001b0565b82800160010185558215620001b0579182015b82811115620001b057825182559160200191906001019062000193565b50620001be929150620001c2565b5090565b6200013a91905b80821115620001be5760008155600101620001c9565b8051620001ec81620003f9565b92915050565b8051620001ec8162000413565b600082601f8301126200021157600080fd5b815162000228620002228262000380565b62000359565b915080825260208301602083018583830111156200024557600080fd5b62000252838284620003c6565b50505092915050565b8051620001ec816200041e565b600080600080600080600080610100898b0312156200028657600080fd5b6000620002948b8b620001df565b9850506020620002a78b828c01620001df565b9750506040620002ba8b828c01620001df565b9650506060620002cd8b828c016200025b565b9550506080620002e08b828c016200025b565b94505060a0620002f38b828c01620001f2565b93505060c08901516001600160401b038111156200031057600080fd5b6200031e8b828c01620001ff565b92505060e08901516001600160401b038111156200033b57600080fd5b620003498b828c01620001ff565b9150509295985092959890939650565b6040518181016001600160401b03811182821017156200037857600080fd5b604052919050565b60006001600160401b038211156200039757600080fd5b506020601f91909101601f19160190565b6000620001ec82620003ba565b151590565b6001600160a01b031690565b60005b83811015620003e3578181015183820152602001620003c9565b83811115620003f3576000848401525b50505050565b6200040481620003a8565b81146200041057600080fd5b50565b6200040481620003b5565b62000404816200013a565b614dd180620004396000396000f3fe608060405234801561001057600080fd5b50600436106102695760003560e01c80638ed0573711610151578063c25d94d2116100c3578063d855a57911610087578063d855a57914610565578063df4da4611461056d578063ee6dcef914610575578063f2fde38b14610588578063f74e6e1d1461059b578063f9a9b7ae146105ae57610269565b8063c25d94d214610511578063c652b91914610524578063ca2af5f214610537578063cbbc061d1461054a578063d184935d1461055d57610269565b8063a3bdae3e11610115578063a3bdae3e1461049a578063b34e97e8146104bb578063b5c14992146104c3578063b9758c95146104d6578063ba252688146104de578063c011b1c3146104f157610269565b80638ed057371461040e5780638f32d59b1461042e5780639836ca3114610443578063a0c3998214610466578063a153ec601461048757610269565b80635f25f850116101ea5780637624281e116101ae5780637624281e1461038d578063786cd4d7146103ad5780637a743832146103c05780637c438de9146103d35780638da5cb5b146103e65780638e055b8b146103fb57610269565b80635f25f8501461034b578063700dd4df1461036057806370266a4714610368578063715018a61461037d57806375bbf75b1461038557610269565b80633a92d44c116102315780633a92d44c146102e857806347e7ef24146102fd57806350946a9f146103105780635486aa7014610323578063550baa2f1461033657610269565b806316f9a2a41461026e5780631d40ff0b146102985780631f3c99c3146102b85780632e1a7d4d146102c25780633480943b146102d5575b600080fd5b61028161027c36600461386c565b6105c1565b60405161028f9291906146cf565b60405180910390f35b6102ab6102a6366004613af0565b61065b565b60405161028f91906146be565b6102c06106f7565b005b6102c06102d036600461386c565b61094a565b6102c06102e3366004613a4b565b610c82565b6102f0610cbd565b60405161028f9190614724565b6102c061030b366004613777565b610d54565b6102c061031e366004613b92565b610f99565b6102c0610331366004613bc4565b611217565b61033e6114d9565b60405161028f91906146f4565b610353611533565b60405161028f9190614b7d565b6102f0611539565b61037061159a565b60405161028f9190614705565b6102c06116b4565b610353611722565b6103a061039b36600461386c565b6117b1565b60405161028f919061484a565b6102c06103bb3660046136fc565b611876565b6102c06103ce366004613a4b565b61195e565b6103536103e1366004613664565b611995565b6103ee611a4e565b60405161028f9190614670565b61033e610409366004613af0565b611a5d565b61042161041c36600461386c565b611af0565b60405161028f9190614b3b565b610436611c30565b60405161028f9190614716565b61045661045136600461386c565b611c56565b60405161028f9493929190614b8b565b61047961047436600461363e565b611cf9565b60405161028f92919061469e565b6102c0610495366004613916565b611f3c565b6104ad6104a836600461363e565b6121fb565b60405161028f92919061467e565b6102c0612477565b6103536104d1366004613a7f565b6126d7565b6103ee612713565b6102c06104ec36600461398e565b612722565b6105046104ff36600461363e565b61278c565b60405161028f9190614b4c565b6102c061051f366004613bc4565b61293d565b6102c06105323660046139e3565b612bc7565b6102c061054536600461388a565b612c57565b61035361055836600461386c565b612edf565b610436612f6b565b6103ee612f74565b610353612f90565b6102c061058336600461386c565b612f96565b6102c061059636600461363e565b613011565b6102c06105a936600461363e565b613041565b6103536105bc36600461363e565b6130fc565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b81526004016105fe92919061492b565b60006040518083038186803b15801561061657600080fd5b505af415801561062a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261065291908101906137db565b91509150915091565b604051635deadfbd60e11b815260609073__WorkersImpl___________________________9063bbd5bf7a9061069a9060009087908790600401614a89565b60006040518083038186803b1580156106b257600080fd5b505af41580156106c6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ee91908101906137a7565b90505b92915050565b3361070061319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561074857fe5b600281111561075357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107f05780601f106107c5576101008083540402835291602001916107f0565b820191906000526020600020905b8154815290600101906020018083116107d357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561089b57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561086957fe5b600381111561087457fe5b81526020016001820154815260200160028201548152505081526020019060010190610828565b50505091525090915060019050816020015160028111156108b857fe5b146108de5760405162461bcd60e51b81526004016108d5906147ea565b60405180910390fd5b6040516349e44f4960e01b815273__WorkersImpl___________________________906349e44f49906109169060009060040161485b565b60006040518083038186803b15801561092e57600080fd5b505af4158015610942573d6000803e3d6000fd5b505050505050565b3361095361319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561099b57fe5b60028111156109a657fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a435780601f10610a1857610100808354040283529160200191610a43565b820191906000526020600020905b815481529060010190602001808311610a2657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610aee57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610abc57fe5b6003811115610ac757fe5b81526020016001820154815260200160028201548152505081526020019060010190610a7b565b5050509152509091506002905081602001516002811115610b0b57fe5b14610b285760405162461bcd60e51b81526004016108d59061483a565b610b306131cd565b6040516328de336160e21b815273__WorkersImpl___________________________9063a378cd8490610b699085904390600401614b5d565b60606040518083038186803b158015610b8157600080fd5b505af4158015610b95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bb99190810190613ab4565b9050600281516003811115610bca57fe5b14610be75760405162461bcd60e51b81526004016108d59061478a565b8060200151610bf543612edf565b11610c125760405162461bcd60e51b81526004016108d5906147da565b604051632fdb7d1960e21b815273__WorkersImpl___________________________9063bf6df46490610c4c90600090889060040161492b565b60006040518083038186803b158015610c6457600080fd5b505af4158015610c78573d6000803e3d6000fd5b5050505050505050565b610c8a611c30565b610ca65760405162461bcd60e51b81526004016108d5906147fa565b8051610cb99060269060208401906131ef565b5050565b60268054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d495780601f10610d1e57610100808354040283529160200191610d49565b820191906000526020600020905b815481529060010190602001808311610d2c57829003601f168201915b505050505090505b90565b6005546001600160a01b03163014610d7e5760405162461bcd60e51b81526004016108d5906147aa565b81610d8761319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610dcf57fe5b6002811115610dda57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e775780601f10610e4c57610100808354040283529160200191610e77565b820191906000526020600020905b815481529060010190602001808311610e5a57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610f2257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610ef057fe5b6003811115610efb57fe5b81526020016001820154815260200160028201548152505081526020019060010190610eaf565b5050509152509091506000905081602001516002811115610f3f57fe5b1415610f5d5760405162461bcd60e51b81526004016108d59061480a565b604051630e80483160e21b815273__WorkersImpl___________________________90633a0120c490610c4c9060009088908890600401614903565b6005546001600160a01b03163014610fc35760405162461bcd60e51b81526004016108d5906147aa565b33610fcc61319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561101457fe5b600281111561101f57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110bc5780601f10611091576101008083540402835291602001916110bc565b820191906000526020600020905b81548152906001019060200180831161109f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561116757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561113557fe5b600381111561114057fe5b815260200160018201548152602001600282015481525050815260200190600101906110f4565b505050915250909150600090508160200151600281111561118457fe5b14156111a25760405162461bcd60e51b81526004016108d59061480a565b60405163184e876360e31b815273__PrincipalImpl_________________________9063c2743b18906111e090600090899089908990600401614aa4565b60006040518083038186803b1580156111f857600080fd5b505af415801561120c573d6000803e3d6000fd5b505050505050505050565b6005546001600160a01b031630146112415760405162461bcd60e51b81526004016108d5906147aa565b3361124a61319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561129257fe5b600281111561129d57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561133a5780601f1061130f5761010080835404028352916020019161133a565b820191906000526020600020905b81548152906001019060200180831161131d57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156113e557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156113b357fe5b60038111156113be57fe5b81526020016001820154815260200160028201548152505081526020019060010190611372565b505050915250909150600190508160200151600281111561140257fe5b1461141f5760405162461bcd60e51b81526004016108d5906147ea565b8451600081815260208052604081206004015460ff16600181111561144057fe5b1461145d5760405162461bcd60e51b81526004016108d59061481a565b604051632dfb660d60e21b815273__TaskImpl______________________________9063b7ed98349061149f906000908c908c908c908c908c90600401614ade565b60006040518083038186803b1580156114b757600080fd5b505af41580156114cb573d6000803e3d6000fd5b505050505050505050505050565b60606000601c01805480602002602001604051908101604052809291908181526020018280548015610d4957602002820191906000526020600020905b815481526020019060010190808311611516575050505050905090565b60025490565b60258054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d495780601f10610d1e57610100808354040283529160200191610d49565b6115a261326d565b6040805160a08101909152600760056000835b828210156116ab57838260040201604051806080016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561163157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611613575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561168957602002820191906000526020600020905b815481526020019060010190808311611675575b50505050508152602001600382015481525050815260200190600101906115b5565b50505050905090565b6116bc611c30565b6116d85760405162461bcd60e51b81526004016108d5906147fa565b6027546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3602780546001600160a01b0319169055565b6040516302b519c360e11b815260009073__SecretContractImpl____________________9063056a33869061175c90849060040161485b565b60206040518083038186803b15801561177457600080fd5b505af4158015611788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117ac9190810190613ad2565b905090565b6117b961329a565b60008281526020808052604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561183f57602002820191906000526020600020905b81548152602001906001019080831161182b575b5050509183525050600482015460209091019060ff16600181111561186057fe5b600181111561186b57fe5b90525090505b919050565b6005546001600160a01b031630146118a05760405162461bcd60e51b81526004016108d5906147aa565b8260005b601b5481101561191f57816001600160a01b03166000601d01600080601b0184815481106118ce57fe5b60009182526020808320909101546001600160a01b0390811684529083019390935260409091019020541614156119175760405162461bcd60e51b81526004016108d59061476a565b6001016118a4565b5060405163063e88f160e51b815273__WorkersImpl___________________________9063c7d11e2090610c4c906000908890889088906004016148b8565b611966611c30565b6119825760405162461bcd60e51b81526004016108d5906147fa565b8051610cb99060259060208401906131ef565b6005546000906001600160a01b031633146119c25760405162461bcd60e51b81526004016108d59061482a565b60405163d3c0af8760e01b815273__UpgradeImpl___________________________9063d3c0af87906119fe906000908790879060040161488b565b60206040518083038186803b158015611a1657600080fd5b505af4158015611a2a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106ee9190810190613ad2565b6027546001600160a01b031690565b60405163e5a2600960e01b815260609073__SecretContractImpl____________________9063e5a2600990611a9c9060009087908790600401614a89565b60006040518083038186803b158015611ab457600080fd5b505af4158015611ac8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ee9190810190613838565b611af86132c5565b6000828152601e602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff90911690811115611b8757fe5b6005811115611b9257fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611c205780601f10611bf557610100808354040283529160200191611c20565b820191906000526020600020905b815481529060010190602001808311611c0357829003601f168201915b5050505050815250509050919050565b6027546000906001600160a01b0316611c47613117565b6001600160a01b031614905090565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611c9692919061492b565b60006040518083038186803b158015611cae57600080fd5b505af4158015611cc2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611cea9190810190613b0f565b93509350935093509193509193565b6000611d0361319d565b6000611d0d61319d565b60005b601b54811015611f3157601b8054601d9160009184908110611d2e57fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611d8457fe5b6002811115611d8f57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e2c5780601f10611e0157610100808354040283529160200191611e2c565b820191906000526020600020905b815481529060010190602001808311611e0f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611ed757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611ea557fe5b6003811115611eb057fe5b81526020016001820154815260200160028201548152505081526020019060010190611e64565b50505050815250509150856001600160a01b031682600001516001600160a01b03161415611f2957601b805482908110611f0d57fe5b6000918252602090912001546001600160a01b03169250611f31565b600101611d10565b509092509050915091565b6005546001600160a01b03163014611f665760405162461bcd60e51b81526004016108d5906147aa565b33611f6f61319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115611fb757fe5b6002811115611fc257fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561205f5780601f106120345761010080835404028352916020019161205f565b820191906000526020600020905b81548152906001019060200180831161204257829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561210a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156120d857fe5b60038111156120e357fe5b81526020016001820154815260200160028201548152505081526020019060010190612097565b505050915250909150600190508160200151600281111561212757fe5b146121445760405162461bcd60e51b81526004016108d5906147ea565b8560008082815260208052604090206004015460ff16600181111561216557fe5b146121825760405162461bcd60e51b81526004016108d59061481a565b6040516301c7aeeb60e21b815273__TaskImpl______________________________9063071ebbac906121c2906000908b908b908b908b906004016149a6565b60006040518083038186803b1580156121da57600080fd5b505af41580156121ee573d6000803e3d6000fd5b5050505050505050505050565b600060608261220861319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561225057fe5b600281111561225b57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122f85780601f106122cd576101008083540402835291602001916122f8565b820191906000526020600020905b8154815290600101906020018083116122db57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156123a357838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561237157fe5b600381111561237c57fe5b81526020016001820154815260200160028201548152505081526020019060010190612330565b50505091525090915060009050816020015160028111156123c057fe5b14156123de5760405162461bcd60e51b81526004016108d59061480a565b604051632f68f03160e01b815273__WorkersImpl___________________________90632f68f03190612418906000908990600401614869565b60006040518083038186803b15801561243057600080fd5b505af4158015612444573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261246c91908101906136b5565b935093505050915091565b3361248061319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156124c857fe5b60028111156124d357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125705780601f1061254557610100808354040283529160200191612570565b820191906000526020600020905b81548152906001019060200180831161255357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561261b57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156125e957fe5b60038111156125f457fe5b815260200160018201548152602001600282015481525050815260200190600101906125a8565b5050505081525050905061262e43612edf565b61264a5760405162461bcd60e51b81526004016108d5906147ca565b60028160200151600281111561265c57fe5b146126795760405162461bcd60e51b81526004016108d59061483a565b6022546060820151101561269f5760405162461bcd60e51b81526004016108d59061475a565b6040516318a8dc7160e11b815273__WorkersImpl___________________________90633151b8e2906109169060009060040161485b565b6040516312c8c46d60e31b815260009073__WorkersImpl___________________________906396462368906119fe9086908690600401614735565b6005546001600160a01b031690565b6005546001600160a01b0316301461274c5760405162461bcd60e51b81526004016108d5906147aa565b604051638c91056d60e01b815273__TaskImpl______________________________90638c91056d90610c4c9060009088908890889088906004016149f8565b61279461319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156127dc57fe5b60028111156127e757fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128845780601f1061285957610100808354040283529160200191612884565b820191906000526020600020905b81548152906001019060200180831161286757829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561292f57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156128fd57fe5b600381111561290857fe5b815260200160018201548152602001600282015481525050815260200190600101906128bc565b505050915250909392505050565b6005546001600160a01b031630146129675760405162461bcd60e51b81526004016108d5906147aa565b3361297061319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156129b857fe5b60028111156129c357fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a605780601f10612a3557610100808354040283529160200191612a60565b820191906000526020600020905b815481529060010190602001808311612a4357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612b0b57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612ad957fe5b6003811115612ae457fe5b81526020016001820154815260200160028201548152505081526020019060010190612a98565b5050509152509091506001905081602001516002811115612b2857fe5b14612b455760405162461bcd60e51b81526004016108d5906147ea565b8451600081815260208052604090206004015460019060ff1681811115612b6857fe5b14612b855760405162461bcd60e51b81526004016108d59061479a565b60405163b1c57e7b60e01b815273__TaskImpl______________________________9063b1c57e7b9061149f906000908c908c908c908c908c90600401614ade565b612bcf611c30565b612beb5760405162461bcd60e51b81526004016108d5906147fa565b6005546001600160a01b03163014612c155760405162461bcd60e51b81526004016108d5906147aa565b6040516366e13f4360e01b815273__TaskImpl______________________________906366e13f43906111e09060009089908990899089908990600401614a3a565b6005546001600160a01b03163014612c815760405162461bcd60e51b81526004016108d5906147aa565b33612c8a61319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115612cd257fe5b6002811115612cdd57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d7a5780601f10612d4f57610100808354040283529160200191612d7a565b820191906000526020600020905b815481529060010190602001808311612d5d57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612e2557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612df357fe5b6003811115612dfe57fe5b81526020016001820154815260200160028201548152505081526020019060010190612db2565b5050509152509091506001905081602001516002811115612e4257fe5b14612e5f5760405162461bcd60e51b81526004016108d5906147ea565b866001600082815260208052604090206004015460ff166001811115612e8157fe5b14612e9e5760405162461bcd60e51b81526004016108d59061479a565b6040516289b28160e61b815273__TaskImpl______________________________9063226ca0409061149f906000908c908c908c908c908c90600401614946565b6040516304d5c11360e31b815260009073__WorkersImpl___________________________906326ae089890612f1b908490869060040161492b565b60206040518083038186803b158015612f3357600080fd5b505af4158015612f47573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106f19190810190613ad2565b60245460ff1690565b336000908152601d60205260409020546001600160a01b031690565b60015490565b8060016000828152601e6020526040902060059081015460ff1690811115612fba57fe5b14612fd75760405162461bcd60e51b81526004016108d5906147ba565b604051631c9a715b60e01b815273__TaskImpl______________________________90631c9a715b9061091690600090869060040161492b565b613019611c30565b6130355760405162461bcd60e51b81526004016108d5906147fa565b61303e8161311b565b50565b613049611c30565b6130655760405162461bcd60e51b81526004016108d5906147fa565b6005546001600160a01b0316301461308f5760405162461bcd60e51b81526004016108d5906147aa565b6040516368fac41b60e01b815273__UpgradeImpl___________________________906368fac41b906130c9906000908590600401614869565b60006040518083038186803b1580156130e157600080fd5b505af41580156130f5573d6000803e3d6000fd5b5050505050565b6001600160a01b031660009081526021602052604090205490565b3390565b6001600160a01b0381166131415760405162461bcd60e51b81526004016108d59061477a565b6027546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3602780546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061323057805160ff191683800117855561325d565b8280016001018555821561325d579182015b8281111561325d578251825591602001919060010190613242565b5061326992915061330a565b5090565b6040518060a001604052806005905b613284613324565b81526020019060019003908161327c5790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b610d5191905b808211156132695760008155600101613310565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b80356106f181614d5b565b80516106f181614d5b565b600082601f83011261337357600080fd5b815161338661338182614bf2565b614bcc565b915081818352602084019350602081019050838560208402820111156133ab57600080fd5b60005b838110156133d757816133c18882613357565b84525060209283019291909101906001016133ae565b5050505092915050565b600082601f8301126133f257600080fd5b600461340061338182614c12565b9150818385602084028201111561341657600080fd5b60005b838110156133d7578161342c8882613522565b8452506020928301929190910190600101613419565b600082601f83011261345357600080fd5b815161346161338182614bf2565b9150818183526020840193506020810190508385602084028201111561348657600080fd5b60005b838110156133d7578161349c888261352d565b8452506020928301929190910190600101613489565b600082601f8301126134c357600080fd5b81516134d161338182614bf2565b915081818352602084019350602081019050838560208402820111156134f657600080fd5b60005b838110156133d7578161350c888261352d565b84525060209283019291909101906001016134f9565b80356106f181614d6f565b80516106f181614d6f565b600082601f83011261354957600080fd5b813561355761338182614c2f565b9150808252602083016020830185838301111561357357600080fd5b61357e838284614cf1565b50505092915050565b600082601f83011261359857600080fd5b81516135a661338182614c2f565b915080825260208301602083018583830111156135c257600080fd5b61357e838284614cfd565b80516106f181614d78565b6000606082840312156135ea57600080fd5b6135f46060614bcc565b9050600061360284846135cd565b82525060206136138484830161352d565b60208301525060406136278482850161352d565b60408301525092915050565b80356106f181614d85565b60006020828403121561365057600080fd5b600061365c848461334c565b949350505050565b6000806040838503121561367757600080fd5b6000613683858561334c565b92505060208301356001600160401b0381111561369f57600080fd5b6136ab85828601613538565b9150509250929050565b600080604083850312156136c857600080fd5b60006136d48585613357565b92505060208301516001600160401b038111156136f057600080fd5b6136ab85828601613587565b60008060006060848603121561371157600080fd5b600061371d868661334c565b93505060208401356001600160401b0381111561373957600080fd5b61374586828701613538565b92505060408401356001600160401b0381111561376157600080fd5b61376d86828701613538565b9150509250925092565b6000806040838503121561378a57600080fd5b6000613796858561334c565b92505060206136ab85828601613522565b6000602082840312156137b957600080fd5b81516001600160401b038111156137cf57600080fd5b61365c84828501613362565b600080604083850312156137ee57600080fd5b82516001600160401b0381111561380457600080fd5b61381085828601613362565b92505060208301516001600160401b0381111561382c57600080fd5b6136ab858286016134b2565b60006020828403121561384a57600080fd5b81516001600160401b0381111561386057600080fd5b61365c84828501613442565b60006020828403121561387e57600080fd5b600061365c8484613522565b600080600080600060a086880312156138a257600080fd5b60006138ae8888613522565b95505060206138bf88828901613522565b94505060406138d088828901613522565b93505060606138e188828901613633565b92505060808601356001600160401b038111156138fd57600080fd5b61390988828901613538565b9150509295509295909350565b6000806000806080858703121561392c57600080fd5b60006139388787613522565b945050602061394987828801613522565b935050604061395a87828801613633565b92505060608501356001600160401b0381111561397657600080fd5b61398287828801613538565b91505092959194509250565b600080600080608085870312156139a457600080fd5b60006139b08787613522565b94505060206139c187828801613633565b93505060406139d287828801613633565b925050606061398287828801613522565b600080600080600060a086880312156139fb57600080fd5b6000613a078888613522565b9550506020613a1888828901613633565b9450506040613a2988828901613633565b9350506060613a3a88828901613522565b925050608061390988828901613522565b600060208284031215613a5d57600080fd5b81356001600160401b03811115613a7357600080fd5b61365c84828501613538565b60008060408385031215613a9257600080fd5b82356001600160401b03811115613aa857600080fd5b61368385828601613538565b600060608284031215613ac657600080fd5b600061365c84846135d8565b600060208284031215613ae457600080fd5b600061365c848461352d565b60008060408385031215613b0357600080fd5b60006137968585613522565b60008060008060808587031215613b2557600080fd5b6000613b31878761352d565b9450506020613b428782880161352d565b93505060408501516001600160401b03811115613b5e57600080fd5b613b6a87828801613362565b92505060608501516001600160401b03811115613b8657600080fd5b613982878288016134b2565b600080600060608486031215613ba757600080fd5b6000613bb38686613522565b935050602061374586828701613522565b60008060008060006101008688031215613bdd57600080fd5b6000613be98888613633565b9550506020613bfa8882890161334c565b9450506040613c0b888289016133e1565b93505060c08601356001600160401b03811115613c2757600080fd5b613c3388828901613538565b92505060e08601356001600160401b038111156138fd57600080fd5b6000613c5b8383613c8f565b505060200190565b6000613c5b8383613fdc565b6000613c7b83836144f7565b505060600190565b60006106ee838361460c565b613c9881614c75565b82525050565b6000613ca982614c5c565b613cb38185614c6c565b9350613cbe83614c56565b8060005b83811015613cec578151613cd68882613c4f565b9750613ce183614c56565b925050600101613cc2565b509495945050505050565b6000613d0282614c5c565b613d0c8185614c6c565b9350613d1783614c56565b8060005b83811015613cec578151613d2f8882613c4f565b9750613d3a83614c56565b925050600101613d1b565b613d4e81614c60565b613d588184611871565b9250613d6382610d51565b8060005b83811015610942578151613d7b8782613c63565b9650613d8683614c56565b925050600101613d67565b6000613d9c82614c5c565b613da68185614c6c565b9350613db183614c56565b8060005b83811015613cec578151613dc98882613c63565b9750613dd483614c56565b925050600101613db5565b6000613dea82614c5c565b613df48185614c6c565b9350613dff83614c56565b8060005b83811015613cec578151613e178882613c63565b9750613e2283614c56565b925050600101613e03565b6000613e3882614c5c565b613e428185614c6c565b9350613e4d83614c56565b8060005b83811015613cec578151613e658882613c6f565b9750613e7083614c56565b925050600101613e51565b6000613e8682614c5c565b613e908185614c6c565b9350613e9b83614c56565b8060005b83811015613cec578151613eb38882613c6f565b9750613ebe83614c56565b925050600101613e9f565b6000613ed482614c66565b613ede8185611871565b935083602082028501613ef085610d51565b8060005b85811015613f2a5784840389528151613f0d8582613c83565b9450613f1883614c56565b60209a909a0199925050600101613ef4565b5091979650505050505050565b6000613f4282614c5c565b613f4c8185614c6c565b9350613f5783614c56565b8060005b83811015613cec578151613f6f8882613c63565b9750613f7a83614c56565b925050600101613f5b565b6000613f9082614c5c565b613f9a8185614c6c565b9350613fa583614c56565b8060005b83811015613cec578151613fbd8882613c63565b9750613fc883614c56565b925050600101613fa9565b613c9881614c80565b613c9881610d51565b6000613ff082614c5c565b613ffa8185614c6c565b935061400a818560208601614cfd565b61401381614d29565b9093019392505050565b613c9881614cc5565b613c9881614cd0565b613c9881614cdb565b613c9881614ce6565b600061404e602283614c6c565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152611b9d60f21b602082015260400192915050565b6000614092601883614c6c565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b60006140cb602683614c6c565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b6000614113602783614c6c565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152667574207479706560c81b602082015260400192915050565b600061415c601c83614c6c565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000614195601b83614c6c565b7f4e6f74207570646174656420456e69676d6120636f6e74726163740000000000815260200192915050565b60006141ce601383614c6c565b725461736b206973206e6f742077616974696e6760681b815260200192915050565b60006141fd602783614c6c565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152661a585b1a5e995960ca1b602082015260400192915050565b6000614246602e83614c6c565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381526d081b1bd9c81bdd5d08195d995b9d60921b602082015260400192915050565b6000614296601483614c6c565b732bb7b935b2b9103737ba103637b3b3b2b21034b760611b815260200192915050565b60006142c6602083614c6c565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b60006142ff601383614c6c565b722ab73932b3b4b9ba32b932b2103bb7b935b2b960691b815260200192915050565b600061432e602083614c6c565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000614367602083614c6c565b7f4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374815260200192915050565b60006143a0602783614c6c565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f6781526619d959081bdd5d60ca1b602082015260400192915050565b805160009060a08401906143f08582613c8f565b5060208301516144036020860182613fdc565b5060408301516144166040860182613fdc565b506060830151848203606086015261442e8282613ddf565b9150506080830151614443608086018261401d565b509392505050565b9052565b80516000906101008401906144648582613c8f565b5060208301516144776020860182613fdc565b50604083015161448a6040860182613fdc565b50606083015161449d6060860182614667565b5060808301516144b06080860182614667565b5060a08301516144c360a0860182613fdc565b5060c08301516144d660c0860182614026565b5060e083015184820360e08601526144ee8282613fe5565b95945050505050565b80516060830190614508848261402f565b50602082015161451b6020850182613fdc565b50604082015161452e6040850182613fdc565b50505050565b805160009060a08401906145488582613c8f565b50602083015161455b6020860182614038565b50604083015184820360408601526145738282613fe5565b91505060608301516145886060860182613fdc565b50608083015184820360808601526144ee8282613e2d565b805160009060a08401906145b48582613c8f565b5060208301516145c76020860182614038565b50604083015184820360408601526145df8282613fe5565b91505060608301516145f46060860182613fdc565b50608083015184820360808601526144ee8282613e7b565b805160009060808401906146208582613fdc565b50602083015184820360208601526146388282613cf7565b915050604083015184820360408601526146528282613f85565b91505060608301516144436060860182613fdc565b613c9881614cb9565b602081016106f18284613c8f565b6040810161468c8285613c8f565b818103602083015261365c8184613fe5565b604081016146ac8285613c8f565b818103602083015261365c8184614534565b602080825281016106ee8184613c9e565b604080825281016146e08185613c9e565b9050818103602083015261365c8184613f37565b602080825281016106ee8184613d91565b602080825281016106ee8184613ec9565b602081016106f18284613fd3565b602080825281016106ee8184613fe5565b604080825281016147468185613fe5565b9050818103602083015261365c8184613fe5565b602080825281016106f181614041565b602080825281016106f181614085565b602080825281016106f1816140be565b602080825281016106f181614106565b602080825281016106f18161414f565b602080825281016106f181614188565b602080825281016106f1816141c1565b602080825281016106f1816141f0565b602080825281016106f181614239565b602080825281016106f181614289565b602080825281016106f1816142b9565b602080825281016106f1816142f2565b602080825281016106f181614321565b602080825281016106f18161435a565b602080825281016106f181614393565b602080825281016106ee81846143dc565b602081016106f1828461444b565b60408101614877828561444b565b6148846020830184613c8f565b9392505050565b60608101614899828661444b565b6148a66020830185613c8f565b81810360408301526144ee8184613fe5565b608081016148c6828761444b565b6148d36020830186613c8f565b81810360408301526148e58185613fe5565b905081810360608301526148f98184613fe5565b9695505050505050565b60608101614911828661444b565b61491e6020830185613c8f565b61365c6040830184613fdc565b60408101614939828561444b565b6148846020830184613fdc565b60c08101614954828961444b565b6149616020830188613fdc565b61496e6040830187613fdc565b61497b6060830186613fdc565b6149886080830185614667565b81810360a083015261499a8184613fe5565b98975050505050505050565b60a081016149b4828861444b565b6149c16020830187613fdc565b6149ce6040830186613fdc565b6149db6060830185614667565b81810360808301526149ed8184613fe5565b979650505050505050565b60a08101614a06828861444b565b614a136020830187613fdc565b614a206040830186614667565b614a2d6060830185614667565b6148f96080830184613fdc565b60c08101614a48828961444b565b614a556020830188613fdc565b614a626040830187614667565b614a6f6060830186614667565b614a7c6080830185613fdc565b6149ed60a0830184613fdc565b60608101614a97828661444b565b61491e6020830185613fdc565b60808101614ab2828761444b565b614abf6020830186613fdc565b614acc6040830185613fdc565b81810360608301526148f98184613fe5565b6101208101614aed828961444b565b614afa6020830188614667565b614b076040830187613c8f565b614b146060830186613d45565b81810360e0830152614b268185613fe5565b905081810361010083015261499a8184613fe5565b602080825281016106ee818461444f565b602080825281016106ee8184614534565b60408082528101614b6e81856145a0565b90506148846020830184613fdc565b602081016106f18284613fdc565b60808101614b998287613fdc565b614ba66020830186613fdc565b8181036040830152614bb88185613c9e565b905081810360608301526148f98184613f37565b6040518181016001600160401b0381118282101715614bea57600080fd5b604052919050565b60006001600160401b03821115614c0857600080fd5b5060209081020190565b60006001600160401b03821115614c2857600080fd5b5060200290565b60006001600160401b03821115614c4557600080fd5b506020601f91909101601f19160190565b60200190565b5190565b50600490565b50600590565b90815260200190565b60006106f182614cad565b151590565b8061187181614d33565b8061187181614d3d565b8061187181614d47565b8061187181614d51565b6001600160a01b031690565b6001600160401b031690565b60006106f182614c85565b60006106f182614c8f565b60006106f182614c99565b60006106f182614ca3565b82818337506000910152565b60005b83811015614d18578181015183820152602001614d00565b8381111561452e5750506000910152565b601f01601f191690565b6002811061303e57fe5b6006811061303e57fe5b6004811061303e57fe5b6003811061303e57fe5b614d6481614c75565b811461303e57600080fd5b614d6481610d51565b6004811061303e57600080fd5b614d6481614cb956fea365627a7a72315820df6f46ec0673a8981c963866939b9fadfc8632017d3260bdf2718dc98264c3866c6578706572696d656e74616cf564736f6c634300050c0040","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106102695760003560e01c80638ed0573711610151578063c25d94d2116100c3578063d855a57911610087578063d855a57914610565578063df4da4611461056d578063ee6dcef914610575578063f2fde38b14610588578063f74e6e1d1461059b578063f9a9b7ae146105ae57610269565b8063c25d94d214610511578063c652b91914610524578063ca2af5f214610537578063cbbc061d1461054a578063d184935d1461055d57610269565b8063a3bdae3e11610115578063a3bdae3e1461049a578063b34e97e8146104bb578063b5c14992146104c3578063b9758c95146104d6578063ba252688146104de578063c011b1c3146104f157610269565b80638ed057371461040e5780638f32d59b1461042e5780639836ca3114610443578063a0c3998214610466578063a153ec601461048757610269565b80635f25f850116101ea5780637624281e116101ae5780637624281e1461038d578063786cd4d7146103ad5780637a743832146103c05780637c438de9146103d35780638da5cb5b146103e65780638e055b8b146103fb57610269565b80635f25f8501461034b578063700dd4df1461036057806370266a4714610368578063715018a61461037d57806375bbf75b1461038557610269565b80633a92d44c116102315780633a92d44c146102e857806347e7ef24146102fd57806350946a9f146103105780635486aa7014610323578063550baa2f1461033657610269565b806316f9a2a41461026e5780631d40ff0b146102985780631f3c99c3146102b85780632e1a7d4d146102c25780633480943b146102d5575b600080fd5b61028161027c36600461386c565b6105c1565b60405161028f9291906146cf565b60405180910390f35b6102ab6102a6366004613af0565b61065b565b60405161028f91906146be565b6102c06106f7565b005b6102c06102d036600461386c565b61094a565b6102c06102e3366004613a4b565b610c82565b6102f0610cbd565b60405161028f9190614724565b6102c061030b366004613777565b610d54565b6102c061031e366004613b92565b610f99565b6102c0610331366004613bc4565b611217565b61033e6114d9565b60405161028f91906146f4565b610353611533565b60405161028f9190614b7d565b6102f0611539565b61037061159a565b60405161028f9190614705565b6102c06116b4565b610353611722565b6103a061039b36600461386c565b6117b1565b60405161028f919061484a565b6102c06103bb3660046136fc565b611876565b6102c06103ce366004613a4b565b61195e565b6103536103e1366004613664565b611995565b6103ee611a4e565b60405161028f9190614670565b61033e610409366004613af0565b611a5d565b61042161041c36600461386c565b611af0565b60405161028f9190614b3b565b610436611c30565b60405161028f9190614716565b61045661045136600461386c565b611c56565b60405161028f9493929190614b8b565b61047961047436600461363e565b611cf9565b60405161028f92919061469e565b6102c0610495366004613916565b611f3c565b6104ad6104a836600461363e565b6121fb565b60405161028f92919061467e565b6102c0612477565b6103536104d1366004613a7f565b6126d7565b6103ee612713565b6102c06104ec36600461398e565b612722565b6105046104ff36600461363e565b61278c565b60405161028f9190614b4c565b6102c061051f366004613bc4565b61293d565b6102c06105323660046139e3565b612bc7565b6102c061054536600461388a565b612c57565b61035361055836600461386c565b612edf565b610436612f6b565b6103ee612f74565b610353612f90565b6102c061058336600461386c565b612f96565b6102c061059636600461363e565b613011565b6102c06105a936600461363e565b613041565b6103536105bc36600461363e565b6130fc565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b81526004016105fe92919061492b565b60006040518083038186803b15801561061657600080fd5b505af415801561062a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261065291908101906137db565b91509150915091565b604051635deadfbd60e11b815260609073__WorkersImpl___________________________9063bbd5bf7a9061069a9060009087908790600401614a89565b60006040518083038186803b1580156106b257600080fd5b505af41580156106c6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ee91908101906137a7565b90505b92915050565b3361070061319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561074857fe5b600281111561075357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107f05780601f106107c5576101008083540402835291602001916107f0565b820191906000526020600020905b8154815290600101906020018083116107d357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561089b57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561086957fe5b600381111561087457fe5b81526020016001820154815260200160028201548152505081526020019060010190610828565b50505091525090915060019050816020015160028111156108b857fe5b146108de5760405162461bcd60e51b81526004016108d5906147ea565b60405180910390fd5b6040516349e44f4960e01b815273__WorkersImpl___________________________906349e44f49906109169060009060040161485b565b60006040518083038186803b15801561092e57600080fd5b505af4158015610942573d6000803e3d6000fd5b505050505050565b3361095361319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561099b57fe5b60028111156109a657fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a435780601f10610a1857610100808354040283529160200191610a43565b820191906000526020600020905b815481529060010190602001808311610a2657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610aee57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610abc57fe5b6003811115610ac757fe5b81526020016001820154815260200160028201548152505081526020019060010190610a7b565b5050509152509091506002905081602001516002811115610b0b57fe5b14610b285760405162461bcd60e51b81526004016108d59061483a565b610b306131cd565b6040516328de336160e21b815273__WorkersImpl___________________________9063a378cd8490610b699085904390600401614b5d565b60606040518083038186803b158015610b8157600080fd5b505af4158015610b95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bb99190810190613ab4565b9050600281516003811115610bca57fe5b14610be75760405162461bcd60e51b81526004016108d59061478a565b8060200151610bf543612edf565b11610c125760405162461bcd60e51b81526004016108d5906147da565b604051632fdb7d1960e21b815273__WorkersImpl___________________________9063bf6df46490610c4c90600090889060040161492b565b60006040518083038186803b158015610c6457600080fd5b505af4158015610c78573d6000803e3d6000fd5b5050505050505050565b610c8a611c30565b610ca65760405162461bcd60e51b81526004016108d5906147fa565b8051610cb99060269060208401906131ef565b5050565b60268054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d495780601f10610d1e57610100808354040283529160200191610d49565b820191906000526020600020905b815481529060010190602001808311610d2c57829003601f168201915b505050505090505b90565b6005546001600160a01b03163014610d7e5760405162461bcd60e51b81526004016108d5906147aa565b81610d8761319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610dcf57fe5b6002811115610dda57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e775780601f10610e4c57610100808354040283529160200191610e77565b820191906000526020600020905b815481529060010190602001808311610e5a57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610f2257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610ef057fe5b6003811115610efb57fe5b81526020016001820154815260200160028201548152505081526020019060010190610eaf565b5050509152509091506000905081602001516002811115610f3f57fe5b1415610f5d5760405162461bcd60e51b81526004016108d59061480a565b604051630e80483160e21b815273__WorkersImpl___________________________90633a0120c490610c4c9060009088908890600401614903565b6005546001600160a01b03163014610fc35760405162461bcd60e51b81526004016108d5906147aa565b33610fcc61319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561101457fe5b600281111561101f57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110bc5780601f10611091576101008083540402835291602001916110bc565b820191906000526020600020905b81548152906001019060200180831161109f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561116757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561113557fe5b600381111561114057fe5b815260200160018201548152602001600282015481525050815260200190600101906110f4565b505050915250909150600090508160200151600281111561118457fe5b14156111a25760405162461bcd60e51b81526004016108d59061480a565b60405163184e876360e31b815273__PrincipalImpl_________________________9063c2743b18906111e090600090899089908990600401614aa4565b60006040518083038186803b1580156111f857600080fd5b505af415801561120c573d6000803e3d6000fd5b505050505050505050565b6005546001600160a01b031630146112415760405162461bcd60e51b81526004016108d5906147aa565b3361124a61319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561129257fe5b600281111561129d57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561133a5780601f1061130f5761010080835404028352916020019161133a565b820191906000526020600020905b81548152906001019060200180831161131d57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156113e557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156113b357fe5b60038111156113be57fe5b81526020016001820154815260200160028201548152505081526020019060010190611372565b505050915250909150600190508160200151600281111561140257fe5b1461141f5760405162461bcd60e51b81526004016108d5906147ea565b8451600081815260208052604081206004015460ff16600181111561144057fe5b1461145d5760405162461bcd60e51b81526004016108d59061481a565b604051632dfb660d60e21b815273__TaskImpl______________________________9063b7ed98349061149f906000908c908c908c908c908c90600401614ade565b60006040518083038186803b1580156114b757600080fd5b505af41580156114cb573d6000803e3d6000fd5b505050505050505050505050565b60606000601c01805480602002602001604051908101604052809291908181526020018280548015610d4957602002820191906000526020600020905b815481526020019060010190808311611516575050505050905090565b60025490565b60258054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d495780601f10610d1e57610100808354040283529160200191610d49565b6115a261326d565b6040805160a08101909152600760056000835b828210156116ab57838260040201604051806080016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561163157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611613575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561168957602002820191906000526020600020905b815481526020019060010190808311611675575b50505050508152602001600382015481525050815260200190600101906115b5565b50505050905090565b6116bc611c30565b6116d85760405162461bcd60e51b81526004016108d5906147fa565b6027546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3602780546001600160a01b0319169055565b6040516302b519c360e11b815260009073__SecretContractImpl____________________9063056a33869061175c90849060040161485b565b60206040518083038186803b15801561177457600080fd5b505af4158015611788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117ac9190810190613ad2565b905090565b6117b961329a565b60008281526020808052604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561183f57602002820191906000526020600020905b81548152602001906001019080831161182b575b5050509183525050600482015460209091019060ff16600181111561186057fe5b600181111561186b57fe5b90525090505b919050565b6005546001600160a01b031630146118a05760405162461bcd60e51b81526004016108d5906147aa565b8260005b601b5481101561191f57816001600160a01b03166000601d01600080601b0184815481106118ce57fe5b60009182526020808320909101546001600160a01b0390811684529083019390935260409091019020541614156119175760405162461bcd60e51b81526004016108d59061476a565b6001016118a4565b5060405163063e88f160e51b815273__WorkersImpl___________________________9063c7d11e2090610c4c906000908890889088906004016148b8565b611966611c30565b6119825760405162461bcd60e51b81526004016108d5906147fa565b8051610cb99060259060208401906131ef565b6005546000906001600160a01b031633146119c25760405162461bcd60e51b81526004016108d59061482a565b60405163d3c0af8760e01b815273__UpgradeImpl___________________________9063d3c0af87906119fe906000908790879060040161488b565b60206040518083038186803b158015611a1657600080fd5b505af4158015611a2a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106ee9190810190613ad2565b6027546001600160a01b031690565b60405163e5a2600960e01b815260609073__SecretContractImpl____________________9063e5a2600990611a9c9060009087908790600401614a89565b60006040518083038186803b158015611ab457600080fd5b505af4158015611ac8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ee9190810190613838565b611af86132c5565b6000828152601e602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff90911690811115611b8757fe5b6005811115611b9257fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611c205780601f10611bf557610100808354040283529160200191611c20565b820191906000526020600020905b815481529060010190602001808311611c0357829003601f168201915b5050505050815250509050919050565b6027546000906001600160a01b0316611c47613117565b6001600160a01b031614905090565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611c9692919061492b565b60006040518083038186803b158015611cae57600080fd5b505af4158015611cc2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611cea9190810190613b0f565b93509350935093509193509193565b6000611d0361319d565b6000611d0d61319d565b60005b601b54811015611f3157601b8054601d9160009184908110611d2e57fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611d8457fe5b6002811115611d8f57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e2c5780601f10611e0157610100808354040283529160200191611e2c565b820191906000526020600020905b815481529060010190602001808311611e0f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611ed757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611ea557fe5b6003811115611eb057fe5b81526020016001820154815260200160028201548152505081526020019060010190611e64565b50505050815250509150856001600160a01b031682600001516001600160a01b03161415611f2957601b805482908110611f0d57fe5b6000918252602090912001546001600160a01b03169250611f31565b600101611d10565b509092509050915091565b6005546001600160a01b03163014611f665760405162461bcd60e51b81526004016108d5906147aa565b33611f6f61319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115611fb757fe5b6002811115611fc257fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561205f5780601f106120345761010080835404028352916020019161205f565b820191906000526020600020905b81548152906001019060200180831161204257829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561210a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156120d857fe5b60038111156120e357fe5b81526020016001820154815260200160028201548152505081526020019060010190612097565b505050915250909150600190508160200151600281111561212757fe5b146121445760405162461bcd60e51b81526004016108d5906147ea565b8560008082815260208052604090206004015460ff16600181111561216557fe5b146121825760405162461bcd60e51b81526004016108d59061481a565b6040516301c7aeeb60e21b815273__TaskImpl______________________________9063071ebbac906121c2906000908b908b908b908b906004016149a6565b60006040518083038186803b1580156121da57600080fd5b505af41580156121ee573d6000803e3d6000fd5b5050505050505050505050565b600060608261220861319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561225057fe5b600281111561225b57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122f85780601f106122cd576101008083540402835291602001916122f8565b820191906000526020600020905b8154815290600101906020018083116122db57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156123a357838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561237157fe5b600381111561237c57fe5b81526020016001820154815260200160028201548152505081526020019060010190612330565b50505091525090915060009050816020015160028111156123c057fe5b14156123de5760405162461bcd60e51b81526004016108d59061480a565b604051632f68f03160e01b815273__WorkersImpl___________________________90632f68f03190612418906000908990600401614869565b60006040518083038186803b15801561243057600080fd5b505af4158015612444573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261246c91908101906136b5565b935093505050915091565b3361248061319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156124c857fe5b60028111156124d357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125705780601f1061254557610100808354040283529160200191612570565b820191906000526020600020905b81548152906001019060200180831161255357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561261b57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156125e957fe5b60038111156125f457fe5b815260200160018201548152602001600282015481525050815260200190600101906125a8565b5050505081525050905061262e43612edf565b61264a5760405162461bcd60e51b81526004016108d5906147ca565b60028160200151600281111561265c57fe5b146126795760405162461bcd60e51b81526004016108d59061483a565b6022546060820151101561269f5760405162461bcd60e51b81526004016108d59061475a565b6040516318a8dc7160e11b815273__WorkersImpl___________________________90633151b8e2906109169060009060040161485b565b6040516312c8c46d60e31b815260009073__WorkersImpl___________________________906396462368906119fe9086908690600401614735565b6005546001600160a01b031690565b6005546001600160a01b0316301461274c5760405162461bcd60e51b81526004016108d5906147aa565b604051638c91056d60e01b815273__TaskImpl______________________________90638c91056d90610c4c9060009088908890889088906004016149f8565b61279461319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156127dc57fe5b60028111156127e757fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128845780601f1061285957610100808354040283529160200191612884565b820191906000526020600020905b81548152906001019060200180831161286757829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561292f57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156128fd57fe5b600381111561290857fe5b815260200160018201548152602001600282015481525050815260200190600101906128bc565b505050915250909392505050565b6005546001600160a01b031630146129675760405162461bcd60e51b81526004016108d5906147aa565b3361297061319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156129b857fe5b60028111156129c357fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a605780601f10612a3557610100808354040283529160200191612a60565b820191906000526020600020905b815481529060010190602001808311612a4357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612b0b57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612ad957fe5b6003811115612ae457fe5b81526020016001820154815260200160028201548152505081526020019060010190612a98565b5050509152509091506001905081602001516002811115612b2857fe5b14612b455760405162461bcd60e51b81526004016108d5906147ea565b8451600081815260208052604090206004015460019060ff1681811115612b6857fe5b14612b855760405162461bcd60e51b81526004016108d59061479a565b60405163b1c57e7b60e01b815273__TaskImpl______________________________9063b1c57e7b9061149f906000908c908c908c908c908c90600401614ade565b612bcf611c30565b612beb5760405162461bcd60e51b81526004016108d5906147fa565b6005546001600160a01b03163014612c155760405162461bcd60e51b81526004016108d5906147aa565b6040516366e13f4360e01b815273__TaskImpl______________________________906366e13f43906111e09060009089908990899089908990600401614a3a565b6005546001600160a01b03163014612c815760405162461bcd60e51b81526004016108d5906147aa565b33612c8a61319d565b6001600160a01b038281166000908152601d6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115612cd257fe5b6002811115612cdd57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d7a5780601f10612d4f57610100808354040283529160200191612d7a565b820191906000526020600020905b815481529060010190602001808311612d5d57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612e2557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612df357fe5b6003811115612dfe57fe5b81526020016001820154815260200160028201548152505081526020019060010190612db2565b5050509152509091506001905081602001516002811115612e4257fe5b14612e5f5760405162461bcd60e51b81526004016108d5906147ea565b866001600082815260208052604090206004015460ff166001811115612e8157fe5b14612e9e5760405162461bcd60e51b81526004016108d59061479a565b6040516289b28160e61b815273__TaskImpl______________________________9063226ca0409061149f906000908c908c908c908c908c90600401614946565b6040516304d5c11360e31b815260009073__WorkersImpl___________________________906326ae089890612f1b908490869060040161492b565b60206040518083038186803b158015612f3357600080fd5b505af4158015612f47573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106f19190810190613ad2565b60245460ff1690565b336000908152601d60205260409020546001600160a01b031690565b60015490565b8060016000828152601e6020526040902060059081015460ff1690811115612fba57fe5b14612fd75760405162461bcd60e51b81526004016108d5906147ba565b604051631c9a715b60e01b815273__TaskImpl______________________________90631c9a715b9061091690600090869060040161492b565b613019611c30565b6130355760405162461bcd60e51b81526004016108d5906147fa565b61303e8161311b565b50565b613049611c30565b6130655760405162461bcd60e51b81526004016108d5906147fa565b6005546001600160a01b0316301461308f5760405162461bcd60e51b81526004016108d5906147aa565b6040516368fac41b60e01b815273__UpgradeImpl___________________________906368fac41b906130c9906000908590600401614869565b60006040518083038186803b1580156130e157600080fd5b505af41580156130f5573d6000803e3d6000fd5b5050505050565b6001600160a01b031660009081526021602052604090205490565b3390565b6001600160a01b0381166131415760405162461bcd60e51b81526004016108d59061477a565b6027546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3602780546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061323057805160ff191683800117855561325d565b8280016001018555821561325d579182015b8281111561325d578251825591602001919060010190613242565b5061326992915061330a565b5090565b6040518060a001604052806005905b613284613324565b81526020019060019003908161327c5790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b610d5191905b808211156132695760008155600101613310565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b80356106f181614d5b565b80516106f181614d5b565b600082601f83011261337357600080fd5b815161338661338182614bf2565b614bcc565b915081818352602084019350602081019050838560208402820111156133ab57600080fd5b60005b838110156133d757816133c18882613357565b84525060209283019291909101906001016133ae565b5050505092915050565b600082601f8301126133f257600080fd5b600461340061338182614c12565b9150818385602084028201111561341657600080fd5b60005b838110156133d7578161342c8882613522565b8452506020928301929190910190600101613419565b600082601f83011261345357600080fd5b815161346161338182614bf2565b9150818183526020840193506020810190508385602084028201111561348657600080fd5b60005b838110156133d7578161349c888261352d565b8452506020928301929190910190600101613489565b600082601f8301126134c357600080fd5b81516134d161338182614bf2565b915081818352602084019350602081019050838560208402820111156134f657600080fd5b60005b838110156133d7578161350c888261352d565b84525060209283019291909101906001016134f9565b80356106f181614d6f565b80516106f181614d6f565b600082601f83011261354957600080fd5b813561355761338182614c2f565b9150808252602083016020830185838301111561357357600080fd5b61357e838284614cf1565b50505092915050565b600082601f83011261359857600080fd5b81516135a661338182614c2f565b915080825260208301602083018583830111156135c257600080fd5b61357e838284614cfd565b80516106f181614d78565b6000606082840312156135ea57600080fd5b6135f46060614bcc565b9050600061360284846135cd565b82525060206136138484830161352d565b60208301525060406136278482850161352d565b60408301525092915050565b80356106f181614d85565b60006020828403121561365057600080fd5b600061365c848461334c565b949350505050565b6000806040838503121561367757600080fd5b6000613683858561334c565b92505060208301356001600160401b0381111561369f57600080fd5b6136ab85828601613538565b9150509250929050565b600080604083850312156136c857600080fd5b60006136d48585613357565b92505060208301516001600160401b038111156136f057600080fd5b6136ab85828601613587565b60008060006060848603121561371157600080fd5b600061371d868661334c565b93505060208401356001600160401b0381111561373957600080fd5b61374586828701613538565b92505060408401356001600160401b0381111561376157600080fd5b61376d86828701613538565b9150509250925092565b6000806040838503121561378a57600080fd5b6000613796858561334c565b92505060206136ab85828601613522565b6000602082840312156137b957600080fd5b81516001600160401b038111156137cf57600080fd5b61365c84828501613362565b600080604083850312156137ee57600080fd5b82516001600160401b0381111561380457600080fd5b61381085828601613362565b92505060208301516001600160401b0381111561382c57600080fd5b6136ab858286016134b2565b60006020828403121561384a57600080fd5b81516001600160401b0381111561386057600080fd5b61365c84828501613442565b60006020828403121561387e57600080fd5b600061365c8484613522565b600080600080600060a086880312156138a257600080fd5b60006138ae8888613522565b95505060206138bf88828901613522565b94505060406138d088828901613522565b93505060606138e188828901613633565b92505060808601356001600160401b038111156138fd57600080fd5b61390988828901613538565b9150509295509295909350565b6000806000806080858703121561392c57600080fd5b60006139388787613522565b945050602061394987828801613522565b935050604061395a87828801613633565b92505060608501356001600160401b0381111561397657600080fd5b61398287828801613538565b91505092959194509250565b600080600080608085870312156139a457600080fd5b60006139b08787613522565b94505060206139c187828801613633565b93505060406139d287828801613633565b925050606061398287828801613522565b600080600080600060a086880312156139fb57600080fd5b6000613a078888613522565b9550506020613a1888828901613633565b9450506040613a2988828901613633565b9350506060613a3a88828901613522565b925050608061390988828901613522565b600060208284031215613a5d57600080fd5b81356001600160401b03811115613a7357600080fd5b61365c84828501613538565b60008060408385031215613a9257600080fd5b82356001600160401b03811115613aa857600080fd5b61368385828601613538565b600060608284031215613ac657600080fd5b600061365c84846135d8565b600060208284031215613ae457600080fd5b600061365c848461352d565b60008060408385031215613b0357600080fd5b60006137968585613522565b60008060008060808587031215613b2557600080fd5b6000613b31878761352d565b9450506020613b428782880161352d565b93505060408501516001600160401b03811115613b5e57600080fd5b613b6a87828801613362565b92505060608501516001600160401b03811115613b8657600080fd5b613982878288016134b2565b600080600060608486031215613ba757600080fd5b6000613bb38686613522565b935050602061374586828701613522565b60008060008060006101008688031215613bdd57600080fd5b6000613be98888613633565b9550506020613bfa8882890161334c565b9450506040613c0b888289016133e1565b93505060c08601356001600160401b03811115613c2757600080fd5b613c3388828901613538565b92505060e08601356001600160401b038111156138fd57600080fd5b6000613c5b8383613c8f565b505060200190565b6000613c5b8383613fdc565b6000613c7b83836144f7565b505060600190565b60006106ee838361460c565b613c9881614c75565b82525050565b6000613ca982614c5c565b613cb38185614c6c565b9350613cbe83614c56565b8060005b83811015613cec578151613cd68882613c4f565b9750613ce183614c56565b925050600101613cc2565b509495945050505050565b6000613d0282614c5c565b613d0c8185614c6c565b9350613d1783614c56565b8060005b83811015613cec578151613d2f8882613c4f565b9750613d3a83614c56565b925050600101613d1b565b613d4e81614c60565b613d588184611871565b9250613d6382610d51565b8060005b83811015610942578151613d7b8782613c63565b9650613d8683614c56565b925050600101613d67565b6000613d9c82614c5c565b613da68185614c6c565b9350613db183614c56565b8060005b83811015613cec578151613dc98882613c63565b9750613dd483614c56565b925050600101613db5565b6000613dea82614c5c565b613df48185614c6c565b9350613dff83614c56565b8060005b83811015613cec578151613e178882613c63565b9750613e2283614c56565b925050600101613e03565b6000613e3882614c5c565b613e428185614c6c565b9350613e4d83614c56565b8060005b83811015613cec578151613e658882613c6f565b9750613e7083614c56565b925050600101613e51565b6000613e8682614c5c565b613e908185614c6c565b9350613e9b83614c56565b8060005b83811015613cec578151613eb38882613c6f565b9750613ebe83614c56565b925050600101613e9f565b6000613ed482614c66565b613ede8185611871565b935083602082028501613ef085610d51565b8060005b85811015613f2a5784840389528151613f0d8582613c83565b9450613f1883614c56565b60209a909a0199925050600101613ef4565b5091979650505050505050565b6000613f4282614c5c565b613f4c8185614c6c565b9350613f5783614c56565b8060005b83811015613cec578151613f6f8882613c63565b9750613f7a83614c56565b925050600101613f5b565b6000613f9082614c5c565b613f9a8185614c6c565b9350613fa583614c56565b8060005b83811015613cec578151613fbd8882613c63565b9750613fc883614c56565b925050600101613fa9565b613c9881614c80565b613c9881610d51565b6000613ff082614c5c565b613ffa8185614c6c565b935061400a818560208601614cfd565b61401381614d29565b9093019392505050565b613c9881614cc5565b613c9881614cd0565b613c9881614cdb565b613c9881614ce6565b600061404e602283614c6c565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152611b9d60f21b602082015260400192915050565b6000614092601883614c6c565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b60006140cb602683614c6c565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b6000614113602783614c6c565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152667574207479706560c81b602082015260400192915050565b600061415c601c83614c6c565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000614195601b83614c6c565b7f4e6f74207570646174656420456e69676d6120636f6e74726163740000000000815260200192915050565b60006141ce601383614c6c565b725461736b206973206e6f742077616974696e6760681b815260200192915050565b60006141fd602783614c6c565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152661a585b1a5e995960ca1b602082015260400192915050565b6000614246602e83614c6c565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381526d081b1bd9c81bdd5d08195d995b9d60921b602082015260400192915050565b6000614296601483614c6c565b732bb7b935b2b9103737ba103637b3b3b2b21034b760611b815260200192915050565b60006142c6602083614c6c565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b60006142ff601383614c6c565b722ab73932b3b4b9ba32b932b2103bb7b935b2b960691b815260200192915050565b600061432e602083614c6c565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000614367602083614c6c565b7f4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374815260200192915050565b60006143a0602783614c6c565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f6781526619d959081bdd5d60ca1b602082015260400192915050565b805160009060a08401906143f08582613c8f565b5060208301516144036020860182613fdc565b5060408301516144166040860182613fdc565b506060830151848203606086015261442e8282613ddf565b9150506080830151614443608086018261401d565b509392505050565b9052565b80516000906101008401906144648582613c8f565b5060208301516144776020860182613fdc565b50604083015161448a6040860182613fdc565b50606083015161449d6060860182614667565b5060808301516144b06080860182614667565b5060a08301516144c360a0860182613fdc565b5060c08301516144d660c0860182614026565b5060e083015184820360e08601526144ee8282613fe5565b95945050505050565b80516060830190614508848261402f565b50602082015161451b6020850182613fdc565b50604082015161452e6040850182613fdc565b50505050565b805160009060a08401906145488582613c8f565b50602083015161455b6020860182614038565b50604083015184820360408601526145738282613fe5565b91505060608301516145886060860182613fdc565b50608083015184820360808601526144ee8282613e2d565b805160009060a08401906145b48582613c8f565b5060208301516145c76020860182614038565b50604083015184820360408601526145df8282613fe5565b91505060608301516145f46060860182613fdc565b50608083015184820360808601526144ee8282613e7b565b805160009060808401906146208582613fdc565b50602083015184820360208601526146388282613cf7565b915050604083015184820360408601526146528282613f85565b91505060608301516144436060860182613fdc565b613c9881614cb9565b602081016106f18284613c8f565b6040810161468c8285613c8f565b818103602083015261365c8184613fe5565b604081016146ac8285613c8f565b818103602083015261365c8184614534565b602080825281016106ee8184613c9e565b604080825281016146e08185613c9e565b9050818103602083015261365c8184613f37565b602080825281016106ee8184613d91565b602080825281016106ee8184613ec9565b602081016106f18284613fd3565b602080825281016106ee8184613fe5565b604080825281016147468185613fe5565b9050818103602083015261365c8184613fe5565b602080825281016106f181614041565b602080825281016106f181614085565b602080825281016106f1816140be565b602080825281016106f181614106565b602080825281016106f18161414f565b602080825281016106f181614188565b602080825281016106f1816141c1565b602080825281016106f1816141f0565b602080825281016106f181614239565b602080825281016106f181614289565b602080825281016106f1816142b9565b602080825281016106f1816142f2565b602080825281016106f181614321565b602080825281016106f18161435a565b602080825281016106f181614393565b602080825281016106ee81846143dc565b602081016106f1828461444b565b60408101614877828561444b565b6148846020830184613c8f565b9392505050565b60608101614899828661444b565b6148a66020830185613c8f565b81810360408301526144ee8184613fe5565b608081016148c6828761444b565b6148d36020830186613c8f565b81810360408301526148e58185613fe5565b905081810360608301526148f98184613fe5565b9695505050505050565b60608101614911828661444b565b61491e6020830185613c8f565b61365c6040830184613fdc565b60408101614939828561444b565b6148846020830184613fdc565b60c08101614954828961444b565b6149616020830188613fdc565b61496e6040830187613fdc565b61497b6060830186613fdc565b6149886080830185614667565b81810360a083015261499a8184613fe5565b98975050505050505050565b60a081016149b4828861444b565b6149c16020830187613fdc565b6149ce6040830186613fdc565b6149db6060830185614667565b81810360808301526149ed8184613fe5565b979650505050505050565b60a08101614a06828861444b565b614a136020830187613fdc565b614a206040830186614667565b614a2d6060830185614667565b6148f96080830184613fdc565b60c08101614a48828961444b565b614a556020830188613fdc565b614a626040830187614667565b614a6f6060830186614667565b614a7c6080830185613fdc565b6149ed60a0830184613fdc565b60608101614a97828661444b565b61491e6020830185613fdc565b60808101614ab2828761444b565b614abf6020830186613fdc565b614acc6040830185613fdc565b81810360608301526148f98184613fe5565b6101208101614aed828961444b565b614afa6020830188614667565b614b076040830187613c8f565b614b146060830186613d45565b81810360e0830152614b268185613fe5565b905081810361010083015261499a8184613fe5565b602080825281016106ee818461444f565b602080825281016106ee8184614534565b60408082528101614b6e81856145a0565b90506148846020830184613fdc565b602081016106f18284613fdc565b60808101614b998287613fdc565b614ba66020830186613fdc565b8181036040830152614bb88185613c9e565b905081810360608301526148f98184613f37565b6040518181016001600160401b0381118282101715614bea57600080fd5b604052919050565b60006001600160401b03821115614c0857600080fd5b5060209081020190565b60006001600160401b03821115614c2857600080fd5b5060200290565b60006001600160401b03821115614c4557600080fd5b506020601f91909101601f19160190565b60200190565b5190565b50600490565b50600590565b90815260200190565b60006106f182614cad565b151590565b8061187181614d33565b8061187181614d3d565b8061187181614d47565b8061187181614d51565b6001600160a01b031690565b6001600160401b031690565b60006106f182614c85565b60006106f182614c8f565b60006106f182614c99565b60006106f182614ca3565b82818337506000910152565b60005b83811015614d18578181015183820152602001614d00565b8381111561452e5750506000910152565b601f01601f191690565b6002811061303e57fe5b6006811061303e57fe5b6004811061303e57fe5b6003811061303e57fe5b614d6481614c75565b811461303e57600080fd5b614d6481610d51565b6004811061303e57600080fd5b614d6481614cb956fea365627a7a72315820df6f46ec0673a8981c963866939b9fadfc8632017d3260bdf2718dc98264c3866c6578706572696d656e74616cf564736f6c634300050c0040","sourceMap":"886:17683:0:-;;;1156:665;8:9:-1;5:2;;;30:1;27;20:12;5:2;1156:665:0;;;;;;;;;;;;;;;;;;;;;707:12:39;-1:-1:-1;;;;;707:10:39;:12;:::i;:::-;698:6;:21;;-1:-1:-1;;;;;;698:21:39;-1:-1:-1;;;;;698:21:39;;;;;;;;734:40;;767:6;;;-1:-1:-1;;734:40:39;;-1:-1:-1;;734:40:39;1359:5:0;:37;;-1:-1:-1;;;;;1359:37:0;;;-1:-1:-1;;;;;;1359:37:0;;;;;;;;1406:28;;;1468:35;;;1444:21;:59;1513:15;:28;;;;;;;;;;;1551:18;:34;;;;;;;;;;;;;;;1595;:50;;;;;1640:4;1595:50;;;1655:22;:26;;;1691:21;:25;1726:11;:20;;;;;-1:-1:-1;;1726:20:0;;;;;;1756:26;;;;:14;;:26;;;;;:::i;:::-;-1:-1:-1;1792:22:0;;;;:12;;:22;;;;;:::i;:::-;;1156:665;;;;;;;;886:17683;;788:96:36;867:10;788:96;;:::o;886:17683:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;886:17683:0;;;-1:-1:-1;886:17683:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:128;221:13;;239:30;221:13;239:30;;282:442;;394:3;387:4;379:6;375:17;371:27;361:2;;412:1;409;402:12;361:2;442:6;436:13;464:64;479:48;520:6;479:48;;;464:64;;;455:73;;548:6;541:5;534:21;584:4;576:6;572:17;617:4;610:5;606:16;652:3;643:6;638:3;634:16;631:25;628:2;;;669:1;666;659:12;628:2;679:39;711:6;706:3;701;679:39;;;354:370;;;;;;;;732:134;810:13;;828:33;810:13;828:33;;873:1408;;;;;;;;;1122:3;1110:9;1101:7;1097:23;1093:33;1090:2;;;1139:1;1136;1129:12;1090:2;1174:1;1191:64;1247:7;1227:9;1191:64;;;1181:74;;1153:108;1292:2;1310:64;1366:7;1357:6;1346:9;1342:22;1310:64;;;1300:74;;1271:109;1411:2;1429:64;1485:7;1476:6;1465:9;1461:22;1429:64;;;1419:74;;1390:109;1530:2;1548:64;1604:7;1595:6;1584:9;1580:22;1548:64;;;1538:74;;1509:109;1649:3;1668:64;1724:7;1715:6;1704:9;1700:22;1668:64;;;1658:74;;1628:110;1769:3;1788:61;1841:7;1832:6;1821:9;1817:22;1788:61;;;1778:71;;1748:107;1907:3;1896:9;1892:19;1886:26;-1:-1;;;;;1924:6;1921:30;1918:2;;;1964:1;1961;1954:12;1918:2;1984:73;2049:7;2040:6;2029:9;2025:22;1984:73;;;1974:83;;1865:198;2115:3;2104:9;2100:19;2094:26;-1:-1;;;;;2132:6;2129:30;2126:2;;;2172:1;2169;2162:12;2126:2;2192:73;2257:7;2248:6;2237:9;2233:22;2192:73;;;2182:83;;2073:198;1084:1197;;;;;;;;;;;;2288:256;2350:2;2344:9;2376:17;;;-1:-1;;;;;2436:34;;2472:22;;;2433:62;2430:2;;;2508:1;2505;2498:12;2430:2;2524;2517:22;2328:216;;-1:-1;2328:216;2551:321;;-1:-1;;;;;2686:6;2683:30;2680:2;;;2726:1;2723;2716:12;2680:2;-1:-1;2857:4;2793;2770:17;;;;-1:-1;;2766:33;2847:15;;2617:255;2879:91;;2941:24;2959:5;2941:24;;2977:85;3043:13;3036:21;;3019:43;3069:121;-1:-1;;;;;3131:54;;3114:76;3277:268;3342:1;3349:101;3363:6;3360:1;3357:13;3349:101;;;3430:11;;;3424:18;3411:11;;;3404:39;3385:2;3378:10;3349:101;;;3465:6;3462:1;3459:13;3456:2;;;3530:1;3521:6;3516:3;3512:16;3505:27;3456:2;3326:219;;;;;3553:117;3622:24;3640:5;3622:24;;;3615:5;3612:35;3602:2;;3661:1;3658;3651:12;3602:2;3596:74;;3677:111;3743:21;3758:5;3743:21;;3795:117;3864:24;3882:5;3864:24;;3838:74;886:17683:0;;;;;;","deployedSourceMap":"886:17683:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;886:17683:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15118:194;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16473:199;;;;;;;;;:::i;:::-;;;;;;;;7906:98;;;:::i;:::-;;7444:132;;;;;;;;;:::i;18458:109::-;;;;;;;;;:::i;3855:92:11:-;;;:::i;:::-;;;;;;;;7051:195:0;;;;;;;;;:::i;14760:237::-;;;;;;;;;:::i;9135:482::-;;;;;;;;;:::i;3258:121:11:-;;;:::i;:::-;;;;;;;;2134:102;;;:::i;:::-;;;;;;;;3694:96;;;:::i;3012:130::-;;;:::i;:::-;;;;;;;;1642:137:39;;;:::i;9744:149:0:-;;;:::i;2732::11:-;;;;;;;;;:::i;:::-;;;;;;;;6573:235:0;;;;;;;;;:::i;18273:117::-;;;;;;;;;:::i;17952:249::-;;;;;;;;;:::i;857:77:39:-;;;:::i;:::-;;;;;;;;10106:211:0;;;;;;;;;:::i;2410:137:11:-;;;;;;;;;:::i;:::-;;;;;;;;1208:92:39;;;:::i;:::-;;;;;;;;15938:198:0;;;;;;;;;:::i;:::-;;;;;;;;;;;1005:492:11;;;;;;;;;:::i;:::-;;;;;;;;;8312:352:0;;;;;;;;;:::i;16810:200::-;;;;;;;;;:::i;:::-;;;;;;;;;7739:90;;;:::i;17215:181::-;;;;;;;;;:::i;3494:131:11:-;;;:::i;12097:289:0:-;;;;;;;;;:::i;680:131:11:-;;;;;;;;;:::i;:::-;;;;;;;;12883:467:0;;;;;;;;;:::i;11170:352::-;;;;;;;;;:::i;13741:369::-;;;;;;;;;:::i;15487:167::-;;;;;;;;;:::i;4010:82:11:-;;;:::i;400:115::-;;;:::i;1958:90::-;;;:::i;14277:147:0:-;;;;;;;;;:::i;1928:107:39:-;;;;;;;;;:::i;17537:226:0:-;;;;;;;;;:::i;1741:134:11:-;;;;;;;;;:::i;15118:194:0:-;15196:16;15214:13;15250;:34;15285:5;15292:12;15250:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15250:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15250:55:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15250:55:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15250:55:0;;;;;;;;;15243:62;;;;15118:194;;;:::o;16473:199::-;16605:60;;-1:-1:-1;;;16605:60:0;;16566:16;;16605:11;;:30;;:60;;16636:5;;16643:12;;16657:7;;16605:60;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16605:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16605:60:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16605:60:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16605:60:0;;;;;;;;;16598:67;;16473:199;;;;;:::o;7906:98::-;7946:10;2485:33;;:::i;:::-;-1:-1:-1;;;;;2521:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2485:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2485:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2485:56:0;;-1:-1:-1;2485:56:0;;-1:-1:-1;2576:34:0;;-1:-1:-1;2559:6:0;:13;;;:51;;;;;;;;;2551:84;;;;-1:-1:-1;;;2551:84:0;;;;;;;;;;;;;;;;;7968:29;;-1:-1:-1;;;7968:29:0;;:11;;:22;;:29;;7991:5;;7968:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7968:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7968:29:0;;;;7906:98;;:::o;7444:132::-;7503:10;3730:33;;:::i;:::-;-1:-1:-1;;;;;3766:20:0;;;:5;:20;;;:13;:20;;;;;;;;;3730:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3730:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3730:56:0;;-1:-1:-1;3730:56:0;;-1:-1:-1;3821:35:0;;-1:-1:-1;3804:6:0;:13;;;:52;;;;;;;;;3796:104;;;;-1:-1:-1;;;3796:104:0;;;;;;;;;3910:39;;:::i;:::-;3952:56;;-1:-1:-1;;;3952:56:0;;:11;;:34;;:56;;3987:6;;3995:12;;3952:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3952:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3952:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3952:56:0;;;;;;;;;3910:98;-1:-1:-1;4055:33:0;4026:25;;:62;;;;;;;;;4018:126;;;;-1:-1:-1;;;4018:126:0;;;;;;;;;4198:9;:21;;;4162:33;4182:12;4162:19;:33::i;:::-;:57;4154:128;;;;-1:-1:-1;;;4154:128:0;;;;;;;;;7529:40;;-1:-1:-1;;;7529:40:0;;:11;;:24;;:40;;7554:5;;7561:7;;7529:40;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7529:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7529:40:0;;;;7444:132;;;;:::o;18458:109::-;1061:9:39;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;18538:22:0;;;;:12;;:22;;;;;:::i;:::-;;18458:109;:::o;3855:92:11:-;3928:12;3921:19;;;;;;;;-1:-1:-1;;3921:19:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3897:12;;3921:19;;3928:12;;3921:19;;3928:12;3921:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3855:92;;:::o;7051:195:0:-;5745:34;;-1:-1:-1;;;;;5745:34:0;5736:4;5728:51;5720:91;;;;-1:-1:-1;;;5720:91:0;;;;;;;;;7162:10;2121:33;;:::i;:::-;-1:-1:-1;;;;;2157:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2121:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2121:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2121:56:0;;-1:-1:-1;2121:56:0;;-1:-1:-1;2212:38:0;;-1:-1:-1;2195:6:0;:13;;;:55;;;;;;;;;;2187:87;;;;-1:-1:-1;;;2187:87:0;;;;;;;;;7188:51;;-1:-1:-1;;;7188:51:0;;:11;;:23;;:51;;7212:5;;7219:10;;7231:7;;7188:51;;;;14760:237;5745:34;;-1:-1:-1;;;;;5745:34:0;5736:4;5728:51;5720:91;;;;-1:-1:-1;;;5720:91:0;;;;;;;;;14896:10;2121:33;;:::i;:::-;-1:-1:-1;;;;;2157:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2121:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2121:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2121:56:0;;-1:-1:-1;2121:56:0;;-1:-1:-1;2212:38:0;;-1:-1:-1;2195:6:0;:13;;;:55;;;;;;;;;;2187:87;;;;-1:-1:-1;;;2187:87:0;;;;;;;;;14922:68;;-1:-1:-1;;;14922:68:0;;:13;;:34;;:68;;14957:5;;14964:12;;14978:5;;14985:4;;14922:68;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14922:68:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14922:68:0;;;;5821:1;;14760:237;;;:::o;9135:482::-;5745:34;;-1:-1:-1;;;;;5745:34:0;5736:4;5728:51;5720:91;;;;-1:-1:-1;;;5720:91:0;;;;;;;;;9412:10;2485:33;;:::i;:::-;-1:-1:-1;;;;;2521:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2485:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2485:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2485:56:0;;-1:-1:-1;2485:56:0;;-1:-1:-1;2576:34:0;;-1:-1:-1;2559:6:0;:13;;;:51;;;;;;;;;2551:84;;;;-1:-1:-1;;;2551:84:0;;;;;;;;;9446:12;;9456:1;4485:24;;;9446:12;4485:24;;;;;:31;;;;;;:78;;;;;;;;4477:123;;;;-1:-1:-1;;;4477:123:0;;;;;;;;;9474:136;;-1:-1:-1;;;9474:136:0;;:8;;:33;;:136;;9508:5;;9515:8;;9525:32;;9559:9;;9582:21;;9605:4;;9474:136;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9474:136:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9474:136:0;;;;2645:1;5821;;9135:482;;;;;:::o;3258:121:11:-;3320:16;3355:5;:17;;3348:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3258:121;:::o;2134:102::-;2208:21;;2134:102;:::o;3694:96::-;3769:14;3762:21;;;;;;;;-1:-1:-1;;3762:21:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3738:12;;3762:21;;3769:14;;3762:21;;3769:14;3762:21;;;;;;;;;;;;;;;;;;;;;;;;3012:130;3061:36;;:::i;:::-;3109:26;;;;;;;;;3116:19;3109:26;3116:5;3109:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3109:26:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3012:130;:::o;1642:137:39:-;1061:9;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;1724:6;;1703:40;;1740:1;;-1:-1:-1;;;;;1724:6:39;;1703:40;;1740:1;;1703:40;1753:6;:19;;-1:-1:-1;;;;;;1753:19:39;;;1642:137::o;9744:149:0:-;9836:50;;-1:-1:-1;;;9836:50:0;;9809:4;;9836:18;;:43;;:50;;9809:4;;9836:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9836:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9836:50:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9836:50:0;;;;;;;;;9829:57;;9744:149;:::o;2732::11:-;2797:34;;:::i;:::-;2850:5;:24;;;:15;:24;;;;;;;;2843:31;;;;;;;;;-1:-1:-1;;;;;2843:31:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2850:24;;2843:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2843:31:11;;;-1:-1:-1;;2843:31:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2843:31:11;-1:-1:-1;2732:149:11;;;;:::o;6573:235:0:-;5745:34;;-1:-1:-1;;;;;5745:34:0;5736:4;5728:51;5720:91;;;;-1:-1:-1;;;5720:91:0;;;;;;;;;6717:7;5396:6;5391:175;5412:21;:28;5408:32;;5391:175;;;5519:7;-1:-1:-1;;;;;5469:57:0;:5;:13;;:39;5483:5;:21;;5505:1;5483:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5483:24:0;;;5469:39;;;;;;;;;;;;;;;:46;;:57;;5461:94;;;;-1:-1:-1;;;5461:94:0;;;;;;;;;5442:3;;5391:175;;;-1:-1:-1;6740:61:0;;-1:-1:-1;;;6740:61:0;;:11;;:24;;:61;;6765:5;;6772:7;;6781;;6790:10;;6740:61;;;;18273:117;1061:9:39;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;18357:26:0;;;;:14;;:26;;;;;:::i;17952:249::-;5992:34;;18089:7;;-1:-1:-1;;;;;5992:34:0;5978:10;:48;5970:93;;;;-1:-1:-1;;;5970:93:0;;;;;;;;;18119:75;;-1:-1:-1;;;18119:75:0;;:11;;:46;;:75;;18166:5;;18173:14;;18189:4;;18119:75;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18119:75:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18119:75:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18119:75:0;;;;;;;;857:77:39;921:6;;-1:-1:-1;;;;;921:6:39;857:77;:::o;10106:211:0:-;10239:71;;-1:-1:-1;;;10239:71:0;;10200:16;;10239:18;;:49;;:71;;10289:5;;10296:6;;10304:5;;10239:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10239:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10239:71:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;10239:71:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;10239:71:0;;;;;;;;2410:137:11;2471:30;;:::i;:::-;2520:5;:20;;;:11;:20;;;;;;;;;2513:27;;;;;;;;;-1:-1:-1;;;;;2513:27:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2513:27:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2520:20;2513:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2513:27:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2410:137;;;:::o;1208:92:39:-;1287:6;;1248:4;;-1:-1:-1;;;;;1287:6:39;1271:12;:10;:12::i;:::-;-1:-1:-1;;;;;1271:22:39;;1264:29;;1208:92;:::o;15938:198:0:-;16015:4;16021;16027:16;16045:13;16077:11;:31;16109:5;16116:12;16077:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16077:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16077:52:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16077:52:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16077:52:0;;;;;;;;;16070:59;;;;;;;;15938:198;;;;;:::o;1005:492:11:-;1080:7;1089:26;;:::i;:::-;1127:15;1152:33;;:::i;:::-;1200:6;1195:262;1216:21;:28;1212:32;;1195:262;;;1288:21;:24;;1274:13;;:5;;1310:1;;1288:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1288:24:11;;;1274:39;;;;;;;;;;;;;;;;1265:48;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1265:48:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1348:7;-1:-1:-1;;;;;1331:24:11;:6;:13;;;-1:-1:-1;;;;;1331:24:11;;1327:120;;;1385:21;:24;;1407:1;;1385:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1385:24:11;;-1:-1:-1;1427:5:11;;1327:120;1246:3;;1195:262;;;-1:-1:-1;1474:7:11;;-1:-1:-1;1483:6:11;-1:-1:-1;1005:492:11;;;:::o;8312:352:0:-;5745:34;;-1:-1:-1;;;;;5745:34:0;5736:4;5728:51;5720:91;;;;-1:-1:-1;;;5720:91:0;;;;;;;;;8517:10;2485:33;;:::i;:::-;-1:-1:-1;;;;;2521:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2485:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2485:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2485:56:0;;-1:-1:-1;2485:56:0;;-1:-1:-1;2576:34:0;;-1:-1:-1;2559:6:0;:13;;;:51;;;;;;;;;2551:84;;;;-1:-1:-1;;;2551:84:0;;;;;;;;;8551:7;4520:43;4485:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;4477:123;;;;-1:-1:-1;;;4477:123:0;;;;;;;;;8574:83;;-1:-1:-1;;;8574:83:0;;:8;;:40;;:83;;8615:5;;8622:7;;8631:9;;8642:8;;8652:4;;8574:83;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8574:83:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8574:83:0;;;;2645:1;5821;;8312:352;;;;:::o;16810:200::-;16915:7;16924:12;16890:10;2121:33;;:::i;:::-;-1:-1:-1;;;;;2157:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2121:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2121:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2121:56:0;;-1:-1:-1;2121:56:0;;-1:-1:-1;2212:38:0;;-1:-1:-1;2195:6:0;:13;;;:55;;;;;;;;;;2187:87;;;;-1:-1:-1;;;2187:87:0;;;;;;;;;16959:44;;-1:-1:-1;;;16959:44:0;;:11;;:25;;:44;;16985:5;;16992:10;;16959:44;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16959:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16959:44:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16959:44:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16959:44:0;;;;;;;;;16952:51;;;;16810:200;;;;;:::o;7739:90::-;7772:10;3177:33;;:::i;:::-;-1:-1:-1;;;;;3213:20:0;;;:5;:20;;;:13;:20;;;;;;;;;3177:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3177:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3251:33;3271:12;3251:19;:33::i;:::-;3243:90;;;;-1:-1:-1;;;3243:90:0;;;;;;;;;3368:35;3351:6;:13;;;:52;;;;;;;;;3343:104;;;;-1:-1:-1;;;3343:104:0;;;;;;;;;3483:22;;3465:14;;;;:40;;3457:87;;;;-1:-1:-1;;;3457:87:0;;;;;;;;;7794:28;;-1:-1:-1;;;7794:28:0;;:11;;:21;;:28;;7816:5;;7794:28;;;;17215:181;17342:47;;-1:-1:-1;;;17342:47:0;;17315:4;;17342:11;;:28;;:47;;17371:5;;17378:10;;17342:47;;;;3494:131:11;3584:34;;-1:-1:-1;;;;;3584:34:11;3494:131;:::o;12097:289:0:-;5745:34;;-1:-1:-1;;;;;5745:34:0;5736:4;5728:51;5720:91;;;;-1:-1:-1;;;5720:91:0;;;;;;;;;12292:87;;-1:-1:-1;;;12292:87:0;;:8;;:29;;:87;;12322:5;;12329:11;;12342:9;;12353:6;;12361:17;;12292:87;;;;680:131:11;737:26;;:::i;:::-;-1:-1:-1;;;;;782:22:11;;;:5;:22;;;:13;:22;;;;;;;;;775:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;775:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;775:29:11;;-1:-1:-1;775:29:11;;680:131;-1:-1:-1;;;680:131:11:o;12883:467:0:-;5745:34;;-1:-1:-1;;;;;5745:34:0;5736:4;5728:51;5720:91;;;;-1:-1:-1;;;5720:91:0;;;;;;;;;13153:10;2485:33;;:::i;:::-;-1:-1:-1;;;;;2521:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2485:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2485:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2485:56:0;;-1:-1:-1;2485:56:0;;-1:-1:-1;2576:34:0;;-1:-1:-1;2559:6:0;:13;;;:51;;;;;;;;;2551:84;;;;-1:-1:-1;;;2551:84:0;;;;;;;;;13186:12;;13196:1;4798:24;;;13186:12;4798:24;;;;;:31;;;4833:42;;4798:31;;:77;;;;;;;;;4790:118;;;;-1:-1:-1;;;4790:118:0;;;;;;;;;13214:129;;-1:-1:-1;;;13214:129:0;;:8;;:26;;:129;;13241:5;;13248:8;;13258:32;;13304:9;;13315:21;;13338:4;;13214:129;;;;11170:352;1061:9:39;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;5745:34:0;;-1:-1:-1;;;;;5745:34:0;5736:4;5728:51;5720:91;;;;-1:-1:-1;;;5720:91:0;;;;;;;;;11410:105;;-1:-1:-1;;;11410:105:0;;:8;;:39;;:105;;11450:5;;11457:11;;11470:9;;11481:6;;11489:17;;11508:6;;11410:105;;;;13741:369;5745:34;;-1:-1:-1;;;;;5745:34:0;5736:4;5728:51;5720:91;;;;-1:-1:-1;;;5720:91:0;;;;;;;;;13963:10;2485:33;;:::i;:::-;-1:-1:-1;;;;;2521:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2485:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2485:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2485:56:0;;-1:-1:-1;2485:56:0;;-1:-1:-1;2576:34:0;;-1:-1:-1;2559:6:0;:13;;;:51;;;;;;;;;2551:84;;;;-1:-1:-1;;;2551:84:0;;;;;;;;;13996:7;4833:42;4798:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4790:118;;;;-1:-1:-1;;;4790:118:0;;;;;;;;;14019:84;;-1:-1:-1;;;14019:84:0;;:8;;:30;;:84;;14050:5;;14057:7;;14066;;14075:11;;14088:8;;14098:4;;14019:84;;;;15487:167;15591:56;;-1:-1:-1;;;15591:56:0;;15568:4;;15591:11;;:35;;:56;;15568:4;;15634:12;;15591:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15591:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15591:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15591:56:0;;;;;;;;4010:82:11;4074:11;;;;4010:82;:::o;400:115::-;490:10;450:7;476:25;;;:13;:25;;;;;:32;-1:-1:-1;;;;;476:32:11;400:115;:::o;1958:90::-;2026:15;;1958:90;:::o;14277:147:0:-;14348:7;5140:37;5109:5;:20;;;:11;:20;;;;;:27;;;;;;;;:68;;;;;;;;5101:100;;;;-1:-1:-1;;;5101:100:0;;;;;;;;;14371:46;;-1:-1:-1;;;14371:46:0;;:8;;:30;;:46;;14402:5;;14409:7;;14371:46;;;;1928:107:39;1061:9;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;2000:28;2019:8;2000:18;:28::i;:::-;1928:107;:::o;17537:226:0:-;1061:9:39;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;5745:34:0;;-1:-1:-1;;;;;5745:34:0;5736:4;5728:51;5720:91;;;;-1:-1:-1;;;5720:91:0;;;;;;;;;17681:75;;-1:-1:-1;;;17681:75:0;;:11;;:37;;:75;;17719:5;;17726:29;;17681:75;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17681:75:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17681:75:0;;;;17537:226;:::o;1741:134:11:-;-1:-1:-1;;;;;1834:34:11;1811:4;1834:34;;;:25;:34;;;;;;;1741:134::o;788:96:36:-;867:10;788:96;:::o;2136:225:39:-;-1:-1:-1;;;;;2209:22:39;;2201:73;;;;-1:-1:-1;;;2201:73:39;;;;;;;;;2310:6;;2289:38;;-1:-1:-1;;;;;2289:38:39;;;;2310:6;;2289:38;;2310:6;;2289:38;2337:6;:17;;-1:-1:-1;;;;;;2337:17:39;-1:-1:-1;;;;;2337:17:39;;;;;;;;;;2136:225::o;886:17683:0:-;;;;;;;;;;-1:-1:-1;886:17683:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;886:17683:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;886:17683:0;;;-1:-1:-1;886:17683:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;886:17683:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;886:17683:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:722;;429:3;422:4;414:6;410:17;406:27;396:2;;447:1;444;437:12;396:2;477:6;471:13;499:80;514:64;571:6;514:64;;;499:80;;;490:89;;596:5;621:6;614:5;607:21;651:4;643:6;639:17;629:27;;673:4;668:3;664:14;657:21;;726:6;773:3;765:4;757:6;753:17;748:3;744:27;741:36;738:2;;;790:1;787;780:12;738:2;815:1;800:217;825:6;822:1;819:13;800:217;;;883:3;905:48;949:3;937:10;905:48;;;893:61;;-1:-1;977:4;968:14;;;;996;;;;;847:1;840:9;800:217;;;804:14;389:634;;;;;;;;1050:615;;1165:3;1158:4;1150:6;1146:17;1142:27;1132:2;;1183:1;1180;1173:12;1132:2;1207:3;1225:78;1240:62;1295:6;1240:62;;1225:78;1216:87;;1320:5;1379:6;1426:3;1418:4;1410:6;1406:17;1401:3;1397:27;1394:36;1391:2;;;1443:1;1440;1433:12;1391:2;1468:1;1453:206;1478:6;1475:1;1472:13;1453:206;;;1536:3;1558:37;1591:3;1579:10;1558:37;;;1546:50;;-1:-1;1619:4;1610:14;;;;1638;;;;;1500:1;1493:9;1453:206;;1691:722;;1819:3;1812:4;1804:6;1800:17;1796:27;1786:2;;1837:1;1834;1827:12;1786:2;1867:6;1861:13;1889:80;1904:64;1961:6;1904:64;;1889:80;1880:89;;1986:5;2011:6;2004:5;1997:21;2041:4;2033:6;2029:17;2019:27;;2063:4;2058:3;2054:14;2047:21;;2116:6;2163:3;2155:4;2147:6;2143:17;2138:3;2134:27;2131:36;2128:2;;;2180:1;2177;2170:12;2128:2;2205:1;2190:217;2215:6;2212:1;2209:13;2190:217;;;2273:3;2295:48;2339:3;2327:10;2295:48;;;2283:61;;-1:-1;2367:4;2358:14;;;;2386;;;;;2237:1;2230:9;2190:217;;2439:722;;2567:3;2560:4;2552:6;2548:17;2544:27;2534:2;;2585:1;2582;2575:12;2534:2;2615:6;2609:13;2637:80;2652:64;2709:6;2652:64;;2637:80;2628:89;;2734:5;2759:6;2752:5;2745:21;2789:4;2781:6;2777:17;2767:27;;2811:4;2806:3;2802:14;2795:21;;2864:6;2911:3;2903:4;2895:6;2891:17;2886:3;2882:27;2879:36;2876:2;;;2928:1;2925;2918:12;2876:2;2953:1;2938:217;2963:6;2960:1;2957:13;2938:217;;;3021:3;3043:48;3087:3;3075:10;3043:48;;;3031:61;;-1:-1;3115:4;3106:14;;;;3134;;;;;2985:1;2978:9;2938:217;;3169:130;3236:20;;3261:33;3236:20;3261:33;;3306:134;3384:13;;3402:33;3384:13;3402:33;;3448:440;;3549:3;3542:4;3534:6;3530:17;3526:27;3516:2;;3567:1;3564;3557:12;3516:2;3604:6;3591:20;3626:64;3641:48;3682:6;3641:48;;3626:64;3617:73;;3710:6;3703:5;3696:21;3746:4;3738:6;3734:17;3779:4;3772:5;3768:16;3814:3;3805:6;3800:3;3796:16;3793:25;3790:2;;;3831:1;3828;3821:12;3790:2;3841:41;3875:6;3870:3;3865;3841:41;;;3509:379;;;;;;;;3897:442;;4009:3;4002:4;3994:6;3990:17;3986:27;3976:2;;4027:1;4024;4017:12;3976:2;4057:6;4051:13;4079:64;4094:48;4135:6;4094:48;;4079:64;4070:73;;4163:6;4156:5;4149:21;4199:4;4191:6;4187:17;4232:4;4225:5;4221:16;4267:3;4258:6;4253:3;4249:16;4246:25;4243:2;;;4284:1;4281;4274:12;4243:2;4294:39;4326:6;4321:3;4316;4294:39;;4347:170;4443:13;;4461:51;4443:13;4461:51;;4560:695;;4687:4;4675:9;4670:3;4666:19;4662:30;4659:2;;;4705:1;4702;4695:12;4659:2;4723:20;4738:4;4723:20;;;4714:29;-1:-1;4804:1;4835:78;4909:3;4889:9;4835:78;;;4811:103;;-1:-1;4982:2;5015:60;5071:3;5047:22;;;5015:60;;;5008:4;5001:5;4997:16;4990:86;4935:152;5140:2;5173:60;5229:3;5220:6;5209:9;5205:22;5173:60;;;5166:4;5159:5;5155:16;5148:86;5097:148;4653:602;;;;;5540:128;5606:20;;5631:32;5606:20;5631:32;;5675:241;;5779:2;5767:9;5758:7;5754:23;5750:32;5747:2;;;5795:1;5792;5785:12;5747:2;5830:1;5847:53;5892:7;5872:9;5847:53;;;5837:63;5741:175;-1:-1;;;;5741:175;5923:470;;;6053:2;6041:9;6032:7;6028:23;6024:32;6021:2;;;6069:1;6066;6059:12;6021:2;6104:1;6121:53;6166:7;6146:9;6121:53;;;6111:63;;6083:97;6239:2;6228:9;6224:18;6211:32;-1:-1;;;;;6255:6;6252:30;6249:2;;;6295:1;6292;6285:12;6249:2;6315:62;6369:7;6360:6;6349:9;6345:22;6315:62;;;6305:72;;6190:193;6015:378;;;;;;6400:496;;;6541:2;6529:9;6520:7;6516:23;6512:32;6509:2;;;6557:1;6554;6547:12;6509:2;6592:1;6609:64;6665:7;6645:9;6609:64;;;6599:74;;6571:108;6731:2;6720:9;6716:18;6710:25;-1:-1;;;;;6747:6;6744:30;6741:2;;;6787:1;6784;6777:12;6741:2;6807:73;6872:7;6863:6;6852:9;6848:22;6807:73;;6903:699;;;;7059:2;7047:9;7038:7;7034:23;7030:32;7027:2;;;7075:1;7072;7065:12;7027:2;7110:1;7127:53;7172:7;7152:9;7127:53;;;7117:63;;7089:97;7245:2;7234:9;7230:18;7217:32;-1:-1;;;;;7261:6;7258:30;7255:2;;;7301:1;7298;7291:12;7255:2;7321:62;7375:7;7366:6;7355:9;7351:22;7321:62;;;7311:72;;7196:193;7448:2;7437:9;7433:18;7420:32;-1:-1;;;;;7464:6;7461:30;7458:2;;;7504:1;7501;7494:12;7458:2;7524:62;7578:7;7569:6;7558:9;7554:22;7524:62;;;7514:72;;7399:193;7021:581;;;;;;7609:366;;;7730:2;7718:9;7709:7;7705:23;7701:32;7698:2;;;7746:1;7743;7736:12;7698:2;7781:1;7798:53;7843:7;7823:9;7798:53;;;7788:63;;7760:97;7888:2;7906:53;7951:7;7942:6;7931:9;7927:22;7906:53;;7982:392;;8122:2;8110:9;8101:7;8097:23;8093:32;8090:2;;;8138:1;8135;8128:12;8090:2;8173:24;;-1:-1;;;;;8206:30;;8203:2;;;8249:1;8246;8239:12;8203:2;8269:89;8350:7;8341:6;8330:9;8326:22;8269:89;;8381:657;;;8563:2;8551:9;8542:7;8538:23;8534:32;8531:2;;;8579:1;8576;8569:12;8531:2;8614:24;;-1:-1;;;;;8647:30;;8644:2;;;8690:1;8687;8680:12;8644:2;8710:89;8791:7;8782:6;8771:9;8767:22;8710:89;;;8700:99;;8593:212;8857:2;8846:9;8842:18;8836:25;-1:-1;;;;;8873:6;8870:30;8867:2;;;8913:1;8910;8903:12;8867:2;8933:89;9014:7;9005:6;8994:9;8990:22;8933:89;;9045:392;;9185:2;9173:9;9164:7;9160:23;9156:32;9153:2;;;9201:1;9198;9191:12;9153:2;9236:24;;-1:-1;;;;;9269:30;;9266:2;;;9312:1;9309;9302:12;9266:2;9332:89;9413:7;9404:6;9393:9;9389:22;9332:89;;9444:241;;9548:2;9536:9;9527:7;9523:23;9519:32;9516:2;;;9564:1;9561;9554:12;9516:2;9599:1;9616:53;9661:7;9641:9;9616:53;;9692:845;;;;;;9872:3;9860:9;9851:7;9847:23;9843:33;9840:2;;;9889:1;9886;9879:12;9840:2;9924:1;9941:53;9986:7;9966:9;9941:53;;;9931:63;;9903:97;10031:2;10049:53;10094:7;10085:6;10074:9;10070:22;10049:53;;;10039:63;;10010:98;10139:2;10157:53;10202:7;10193:6;10182:9;10178:22;10157:53;;;10147:63;;10118:98;10247:2;10265:52;10309:7;10300:6;10289:9;10285:22;10265:52;;;10255:62;;10226:97;10382:3;10371:9;10367:19;10354:33;-1:-1;;;;;10399:6;10396:30;10393:2;;;10439:1;10436;10429:12;10393:2;10459:62;10513:7;10504:6;10493:9;10489:22;10459:62;;;10449:72;;10333:194;9834:703;;;;;;;;;10544:719;;;;;10707:3;10695:9;10686:7;10682:23;10678:33;10675:2;;;10724:1;10721;10714:12;10675:2;10759:1;10776:53;10821:7;10801:9;10776:53;;;10766:63;;10738:97;10866:2;10884:53;10929:7;10920:6;10909:9;10905:22;10884:53;;;10874:63;;10845:98;10974:2;10992:52;11036:7;11027:6;11016:9;11012:22;10992:52;;;10982:62;;10953:97;11109:2;11098:9;11094:18;11081:32;-1:-1;;;;;11125:6;11122:30;11119:2;;;11165:1;11162;11155:12;11119:2;11185:62;11239:7;11230:6;11219:9;11215:22;11185:62;;;11175:72;;11060:193;10669:594;;;;;;;;11270:613;;;;;11423:3;11411:9;11402:7;11398:23;11394:33;11391:2;;;11440:1;11437;11430:12;11391:2;11475:1;11492:53;11537:7;11517:9;11492:53;;;11482:63;;11454:97;11582:2;11600:52;11644:7;11635:6;11624:9;11620:22;11600:52;;;11590:62;;11561:97;11689:2;11707:52;11751:7;11742:6;11731:9;11727:22;11707:52;;;11697:62;;11668:97;11796:2;11814:53;11859:7;11850:6;11839:9;11835:22;11814:53;;11890:739;;;;;;12060:3;12048:9;12039:7;12035:23;12031:33;12028:2;;;12077:1;12074;12067:12;12028:2;12112:1;12129:53;12174:7;12154:9;12129:53;;;12119:63;;12091:97;12219:2;12237:52;12281:7;12272:6;12261:9;12257:22;12237:52;;;12227:62;;12198:97;12326:2;12344:52;12388:7;12379:6;12368:9;12364:22;12344:52;;;12334:62;;12305:97;12433:2;12451:53;12496:7;12487:6;12476:9;12472:22;12451:53;;;12441:63;;12412:98;12541:3;12560:53;12605:7;12596:6;12585:9;12581:22;12560:53;;12636:345;;12749:2;12737:9;12728:7;12724:23;12720:32;12717:2;;;12765:1;12762;12755:12;12717:2;12800:31;;-1:-1;;;;;12840:30;;12837:2;;;12883:1;12880;12873:12;12837:2;12903:62;12957:7;12948:6;12937:9;12933:22;12903:62;;12988:574;;;13127:2;13115:9;13106:7;13102:23;13098:32;13095:2;;;13143:1;13140;13133:12;13095:2;13178:31;;-1:-1;;;;;13218:30;;13215:2;;;13261:1;13258;13251:12;13215:2;13281:62;13335:7;13326:6;13315:9;13311:22;13281:62;;13569:317;;13711:2;13699:9;13690:7;13686:23;13682:32;13679:2;;;13727:1;13724;13717:12;13679:2;13762:1;13779:91;13862:7;13842:9;13779:91;;14141:263;;14256:2;14244:9;14235:7;14231:23;14227:32;14224:2;;;14272:1;14269;14262:12;14224:2;14307:1;14324:64;14380:7;14360:9;14324:64;;14411:366;;;14532:2;14520:9;14511:7;14507:23;14503:32;14500:2;;;14548:1;14545;14538:12;14500:2;14583:1;14600:53;14645:7;14625:9;14600:53;;15157:930;;;;;15373:3;15361:9;15352:7;15348:23;15344:33;15341:2;;;15390:1;15387;15380:12;15341:2;15425:1;15442:64;15498:7;15478:9;15442:64;;;15432:74;;15404:108;15543:2;15561:64;15617:7;15608:6;15597:9;15593:22;15561:64;;;15551:74;;15522:109;15683:2;15672:9;15668:18;15662:25;-1:-1;;;;;15699:6;15696:30;15693:2;;;15739:1;15736;15729:12;15693:2;15759:89;15840:7;15831:6;15820:9;15816:22;15759:89;;;15749:99;;15641:213;15906:2;15895:9;15891:18;15885:25;-1:-1;;;;;15922:6;15919:30;15916:2;;;15962:1;15959;15952:12;15916:2;15982:89;16063:7;16054:6;16043:9;16039:22;15982:89;;16094:595;;;;16241:2;16229:9;16220:7;16216:23;16212:32;16209:2;;;16257:1;16254;16247:12;16209:2;16292:1;16309:53;16354:7;16334:9;16309:53;;;16299:63;;16271:97;16399:2;16417:53;16462:7;16453:6;16442:9;16438:22;16417:53;;16696:996;;;;;;16908:3;16896:9;16887:7;16883:23;16879:33;16876:2;;;16925:1;16922;16915:12;16876:2;16960:1;16977:52;17021:7;17001:9;16977:52;;;16967:62;;16939:96;17066:2;17084:53;17129:7;17120:6;17109:9;17105:22;17084:53;;;17074:63;;17045:98;17174:2;17192:76;17260:7;17251:6;17240:9;17236:22;17192:76;;;17182:86;;17153:121;17333:3;17322:9;17318:19;17305:33;-1:-1;;;;;17350:6;17347:30;17344:2;;;17390:1;17387;17380:12;17344:2;17410:62;17464:7;17455:6;17444:9;17440:22;17410:62;;;17400:72;;17284:194;17537:3;17526:9;17522:19;17509:33;-1:-1;;;;;17554:6;17551:30;17548:2;;;17594:1;17591;17584:12;17700:173;;17787:46;17829:3;17821:6;17787:46;;;-1:-1;;17862:4;17853:14;;17780:93;17882:173;;17969:46;18011:3;18003:6;17969:46;;18262:269;;18395:96;18487:3;18479:6;18395:96;;;-1:-1;;18520:4;18511:14;;18388:143;18834:265;;18989:104;19089:3;19081:6;18989:104;;19289:103;19362:24;19380:5;19362:24;;;19357:3;19350:37;19344:48;;;19796:690;;19941:54;19989:5;19941:54;;;20008:86;20087:6;20082:3;20008:86;;;20001:93;;20115:56;20165:5;20115:56;;;20191:7;20219:1;20204:260;20229:6;20226:1;20223:13;20204:260;;;20296:6;20290:13;20317:63;20376:3;20361:13;20317:63;;;20310:70;;20397:60;20450:6;20397:60;;;20387:70;-1:-1;;20251:1;20244:9;20204:260;;;-1:-1;20477:3;;19920:566;-1:-1;;;;;19920:566;20525:654;;20656:50;20700:5;20656:50;;;20719:76;20788:6;20783:3;20719:76;;;20712:83;;20816:52;20862:5;20816:52;;;20888:7;20916:1;20901:256;20926:6;20923:1;20920:13;20901:256;;;20993:6;20987:13;21014:63;21073:3;21058:13;21014:63;;;21007:70;;21094:56;21143:6;21094:56;;;21084:66;-1:-1;;20948:1;20941:9;20901:256;;21220:684;21361:52;21407:5;21361:52;;;21426:92;21511:6;21506:3;21426:92;;;21419:99;;21539:54;21587:5;21539:54;;;21613:7;21641:1;21626:266;21651:6;21648:1;21645:13;21626:266;;;21718:6;21712:13;21739:71;21806:3;21791:13;21739:71;;;21732:78;;21827:58;21878:6;21827:58;;;21817:68;-1:-1;;21673:1;21666:9;21626:266;;21943:690;;22088:54;22136:5;22088:54;;;22155:86;22234:6;22229:3;22155:86;;;22148:93;;22262:56;22312:5;22262:56;;;22338:7;22366:1;22351:260;22376:6;22373:1;22370:13;22351:260;;;22443:6;22437:13;22464:63;22523:3;22508:13;22464:63;;;22457:70;;22544:60;22597:6;22544:60;;;22534:70;-1:-1;;22398:1;22391:9;22351:260;;22672:654;;22803:50;22847:5;22803:50;;;22866:76;22935:6;22930:3;22866:76;;;22859:83;;22963:52;23009:5;22963:52;;;23035:7;23063:1;23048:256;23073:6;23070:1;23067:13;23048:256;;;23140:6;23134:13;23161:63;23220:3;23205:13;23161:63;;;23154:70;;23241:56;23290:6;23241:56;;;23231:66;-1:-1;;23095:1;23088:9;23048:256;;23409:838;;23586:73;23653:5;23586:73;;;23672:99;23764:6;23759:3;23672:99;;;23665:106;;23792:75;23861:5;23792:75;;;23887:7;23915:1;23900:325;23925:6;23922:1;23919:13;23900:325;;;23992:6;23986:13;24013:109;24118:3;24103:13;24013:109;;;24006:116;;24139:79;24211:6;24139:79;;;24129:89;-1:-1;;23947:1;23940:9;23900:325;;24330:862;;24515:73;24582:5;24515:73;;;24601:107;24701:6;24696:3;24601:107;;;24594:114;;24729:75;24798:5;24729:75;;;24824:7;24852:1;24837:333;24862:6;24859:1;24856:13;24837:333;;;24929:6;24923:13;24950:117;25063:3;25048:13;24950:117;;;24943:124;;25084:79;25156:6;25084:79;;;25074:89;-1:-1;;24884:1;24877:9;24837:333;;25285:1052;;25480:79;25553:5;25480:79;;;25572:111;25676:6;25671:3;25572:111;;;25565:118;;25706:3;25748:4;25740:6;25736:17;25731:3;25727:27;25775:81;25850:5;25775:81;;;25876:7;25904:1;25889:409;25914:6;25911:1;25908:13;25889:409;;;25976:9;25970:4;25966:20;25961:3;25954:33;26021:6;26015:13;26043:118;26156:4;26141:13;26043:118;;;26035:126;;26178:85;26256:6;26178:85;;;26286:4;26277:14;;;;;26168:95;-1:-1;;25936:1;25929:9;25889:409;;;-1:-1;26311:4;;25459:878;-1:-1;;;;;;;25459:878;26376:690;;26521:54;26569:5;26521:54;;;26588:86;26667:6;26662:3;26588:86;;;26581:93;;26695:56;26745:5;26695:56;;;26771:7;26799:1;26784:260;26809:6;26806:1;26803:13;26784:260;;;26876:6;26870:13;26897:63;26956:3;26941:13;26897:63;;;26890:70;;26977:60;27030:6;26977:60;;;26967:70;-1:-1;;26831:1;26824:9;26784:260;;27105:654;;27236:50;27280:5;27236:50;;;27299:76;27368:6;27363:3;27299:76;;;27292:83;;27396:52;27442:5;27396:52;;;27468:7;27496:1;27481:256;27506:6;27503:1;27500:13;27481:256;;;27573:6;27567:13;27594:63;27653:3;27638:13;27594:63;;;27587:70;;27674:56;27723:6;27674:56;;;27664:66;-1:-1;;27528:1;27521:9;27481:256;;27767:104;27844:21;27859:5;27844:21;;27878:103;27951:24;27969:5;27951:24;;28234:343;;28344:38;28376:5;28344:38;;;28394:70;28457:6;28452:3;28394:70;;;28387:77;;28469:52;28514:6;28509:3;28502:4;28495:5;28491:16;28469:52;;;28542:29;28564:6;28542:29;;;28533:39;;;;28324:253;-1:-1;;;28324:253;29610:162;29706:60;29760:5;29706:60;;29779:142;29865:50;29909:5;29865:50;;29928:148;30017:53;30064:5;30017:53;;30246:146;30334:52;30380:5;30334:52;;30561:465;;30721:67;30785:2;30780:3;30721:67;;;30821:66;30801:87;;-1:-1;;;30917:2;30908:12;;30901:88;31017:2;31008:12;;30707:319;-1:-1;;30707:319;31035:364;;31195:67;31259:2;31254:3;31195:67;;;31295:66;31275:87;;31390:2;31381:12;;31181:218;-1:-1;;31181:218;31408:465;;31568:67;31632:2;31627:3;31568:67;;;31668:66;31648:87;;-1:-1;;;31764:2;31755:12;;31748:88;31864:2;31855:12;;31554:319;-1:-1;;31554:319;31882:465;;32042:67;32106:2;32101:3;32042:67;;;32142:66;32122:87;;-1:-1;;;32238:2;32229:12;;32222:88;32338:2;32329:12;;32028:319;-1:-1;;32028:319;32356:364;;32516:67;32580:2;32575:3;32516:67;;;32616:66;32596:87;;32711:2;32702:12;;32502:218;-1:-1;;32502:218;32729:364;;32889:67;32953:2;32948:3;32889:67;;;32989:66;32969:87;;33084:2;33075:12;;32875:218;-1:-1;;32875:218;33102:364;;33262:67;33326:2;33321:3;33262:67;;;-1:-1;;;33342:87;;33457:2;33448:12;;33248:218;-1:-1;;33248:218;33475:465;;33635:67;33699:2;33694:3;33635:67;;;33735:66;33715:87;;-1:-1;;;33831:2;33822:12;;33815:88;33931:2;33922:12;;33621:319;-1:-1;;33621:319;33949:465;;34109:67;34173:2;34168:3;34109:67;;;34209:66;34189:87;;-1:-1;;;34305:2;34296:12;;34289:88;34405:2;34396:12;;34095:319;-1:-1;;34095:319;34423:364;;34583:67;34647:2;34642:3;34583:67;;;-1:-1;;;34663:87;;34778:2;34769:12;;34569:218;-1:-1;;34569:218;34796:364;;34956:67;35020:2;35015:3;34956:67;;;35056:66;35036:87;;35151:2;35142:12;;34942:218;-1:-1;;34942:218;35169:364;;35329:67;35393:2;35388:3;35329:67;;;-1:-1;;;35409:87;;35524:2;35515:12;;35315:218;-1:-1;;35315:218;35542:364;;35702:67;35766:2;35761:3;35702:67;;;35802:66;35782:87;;35897:2;35888:12;;35688:218;-1:-1;;35688:218;35915:364;;36075:67;36139:2;36134:3;36075:67;;;36175:66;36155:87;;36270:2;36261:12;;36061:218;-1:-1;;36061:218;36288:465;;36448:67;36512:2;36507:3;36448:67;;;36548:66;36528:87;;-1:-1;;;36644:2;36635:12;;36628:88;36744:2;36735:12;;36434:319;-1:-1;;36434:319;36840:1120;37072:22;;36840:1120;;37005:4;36996:14;;;37100:62;37000:3;37072:22;37100:62;;;37025:143;37248:4;37241:5;37237:16;37231:23;37260:63;37317:4;37312:3;37308:14;37294:12;37260:63;;;37178:151;37406:4;37399:5;37395:16;37389:23;37418:63;37475:4;37470:3;37466:14;37452:12;37418:63;;;37339:148;37572:4;37565:5;37561:16;37555:23;37624:3;37618:4;37614:14;37607:4;37602:3;37598:14;37591:38;37644:99;37738:4;37724:12;37644:99;;;37636:107;;37497:258;37830:4;37823:5;37819:16;37813:23;37842:86;37922:4;37917:3;37913:14;37899:12;37842:86;;;-1:-1;37951:4;36978:982;-1:-1;;;36978:982;37967:122;38066:18;;38060:29;38167:1532;38393:22;;38167:1532;;38324:5;38315:15;;;38421:62;38319:3;38393:22;38421:62;;;38345:144;38568:4;38561:5;38557:16;38551:23;38580:63;38637:4;38632:3;38628:14;38614:12;38580:63;;;38499:150;38728:4;38721:5;38717:16;38711:23;38740:63;38797:4;38792:3;38788:14;38774:12;38740:63;;;38659:150;38886:4;38879:5;38875:16;38869:23;38898:61;38953:4;38948:3;38944:14;38930:12;38898:61;;;38819:146;39039:4;39032:5;39028:16;39022:23;39051:61;39106:4;39101:3;39097:14;39083:12;39051:61;;;38975:143;39198:4;39191:5;39187:16;39181:23;39210:63;39267:4;39262:3;39258:14;39244:12;39210:63;;;39128:151;39354:4;39347:5;39343:16;39337:23;39366:76;39436:4;39431:3;39427:14;39413:12;39366:76;;;39289:159;39522:4;39515:5;39511:16;39505:23;39574:3;39568:4;39564:14;39557:4;39552:3;39548:14;39541:38;39594:67;39656:4;39642:12;39594:67;;;39586:75;38297:1402;-1:-1;;;;;38297:1402;39775:655;39985:22;;39908:4;39899:14;;;40013:78;39903:3;39985:22;40013:78;;;39928:169;40177:4;40170:5;40166:16;40160:23;40189:63;40246:4;40241:3;40237:14;40223:12;40189:63;;;40107:151;40334:4;40327:5;40323:16;40317:23;40346:63;40403:4;40398:3;40394:14;40380:12;40346:63;;;40268:147;39881:549;;;;41263:1201;41480:22;;41263:1201;;41412:4;41403:14;;;41508:62;41407:3;41480:22;41508:62;;;41432:144;41651:4;41644:5;41640:16;41634:23;41663:78;41735:4;41730:3;41726:14;41712:12;41663:78;;;41586:161;41822:4;41815:5;41811:16;41805:23;41874:3;41868:4;41864:14;41857:4;41852:3;41848:14;41841:38;41894:67;41956:4;41942:12;41894:67;;;41886:75;;41757:216;42049:4;42042:5;42038:16;42032:23;42061:63;42118:4;42113:3;42109:14;42095:12;42061:63;;;41983:147;42209:4;42202:5;42198:16;42192:23;42261:3;42255:4;42251:14;42244:4;42239:3;42235:14;42228:38;42281:145;42421:4;42407:12;42281:145;;42534:1249;42759:22;;42534:1249;;42691:4;42682:14;;;42787:70;42686:3;42759:22;42787:70;;;42711:152;42938:4;42931:5;42927:16;42921:23;42950:86;43030:4;43025:3;43021:14;43007:12;42950:86;;;42873:169;43117:4;43110:5;43106:16;43100:23;43169:3;43163:4;43159:14;43152:4;43147:3;43143:14;43136:38;43189:75;43259:4;43245:12;43189:75;;;43181:83;;43052:224;43352:4;43345:5;43341:16;43335:23;43364:71;43429:4;43424:3;43420:14;43406:12;43364:71;;;43286:155;43520:4;43513:5;43509:16;43503:23;43572:3;43566:4;43562:14;43555:4;43550:3;43546:14;43539:38;43592:153;43740:4;43726:12;43592:153;;43867:1020;44094:22;;43867:1020;;44016:4;44007:14;;;44122:62;44011:3;44094:22;44122:62;;;44036:154;44266:4;44259:5;44255:16;44249:23;44318:3;44312:4;44308:14;44301:4;44296:3;44292:14;44285:38;44338:99;44432:4;44418:12;44338:99;;;44330:107;;44200:249;44524:4;44517:5;44513:16;44507:23;44576:3;44570:4;44566:14;44559:4;44554:3;44550:14;44543:38;44596:99;44690:4;44676:12;44596:99;;;44588:107;;44459:248;44780:4;44773:5;44769:16;44763:23;44792:63;44849:4;44844:3;44840:14;44826:12;44792:63;;45370:100;45441:23;45458:5;45441:23;;45602:213;45720:2;45705:18;;45734:71;45709:9;45778:6;45734:71;;45822:408;45986:2;45971:18;;46000:71;45975:9;46044:6;46000:71;;;46119:9;46113:4;46109:20;46104:2;46093:9;46089:18;46082:48;46144:76;46215:4;46206:6;46144:76;;46237:468;46431:2;46416:18;;46445:71;46420:9;46489:6;46445:71;;;46564:9;46558:4;46554:20;46549:2;46538:9;46534:18;46527:48;46589:106;46690:4;46681:6;46589:106;;46712:361;46880:2;46894:47;;;46865:18;;46955:108;46865:18;47049:6;46955:108;;47080:620;47326:2;47340:47;;;47311:18;;47401:108;47311:18;47495:6;47401:108;;;47393:116;;47557:9;47551:4;47547:20;47542:2;47531:9;47527:18;47520:48;47582:108;47685:4;47676:6;47582:108;;47707:361;47875:2;47889:47;;;47860:18;;47950:108;47860:18;48044:6;47950:108;;48075:461;48293:2;48307:47;;;48278:18;;48368:158;48278:18;48512:6;48368:158;;48543:201;48655:2;48640:18;;48669:65;48644:9;48707:6;48669:65;;48751:297;48887:2;48901:47;;;48872:18;;48962:76;48872:18;49024:6;48962:76;;49055:516;49245:2;49259:47;;;49230:18;;49320:84;49230:18;49390:6;49320:84;;;49312:92;;49452:9;49446:4;49442:20;49437:2;49426:9;49422:18;49415:48;49477:84;49556:4;49547:6;49477:84;;49578:407;49769:2;49783:47;;;49754:18;;49844:131;49754:18;49844:131;;49992:407;50183:2;50197:47;;;50168:18;;50258:131;50168:18;50258:131;;50406:407;50597:2;50611:47;;;50582:18;;50672:131;50582:18;50672:131;;50820:407;51011:2;51025:47;;;50996:18;;51086:131;50996:18;51086:131;;51234:407;51425:2;51439:47;;;51410:18;;51500:131;51410:18;51500:131;;51648:407;51839:2;51853:47;;;51824:18;;51914:131;51824:18;51914:131;;52062:407;52253:2;52267:47;;;52238:18;;52328:131;52238:18;52328:131;;52476:407;52667:2;52681:47;;;52652:18;;52742:131;52652:18;52742:131;;52890:407;53081:2;53095:47;;;53066:18;;53156:131;53066:18;53156:131;;53304:407;53495:2;53509:47;;;53480:18;;53570:131;53480:18;53570:131;;53718:407;53909:2;53923:47;;;53894:18;;53984:131;53894:18;53984:131;;54132:407;54323:2;54337:47;;;54308:18;;54398:131;54308:18;54398:131;;54546:407;54737:2;54751:47;;;54722:18;;54812:131;54722:18;54812:131;;54960:407;55151:2;55165:47;;;55136:18;;55226:131;55136:18;55226:131;;55374:407;55565:2;55579:47;;;55550:18;;55640:131;55550:18;55640:131;;55788:389;55970:2;55984:47;;;55955:18;;56045:122;55955:18;56153:6;56045:122;;56184:269;56330:2;56315:18;;56344:99;56319:9;56416:6;56344:99;;56460:388;56634:2;56619:18;;56648:99;56623:9;56720:6;56648:99;;;56758:80;56834:2;56823:9;56819:18;56810:6;56758:80;;;56605:243;;;;;;56855:591;57075:2;57060:18;;57089:99;57064:9;57161:6;57089:99;;;57199:80;57275:2;57264:9;57260:18;57251:6;57199:80;;;57327:9;57321:4;57317:20;57312:2;57301:9;57297:18;57290:48;57352:84;57431:4;57422:6;57352:84;;57453:795;57719:3;57704:19;;57734:99;57708:9;57806:6;57734:99;;;57844:80;57920:2;57909:9;57905:18;57896:6;57844:80;;;57972:9;57966:4;57962:20;57957:2;57946:9;57942:18;57935:48;57997:84;58076:4;58067:6;57997:84;;;57989:92;;58129:9;58123:4;58119:20;58114:2;58103:9;58099:18;58092:48;58154:84;58233:4;58224:6;58154:84;;;58146:92;57690:558;-1:-1;;;;;;57690:558;58255:507;58457:2;58442:18;;58471:99;58446:9;58543:6;58471:99;;;58581:80;58657:2;58646:9;58642:18;58633:6;58581:80;;;58672;58748:2;58737:9;58733:18;58724:6;58672:80;;58769:388;58943:2;58928:18;;58957:99;58932:9;59029:6;58957:99;;;59067:80;59143:2;59132:9;59128:18;59119:6;59067:80;;59164:947;59466:3;59451:19;;59481:99;59455:9;59553:6;59481:99;;;59591:80;59667:2;59656:9;59652:18;59643:6;59591:80;;;59682;59758:2;59747:9;59743:18;59734:6;59682:80;;;59773;59849:2;59838:9;59834:18;59825:6;59773:80;;;59864:79;59938:3;59927:9;59923:19;59914:6;59864:79;;;59992:9;59986:4;59982:20;59976:3;59965:9;59961:19;59954:49;60017:84;60096:4;60087:6;60017:84;;;60009:92;59437:674;-1:-1;;;;;;;;59437:674;60118:827;60392:3;60377:19;;60407:99;60381:9;60479:6;60407:99;;;60517:80;60593:2;60582:9;60578:18;60569:6;60517:80;;;60608;60684:2;60673:9;60669:18;60660:6;60608:80;;;60699:78;60773:2;60762:9;60758:18;60749:6;60699:78;;;60826:9;60820:4;60816:20;60810:3;60799:9;60795:19;60788:49;60851:84;60930:4;60921:6;60851:84;;;60843:92;60363:582;-1:-1;;;;;;;60363:582;60952:739;61206:3;61191:19;;61221:99;61195:9;61293:6;61221:99;;;61331:80;61407:2;61396:9;61392:18;61383:6;61331:80;;;61422:78;61496:2;61485:9;61481:18;61472:6;61422:78;;;61511;61585:2;61574:9;61570:18;61561:6;61511:78;;;61600:81;61676:3;61665:9;61661:19;61652:6;61600:81;;61698:859;61980:3;61965:19;;61995:99;61969:9;62067:6;61995:99;;;62105:80;62181:2;62170:9;62166:18;62157:6;62105:80;;;62196:78;62270:2;62259:9;62255:18;62246:6;62196:78;;;62285;62359:2;62348:9;62344:18;62335:6;62285:78;;;62374:81;62450:3;62439:9;62435:19;62426:6;62374:81;;;62466;62542:3;62531:9;62527:19;62518:6;62466:81;;62959:507;63161:2;63146:18;;63175:99;63150:9;63247:6;63175:99;;;63285:80;63361:2;63350:9;63346:18;63337:6;63285:80;;63987:711;64235:3;64220:19;;64250:99;64224:9;64322:6;64250:99;;;64360:80;64436:2;64425:9;64421:18;64412:6;64360:80;;;64451;64527:2;64516:9;64512:18;64503:6;64451:80;;;64579:9;64573:4;64569:20;64564:2;64553:9;64549:18;64542:48;64604:84;64683:4;64674:6;64604:84;;64705:1123;65071:3;65056:19;;65086:99;65060:9;65158:6;65086:99;;;65196:78;65270:2;65259:9;65255:18;65246:6;65196:78;;;65285:80;65361:2;65350:9;65346:18;65337:6;65285:80;;;65376:126;65498:2;65487:9;65483:18;65474:6;65376:126;;;65551:9;65545:4;65541:20;65535:3;65524:9;65520:19;65513:49;65576:84;65655:4;65646:6;65576:84;;;65568:92;;65709:9;65703:4;65699:20;65693:3;65682:9;65678:19;65671:49;65734:84;65813:4;65804:6;65734:84;;65835:373;66009:2;66023:47;;;65994:18;;66084:114;65994:18;66184:6;66084:114;;66215:357;66381:2;66395:47;;;66366:18;;66456:106;66366:18;66548:6;66456:106;;66579:492;66781:2;66795:47;;;66766:18;;66856:114;66766:18;66956:6;66856:114;;;66848:122;;66981:80;67057:2;67046:9;67042:18;67033:6;66981:80;;67078:213;67196:2;67181:18;;67210:71;67185:9;67254:6;67210:71;;67298:843;67600:3;67585:19;;67615:71;67589:9;67659:6;67615:71;;;67697:72;67765:2;67754:9;67750:18;67741:6;67697:72;;;67817:9;67811:4;67807:20;67802:2;67791:9;67787:18;67780:48;67842:108;67945:4;67936:6;67842:108;;;67834:116;;67998:9;67992:4;67988:20;67983:2;67972:9;67968:18;67961:48;68023:108;68126:4;68117:6;68023:108;;68148:256;68210:2;68204:9;68236:17;;;-1:-1;;;;;68296:34;;68332:22;;;68293:62;68290:2;;;68368:1;68365;68358:12;68290:2;68384;68377:22;68188:216;;-1:-1;68188:216;68411:304;;-1:-1;;;;;68562:6;68559:30;68556:2;;;68602:1;68599;68592:12;68556:2;-1:-1;68637:4;68625:17;;;68690:15;;68493:222;68722:244;;-1:-1;;;;;68871:6;68868:30;68865:2;;;68911:1;68908;68901:12;68865:2;-1:-1;68946:4;68934:17;;68802:164;69595:321;;-1:-1;;;;;69730:6;69727:30;69724:2;;;69770:1;69767;69760:12;69724:2;-1:-1;69901:4;69837;69814:17;;;;-1:-1;;69810:33;69891:15;;69661:255;69923:147;70043:4;70034:14;;69991:79;71271:133;71370:12;;71341:63;71555:107;-1:-1;71649:3;;71627:35;72116:134;-1:-1;72237:3;;72215:35;73859:168;73967:19;;;74016:4;74007:14;;73960:67;76543:91;;76605:24;76623:5;76605:24;;76641:85;76707:13;76700:21;;76683:43;76812:156;76899:5;76905:58;76899:5;76905:58;;76975:136;77052:5;77058:48;77052:5;77058:48;;77118:142;77198:5;77204:51;77198:5;77204:51;;77267:140;77346:5;77352:50;77346:5;77352:50;;77414:121;-1:-1;;;;;77476:54;;77459:76;77621:96;-1:-1;;;;;77682:30;;77665:52;77724:156;;77826:49;77869:5;77826:49;;77887:136;;77979:39;78012:5;77979:39;;78030:142;;78125:42;78161:5;78125:42;;78179:140;;78273:41;78308:5;78273:41;;78327:145;78408:6;78403:3;78398;78385:30;-1:-1;78464:1;78446:16;;78439:27;78378:94;78481:268;78546:1;78553:101;78567:6;78564:1;78561:13;78553:101;;;78634:11;;;78628:18;78615:11;;;78608:39;78589:2;78582:10;78553:101;;;78669:6;78666:1;78663:13;78660:2;;;-1:-1;;78734:1;78716:16;;78709:27;78530:219;78757:97;78845:2;78825:14;-1:-1;;78821:28;;78805:49;78862:116;78956:1;78949:5;78946:12;78936:2;;78962:9;78985:106;79069:1;79062:5;79059:12;79049:2;;79075:9;79098:109;79185:1;79178:5;79175:12;79165:2;;79191:9;79214:108;79300:1;79293:5;79290:12;79280:2;;79306:9;79329:117;79398:24;79416:5;79398:24;;;79391:5;79388:35;79378:2;;79437:1;79434;79427:12;79453:117;79522:24;79540:5;79522:24;;79577:112;79664:1;79657:5;79654:12;79644:2;;79680:1;79677;79670:12;79820:115;79888:23;79905:5;79888:23;","source":"pragma solidity ^0.5.12;\\npragma experimental ABIEncoderV2;\\n\\nimport \\"openzeppelin-solidity/contracts/math/SafeMath.sol\\";\\nimport \\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\";\\nimport \\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\";\\nimport \\"./utils/SolRsaVerify.sol\\";\\n\\nimport { WorkersImpl } from \\"./impl/WorkersImpl.sol\\";\\nimport { PrincipalImpl } from \\"./impl/PrincipalImpl.sol\\";\\nimport { TaskImpl } from \\"./impl/TaskImpl.sol\\";\\nimport { UpgradeImpl } from \\"./impl/UpgradeImpl.sol\\";\\nimport { SecretContractImpl } from \\"./impl/SecretContractImpl.sol\\";\\nimport { EnigmaCommon } from \\"./impl/EnigmaCommon.sol\\";\\nimport { EnigmaState } from \\"./impl/EnigmaState.sol\\";\\nimport { EnigmaEvents } from \\"./impl/EnigmaEvents.sol\\";\\nimport { EnigmaStorage } from \\"./impl/EnigmaStorage.sol\\";\\nimport { Getters } from \\"./impl/Getters.sol\\";\\nimport { ERC20 } from \\"./interfaces/ERC20.sol\\";\\n\\ncontract Enigma is EnigmaStorage, EnigmaEvents, Getters, Ownable {\\n    using SafeMath for uint256;\\n    using SafeMath for uint64;\\n    using ECDSA for bytes32;\\n\\n    // ========================================== Constructor ==========================================\\n\\n    constructor(address _tokenAddress, address _principal, address _exchangeRate, uint _epochSize,\\n        uint _timeoutThreshold, bool _debug, bytes memory _mrSigner, bytes memory _isvSvn) public {\\n        state.engToken = ERC20(_tokenAddress);\\n        state.epochSize = _epochSize;\\n        state.taskTimeoutSize = _timeoutThreshold * state.epochSize;\\n        state.principal = _principal;\\n        state.exchangeRate = _exchangeRate;\\n        state.updatedEnigmaContractAddress = address(this);\\n        state.stakingThreshold = 1;\\n        state.workerGroupSize = 1;\\n        state.debug = _debug;\\n        state.mrSigner = _mrSigner;\\n        state.isvSvn = _isvSvn;\\n    }\\n\\n    // ========================================== Modifiers ==========================================\\n\\n    /**\\n    * Checks if the custodian wallet is registered as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerRegistered(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status != EnigmaCommon.WorkerStatus.Unregistered, \\"Unregistered worker\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged in as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedIn, \\"Worker not logged in\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged out as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedOut(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not logged out\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if worker can log in\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canLogIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(getFirstBlockNumber(block.number) != 0, \\"Principal node has not been initialized\\");\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        require(worker.balance >= state.stakingThreshold, \\"Worker\'s balance is not sufficient\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the worker can withdraw\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canWithdraw(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        EnigmaCommon.WorkerLog memory workerLog = WorkersImpl.getLatestWorkerLogImpl(worker, block.number);\\n        require(workerLog.workerEventType == EnigmaCommon.WorkerLogType.LogOut,\\n            \\"Worker\'s last log is not of LogOut type\\");\\n        require(getFirstBlockNumber(block.number) > workerLog.blockNumber,\\n            \\"Cannot withdraw in same epoch as log out event\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has not been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractUndefined(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Undefined, \\"Secret contract already deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractDeployed(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Deployed, \\"Secret contract not deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks task record has been created and is still pending receipt\\n    *\\n    * @param _taskId Task ID\\n    */\\n    modifier taskWaiting(bytes32 _taskId) {\\n        require(state.tasks[_taskId].status == EnigmaCommon.TaskStatus.RecordCreated, \\"Task is not waiting\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure signing key used for registration is unique\\n    *\\n    * @param _signer Signing key\\n    */\\n    modifier isUniqueSigningKey(address _signer) {\\n        for (uint i = 0; i < state.workerAddresses.length; i++) {\\n            require(state.workers[state.workerAddresses[i]].signer != _signer, \\"Not a unique signing key\\");\\n        }\\n        _;\\n    }\\n\\n    /**\\n    * Ensure that the contract\'s context is the updated contract\\n    *\\n    */\\n    modifier isUpdatedEnigmaContract() {\\n        require(address(this) == state.updatedEnigmaContractAddress, \\"Not updated Enigma contract\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure the sender of the recent call is the updated contract\\n    *\\n    */\\n    modifier fromUpdatedEnigmaContract() {\\n        require(msg.sender == state.updatedEnigmaContractAddress, \\"Not from updated Enigma contract\\");\\n        _;\\n    }\\n\\n    // ========================================== Functions ==========================================\\n\\n    /**\\n    * Registers a new worker or change the signer parameters of an existing\\n    * worker. This should be called by every worker (and the principal)\\n    * node in order to receive tasks.\\n    *\\n    * @param _signer The signer address, derived from the enclave public key\\n    * @param _report The RLP encoded report returned by the IAS\\n    * @param _signature Signature\\n    */\\n    function register(address _signer, bytes memory _report, bytes memory _signature)\\n    public\\n    isUpdatedEnigmaContract\\n    isUniqueSigningKey(_signer)\\n    {\\n        WorkersImpl.registerImpl(state, _signer, _report, _signature);\\n    }\\n\\n    /**\\n    * Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    *\\n    * @param _custodian The worker\'s ETH address\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function deposit(address _custodian, uint _amount)\\n    public\\n    isUpdatedEnigmaContract\\n    workerRegistered(_custodian)\\n    {\\n        WorkersImpl.depositImpl(state, _custodian, _amount);\\n    }\\n\\n    /**\\n    * Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    *\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function withdraw(uint _amount)\\n    public\\n    canWithdraw(msg.sender)\\n    {\\n        WorkersImpl.withdrawImpl(state, _amount);\\n    }\\n\\n    /**\\n    * Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\n    * selection process.\\n    */\\n    function login() public canLogIn(msg.sender) {\\n        WorkersImpl.loginImpl(state);\\n    }\\n\\n    /**\\n    * Logout worker. Worker must be logged in to do so.\\n    */\\n    function logout() public workerLoggedIn(msg.sender) {\\n        WorkersImpl.logoutImpl(state);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContractFailure(\\n        bytes32 _taskId,\\n        bytes32 _codeHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractFailureImpl(state, _taskId, _codeHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _gasUsed Gas used for task\\n    * @param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n    * @param _bytes32s [taskId, preCodeHash, codeHash, initStateDeltaHash]\\n    * @param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContract(\\n        uint64 _gasUsed,\\n        address _optionalEthereumContractAddress,\\n        bytes32[4] memory _bytes32s,\\n        bytes memory _optionalEthereumData,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_bytes32s[0])\\n    {\\n        TaskImpl.deploySecretContractImpl(state, _gasUsed, _optionalEthereumContractAddress, _bytes32s,\\n            _optionalEthereumData, _sig);\\n    }\\n\\n    /**\\n    * Check if secret contract has been deployed\\n    *\\n    * @return  Number of deployed secret contracts\\n    */\\n    function countSecretContracts()\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return SecretContractImpl.countSecretContractsImpl(state);\\n    }\\n\\n    /**\\n    * Get deployed secret contract addresses within a range\\n    *\\n    * @param _start Start of range\\n    * @param _stop End of range\\n    * @return Subset of deployed secret contract addresses\\n    */\\n    function getSecretContractAddresses(uint _start, uint _stop)\\n    public\\n    view\\n    returns (bytes32[] memory)\\n    {\\n        return SecretContractImpl.getSecretContractAddressesImpl(state, _start, _stop);\\n    }\\n\\n    /**\\n    * Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\n    * generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\n    * task deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\n    * the on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\n    * invalid.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    * @param _nonce Locally-computed nonce value for this deployment\\n    */\\n    function createDeploymentTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber,\\n        uint _nonce\\n    )\\n    public\\n    onlyOwner\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createDeploymentTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber, _nonce);\\n    }\\n\\n    /**\\n    * Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\n    * contract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\n    * the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\n    * The task record is finalized and the worker is credited with the task fee.\\n    *\\n    * @param _gasUsed Gas used for task computation\\n    * @param _optionalEthereumContractAddress Output state hash\\n    * @param _bytes32s [scAddr, taskId, stateDeltaHash, outputHash]\\n    * @param _optionalEthereumData Output state hash\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitReceipt(\\n        uint64 _gasUsed,\\n        address _optionalEthereumContractAddress,\\n        bytes32[4] memory _bytes32s,\\n        bytes memory _optionalEthereumData,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_bytes32s[0])\\n    {\\n        TaskImpl.commitReceiptImpl(state, _gasUsed, _optionalEthereumContractAddress,\\n            _bytes32s, _optionalEthereumData, _sig);\\n    }\\n\\n    /**\\n    * Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\n    * updated to indicate task failure.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _outputHash Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitTaskFailure(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _outputHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitTaskFailureImpl(state, _scAddr, _taskId, _outputHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    *\\n    * @param _taskId Unique taskId\\n    */\\n    function returnFeesForTask(bytes32 _taskId)\\n    public\\n    taskWaiting(_taskId)\\n    {\\n        TaskImpl.returnFeesForTaskImpl(state, _taskId);\\n    }\\n\\n    /**\\n    * Reparameterizing workers with a new seed\\n    * This should be called for each epoch by the Principal node\\n    *\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n    * @param _seed The random integer generated by the enclave\\n    * @param _sig Principal node\'s signature\\n    */\\n    function setWorkersParams(uint _blockNumber, uint _seed, bytes memory _sig)\\n    public\\n    isUpdatedEnigmaContract\\n    workerRegistered(msg.sender)\\n    {\\n        PrincipalImpl.setWorkersParamsImpl(state, _blockNumber, _seed, _sig);\\n    }\\n\\n    /**\\n    * Get active workers before a certain block number\\n    *\\n    * @param _blockNumber Block number\\n    */\\n    function getActiveWorkers(uint _blockNumber)\\n    public\\n    view\\n    returns (address[] memory, uint[] memory)\\n    {\\n        return PrincipalImpl.getActiveWorkersImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get the first block number of an epoch that a given block number belongs to\\n    *\\n    * @param _blockNumber Block number\\n    * @return Block number\\n    */\\n    function getFirstBlockNumber(uint _blockNumber)\\n    public\\n    view\\n    returns (uint) {\\n        return WorkersImpl.getFirstBlockNumberImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get worker params for an epoch given a particular block number\\n    *\\n    * @param _blockNumber Block number\\n    * @return Epoch\'s first block number\\n    * @return Seed\\n    * @return Array of worker\'s signing addresses\\n    * @return Array of worker\'s stakes\\n    */\\n    function getWorkerParams(uint _blockNumber)\\n    public\\n    view\\n    returns (uint, uint, address[] memory, uint[] memory) {\\n        return WorkersImpl.getWorkerParamsImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\n    * and the secret contract address.\\n    *\\n    * @param _blockNumber Block number the task record was mined\\n    * @param _scAddr Secret contract address\\n    * @return Selected workers\' addresses\\n    */\\n    function getWorkerGroup(uint _blockNumber, bytes32 _scAddr)\\n    public\\n    view\\n    returns (address[] memory)\\n    {\\n        return WorkersImpl.getWorkerGroupImpl(state, _blockNumber, _scAddr);\\n    }\\n\\n    /**\\n    * The RLP encoded report returned by the IAS server\\n    *\\n    * @param _custodian The worker\'s custodian address\\n    */\\n    function getReport(address _custodian)\\n    public\\n    view\\n    workerRegistered(_custodian)\\n    returns (address, bytes memory)\\n    {\\n        return WorkersImpl.getReportImpl(state, _custodian);\\n    }\\n\\n    /**\\n    * This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n    * @param _data The report itself\\n    * @param _signature The signature of the report\\n    */\\n    function verifyReport(bytes memory _data, bytes memory _signature)\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return WorkersImpl.verifyReportImpl(_data, _signature);\\n    }\\n\\n    /**\\n    * Upgrade Enigma Contract\\n    * @param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address\\n    */\\n    function upgradeEnigmaContract(address _updatedEnigmaContractAddress)\\n    public\\n    onlyOwner\\n    isUpdatedEnigmaContract\\n    {\\n        return UpgradeImpl.upgradeEnigmaContractImpl(state, _updatedEnigmaContractAddress);\\n    }\\n\\n    /**\\n    * Transfer worker stake from old contract to new contract upon registration\\n    * @param _workerAddress Newly-registered worker address\\n    * @param _sig Signature\\n    */\\n    function transferWorkerStakePostUpgrade(address _workerAddress, bytes memory _sig)\\n    public\\n    fromUpdatedEnigmaContract\\n    returns (uint256)\\n    {\\n        return UpgradeImpl.transferWorkerStakePostUpgradeImpl(state, _workerAddress, _sig);\\n    }\\n\\n    /**\\n    * Set mrSigner\\n    * @param _mrSigner mrSigner\\n    */\\n    function setMrSigner(bytes memory _mrSigner)\\n    public\\n    onlyOwner\\n    {\\n        state.mrSigner = _mrSigner;\\n    }\\n\\n    /**\\n    * Set isvSvn\\n    * @param _isvSvn mrSigner\\n    */\\n    function setIsvSvn(bytes memory _isvSvn)\\n    public\\n    onlyOwner\\n    {\\n        state.isvSvn = _isvSvn;\\n    }\\n}\\n","sourcePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol","ast":{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol","exportedSymbols":{"Enigma":[957]},"id":958,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".12"],"nodeType":"PragmaDirective","src":"0:24:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"25:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":958,"sourceUnit":23224,"src":"60:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":958,"sourceUnit":23037,"src":"120:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"openzeppelin-solidity/contracts/ownership/Ownable.sol","id":5,"nodeType":"ImportDirective","scope":958,"sourceUnit":23338,"src":"185:63:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":6,"nodeType":"ImportDirective","scope":958,"sourceUnit":22929,"src":"249:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":8,"nodeType":"ImportDirective","scope":958,"sourceUnit":10369,"src":"285:53:0","symbolAliases":[{"foreign":7,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":10,"nodeType":"ImportDirective","scope":958,"sourceUnit":3478,"src":"339:57:0","symbolAliases":[{"foreign":9,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":12,"nodeType":"ImportDirective","scope":958,"sourceUnit":6521,"src":"397:47:0","symbolAliases":[{"foreign":11,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/UpgradeImpl.sol","file":"./impl/UpgradeImpl.sol","id":14,"nodeType":"ImportDirective","scope":958,"sourceUnit":9104,"src":"445:53:0","symbolAliases":[{"foreign":13,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":16,"nodeType":"ImportDirective","scope":958,"sourceUnit":4118,"src":"499:67:0","symbolAliases":[{"foreign":15,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":18,"nodeType":"ImportDirective","scope":958,"sourceUnit":2545,"src":"567:55:0","symbolAliases":[{"foreign":17,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":20,"nodeType":"ImportDirective","scope":958,"sourceUnit":2733,"src":"623:53:0","symbolAliases":[{"foreign":19,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":22,"nodeType":"ImportDirective","scope":958,"sourceUnit":2671,"src":"677:55:0","symbolAliases":[{"foreign":21,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":24,"nodeType":"ImportDirective","scope":958,"sourceUnit":2741,"src":"733:57:0","symbolAliases":[{"foreign":23,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":26,"nodeType":"ImportDirective","scope":958,"sourceUnit":2951,"src":"791:45:0","symbolAliases":[{"foreign":25,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":28,"nodeType":"ImportDirective","scope":958,"sourceUnit":11435,"src":"837:47:0","symbolAliases":[{"foreign":27,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":29,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2740,"src":"905:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2740","typeString":"contract EnigmaStorage"}},"id":30,"nodeType":"InheritanceSpecifier","src":"905:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":31,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2670,"src":"920:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2670","typeString":"contract EnigmaEvents"}},"id":32,"nodeType":"InheritanceSpecifier","src":"920:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":33,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2950,"src":"934:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2950","typeString":"contract Getters"}},"id":34,"nodeType":"InheritanceSpecifier","src":"934:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":35,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":23337,"src":"943:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$23337","typeString":"contract Ownable"}},"id":36,"nodeType":"InheritanceSpecifier","src":"943:7:0"}],"contractDependencies":[2670,2740,2950,22955,23337],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":957,"linearizedBaseContracts":[957,23337,22955,2950,2670,2740],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":39,"libraryName":{"contractScope":null,"id":37,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":23223,"src":"963:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$23223","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"957:27:0","typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":42,"libraryName":{"contractScope":null,"id":40,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":23223,"src":"995:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$23223","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"989:26:0","typeName":{"id":41,"name":"uint64","nodeType":"ElementaryTypeName","src":"1008:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}},{"id":45,"libraryName":{"contractScope":null,"id":43,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":23036,"src":"1026:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$23036","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"1020:24:0","typeName":{"id":44,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1036:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":137,"nodeType":"Block","src":"1349:472:0","statements":[{"expression":{"argumentTypes":null,"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":64,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1359:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":66,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2679,"src":"1359:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11434","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":68,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1382:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11434,"src":"1376:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$11434_$","typeString":"type(contract ERC20)"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11434","typeString":"contract ERC20"}},"src":"1359:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11434","typeString":"contract ERC20"}},"id":71,"nodeType":"ExpressionStatement","src":"1359:37:0"},{"expression":{"argumentTypes":null,"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":72,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1406:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2681,"src":"1406:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":75,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1424:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1406:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":77,"nodeType":"ExpressionStatement","src":"1406:28:0"},{"expression":{"argumentTypes":null,"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":78,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1444:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":80,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2683,"src":"1444:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":81,"name":"_timeoutThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"1468:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":82,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1488:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":83,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2681,"src":"1488:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1468:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1444:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":86,"nodeType":"ExpressionStatement","src":"1444:59:0"},{"expression":{"argumentTypes":null,"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":87,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1513:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":89,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2685,"src":"1513:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":90,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"1531:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1513:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":92,"nodeType":"ExpressionStatement","src":"1513:28:0"},{"expression":{"argumentTypes":null,"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":93,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1551:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":95,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"exchangeRate","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"1551:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":96,"name":"_exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1572:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1551:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":98,"nodeType":"ExpressionStatement","src":"1551:34:0"},{"expression":{"argumentTypes":null,"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":99,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1595:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"1595:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":103,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23938,"src":"1640:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$957","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$957","typeString":"contract Enigma"}],"id":102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1632:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1632:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1595:50:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":106,"nodeType":"ExpressionStatement","src":"1595:50:0"},{"expression":{"argumentTypes":null,"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":107,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1655:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2722,"src":"1655:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1680:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":112,"nodeType":"ExpressionStatement","src":"1655:26:0"},{"expression":{"argumentTypes":null,"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":113,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1691:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"1691:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1715:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1691:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":118,"nodeType":"ExpressionStatement","src":"1691:25:0"},{"expression":{"argumentTypes":null,"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":119,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1726:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"debug","nodeType":"MemberAccess","referencedDeclaration":2726,"src":"1726:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":122,"name":"_debug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1740:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1726:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":124,"nodeType":"ExpressionStatement","src":"1726:20:0"},{"expression":{"argumentTypes":null,"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":125,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1756:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"mrSigner","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"1756:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":128,"name":"_mrSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"1773:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1756:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":130,"nodeType":"ExpressionStatement","src":"1756:26:0"},{"expression":{"argumentTypes":null,"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":131,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1792:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isvSvn","nodeType":"MemberAccess","referencedDeclaration":2730,"src":"1792:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":134,"name":"_isvSvn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1807:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1792:22:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":136,"nodeType":"ExpressionStatement","src":"1792:22:0"}]},"documentation":null,"id":138,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":138,"src":"1168:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1168:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":49,"name":"_principal","nodeType":"VariableDeclaration","scope":138,"src":"1191:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":51,"name":"_exchangeRate","nodeType":"VariableDeclaration","scope":138,"src":"1211:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":53,"name":"_epochSize","nodeType":"VariableDeclaration","scope":138,"src":"1234:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint","nodeType":"ElementaryTypeName","src":"1234:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":55,"name":"_timeoutThreshold","nodeType":"VariableDeclaration","scope":138,"src":"1259:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint","nodeType":"ElementaryTypeName","src":"1259:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":57,"name":"_debug","nodeType":"VariableDeclaration","scope":138,"src":"1283:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":56,"name":"bool","nodeType":"ElementaryTypeName","src":"1283:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":59,"name":"_mrSigner","nodeType":"VariableDeclaration","scope":138,"src":"1296:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":58,"name":"bytes","nodeType":"ElementaryTypeName","src":"1296:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":61,"name":"_isvSvn","nodeType":"VariableDeclaration","scope":138,"src":"1320:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":60,"name":"bytes","nodeType":"ElementaryTypeName","src":"1320:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1167:174:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[],"src":"1349:0:0"},"scope":957,"src":"1156:665:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":162,"nodeType":"Block","src":"2111:181:0","statements":[{"assignments":[145],"declarations":[{"constant":false,"id":145,"name":"worker","nodeType":"VariableDeclaration","scope":162,"src":"2121:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":144,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2411,"src":"2121:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":150,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":146,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"2157:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"2157:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2411_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":149,"indexExpression":{"argumentTypes":null,"id":148,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2171:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2157:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2121:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":152,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2195:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"2195:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":154,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"2212:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"2212:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2452_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2212:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2195:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2252:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2187:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":160,"nodeType":"ExpressionStatement","src":"2187:87:0"},{"id":161,"nodeType":"PlaceholderStatement","src":"2284:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":163,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"name":"_user","nodeType":"VariableDeclaration","scope":163,"src":"2096:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"2096:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2095:15:0"},"src":"2070:222:0","visibility":"internal"},{"body":{"id":187,"nodeType":"Block","src":"2475:178:0","statements":[{"assignments":[170],"declarations":[{"constant":false,"id":170,"name":"worker","nodeType":"VariableDeclaration","scope":187,"src":"2485:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":169,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2411,"src":"2485:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":175,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":171,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"2521:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"2521:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2411_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":174,"indexExpression":{"argumentTypes":null,"id":173,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2535:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2521:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2485:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":177,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2559:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"2559:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":179,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"2576:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"2576:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2452_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2576:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2559:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2612:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":176,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"2551:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2551:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":185,"nodeType":"ExpressionStatement","src":"2551:84:0"},{"id":186,"nodeType":"PlaceholderStatement","src":"2645:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":188,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"name":"_user","nodeType":"VariableDeclaration","scope":188,"src":"2460:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"2460:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2459:15:0"},"src":"2436:217:0","visibility":"internal"},{"body":{"id":212,"nodeType":"Block","src":"2838:180:0","statements":[{"assignments":[195],"declarations":[{"constant":false,"id":195,"name":"worker","nodeType":"VariableDeclaration","scope":212,"src":"2848:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":194,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2411,"src":"2848:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":200,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":196,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"2884:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"2884:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2411_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":199,"indexExpression":{"argumentTypes":null,"id":198,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"2898:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2884:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2848:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":202,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2922:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"2922:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":204,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"2939:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"2939:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2452_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2939:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2922:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2976:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"2914:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2914:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":210,"nodeType":"ExpressionStatement","src":"2914:86:0"},{"id":211,"nodeType":"PlaceholderStatement","src":"3010:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":213,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"name":"_user","nodeType":"VariableDeclaration","scope":213,"src":"2823:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"2823:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2822:15:0"},"src":"2798:220:0","visibility":"internal"},{"body":{"id":256,"nodeType":"Block","src":"3167:395:0","statements":[{"assignments":[220],"declarations":[{"constant":false,"id":220,"name":"worker","nodeType":"VariableDeclaration","scope":256,"src":"3177:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":219,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2411,"src":"3177:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":225,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":221,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"3213:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"3213:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2411_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":224,"indexExpression":{"argumentTypes":null,"id":223,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"3227:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3213:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3177:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":228,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23874,"src":"3271:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3271:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":227,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3251:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3251:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3288:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3251:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3291:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":226,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"3243:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3243:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":235,"nodeType":"ExpressionStatement","src":"3243:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":237,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"3351:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"3351:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"3368:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"3368:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2452_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3368:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3351:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3405:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":236,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"3343:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3343:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":245,"nodeType":"ExpressionStatement","src":"3343:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":247,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"3465:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"3465:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":249,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"3483:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2722,"src":"3483:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3465:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3507:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":246,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"3457:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3457:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":254,"nodeType":"ExpressionStatement","src":"3457:87:0"},{"id":255,"nodeType":"PlaceholderStatement","src":"3554:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":257,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"name":"_user","nodeType":"VariableDeclaration","scope":257,"src":"3152:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"3152:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3151:15:0"},"src":"3134:428:0","visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"3720:580:0","statements":[{"assignments":[264],"declarations":[{"constant":false,"id":264,"name":"worker","nodeType":"VariableDeclaration","scope":313,"src":"3730:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":263,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2411,"src":"3730:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":269,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":265,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"3766:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"3766:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2411_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":268,"indexExpression":{"argumentTypes":null,"id":267,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"3780:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3766:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3730:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3804:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"3804:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":273,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"3821:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"3821:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2452_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3821:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3804:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3858:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"3796:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3796:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"ExpressionStatement","src":"3796:104:0"},{"assignments":[283],"declarations":[{"constant":false,"id":283,"name":"workerLog","nodeType":"VariableDeclaration","scope":313,"src":"3910:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2429_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":282,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2429,"src":"3910:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2429_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":290,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":286,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3987:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":287,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23874,"src":"3995:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3995:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":284,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"3952:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":10367,"src":"3952:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2411_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2429_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3952:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2429_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3910:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2460","typeString":"enum EnigmaCommon.WorkerLogType"},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":292,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4026:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2429_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"4026:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2460","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":294,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"4055:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2460,"src":"4055:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2460_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4055:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2460","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"4026:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4102:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":291,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"4018:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4018:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":300,"nodeType":"ExpressionStatement","src":"4018:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":303,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23874,"src":"4182:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4182:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":302,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"4162:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4162:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":306,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4198:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2429_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2426,"src":"4198:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4162:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4233:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"4154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4154:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":311,"nodeType":"ExpressionStatement","src":"4154:128:0"},{"id":312,"nodeType":"PlaceholderStatement","src":"4292:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":314,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"name":"_user","nodeType":"VariableDeclaration","scope":314,"src":"3705:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"3705:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3704:15:0"},"src":"3684:616:0","visibility":"internal"},{"body":{"id":332,"nodeType":"Block","src":"4467:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2455","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":319,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"4485:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2716,"src":"4485:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2441_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":322,"indexExpression":{"argumentTypes":null,"id":321,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"4501:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4485:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2441_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2440,"src":"4485:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2455","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":324,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"4520:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2455,"src":"4520:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2455_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4520:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2455","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4485:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4565:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"4477:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4477:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"4477:123:0"},{"id":331,"nodeType":"PlaceholderStatement","src":"4610:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":333,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"name":"_scAddr","nodeType":"VariableDeclaration","scope":333,"src":"4450:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4450:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4449:17:0"},"src":"4423:195:0","visibility":"internal"},{"body":{"id":351,"nodeType":"Block","src":"4780:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2455","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":338,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"4798:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2716,"src":"4798:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2441_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":341,"indexExpression":{"argumentTypes":null,"id":340,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4814:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4798:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2441_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2440,"src":"4798:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2455","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":343,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"4833:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2455,"src":"4833:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2455_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4833:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2455","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4798:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"4790:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4790:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":349,"nodeType":"ExpressionStatement","src":"4790:118:0"},{"id":350,"nodeType":"PlaceholderStatement","src":"4918:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":352,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"name":"_scAddr","nodeType":"VariableDeclaration","scope":352,"src":"4763:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4763:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4762:17:0"},"src":"4737:189:0","visibility":"internal"},{"body":{"id":370,"nodeType":"Block","src":"5091:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2448","typeString":"enum EnigmaCommon.TaskStatus"},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":357,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"5109:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2709,"src":"5109:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2399_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":360,"indexExpression":{"argumentTypes":null,"id":359,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5121:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5109:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2399_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2396,"src":"5109:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2448","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":362,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"5140:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2448,"src":"5140:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2448_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5140:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2448","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"5109:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5179:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":356,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"5101:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5101:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":368,"nodeType":"ExpressionStatement","src":"5101:100:0"},{"id":369,"nodeType":"PlaceholderStatement","src":"5211:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":371,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"name":"_taskId","nodeType":"VariableDeclaration","scope":371,"src":"5074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5074:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5073:17:0"},"src":"5053:166:0","visibility":"internal"},{"body":{"id":404,"nodeType":"Block","src":"5381:202:0","statements":[{"body":{"id":401,"nodeType":"Block","src":"5447:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":388,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"5469:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"5469:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2411_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":394,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":390,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"5483:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2698,"src":"5483:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":393,"indexExpression":{"argumentTypes":null,"id":392,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5505:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5483:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5469:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2401,"src":"5469:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":396,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5519:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5469:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5528:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":387,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"5461:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5461:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":400,"nodeType":"ExpressionStatement","src":"5461:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":379,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5408:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":380,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"5412:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2698,"src":"5412:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5412:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5408:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":402,"initializationExpression":{"assignments":[376],"declarations":[{"constant":false,"id":376,"name":"i","nodeType":"VariableDeclaration","scope":402,"src":"5396:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint","nodeType":"ElementaryTypeName","src":"5396:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":378,"initialValue":{"argumentTypes":null,"hexValue":"30","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5405:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5396:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5442:3:0","subExpression":{"argumentTypes":null,"id":384,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5442:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":386,"nodeType":"ExpressionStatement","src":"5442:3:0"},"nodeType":"ForStatement","src":"5391:175:0"},{"id":403,"nodeType":"PlaceholderStatement","src":"5575:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":405,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"name":"_signer","nodeType":"VariableDeclaration","scope":405,"src":"5364:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5363:17:0"},"src":"5336:247:0","visibility":"internal"},{"body":{"id":418,"nodeType":"Block","src":"5710:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":409,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23938,"src":"5736:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$957","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$957","typeString":"contract Enigma"}],"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5728:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5728:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":411,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"5745:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"5745:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5728:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74207570646174656420456e69676d6120636f6e7472616374","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5781:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""},"value":"Not updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""}],"id":407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"5720:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5720:91:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"ExpressionStatement","src":"5720:91:0"},{"id":417,"nodeType":"PlaceholderStatement","src":"5821:1:0"}]},"documentation":"Ensure that the contract\'s context is the updated contract\\n    ","id":419,"name":"isUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"5707:2:0"},"src":"5675:154:0","visibility":"internal"},{"body":{"id":431,"nodeType":"Block","src":"5960:121:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":422,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"5978:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5978:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":424,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"5992:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"5992:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5978:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6028:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""},"value":"Not from updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""}],"id":421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"5970:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5970:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"5970:93:0"},{"id":430,"nodeType":"PlaceholderStatement","src":"6073:1:0"}]},"documentation":"Ensure the sender of the recent call is the updated contract\\n    ","id":432,"name":"fromUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":420,"nodeType":"ParameterList","parameters":[],"src":"5957:2:0"},"src":"5923:158:0","visibility":"internal"},{"body":{"id":455,"nodeType":"Block","src":"6730:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":449,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"6765:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":450,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"6772:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":451,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"6781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":452,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"6790:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":446,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"6740:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":9625,"src":"6740:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6740:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":454,"nodeType":"ExpressionStatement","src":"6740:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":456,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":441,"modifierName":{"argumentTypes":null,"id":440,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"6670:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6670:23:0"},{"arguments":[{"argumentTypes":null,"id":443,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"6717:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":444,"modifierName":{"argumentTypes":null,"id":442,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"6698:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6698:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"name":"_signer","nodeType":"VariableDeclaration","scope":456,"src":"6591:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":433,"name":"address","nodeType":"ElementaryTypeName","src":"6591:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":436,"name":"_report","nodeType":"VariableDeclaration","scope":456,"src":"6608:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":435,"name":"bytes","nodeType":"ElementaryTypeName","src":"6608:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":438,"name":"_signature","nodeType":"VariableDeclaration","scope":456,"src":"6630:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":437,"name":"bytes","nodeType":"ElementaryTypeName","src":"6630:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6590:64:0"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"6730:0:0"},"scope":957,"src":"6573:235:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":476,"nodeType":"Block","src":"7178:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":471,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7212:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":472,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7219:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":473,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"7231:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":468,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"7188:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":9841,"src":"7188:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7188:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"7188:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":477,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":463,"modifierName":{"argumentTypes":null,"id":462,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7117:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"7117:23:0"},{"arguments":[{"argumentTypes":null,"id":465,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7162:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":466,"modifierName":{"argumentTypes":null,"id":464,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"7145:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7145:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"name":"_custodian","nodeType":"VariableDeclaration","scope":477,"src":"7068:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"7068:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":460,"name":"_amount","nodeType":"VariableDeclaration","scope":477,"src":"7088:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":459,"name":"uint","nodeType":"ElementaryTypeName","src":"7088:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7067:34:0"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[],"src":"7178:0:0"},"scope":957,"src":"7051:195:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":493,"nodeType":"Block","src":"7519:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":489,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7554:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":490,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"7561:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":486,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"7529:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"7529:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7529:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":492,"nodeType":"ExpressionStatement","src":"7529:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":494,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":482,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"7503:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7503:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":484,"modifierName":{"argumentTypes":null,"id":481,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"7491:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7491:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"name":"_amount","nodeType":"VariableDeclaration","scope":494,"src":"7462:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint","nodeType":"ElementaryTypeName","src":"7462:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7461:14:0"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"7519:0:0"},"scope":957,"src":"7444:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":507,"nodeType":"Block","src":"7784:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":504,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7816:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":501,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"7794:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":9734,"src":"7794:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7794:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"ExpressionStatement","src":"7794:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":508,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"7772:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7772:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":499,"modifierName":{"argumentTypes":null,"id":496,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"7763:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7763:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"7753:2:0"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"7784:0:0"},"scope":957,"src":"7739:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":521,"nodeType":"Block","src":"7958:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":518,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7991:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":515,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"7968:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":9780,"src":"7968:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7968:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"7968:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":522,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":511,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"7946:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7946:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":513,"modifierName":{"argumentTypes":null,"id":510,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"7931:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7931:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"7921:2:0"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"7958:0:0"},"scope":957,"src":"7906:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":552,"nodeType":"Block","src":"8564:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":545,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"8615:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":546,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"8622:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":547,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"8631:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":548,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"8642:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":549,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"8652:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":542,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"8574:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6520_$","typeString":"type(library TaskImpl)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4586,"src":"8574:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8574:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":551,"nodeType":"ExpressionStatement","src":"8574:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":553,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":533,"modifierName":{"argumentTypes":null,"id":532,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"8474:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8474:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":535,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"8517:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8517:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":537,"modifierName":{"argumentTypes":null,"id":534,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"8502:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8502:26:0"},{"arguments":[{"argumentTypes":null,"id":539,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"8551:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":540,"modifierName":{"argumentTypes":null,"id":538,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"8533:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8533:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"name":"_taskId","nodeType":"VariableDeclaration","scope":553,"src":"8358:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8358:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":526,"name":"_codeHash","nodeType":"VariableDeclaration","scope":553,"src":"8383:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8383:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":528,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":553,"src":"8410:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":527,"name":"uint64","nodeType":"ElementaryTypeName","src":"8410:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":530,"name":"_sig","nodeType":"VariableDeclaration","scope":553,"src":"8435:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":529,"name":"bytes","nodeType":"ElementaryTypeName","src":"8435:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8348:110:0"},"returnParameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"8564:0:0"},"scope":957,"src":"8312:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":590,"nodeType":"Block","src":"9464:153:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":582,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"9508:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":583,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"9515:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":584,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"9525:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":585,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"9559:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},{"argumentTypes":null,"id":586,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"9582:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":587,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"9605:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":579,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"9474:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6520_$","typeString":"type(library TaskImpl)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":5110,"src":"9474:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_uint64_$_t_address_$_t_array$_t_bytes32_$4_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint64,address,bytes32[4] memory,bytes memory,bytes memory)"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9474:136:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":589,"nodeType":"ExpressionStatement","src":"9474:136:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _gasUsed Gas used for task\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _bytes32s [taskId, preCodeHash, codeHash, initStateDeltaHash]\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _sig Worker\'s signature for deployment","id":591,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":568,"modifierName":{"argumentTypes":null,"id":567,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"9369:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9369:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"9412:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9412:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":572,"modifierName":{"argumentTypes":null,"id":569,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"9397:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"9397:26:0"},{"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":574,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"9446:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},"id":576,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9456:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9446:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":577,"modifierName":{"argumentTypes":null,"id":573,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"9428:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"9428:31:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":591,"src":"9174:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":554,"name":"uint64","nodeType":"ElementaryTypeName","src":"9174:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":557,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":591,"src":"9199:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"9199:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":561,"name":"_bytes32s","nodeType":"VariableDeclaration","scope":591,"src":"9249:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4]"},"typeName":{"baseType":{"id":558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9249:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":560,"length":{"argumentTypes":null,"hexValue":"34","id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9257:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"9249:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_storage_ptr","typeString":"bytes32[4]"}},"value":null,"visibility":"internal"},{"constant":false,"id":563,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":591,"src":"9286:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":562,"name":"bytes","nodeType":"ElementaryTypeName","src":"9286:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":565,"name":"_sig","nodeType":"VariableDeclaration","scope":591,"src":"9330:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":564,"name":"bytes","nodeType":"ElementaryTypeName","src":"9330:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"9164:189:0"},"returnParameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"9464:0:0"},"scope":957,"src":"9135:482:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":601,"nodeType":"Block","src":"9819:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":598,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"9880:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":596,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"9836:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$4117_$","typeString":"type(library SecretContractImpl)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":4049,"src":"9836:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2731_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9836:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":595,"id":600,"nodeType":"Return","src":"9829:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":602,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[],"src":"9773:2:0"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"name":"","nodeType":"VariableDeclaration","scope":602,"src":"9809:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint","nodeType":"ElementaryTypeName","src":"9809:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9808:6:0"},"scope":957,"src":"9744:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":619,"nodeType":"Block","src":"10222:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":614,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"10289:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":615,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"10296:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":616,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"10304:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":612,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"10239:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$4117_$","typeString":"type(library SecretContractImpl)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":4116,"src":"10239:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2731_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10239:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":611,"id":618,"nodeType":"Return","src":"10232:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":620,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"name":"_start","nodeType":"VariableDeclaration","scope":620,"src":"10142:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint","nodeType":"ElementaryTypeName","src":"10142:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":606,"name":"_stop","nodeType":"VariableDeclaration","scope":620,"src":"10155:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint","nodeType":"ElementaryTypeName","src":"10155:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10141:25:0"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"name":"","nodeType":"VariableDeclaration","scope":620,"src":"10200:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10200:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":609,"length":null,"nodeType":"ArrayTypeName","src":"10200:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"10199:18:0"},"scope":957,"src":"10106:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":648,"nodeType":"Block","src":"11400:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":640,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"11450:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":641,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"11457:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":642,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"11470:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":643,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"11481:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":644,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"11489:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":645,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"11508:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":637,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"11410:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6520_$","typeString":"type(library TaskImpl)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4410,"src":"11410:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11410:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"ExpressionStatement","src":"11410:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":649,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":633,"modifierName":{"argumentTypes":null,"id":632,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23270,"src":"11358:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11358:9:0"},{"arguments":null,"id":635,"modifierName":{"argumentTypes":null,"id":634,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"11372:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11372:23:0"}],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":649,"src":"11215:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11215:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":624,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":649,"src":"11244:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":623,"name":"uint64","nodeType":"ElementaryTypeName","src":"11244:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":626,"name":"_gasPx","nodeType":"VariableDeclaration","scope":649,"src":"11270:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":625,"name":"uint64","nodeType":"ElementaryTypeName","src":"11270:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":628,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":649,"src":"11293:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint","nodeType":"ElementaryTypeName","src":"11293:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":630,"name":"_nonce","nodeType":"VariableDeclaration","scope":649,"src":"11325:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint","nodeType":"ElementaryTypeName","src":"11325:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11205:137:0"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"11400:0:0"},"scope":957,"src":"11170:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":672,"nodeType":"Block","src":"12282:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":665,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"12322:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":666,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"12329:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":667,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"12342:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":668,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"12353:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":669,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"12361:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":662,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"12292:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6520_$","typeString":"type(library TaskImpl)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":5353,"src":"12292:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12292:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"12292:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":673,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":660,"modifierName":{"argumentTypes":null,"id":659,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"12254:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12254:23:0"}],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":673,"src":"12132:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12132:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":653,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":673,"src":"12161:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":652,"name":"uint64","nodeType":"ElementaryTypeName","src":"12161:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":655,"name":"_gasPx","nodeType":"VariableDeclaration","scope":673,"src":"12187:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":654,"name":"uint64","nodeType":"ElementaryTypeName","src":"12187:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":657,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":673,"src":"12210:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint","nodeType":"ElementaryTypeName","src":"12210:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12122:116:0"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[],"src":"12282:0:0"},"scope":957,"src":"12097:289:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":710,"nodeType":"Block","src":"13204:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":702,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"13241:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":703,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"13248:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":704,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"13258:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":705,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"13304:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},{"argumentTypes":null,"id":706,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"13315:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":707,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"13338:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":699,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"13214:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6520_$","typeString":"type(library TaskImpl)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":6156,"src":"13214:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_uint64_$_t_address_$_t_array$_t_bytes32_$4_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint64,address,bytes32[4] memory,bytes memory,bytes memory)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13214:129:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"ExpressionStatement","src":"13214:129:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _gasUsed Gas used for task computation\\n@param _optionalEthereumContractAddress Output state hash\\n@param _bytes32s [scAddr, taskId, stateDeltaHash, outputHash]\\n@param _optionalEthereumData Output state hash\\n@param _sig Worker\'s signature","id":711,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":688,"modifierName":{"argumentTypes":null,"id":687,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"13110:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13110:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":690,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"13153:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13153:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":692,"modifierName":{"argumentTypes":null,"id":689,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"13138:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13138:26:0"},{"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":694,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"13186:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},"id":696,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13196:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13186:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":697,"modifierName":{"argumentTypes":null,"id":693,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"13169:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13169:30:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":711,"src":"12915:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":674,"name":"uint64","nodeType":"ElementaryTypeName","src":"12915:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":677,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":711,"src":"12940:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"12940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":681,"name":"_bytes32s","nodeType":"VariableDeclaration","scope":711,"src":"12990:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4]"},"typeName":{"baseType":{"id":678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12990:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":680,"length":{"argumentTypes":null,"hexValue":"34","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12998:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"12990:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_storage_ptr","typeString":"bytes32[4]"}},"value":null,"visibility":"internal"},{"constant":false,"id":683,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":711,"src":"13027:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":682,"name":"bytes","nodeType":"ElementaryTypeName","src":"13027:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":685,"name":"_sig","nodeType":"VariableDeclaration","scope":711,"src":"13071:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":684,"name":"bytes","nodeType":"ElementaryTypeName","src":"13071:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"12905:189:0"},"returnParameters":{"id":698,"nodeType":"ParameterList","parameters":[],"src":"13204:0:0"},"scope":957,"src":"12883:467:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":744,"nodeType":"Block","src":"14009:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":736,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"14050:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":737,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"14057:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":738,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"14066:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":739,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"14075:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":740,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"14088:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":741,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"14098:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":733,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"14019:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6520_$","typeString":"type(library TaskImpl)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5551,"src":"14019:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14019:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"ExpressionStatement","src":"14019:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":745,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":724,"modifierName":{"argumentTypes":null,"id":723,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"13920:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13920:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":726,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"13963:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13963:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":728,"modifierName":{"argumentTypes":null,"id":725,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"13948:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13948:26:0"},{"arguments":[{"argumentTypes":null,"id":730,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"13996:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":731,"modifierName":{"argumentTypes":null,"id":729,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"13979:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13979:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"name":"_scAddr","nodeType":"VariableDeclaration","scope":745,"src":"13777:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13777:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":715,"name":"_taskId","nodeType":"VariableDeclaration","scope":745,"src":"13802:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13802:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":717,"name":"_outputHash","nodeType":"VariableDeclaration","scope":745,"src":"13827:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13827:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":719,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":745,"src":"13856:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":718,"name":"uint64","nodeType":"ElementaryTypeName","src":"13856:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":721,"name":"_sig","nodeType":"VariableDeclaration","scope":745,"src":"13881:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":720,"name":"bytes","nodeType":"ElementaryTypeName","src":"13881:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13767:137:0"},"returnParameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"14009:0:0"},"scope":957,"src":"13741:369:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":760,"nodeType":"Block","src":"14361:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":756,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"14402:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":757,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"14409:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":753,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"14371:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6520_$","typeString":"type(library TaskImpl)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6519,"src":"14371:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14371:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"ExpressionStatement","src":"14371:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":761,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":750,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"14348:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":751,"modifierName":{"argumentTypes":null,"id":749,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"14336:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14336:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"name":"_taskId","nodeType":"VariableDeclaration","scope":761,"src":"14304:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14304:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14303:17:0"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"14361:0:0"},"scope":957,"src":"14277:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":785,"nodeType":"Block","src":"14912:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":779,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"14957:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":780,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"14964:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":781,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"14978:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":782,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"14985:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":776,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"14922:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3477_$","typeString":"type(library PrincipalImpl)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3306,"src":"14922:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14922:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":784,"nodeType":"ExpressionStatement","src":"14922:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":786,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":770,"modifierName":{"argumentTypes":null,"id":769,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"14851:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14851:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"14896:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14896:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":774,"modifierName":{"argumentTypes":null,"id":771,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"14879:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14879:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":786,"src":"14786:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint","nodeType":"ElementaryTypeName","src":"14786:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":765,"name":"_seed","nodeType":"VariableDeclaration","scope":786,"src":"14805:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":764,"name":"uint","nodeType":"ElementaryTypeName","src":"14805:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":767,"name":"_sig","nodeType":"VariableDeclaration","scope":786,"src":"14817:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":766,"name":"bytes","nodeType":"ElementaryTypeName","src":"14817:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14785:50:0"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"14912:0:0"},"scope":957,"src":"14760:237:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":803,"nodeType":"Block","src":"15233:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":799,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"15285:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":800,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"15292:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":797,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"15250:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3477_$","typeString":"type(library PrincipalImpl)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3476,"src":"15250:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2731_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15250:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":796,"id":802,"nodeType":"Return","src":"15243:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":804,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":804,"src":"15144:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint","nodeType":"ElementaryTypeName","src":"15144:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15143:19:0"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"name":"","nodeType":"VariableDeclaration","scope":804,"src":"15196:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"15196:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":791,"length":null,"nodeType":"ArrayTypeName","src":"15196:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":795,"name":"","nodeType":"VariableDeclaration","scope":804,"src":"15214:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":793,"name":"uint","nodeType":"ElementaryTypeName","src":"15214:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":794,"length":null,"nodeType":"ArrayTypeName","src":"15214:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15195:33:0"},"scope":957,"src":"15118:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":817,"nodeType":"Block","src":"15574:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":813,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"15627:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":814,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"15634:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":811,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"15591:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":10014,"src":"15591:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2731_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15591:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":810,"id":816,"nodeType":"Return","src":"15584:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":818,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":818,"src":"15516:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint","nodeType":"ElementaryTypeName","src":"15516:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15515:19:0"},"returnParameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"name":"","nodeType":"VariableDeclaration","scope":818,"src":"15568:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint","nodeType":"ElementaryTypeName","src":"15568:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15567:6:0"},"scope":957,"src":"15487:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":839,"nodeType":"Block","src":"16060:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":835,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"16109:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":836,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"16116:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":833,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"16077:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":10051,"src":"16077:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2731_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16077:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":832,"id":838,"nodeType":"Return","src":"16070:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":840,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":840,"src":"15963:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint","nodeType":"ElementaryTypeName","src":"15963:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15962:19:0"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"name":"","nodeType":"VariableDeclaration","scope":840,"src":"16015:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint","nodeType":"ElementaryTypeName","src":"16015:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":825,"name":"","nodeType":"VariableDeclaration","scope":840,"src":"16021:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint","nodeType":"ElementaryTypeName","src":"16021:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":828,"name":"","nodeType":"VariableDeclaration","scope":840,"src":"16027:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"16027:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":827,"length":null,"nodeType":"ArrayTypeName","src":"16027:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":831,"name":"","nodeType":"VariableDeclaration","scope":840,"src":"16045:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":829,"name":"uint","nodeType":"ElementaryTypeName","src":"16045:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":830,"length":null,"nodeType":"ArrayTypeName","src":"16045:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16014:45:0"},"scope":957,"src":"15938:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":857,"nodeType":"Block","src":"16588:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":852,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"16636:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":853,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"16643:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":854,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"16657:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":850,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"16605:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":10315,"src":"16605:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2731_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16605:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":849,"id":856,"nodeType":"Return","src":"16598:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":858,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":858,"src":"16497:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint","nodeType":"ElementaryTypeName","src":"16497:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":844,"name":"_scAddr","nodeType":"VariableDeclaration","scope":858,"src":"16516:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16516:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16496:36:0"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"name":"","nodeType":"VariableDeclaration","scope":858,"src":"16566:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"16566:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":847,"length":null,"nodeType":"ArrayTypeName","src":"16566:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16565:18:0"},"scope":957,"src":"16473:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":876,"nodeType":"Block","src":"16942:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":872,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"16985:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":873,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"16992:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":870,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"16959:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":9662,"src":"16959:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2731_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16959:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":869,"id":875,"nodeType":"Return","src":"16952:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":877,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":863,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"16890:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":864,"modifierName":{"argumentTypes":null,"id":862,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"16873:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"16873:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"name":"_custodian","nodeType":"VariableDeclaration","scope":877,"src":"16829:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"16829:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16828:20:0"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"name":"","nodeType":"VariableDeclaration","scope":877,"src":"16915:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"16915:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":868,"name":"","nodeType":"VariableDeclaration","scope":877,"src":"16924:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":867,"name":"bytes","nodeType":"ElementaryTypeName","src":"16924:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"16914:23:0"},"scope":957,"src":"16810:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":892,"nodeType":"Block","src":"17325:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":888,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"17371:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":889,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"17378:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":886,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"17342:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":9688,"src":"17342:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17342:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":885,"id":891,"nodeType":"Return","src":"17335:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":893,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"name":"_data","nodeType":"VariableDeclaration","scope":893,"src":"17237:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":878,"name":"bytes","nodeType":"ElementaryTypeName","src":"17237:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":881,"name":"_signature","nodeType":"VariableDeclaration","scope":893,"src":"17257:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":880,"name":"bytes","nodeType":"ElementaryTypeName","src":"17257:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17236:45:0"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"name":"","nodeType":"VariableDeclaration","scope":893,"src":"17315:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint","nodeType":"ElementaryTypeName","src":"17315:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17314:6:0"},"scope":957,"src":"17215:181:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":908,"nodeType":"Block","src":"17664:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":904,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"17719:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":905,"name":"_updatedEnigmaContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"17726:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":902,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9103,"src":"17681:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$9103_$","typeString":"type(library UpgradeImpl)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeEnigmaContractImpl","nodeType":"MemberAccess","referencedDeclaration":9024,"src":"17681:37:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17681:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":901,"id":907,"nodeType":"Return","src":"17674:82:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address","id":909,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":898,"modifierName":{"argumentTypes":null,"id":897,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23270,"src":"17622:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17622:9:0"},{"arguments":null,"id":900,"modifierName":{"argumentTypes":null,"id":899,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"17636:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17636:23:0"}],"name":"upgradeEnigmaContract","nodeType":"FunctionDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"name":"_updatedEnigmaContractAddress","nodeType":"VariableDeclaration","scope":909,"src":"17568:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"17568:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17567:39:0"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[],"src":"17664:0:0"},"scope":957,"src":"17537:226:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":927,"nodeType":"Block","src":"18102:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":922,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"18166:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":923,"name":"_workerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"18173:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":924,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"18189:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":920,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9103,"src":"18119:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$9103_$","typeString":"type(library UpgradeImpl)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferWorkerStakePostUpgradeImpl","nodeType":"MemberAccess","referencedDeclaration":9102,"src":"18119:46:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory) returns (uint256)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18119:75:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":919,"id":926,"nodeType":"Return","src":"18112:82:0"}]},"documentation":"Transfer worker stake from old contract to new contract upon registration\\n@param _workerAddress Newly-registered worker address\\n@param _sig Signature","id":928,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":916,"modifierName":{"argumentTypes":null,"id":915,"name":"fromUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"18050:25:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18050:25:0"}],"name":"transferWorkerStakePostUpgrade","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"name":"_workerAddress","nodeType":"VariableDeclaration","scope":928,"src":"17992:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"17992:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":913,"name":"_sig","nodeType":"VariableDeclaration","scope":928,"src":"18016:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":912,"name":"bytes","nodeType":"ElementaryTypeName","src":"18016:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17991:43:0"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"name":"","nodeType":"VariableDeclaration","scope":928,"src":"18089:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"18089:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18088:9:0"},"scope":957,"src":"17952:249:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":941,"nodeType":"Block","src":"18347:43:0","statements":[{"expression":{"argumentTypes":null,"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":935,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"18357:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"mrSigner","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"18357:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":938,"name":"_mrSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"18374:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"18357:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":940,"nodeType":"ExpressionStatement","src":"18357:26:0"}]},"documentation":"Set mrSigner\\n@param _mrSigner mrSigner","id":942,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":933,"modifierName":{"argumentTypes":null,"id":932,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23270,"src":"18333:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18333:9:0"}],"name":"setMrSigner","nodeType":"FunctionDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"name":"_mrSigner","nodeType":"VariableDeclaration","scope":942,"src":"18294:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":929,"name":"bytes","nodeType":"ElementaryTypeName","src":"18294:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18293:24:0"},"returnParameters":{"id":934,"nodeType":"ParameterList","parameters":[],"src":"18347:0:0"},"scope":957,"src":"18273:117:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":955,"nodeType":"Block","src":"18528:39:0","statements":[{"expression":{"argumentTypes":null,"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":949,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"18538:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isvSvn","nodeType":"MemberAccess","referencedDeclaration":2730,"src":"18538:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":952,"name":"_isvSvn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"18553:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"18538:22:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":954,"nodeType":"ExpressionStatement","src":"18538:22:0"}]},"documentation":"Set isvSvn\\n@param _isvSvn mrSigner","id":956,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":947,"modifierName":{"argumentTypes":null,"id":946,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23270,"src":"18514:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18514:9:0"}],"name":"setIsvSvn","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"name":"_isvSvn","nodeType":"VariableDeclaration","scope":956,"src":"18477:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":943,"name":"bytes","nodeType":"ElementaryTypeName","src":"18477:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18476:22:0"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[],"src":"18528:0:0"},"scope":957,"src":"18458:109:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":958,"src":"886:17683:0"}],"src":"0:18570:0"},"legacyAST":{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol","exportedSymbols":{"Enigma":[957]},"id":958,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".12"],"nodeType":"PragmaDirective","src":"0:24:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"25:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":958,"sourceUnit":23224,"src":"60:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":958,"sourceUnit":23037,"src":"120:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"openzeppelin-solidity/contracts/ownership/Ownable.sol","id":5,"nodeType":"ImportDirective","scope":958,"sourceUnit":23338,"src":"185:63:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":6,"nodeType":"ImportDirective","scope":958,"sourceUnit":22929,"src":"249:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":8,"nodeType":"ImportDirective","scope":958,"sourceUnit":10369,"src":"285:53:0","symbolAliases":[{"foreign":7,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":10,"nodeType":"ImportDirective","scope":958,"sourceUnit":3478,"src":"339:57:0","symbolAliases":[{"foreign":9,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":12,"nodeType":"ImportDirective","scope":958,"sourceUnit":6521,"src":"397:47:0","symbolAliases":[{"foreign":11,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/UpgradeImpl.sol","file":"./impl/UpgradeImpl.sol","id":14,"nodeType":"ImportDirective","scope":958,"sourceUnit":9104,"src":"445:53:0","symbolAliases":[{"foreign":13,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":16,"nodeType":"ImportDirective","scope":958,"sourceUnit":4118,"src":"499:67:0","symbolAliases":[{"foreign":15,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":18,"nodeType":"ImportDirective","scope":958,"sourceUnit":2545,"src":"567:55:0","symbolAliases":[{"foreign":17,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":20,"nodeType":"ImportDirective","scope":958,"sourceUnit":2733,"src":"623:53:0","symbolAliases":[{"foreign":19,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":22,"nodeType":"ImportDirective","scope":958,"sourceUnit":2671,"src":"677:55:0","symbolAliases":[{"foreign":21,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":24,"nodeType":"ImportDirective","scope":958,"sourceUnit":2741,"src":"733:57:0","symbolAliases":[{"foreign":23,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":26,"nodeType":"ImportDirective","scope":958,"sourceUnit":2951,"src":"791:45:0","symbolAliases":[{"foreign":25,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":28,"nodeType":"ImportDirective","scope":958,"sourceUnit":11435,"src":"837:47:0","symbolAliases":[{"foreign":27,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":29,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2740,"src":"905:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2740","typeString":"contract EnigmaStorage"}},"id":30,"nodeType":"InheritanceSpecifier","src":"905:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":31,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2670,"src":"920:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2670","typeString":"contract EnigmaEvents"}},"id":32,"nodeType":"InheritanceSpecifier","src":"920:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":33,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2950,"src":"934:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2950","typeString":"contract Getters"}},"id":34,"nodeType":"InheritanceSpecifier","src":"934:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":35,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":23337,"src":"943:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$23337","typeString":"contract Ownable"}},"id":36,"nodeType":"InheritanceSpecifier","src":"943:7:0"}],"contractDependencies":[2670,2740,2950,22955,23337],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":957,"linearizedBaseContracts":[957,23337,22955,2950,2670,2740],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":39,"libraryName":{"contractScope":null,"id":37,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":23223,"src":"963:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$23223","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"957:27:0","typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":42,"libraryName":{"contractScope":null,"id":40,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":23223,"src":"995:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$23223","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"989:26:0","typeName":{"id":41,"name":"uint64","nodeType":"ElementaryTypeName","src":"1008:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}},{"id":45,"libraryName":{"contractScope":null,"id":43,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":23036,"src":"1026:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$23036","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"1020:24:0","typeName":{"id":44,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1036:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":137,"nodeType":"Block","src":"1349:472:0","statements":[{"expression":{"argumentTypes":null,"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":64,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1359:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":66,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2679,"src":"1359:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11434","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":68,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1382:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11434,"src":"1376:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$11434_$","typeString":"type(contract ERC20)"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11434","typeString":"contract ERC20"}},"src":"1359:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11434","typeString":"contract ERC20"}},"id":71,"nodeType":"ExpressionStatement","src":"1359:37:0"},{"expression":{"argumentTypes":null,"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":72,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1406:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2681,"src":"1406:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":75,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1424:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1406:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":77,"nodeType":"ExpressionStatement","src":"1406:28:0"},{"expression":{"argumentTypes":null,"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":78,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1444:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":80,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2683,"src":"1444:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":81,"name":"_timeoutThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"1468:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":82,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1488:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":83,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2681,"src":"1488:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1468:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1444:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":86,"nodeType":"ExpressionStatement","src":"1444:59:0"},{"expression":{"argumentTypes":null,"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":87,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1513:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":89,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2685,"src":"1513:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":90,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"1531:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1513:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":92,"nodeType":"ExpressionStatement","src":"1513:28:0"},{"expression":{"argumentTypes":null,"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":93,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1551:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":95,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"exchangeRate","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"1551:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":96,"name":"_exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1572:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1551:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":98,"nodeType":"ExpressionStatement","src":"1551:34:0"},{"expression":{"argumentTypes":null,"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":99,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1595:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"1595:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":103,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23938,"src":"1640:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$957","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$957","typeString":"contract Enigma"}],"id":102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1632:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1632:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1595:50:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":106,"nodeType":"ExpressionStatement","src":"1595:50:0"},{"expression":{"argumentTypes":null,"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":107,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1655:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2722,"src":"1655:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1680:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":112,"nodeType":"ExpressionStatement","src":"1655:26:0"},{"expression":{"argumentTypes":null,"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":113,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1691:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"1691:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1715:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1691:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":118,"nodeType":"ExpressionStatement","src":"1691:25:0"},{"expression":{"argumentTypes":null,"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":119,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1726:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"debug","nodeType":"MemberAccess","referencedDeclaration":2726,"src":"1726:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":122,"name":"_debug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1740:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1726:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":124,"nodeType":"ExpressionStatement","src":"1726:20:0"},{"expression":{"argumentTypes":null,"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":125,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1756:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"mrSigner","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"1756:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":128,"name":"_mrSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"1773:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1756:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":130,"nodeType":"ExpressionStatement","src":"1756:26:0"},{"expression":{"argumentTypes":null,"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":131,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1792:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isvSvn","nodeType":"MemberAccess","referencedDeclaration":2730,"src":"1792:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":134,"name":"_isvSvn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1807:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1792:22:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":136,"nodeType":"ExpressionStatement","src":"1792:22:0"}]},"documentation":null,"id":138,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":138,"src":"1168:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1168:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":49,"name":"_principal","nodeType":"VariableDeclaration","scope":138,"src":"1191:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":51,"name":"_exchangeRate","nodeType":"VariableDeclaration","scope":138,"src":"1211:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":53,"name":"_epochSize","nodeType":"VariableDeclaration","scope":138,"src":"1234:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint","nodeType":"ElementaryTypeName","src":"1234:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":55,"name":"_timeoutThreshold","nodeType":"VariableDeclaration","scope":138,"src":"1259:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint","nodeType":"ElementaryTypeName","src":"1259:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":57,"name":"_debug","nodeType":"VariableDeclaration","scope":138,"src":"1283:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":56,"name":"bool","nodeType":"ElementaryTypeName","src":"1283:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":59,"name":"_mrSigner","nodeType":"VariableDeclaration","scope":138,"src":"1296:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":58,"name":"bytes","nodeType":"ElementaryTypeName","src":"1296:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":61,"name":"_isvSvn","nodeType":"VariableDeclaration","scope":138,"src":"1320:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":60,"name":"bytes","nodeType":"ElementaryTypeName","src":"1320:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1167:174:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[],"src":"1349:0:0"},"scope":957,"src":"1156:665:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":162,"nodeType":"Block","src":"2111:181:0","statements":[{"assignments":[145],"declarations":[{"constant":false,"id":145,"name":"worker","nodeType":"VariableDeclaration","scope":162,"src":"2121:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":144,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2411,"src":"2121:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":150,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":146,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"2157:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"2157:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2411_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":149,"indexExpression":{"argumentTypes":null,"id":148,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2171:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2157:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2121:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":152,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2195:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"2195:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":154,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"2212:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"2212:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2452_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2212:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2195:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2252:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2187:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":160,"nodeType":"ExpressionStatement","src":"2187:87:0"},{"id":161,"nodeType":"PlaceholderStatement","src":"2284:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":163,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"name":"_user","nodeType":"VariableDeclaration","scope":163,"src":"2096:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"2096:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2095:15:0"},"src":"2070:222:0","visibility":"internal"},{"body":{"id":187,"nodeType":"Block","src":"2475:178:0","statements":[{"assignments":[170],"declarations":[{"constant":false,"id":170,"name":"worker","nodeType":"VariableDeclaration","scope":187,"src":"2485:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":169,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2411,"src":"2485:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":175,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":171,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"2521:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"2521:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2411_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":174,"indexExpression":{"argumentTypes":null,"id":173,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2535:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2521:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2485:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":177,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2559:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"2559:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":179,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"2576:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"2576:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2452_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2576:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2559:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2612:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":176,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"2551:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2551:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":185,"nodeType":"ExpressionStatement","src":"2551:84:0"},{"id":186,"nodeType":"PlaceholderStatement","src":"2645:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":188,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"name":"_user","nodeType":"VariableDeclaration","scope":188,"src":"2460:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"2460:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2459:15:0"},"src":"2436:217:0","visibility":"internal"},{"body":{"id":212,"nodeType":"Block","src":"2838:180:0","statements":[{"assignments":[195],"declarations":[{"constant":false,"id":195,"name":"worker","nodeType":"VariableDeclaration","scope":212,"src":"2848:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":194,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2411,"src":"2848:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":200,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":196,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"2884:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"2884:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2411_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":199,"indexExpression":{"argumentTypes":null,"id":198,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"2898:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2884:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2848:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":202,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2922:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"2922:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":204,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"2939:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"2939:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2452_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2939:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2922:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2976:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"2914:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2914:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":210,"nodeType":"ExpressionStatement","src":"2914:86:0"},{"id":211,"nodeType":"PlaceholderStatement","src":"3010:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":213,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"name":"_user","nodeType":"VariableDeclaration","scope":213,"src":"2823:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"2823:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2822:15:0"},"src":"2798:220:0","visibility":"internal"},{"body":{"id":256,"nodeType":"Block","src":"3167:395:0","statements":[{"assignments":[220],"declarations":[{"constant":false,"id":220,"name":"worker","nodeType":"VariableDeclaration","scope":256,"src":"3177:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":219,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2411,"src":"3177:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":225,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":221,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"3213:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"3213:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2411_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":224,"indexExpression":{"argumentTypes":null,"id":223,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"3227:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3213:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3177:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":228,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23874,"src":"3271:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3271:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":227,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3251:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3251:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3288:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3251:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3291:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":226,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"3243:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3243:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":235,"nodeType":"ExpressionStatement","src":"3243:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":237,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"3351:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"3351:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"3368:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"3368:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2452_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3368:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3351:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3405:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":236,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"3343:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3343:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":245,"nodeType":"ExpressionStatement","src":"3343:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":247,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"3465:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"3465:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":249,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"3483:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2722,"src":"3483:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3465:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3507:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":246,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"3457:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3457:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":254,"nodeType":"ExpressionStatement","src":"3457:87:0"},{"id":255,"nodeType":"PlaceholderStatement","src":"3554:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":257,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"name":"_user","nodeType":"VariableDeclaration","scope":257,"src":"3152:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"3152:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3151:15:0"},"src":"3134:428:0","visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"3720:580:0","statements":[{"assignments":[264],"declarations":[{"constant":false,"id":264,"name":"worker","nodeType":"VariableDeclaration","scope":313,"src":"3730:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":263,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2411,"src":"3730:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":269,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":265,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"3766:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"3766:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2411_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":268,"indexExpression":{"argumentTypes":null,"id":267,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"3780:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3766:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3730:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3804:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"3804:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":273,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"3821:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"3821:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2452_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3821:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2452","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3804:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3858:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"3796:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3796:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"ExpressionStatement","src":"3796:104:0"},{"assignments":[283],"declarations":[{"constant":false,"id":283,"name":"workerLog","nodeType":"VariableDeclaration","scope":313,"src":"3910:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2429_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":282,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2429,"src":"3910:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2429_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":290,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":286,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3987:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":287,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23874,"src":"3995:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3995:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2411_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":284,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"3952:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":10367,"src":"3952:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2411_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2429_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3952:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2429_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3910:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2460","typeString":"enum EnigmaCommon.WorkerLogType"},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":292,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4026:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2429_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2424,"src":"4026:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2460","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":294,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"4055:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2460,"src":"4055:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2460_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4055:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2460","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"4026:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4102:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":291,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"4018:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4018:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":300,"nodeType":"ExpressionStatement","src":"4018:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":303,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23874,"src":"4182:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4182:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":302,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"4162:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4162:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":306,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4198:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2429_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2426,"src":"4198:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4162:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4233:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"4154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4154:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":311,"nodeType":"ExpressionStatement","src":"4154:128:0"},{"id":312,"nodeType":"PlaceholderStatement","src":"4292:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":314,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"name":"_user","nodeType":"VariableDeclaration","scope":314,"src":"3705:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"3705:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3704:15:0"},"src":"3684:616:0","visibility":"internal"},{"body":{"id":332,"nodeType":"Block","src":"4467:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2455","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":319,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"4485:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2716,"src":"4485:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2441_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":322,"indexExpression":{"argumentTypes":null,"id":321,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"4501:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4485:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2441_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2440,"src":"4485:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2455","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":324,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"4520:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2455,"src":"4520:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2455_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4520:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2455","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4485:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4565:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"4477:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4477:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"4477:123:0"},{"id":331,"nodeType":"PlaceholderStatement","src":"4610:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":333,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"name":"_scAddr","nodeType":"VariableDeclaration","scope":333,"src":"4450:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4450:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4449:17:0"},"src":"4423:195:0","visibility":"internal"},{"body":{"id":351,"nodeType":"Block","src":"4780:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2455","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":338,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"4798:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2716,"src":"4798:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2441_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":341,"indexExpression":{"argumentTypes":null,"id":340,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4814:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4798:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2441_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2440,"src":"4798:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2455","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":343,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"4833:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2455,"src":"4833:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2455_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4833:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2455","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4798:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"4790:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4790:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":349,"nodeType":"ExpressionStatement","src":"4790:118:0"},{"id":350,"nodeType":"PlaceholderStatement","src":"4918:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":352,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"name":"_scAddr","nodeType":"VariableDeclaration","scope":352,"src":"4763:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4763:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4762:17:0"},"src":"4737:189:0","visibility":"internal"},{"body":{"id":370,"nodeType":"Block","src":"5091:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2448","typeString":"enum EnigmaCommon.TaskStatus"},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":357,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"5109:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2709,"src":"5109:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2399_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":360,"indexExpression":{"argumentTypes":null,"id":359,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5121:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5109:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2399_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2396,"src":"5109:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2448","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":362,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"5140:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2544_$","typeString":"type(library EnigmaCommon)"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2448,"src":"5140:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2448_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5140:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2448","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"5109:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5179:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":356,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"5101:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5101:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":368,"nodeType":"ExpressionStatement","src":"5101:100:0"},{"id":369,"nodeType":"PlaceholderStatement","src":"5211:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":371,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"name":"_taskId","nodeType":"VariableDeclaration","scope":371,"src":"5074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5074:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5073:17:0"},"src":"5053:166:0","visibility":"internal"},{"body":{"id":404,"nodeType":"Block","src":"5381:202:0","statements":[{"body":{"id":401,"nodeType":"Block","src":"5447:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":388,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"5469:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"5469:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2411_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":394,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":390,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"5483:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2698,"src":"5483:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":393,"indexExpression":{"argumentTypes":null,"id":392,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5505:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5483:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5469:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2411_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2401,"src":"5469:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":396,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5519:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5469:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5528:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":387,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"5461:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5461:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":400,"nodeType":"ExpressionStatement","src":"5461:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":379,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5408:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":380,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"5412:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2698,"src":"5412:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5412:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5408:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":402,"initializationExpression":{"assignments":[376],"declarations":[{"constant":false,"id":376,"name":"i","nodeType":"VariableDeclaration","scope":402,"src":"5396:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint","nodeType":"ElementaryTypeName","src":"5396:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":378,"initialValue":{"argumentTypes":null,"hexValue":"30","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5405:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5396:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5442:3:0","subExpression":{"argumentTypes":null,"id":384,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5442:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":386,"nodeType":"ExpressionStatement","src":"5442:3:0"},"nodeType":"ForStatement","src":"5391:175:0"},{"id":403,"nodeType":"PlaceholderStatement","src":"5575:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":405,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"name":"_signer","nodeType":"VariableDeclaration","scope":405,"src":"5364:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5363:17:0"},"src":"5336:247:0","visibility":"internal"},{"body":{"id":418,"nodeType":"Block","src":"5710:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":409,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23938,"src":"5736:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$957","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$957","typeString":"contract Enigma"}],"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5728:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5728:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":411,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"5745:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"5745:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5728:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74207570646174656420456e69676d6120636f6e7472616374","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5781:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""},"value":"Not updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""}],"id":407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"5720:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5720:91:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"ExpressionStatement","src":"5720:91:0"},{"id":417,"nodeType":"PlaceholderStatement","src":"5821:1:0"}]},"documentation":"Ensure that the contract\'s context is the updated contract\\n    ","id":419,"name":"isUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"5707:2:0"},"src":"5675:154:0","visibility":"internal"},{"body":{"id":431,"nodeType":"Block","src":"5960:121:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":422,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"5978:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5978:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":424,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"5992:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"5992:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5978:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6028:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""},"value":"Not from updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""}],"id":421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[23887,23888],"referencedDeclaration":23888,"src":"5970:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5970:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"5970:93:0"},{"id":430,"nodeType":"PlaceholderStatement","src":"6073:1:0"}]},"documentation":"Ensure the sender of the recent call is the updated contract\\n    ","id":432,"name":"fromUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":420,"nodeType":"ParameterList","parameters":[],"src":"5957:2:0"},"src":"5923:158:0","visibility":"internal"},{"body":{"id":455,"nodeType":"Block","src":"6730:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":449,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"6765:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":450,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"6772:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":451,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"6781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":452,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"6790:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":446,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"6740:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":9625,"src":"6740:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6740:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":454,"nodeType":"ExpressionStatement","src":"6740:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":456,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":441,"modifierName":{"argumentTypes":null,"id":440,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"6670:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6670:23:0"},{"arguments":[{"argumentTypes":null,"id":443,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"6717:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":444,"modifierName":{"argumentTypes":null,"id":442,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"6698:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6698:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"name":"_signer","nodeType":"VariableDeclaration","scope":456,"src":"6591:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":433,"name":"address","nodeType":"ElementaryTypeName","src":"6591:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":436,"name":"_report","nodeType":"VariableDeclaration","scope":456,"src":"6608:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":435,"name":"bytes","nodeType":"ElementaryTypeName","src":"6608:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":438,"name":"_signature","nodeType":"VariableDeclaration","scope":456,"src":"6630:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":437,"name":"bytes","nodeType":"ElementaryTypeName","src":"6630:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6590:64:0"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"6730:0:0"},"scope":957,"src":"6573:235:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":476,"nodeType":"Block","src":"7178:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":471,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7212:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":472,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7219:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":473,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"7231:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":468,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"7188:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":9841,"src":"7188:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7188:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"7188:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":477,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":463,"modifierName":{"argumentTypes":null,"id":462,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7117:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"7117:23:0"},{"arguments":[{"argumentTypes":null,"id":465,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7162:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":466,"modifierName":{"argumentTypes":null,"id":464,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"7145:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7145:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"name":"_custodian","nodeType":"VariableDeclaration","scope":477,"src":"7068:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"7068:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":460,"name":"_amount","nodeType":"VariableDeclaration","scope":477,"src":"7088:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":459,"name":"uint","nodeType":"ElementaryTypeName","src":"7088:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7067:34:0"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[],"src":"7178:0:0"},"scope":957,"src":"7051:195:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":493,"nodeType":"Block","src":"7519:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":489,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7554:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":490,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"7561:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":486,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"7529:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"7529:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7529:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":492,"nodeType":"ExpressionStatement","src":"7529:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":494,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":482,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"7503:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7503:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":484,"modifierName":{"argumentTypes":null,"id":481,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"7491:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7491:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"name":"_amount","nodeType":"VariableDeclaration","scope":494,"src":"7462:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint","nodeType":"ElementaryTypeName","src":"7462:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7461:14:0"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"7519:0:0"},"scope":957,"src":"7444:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":507,"nodeType":"Block","src":"7784:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":504,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7816:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":501,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"7794:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":9734,"src":"7794:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7794:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"ExpressionStatement","src":"7794:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":508,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"7772:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7772:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":499,"modifierName":{"argumentTypes":null,"id":496,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"7763:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7763:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"7753:2:0"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"7784:0:0"},"scope":957,"src":"7739:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":521,"nodeType":"Block","src":"7958:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":518,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7991:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":515,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"7968:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":9780,"src":"7968:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7968:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"7968:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":522,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":511,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"7946:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7946:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":513,"modifierName":{"argumentTypes":null,"id":510,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"7931:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7931:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"7921:2:0"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"7958:0:0"},"scope":957,"src":"7906:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":552,"nodeType":"Block","src":"8564:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":545,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"8615:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":546,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"8622:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":547,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"8631:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":548,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"8642:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":549,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"8652:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":542,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"8574:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6520_$","typeString":"type(library TaskImpl)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4586,"src":"8574:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8574:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":551,"nodeType":"ExpressionStatement","src":"8574:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":553,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":533,"modifierName":{"argumentTypes":null,"id":532,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"8474:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8474:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":535,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"8517:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8517:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":537,"modifierName":{"argumentTypes":null,"id":534,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"8502:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8502:26:0"},{"arguments":[{"argumentTypes":null,"id":539,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"8551:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":540,"modifierName":{"argumentTypes":null,"id":538,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"8533:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8533:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"name":"_taskId","nodeType":"VariableDeclaration","scope":553,"src":"8358:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8358:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":526,"name":"_codeHash","nodeType":"VariableDeclaration","scope":553,"src":"8383:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8383:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":528,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":553,"src":"8410:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":527,"name":"uint64","nodeType":"ElementaryTypeName","src":"8410:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":530,"name":"_sig","nodeType":"VariableDeclaration","scope":553,"src":"8435:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":529,"name":"bytes","nodeType":"ElementaryTypeName","src":"8435:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8348:110:0"},"returnParameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"8564:0:0"},"scope":957,"src":"8312:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":590,"nodeType":"Block","src":"9464:153:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":582,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"9508:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":583,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"9515:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":584,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"9525:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":585,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"9559:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},{"argumentTypes":null,"id":586,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"9582:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":587,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"9605:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":579,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"9474:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6520_$","typeString":"type(library TaskImpl)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":5110,"src":"9474:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_uint64_$_t_address_$_t_array$_t_bytes32_$4_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint64,address,bytes32[4] memory,bytes memory,bytes memory)"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9474:136:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":589,"nodeType":"ExpressionStatement","src":"9474:136:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _gasUsed Gas used for task\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _bytes32s [taskId, preCodeHash, codeHash, initStateDeltaHash]\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _sig Worker\'s signature for deployment","id":591,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":568,"modifierName":{"argumentTypes":null,"id":567,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"9369:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9369:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"9412:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9412:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":572,"modifierName":{"argumentTypes":null,"id":569,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"9397:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"9397:26:0"},{"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":574,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"9446:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},"id":576,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9456:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9446:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":577,"modifierName":{"argumentTypes":null,"id":573,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"9428:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"9428:31:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":591,"src":"9174:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":554,"name":"uint64","nodeType":"ElementaryTypeName","src":"9174:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":557,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":591,"src":"9199:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"9199:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":561,"name":"_bytes32s","nodeType":"VariableDeclaration","scope":591,"src":"9249:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4]"},"typeName":{"baseType":{"id":558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9249:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":560,"length":{"argumentTypes":null,"hexValue":"34","id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9257:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"9249:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_storage_ptr","typeString":"bytes32[4]"}},"value":null,"visibility":"internal"},{"constant":false,"id":563,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":591,"src":"9286:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":562,"name":"bytes","nodeType":"ElementaryTypeName","src":"9286:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":565,"name":"_sig","nodeType":"VariableDeclaration","scope":591,"src":"9330:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":564,"name":"bytes","nodeType":"ElementaryTypeName","src":"9330:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"9164:189:0"},"returnParameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"9464:0:0"},"scope":957,"src":"9135:482:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":601,"nodeType":"Block","src":"9819:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":598,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"9880:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":596,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"9836:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$4117_$","typeString":"type(library SecretContractImpl)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":4049,"src":"9836:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2731_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9836:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":595,"id":600,"nodeType":"Return","src":"9829:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":602,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[],"src":"9773:2:0"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"name":"","nodeType":"VariableDeclaration","scope":602,"src":"9809:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint","nodeType":"ElementaryTypeName","src":"9809:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9808:6:0"},"scope":957,"src":"9744:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":619,"nodeType":"Block","src":"10222:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":614,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"10289:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":615,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"10296:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":616,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"10304:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":612,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"10239:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$4117_$","typeString":"type(library SecretContractImpl)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":4116,"src":"10239:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2731_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10239:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":611,"id":618,"nodeType":"Return","src":"10232:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":620,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"name":"_start","nodeType":"VariableDeclaration","scope":620,"src":"10142:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint","nodeType":"ElementaryTypeName","src":"10142:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":606,"name":"_stop","nodeType":"VariableDeclaration","scope":620,"src":"10155:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint","nodeType":"ElementaryTypeName","src":"10155:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10141:25:0"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"name":"","nodeType":"VariableDeclaration","scope":620,"src":"10200:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10200:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":609,"length":null,"nodeType":"ArrayTypeName","src":"10200:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"10199:18:0"},"scope":957,"src":"10106:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":648,"nodeType":"Block","src":"11400:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":640,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"11450:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":641,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"11457:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":642,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"11470:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":643,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"11481:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":644,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"11489:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":645,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"11508:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":637,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"11410:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6520_$","typeString":"type(library TaskImpl)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4410,"src":"11410:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11410:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"ExpressionStatement","src":"11410:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":649,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":633,"modifierName":{"argumentTypes":null,"id":632,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23270,"src":"11358:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11358:9:0"},{"arguments":null,"id":635,"modifierName":{"argumentTypes":null,"id":634,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"11372:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11372:23:0"}],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":649,"src":"11215:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11215:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":624,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":649,"src":"11244:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":623,"name":"uint64","nodeType":"ElementaryTypeName","src":"11244:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":626,"name":"_gasPx","nodeType":"VariableDeclaration","scope":649,"src":"11270:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":625,"name":"uint64","nodeType":"ElementaryTypeName","src":"11270:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":628,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":649,"src":"11293:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint","nodeType":"ElementaryTypeName","src":"11293:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":630,"name":"_nonce","nodeType":"VariableDeclaration","scope":649,"src":"11325:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint","nodeType":"ElementaryTypeName","src":"11325:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11205:137:0"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"11400:0:0"},"scope":957,"src":"11170:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":672,"nodeType":"Block","src":"12282:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":665,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"12322:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":666,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"12329:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":667,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"12342:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":668,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"12353:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":669,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"12361:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":662,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"12292:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6520_$","typeString":"type(library TaskImpl)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":5353,"src":"12292:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12292:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"12292:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":673,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":660,"modifierName":{"argumentTypes":null,"id":659,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"12254:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12254:23:0"}],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":673,"src":"12132:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12132:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":653,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":673,"src":"12161:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":652,"name":"uint64","nodeType":"ElementaryTypeName","src":"12161:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":655,"name":"_gasPx","nodeType":"VariableDeclaration","scope":673,"src":"12187:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":654,"name":"uint64","nodeType":"ElementaryTypeName","src":"12187:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":657,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":673,"src":"12210:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint","nodeType":"ElementaryTypeName","src":"12210:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12122:116:0"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[],"src":"12282:0:0"},"scope":957,"src":"12097:289:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":710,"nodeType":"Block","src":"13204:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":702,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"13241:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":703,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"13248:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":704,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"13258:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":705,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"13304:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},{"argumentTypes":null,"id":706,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"13315:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":707,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"13338:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":699,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"13214:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6520_$","typeString":"type(library TaskImpl)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":6156,"src":"13214:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_uint64_$_t_address_$_t_array$_t_bytes32_$4_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint64,address,bytes32[4] memory,bytes memory,bytes memory)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13214:129:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"ExpressionStatement","src":"13214:129:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _gasUsed Gas used for task computation\\n@param _optionalEthereumContractAddress Output state hash\\n@param _bytes32s [scAddr, taskId, stateDeltaHash, outputHash]\\n@param _optionalEthereumData Output state hash\\n@param _sig Worker\'s signature","id":711,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":688,"modifierName":{"argumentTypes":null,"id":687,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"13110:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13110:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":690,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"13153:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13153:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":692,"modifierName":{"argumentTypes":null,"id":689,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"13138:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13138:26:0"},{"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":694,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"13186:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},"id":696,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13196:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13186:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":697,"modifierName":{"argumentTypes":null,"id":693,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"13169:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13169:30:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":711,"src":"12915:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":674,"name":"uint64","nodeType":"ElementaryTypeName","src":"12915:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":677,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":711,"src":"12940:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"12940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":681,"name":"_bytes32s","nodeType":"VariableDeclaration","scope":711,"src":"12990:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4]"},"typeName":{"baseType":{"id":678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12990:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":680,"length":{"argumentTypes":null,"hexValue":"34","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12998:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"12990:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_storage_ptr","typeString":"bytes32[4]"}},"value":null,"visibility":"internal"},{"constant":false,"id":683,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":711,"src":"13027:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":682,"name":"bytes","nodeType":"ElementaryTypeName","src":"13027:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":685,"name":"_sig","nodeType":"VariableDeclaration","scope":711,"src":"13071:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":684,"name":"bytes","nodeType":"ElementaryTypeName","src":"13071:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"12905:189:0"},"returnParameters":{"id":698,"nodeType":"ParameterList","parameters":[],"src":"13204:0:0"},"scope":957,"src":"12883:467:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":744,"nodeType":"Block","src":"14009:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":736,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"14050:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":737,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"14057:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":738,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"14066:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":739,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"14075:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":740,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"14088:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":741,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"14098:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":733,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"14019:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6520_$","typeString":"type(library TaskImpl)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5551,"src":"14019:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14019:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"ExpressionStatement","src":"14019:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":745,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":724,"modifierName":{"argumentTypes":null,"id":723,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"13920:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13920:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":726,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"13963:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13963:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":728,"modifierName":{"argumentTypes":null,"id":725,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"13948:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13948:26:0"},{"arguments":[{"argumentTypes":null,"id":730,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"13996:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":731,"modifierName":{"argumentTypes":null,"id":729,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"13979:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13979:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"name":"_scAddr","nodeType":"VariableDeclaration","scope":745,"src":"13777:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13777:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":715,"name":"_taskId","nodeType":"VariableDeclaration","scope":745,"src":"13802:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13802:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":717,"name":"_outputHash","nodeType":"VariableDeclaration","scope":745,"src":"13827:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13827:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":719,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":745,"src":"13856:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":718,"name":"uint64","nodeType":"ElementaryTypeName","src":"13856:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":721,"name":"_sig","nodeType":"VariableDeclaration","scope":745,"src":"13881:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":720,"name":"bytes","nodeType":"ElementaryTypeName","src":"13881:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13767:137:0"},"returnParameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"14009:0:0"},"scope":957,"src":"13741:369:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":760,"nodeType":"Block","src":"14361:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":756,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"14402:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":757,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"14409:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":753,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"14371:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6520_$","typeString":"type(library TaskImpl)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6519,"src":"14371:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14371:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"ExpressionStatement","src":"14371:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":761,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":750,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"14348:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":751,"modifierName":{"argumentTypes":null,"id":749,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"14336:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14336:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"name":"_taskId","nodeType":"VariableDeclaration","scope":761,"src":"14304:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14304:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14303:17:0"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"14361:0:0"},"scope":957,"src":"14277:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":785,"nodeType":"Block","src":"14912:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":779,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"14957:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":780,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"14964:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":781,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"14978:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":782,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"14985:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":776,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"14922:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3477_$","typeString":"type(library PrincipalImpl)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3306,"src":"14922:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14922:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":784,"nodeType":"ExpressionStatement","src":"14922:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":786,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":770,"modifierName":{"argumentTypes":null,"id":769,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"14851:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14851:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23884,"src":"14896:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14896:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":774,"modifierName":{"argumentTypes":null,"id":771,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"14879:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14879:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":786,"src":"14786:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint","nodeType":"ElementaryTypeName","src":"14786:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":765,"name":"_seed","nodeType":"VariableDeclaration","scope":786,"src":"14805:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":764,"name":"uint","nodeType":"ElementaryTypeName","src":"14805:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":767,"name":"_sig","nodeType":"VariableDeclaration","scope":786,"src":"14817:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":766,"name":"bytes","nodeType":"ElementaryTypeName","src":"14817:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14785:50:0"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"14912:0:0"},"scope":957,"src":"14760:237:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":803,"nodeType":"Block","src":"15233:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":799,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"15285:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":800,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"15292:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":797,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"15250:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3477_$","typeString":"type(library PrincipalImpl)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3476,"src":"15250:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2731_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15250:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":796,"id":802,"nodeType":"Return","src":"15243:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":804,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":804,"src":"15144:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint","nodeType":"ElementaryTypeName","src":"15144:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15143:19:0"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"name":"","nodeType":"VariableDeclaration","scope":804,"src":"15196:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"15196:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":791,"length":null,"nodeType":"ArrayTypeName","src":"15196:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":795,"name":"","nodeType":"VariableDeclaration","scope":804,"src":"15214:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":793,"name":"uint","nodeType":"ElementaryTypeName","src":"15214:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":794,"length":null,"nodeType":"ArrayTypeName","src":"15214:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15195:33:0"},"scope":957,"src":"15118:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":817,"nodeType":"Block","src":"15574:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":813,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"15627:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":814,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"15634:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":811,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"15591:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":10014,"src":"15591:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2731_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15591:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":810,"id":816,"nodeType":"Return","src":"15584:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":818,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":818,"src":"15516:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint","nodeType":"ElementaryTypeName","src":"15516:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15515:19:0"},"returnParameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"name":"","nodeType":"VariableDeclaration","scope":818,"src":"15568:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint","nodeType":"ElementaryTypeName","src":"15568:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15567:6:0"},"scope":957,"src":"15487:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":839,"nodeType":"Block","src":"16060:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":835,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"16109:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":836,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"16116:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":833,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"16077:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":10051,"src":"16077:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2731_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16077:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":832,"id":838,"nodeType":"Return","src":"16070:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":840,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":840,"src":"15963:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint","nodeType":"ElementaryTypeName","src":"15963:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15962:19:0"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"name":"","nodeType":"VariableDeclaration","scope":840,"src":"16015:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint","nodeType":"ElementaryTypeName","src":"16015:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":825,"name":"","nodeType":"VariableDeclaration","scope":840,"src":"16021:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint","nodeType":"ElementaryTypeName","src":"16021:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":828,"name":"","nodeType":"VariableDeclaration","scope":840,"src":"16027:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"16027:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":827,"length":null,"nodeType":"ArrayTypeName","src":"16027:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":831,"name":"","nodeType":"VariableDeclaration","scope":840,"src":"16045:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":829,"name":"uint","nodeType":"ElementaryTypeName","src":"16045:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":830,"length":null,"nodeType":"ArrayTypeName","src":"16045:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16014:45:0"},"scope":957,"src":"15938:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":857,"nodeType":"Block","src":"16588:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":852,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"16636:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":853,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"16643:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":854,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"16657:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":850,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"16605:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":10315,"src":"16605:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2731_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16605:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":849,"id":856,"nodeType":"Return","src":"16598:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":858,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":858,"src":"16497:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint","nodeType":"ElementaryTypeName","src":"16497:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":844,"name":"_scAddr","nodeType":"VariableDeclaration","scope":858,"src":"16516:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16516:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16496:36:0"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"name":"","nodeType":"VariableDeclaration","scope":858,"src":"16566:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"16566:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":847,"length":null,"nodeType":"ArrayTypeName","src":"16566:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16565:18:0"},"scope":957,"src":"16473:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":876,"nodeType":"Block","src":"16942:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":872,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"16985:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":873,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"16992:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":870,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"16959:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":9662,"src":"16959:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2731_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16959:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":869,"id":875,"nodeType":"Return","src":"16952:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":877,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":863,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"16890:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":864,"modifierName":{"argumentTypes":null,"id":862,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"16873:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"16873:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"name":"_custodian","nodeType":"VariableDeclaration","scope":877,"src":"16829:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"16829:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16828:20:0"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"name":"","nodeType":"VariableDeclaration","scope":877,"src":"16915:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"16915:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":868,"name":"","nodeType":"VariableDeclaration","scope":877,"src":"16924:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":867,"name":"bytes","nodeType":"ElementaryTypeName","src":"16924:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"16914:23:0"},"scope":957,"src":"16810:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":892,"nodeType":"Block","src":"17325:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":888,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"17371:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":889,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"17378:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":886,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10368,"src":"17342:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10368_$","typeString":"type(library WorkersImpl)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":9688,"src":"17342:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17342:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":885,"id":891,"nodeType":"Return","src":"17335:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":893,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"name":"_data","nodeType":"VariableDeclaration","scope":893,"src":"17237:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":878,"name":"bytes","nodeType":"ElementaryTypeName","src":"17237:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":881,"name":"_signature","nodeType":"VariableDeclaration","scope":893,"src":"17257:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":880,"name":"bytes","nodeType":"ElementaryTypeName","src":"17257:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17236:45:0"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"name":"","nodeType":"VariableDeclaration","scope":893,"src":"17315:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint","nodeType":"ElementaryTypeName","src":"17315:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17314:6:0"},"scope":957,"src":"17215:181:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":908,"nodeType":"Block","src":"17664:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":904,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"17719:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":905,"name":"_updatedEnigmaContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"17726:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":902,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9103,"src":"17681:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$9103_$","typeString":"type(library UpgradeImpl)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeEnigmaContractImpl","nodeType":"MemberAccess","referencedDeclaration":9024,"src":"17681:37:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17681:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":901,"id":907,"nodeType":"Return","src":"17674:82:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address","id":909,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":898,"modifierName":{"argumentTypes":null,"id":897,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23270,"src":"17622:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17622:9:0"},{"arguments":null,"id":900,"modifierName":{"argumentTypes":null,"id":899,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"17636:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17636:23:0"}],"name":"upgradeEnigmaContract","nodeType":"FunctionDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"name":"_updatedEnigmaContractAddress","nodeType":"VariableDeclaration","scope":909,"src":"17568:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"17568:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17567:39:0"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[],"src":"17664:0:0"},"scope":957,"src":"17537:226:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":927,"nodeType":"Block","src":"18102:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":922,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"18166:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":923,"name":"_workerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"18173:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":924,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"18189:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":920,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9103,"src":"18119:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$9103_$","typeString":"type(library UpgradeImpl)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferWorkerStakePostUpgradeImpl","nodeType":"MemberAccess","referencedDeclaration":9102,"src":"18119:46:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2731_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory) returns (uint256)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18119:75:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":919,"id":926,"nodeType":"Return","src":"18112:82:0"}]},"documentation":"Transfer worker stake from old contract to new contract upon registration\\n@param _workerAddress Newly-registered worker address\\n@param _sig Signature","id":928,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":916,"modifierName":{"argumentTypes":null,"id":915,"name":"fromUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"18050:25:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18050:25:0"}],"name":"transferWorkerStakePostUpgrade","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"name":"_workerAddress","nodeType":"VariableDeclaration","scope":928,"src":"17992:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"17992:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":913,"name":"_sig","nodeType":"VariableDeclaration","scope":928,"src":"18016:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":912,"name":"bytes","nodeType":"ElementaryTypeName","src":"18016:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17991:43:0"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"name":"","nodeType":"VariableDeclaration","scope":928,"src":"18089:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"18089:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18088:9:0"},"scope":957,"src":"17952:249:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":941,"nodeType":"Block","src":"18347:43:0","statements":[{"expression":{"argumentTypes":null,"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":935,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"18357:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"mrSigner","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"18357:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":938,"name":"_mrSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"18374:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"18357:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":940,"nodeType":"ExpressionStatement","src":"18357:26:0"}]},"documentation":"Set mrSigner\\n@param _mrSigner mrSigner","id":942,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":933,"modifierName":{"argumentTypes":null,"id":932,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23270,"src":"18333:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18333:9:0"}],"name":"setMrSigner","nodeType":"FunctionDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"name":"_mrSigner","nodeType":"VariableDeclaration","scope":942,"src":"18294:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":929,"name":"bytes","nodeType":"ElementaryTypeName","src":"18294:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18293:24:0"},"returnParameters":{"id":934,"nodeType":"ParameterList","parameters":[],"src":"18347:0:0"},"scope":957,"src":"18273:117:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":955,"nodeType":"Block","src":"18528:39:0","statements":[{"expression":{"argumentTypes":null,"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":949,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"18538:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2731_storage","typeString":"struct EnigmaState.State storage ref"}},"id":951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isvSvn","nodeType":"MemberAccess","referencedDeclaration":2730,"src":"18538:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":952,"name":"_isvSvn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"18553:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"18538:22:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":954,"nodeType":"ExpressionStatement","src":"18538:22:0"}]},"documentation":"Set isvSvn\\n@param _isvSvn mrSigner","id":956,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":947,"modifierName":{"argumentTypes":null,"id":946,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23270,"src":"18514:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18514:9:0"}],"name":"setIsvSvn","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"name":"_isvSvn","nodeType":"VariableDeclaration","scope":956,"src":"18477:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":943,"name":"bytes","nodeType":"ElementaryTypeName","src":"18477:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18476:22:0"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[],"src":"18528:0:0"},"scope":957,"src":"18458:109:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":958,"src":"886:17683:0"}],"src":"0:18570:0"},"compiler":{"name":"solc","version":"0.5.12+commit.7709ece9.Emscripten.clang"},"networks":{"4447":{"events":{"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55":{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address","internalType":"address"},{"indexed":false,"name":"signer","type":"address","internalType":"address"}],"name":"Registered","type":"event","signature":"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55"},"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb":{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event","signature":"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb"},"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd":{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"workers","type":"address[]","internalType":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]","internalType":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256","internalType":"uint256"}],"name":"WorkersParameterized","type":"event","signature":"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd"},"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7"},"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7"},"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142"},"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event","signature":"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f"},"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454"},"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f"},"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32","internalType":"bytes32"}],"name":"TaskFeeReturned","type":"event","signature":"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f"},"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5":{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address","internalType":"address"},{"indexed":false,"name":"value","type":"uint256","internalType":"uint256"}],"name":"DepositSuccessful","type":"event","signature":"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5"},"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9":{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address","internalType":"address"},{"indexed":false,"name":"value","type":"uint256","internalType":"uint256"}],"name":"WithdrawSuccessful","type":"event","signature":"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9"},"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158":{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event","signature":"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158"},"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32","internalType":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32","internalType":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64","internalType":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64","internalType":"uint64"},{"indexed":false,"name":"sender","type":"address","internalType":"address"},{"indexed":false,"name":"blockNumber","type":"uint256","internalType":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d"},"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9"},"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address","internalType":"address"},{"indexed":true,"name":"newOwner","type":"address","internalType":"address"}],"name":"OwnershipTransferred","type":"event","signature":"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"},"0x81ec9994a9c987e62ebfddb9120cd523132fd17a7d2487069ed6f5fb98f4044b":{"anonymous":false,"inputs":[{"indexed":false,"name":"gasUsed","type":"uint64","internalType":"uint64"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address","internalType":"address"},{"indexed":false,"name":"bytes32s","type":"bytes32[4]","internalType":"bytes32[4]"},{"indexed":false,"name":"deltaHashIndex","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"gasUsedTotal","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes","internalType":"bytes"},{"indexed":false,"name":"workerAddress","type":"address","internalType":"address"},{"indexed":false,"name":"sig","type":"bytes","internalType":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0x81ec9994a9c987e62ebfddb9120cd523132fd17a7d2487069ed6f5fb98f4044b"},"0x46216b692e6c99daacda2844a09844fd9b83f5834ff1f4ff211b6130c5f288f0":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32","internalType":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32","internalType":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"workerAddress","type":"address","internalType":"address"},{"indexed":false,"name":"sig","type":"bytes","internalType":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0x46216b692e6c99daacda2844a09844fd9b83f5834ff1f4ff211b6130c5f288f0"},"0x5dee55d018f978a2726933d05dd5004ada75a6f0d6cb984427803a2a1165cbfb":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32","internalType":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32","internalType":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"gasUsedTotal","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"workerAddress","type":"address","internalType":"address"},{"indexed":false,"name":"sig","type":"bytes","internalType":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0x5dee55d018f978a2726933d05dd5004ada75a6f0d6cb984427803a2a1165cbfb"},"0xe48e7d798803aa26679cdc4e9bc6f7af8ac2230a062656300f5b90b8152eb5b3":{"anonymous":false,"inputs":[{"indexed":false,"name":"gasUsed","type":"uint64","internalType":"uint64"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address","internalType":"address"},{"indexed":false,"name":"bytes32s","type":"bytes32[4]","internalType":"bytes32[4]"},{"indexed":false,"name":"gasUsedTotal","type":"uint256","internalType":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes","internalType":"bytes"},{"indexed":false,"name":"workerAddress","type":"address","internalType":"address"}],"name":"SecretContractDeployed","type":"event","signature":"0xe48e7d798803aa26679cdc4e9bc6f7af8ac2230a062656300f5b90b8152eb5b3"},"0x0a581ae4192c44a0074ccc9c655d264ea6a838e99ca8dfc8ca439aee62cb5183":{"anonymous":false,"inputs":[{"indexed":false,"name":"workerAddress","type":"address","internalType":"address"}],"name":"LoggedIn","type":"event","signature":"0x0a581ae4192c44a0074ccc9c655d264ea6a838e99ca8dfc8ca439aee62cb5183"},"0x8d11ef6404d9eeb0a13d346ad9b49adf23be5a095f5efb8741c3eec74e43ee9c":{"anonymous":false,"inputs":[{"indexed":false,"name":"workerAddress","type":"address","internalType":"address"}],"name":"LoggedOut","type":"event","signature":"0x8d11ef6404d9eeb0a13d346ad9b49adf23be5a095f5efb8741c3eec74e43ee9c"},"0xa653477f8f6ae1d2c8f9464991988fc79f13ca61dcd7a95b7ca6134f0d32451d":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"custodian","type":"address"},{"indexed":false,"internalType":"address","name":"signer","type":"address"},{"indexed":false,"internalType":"bytes","name":"isvProdid","type":"bytes"}],"name":"Registered","type":"event","signature":"0xa653477f8f6ae1d2c8f9464991988fc79f13ca61dcd7a95b7ca6134f0d32451d"},"0x69db4b33e9b6334797ad104a21f83359c48e6707f18ad63f8ed8819824a9f1b6":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"custodian","type":"address"},{"indexed":false,"internalType":"address","name":"signer","type":"address"},{"indexed":false,"internalType":"bytes","name":"isvEnclaveQuoteStatus","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"isvProdid","type":"bytes"},{"indexed":false,"internalType":"bool","name":"data","type":"bool"}],"name":"Registered","type":"event","signature":"0x69db4b33e9b6334797ad104a21f83359c48e6707f18ad63f8ed8819824a9f1b6"},"0xb159a65bf540387f02e04528dcc6808f9f83a5ce032a33efc384d121852a651f":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"custodian","type":"address"},{"indexed":false,"internalType":"address","name":"signer","type":"address"},{"indexed":false,"internalType":"bytes","name":"isvProdid","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"isvEnclaveQuoteStatus","type":"bytes"}],"name":"Registered","type":"event","signature":"0xb159a65bf540387f02e04528dcc6808f9f83a5ce032a33efc384d121852a651f"}},"links":{"WorkersImpl":"0x7200B43892c05231Fb5841dEf2782ceA5bbf4E14","PrincipalImpl":"0x4F475aD35D69b274e4EC58D76eA4Ce7081336049","TaskImpl":"0x7e294552E729f9987910C9090B5F4155D29139db","SecretContractImpl":"0xAD99276C293B7c491A8070d5E45EB380fC0f8976","UpgradeImpl":"0xf32E0eB1795746757232e240FC8b7EE23E678fb4"},"address":"0x6F6BfF298e182882091B8D0FF40208d09aE96B62","transactionHash":"0x7e31d3d8a6b14d94d862cab003f895507998e99a918f8f0f3c599311e20ed5c4"},"5777":{"events":{"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55":{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event","signature":"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55"},"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb":{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event","signature":"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb"},"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd":{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event","signature":"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd"},"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7"},"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7"},"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142"},"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event","signature":"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f"},"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454"},"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f"},"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event","signature":"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f"},"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5":{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event","signature":"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5"},"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9":{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event","signature":"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9"},"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158":{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event","signature":"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158"}},"links":{"WorkersImpl":"0x3cB7b205A61CC7c938bfA20880B6b2f3e46cf5C7","PrincipalImpl":"0x7Ca96BaFD53E6322E37e48D9765c83fF23Da035d","TaskImpl":"0x42f4ee53C5cd7a6850b1a0d189423B5f38fF9f67","SecretContractImpl":"0x54A4F5d9912EF6e017c0d3802C69aEF3D06D9bFb"},"address":"0x744A739E961f45A72F0004e6F9d24611635ea0E2","transactionHash":"0x6850fe8afcddb6756fe59b33747a258dbe5f3a3326181c79238cee66fdc0a848"}},"schemaVersion":"3.0.19","updatedAt":"2019-12-14T13:26:34.044Z","networkType":"ethereum","devdoc":{"methods":{"commitReceipt(uint64,address,bytes32[4],bytes,bytes)":{"params":{"_bytes32s":"[scAddr, taskId, stateDeltaHash, outputHash]","_gasUsed":"Gas used for task computation","_optionalEthereumContractAddress":"Output state hash","_optionalEthereumData":"Output state hash","_sig":"Worker\'s signature"}},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_taskId":"Unique taskId"}},"countSecretContracts()":{"return":"Number of deployed secret contracts"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash","_nonce":"Locally-computed nonce value for this deployment"}},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"deploySecretContract(uint64,address,bytes32[4],bytes,bytes)":{"params":{"_bytes32s":"[taskId, preCodeHash, codeHash, initStateDeltaHash]","_gasUsed":"Gas used for task","_optionalEthereumContractAddress":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumData":"Initial state delta hash as a result of the contract\'s constructor","_sig":"Worker\'s signature for deployment"}},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deposit(address,uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit","_custodian":"The worker\'s ETH address"}},"getActiveWorkers(uint256)":{"params":{"_blockNumber":"Block number"}},"getAllSecretContractAddresses()":{"return":"Array of secret contract addresses"},"getDebug()":{"return":"debug"},"getEpochSize()":{"return":"Epoch size"},"getFirstBlockNumber(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Block number"},"getIsvSvn()":{"return":"isvSvn"},"getMrSigner()":{"return":"mrSigner"},"getReport(address)":{"params":{"_custodian":"The worker\'s custodian address"}},"getSecretContract(bytes32)":{"params":{"_scAddr":"Secret contract address"},"return":"SecretContract struct"},"getSecretContractAddresses(uint256,uint256)":{"params":{"_start":"Start of range","_stop":"End of range"},"return":"Subset of deployed secret contract addresses"},"getSigningAddress()":{"return":"Signing address"},"getTaskRecord(bytes32)":{"params":{"_taskId":"Unique identifier for a given task"},"return":"TaskRecord struct"},"getTaskTimeoutSize()":{"return":"task timeout"},"getUpdatedEnigmaContractAddress()":{"return":"Updated Enigma contract address"},"getUserTaskDeployments(address)":{"params":{"_sender":"Task sender\'s ethereum address"},"return":"Current number for task deployments for user"},"getWorker(address)":{"params":{"_worker":"Worker\'s ethereum address"},"return":"Worker struct"},"getWorkerFromSigningAddress(address)":{"params":{"_signer":"Worker\'s signing address"},"return":"Ethereum addressWorker struct"},"getWorkerGroup(uint256,bytes32)":{"params":{"_blockNumber":"Block number the task record was mined","_scAddr":"Secret contract address"},"return":"Selected workers\' addresses"},"getWorkerParams(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes"},"getWorkersParams()":{"return":"Array of WorkersParams structs"},"isOwner()":{"details":"Returns true if the caller is the current owner."},"owner()":{"details":"Returns the address of the current owner."},"register(address,bytes,bytes)":{"params":{"_report":"The RLP encoded report returned by the IAS","_signature":"Signature","_signer":"The signer address, derived from the enclave public key"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"returnFeesForTask(bytes32)":{"params":{"_taskId":"Unique taskId"}},"setIsvSvn(bytes)":{"params":{"_isvSvn":"mrSigner"}},"setMrSigner(bytes)":{"params":{"_mrSigner":"mrSigner"}},"setWorkersParams(uint256,uint256,bytes)":{"params":{"_blockNumber":"Block number principal node is attempting to set worker params","_seed":"The random integer generated by the enclave","_sig":"Principal node\'s signature"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferWorkerStakePostUpgrade(address,bytes)":{"params":{"_sig":"Signature","_workerAddress":"Newly-registered worker address"}},"upgradeEnigmaContract(address)":{"params":{"_updatedEnigmaContractAddress":"Updated newly-deployed Enigma contract address"}},"verifyReport(bytes,bytes)":{"params":{"_data":"The report itself","_signature":"The signature of the report"}},"withdraw(uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit"}}}},"userdoc":{"methods":{"commitReceipt(uint64,address,bytes32[4],bytes,bytes)":{"notice":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee."},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"notice":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure."},"countSecretContracts()":{"notice":"Check if secret contract has been deployed"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"notice":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid."},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"notice":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"deploySecretContract(uint64,address,bytes32[4],bytes,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deposit(address,uint256)":{"notice":"Deposits ENG stake into contract from worker. Worker must be registered to do so."},"getActiveWorkers(uint256)":{"notice":"Get active workers before a certain block number"},"getAllSecretContractAddresses()":{"notice":"Get all secret contract addresses"},"getDebug()":{"notice":"Get debug"},"getEpochSize()":{"notice":"Get the epoch block size"},"getFirstBlockNumber(uint256)":{"notice":"Get the first block number of an epoch that a given block number belongs to"},"getIsvSvn()":{"notice":"Get isvSvn"},"getMrSigner()":{"notice":"Get mrSigner"},"getReport(address)":{"notice":"The RLP encoded report returned by the IAS server"},"getSecretContract(bytes32)":{"notice":"Get a SecretContract struct given a particular secret contract address"},"getSecretContractAddresses(uint256,uint256)":{"notice":"Get deployed secret contract addresses within a range"},"getSigningAddress()":{"notice":"Get signing address of calling worker"},"getTaskRecord(bytes32)":{"notice":"Get a TaskRecord struct given a particular task\'s ID"},"getTaskTimeoutSize()":{"notice":"Get the task timeout size"},"getUpdatedEnigmaContractAddress()":{"notice":"Get updated Enigma contract address"},"getUserTaskDeployments(address)":{"notice":"Get the current number/index (used as unique nonce value) of task deployments for a given user user"},"getWorker(address)":{"notice":"Get Worker struct from a given worker\'s ethereum address"},"getWorkerFromSigningAddress(address)":{"notice":"Get Worker struct from a given worker\'s signing address"},"getWorkerGroup(uint256,bytes32)":{"notice":"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address."},"getWorkerParams(uint256)":{"notice":"Get worker params for an epoch given a particular block number"},"getWorkersParams()":{"notice":"Get epoch-based history of worker params information"},"login()":{"notice":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process."},"logout()":{"notice":"Logout worker. Worker must be logged in to do so."},"register(address,bytes,bytes)":{"notice":"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks."},"returnFeesForTask(bytes32)":{"notice":"Return the task fee to the task creator when too many blocks have elapsed without task resolution."},"setIsvSvn(bytes)":{"notice":"Set isvSvn"},"setMrSigner(bytes)":{"notice":"Set mrSigner"},"setWorkersParams(uint256,uint256,bytes)":{"notice":"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node"},"transferWorkerStakePostUpgrade(address,bytes)":{"notice":"Transfer worker stake from old contract to new contract upon registration"},"upgradeEnigmaContract(address)":{"notice":"Upgrade Enigma Contract"},"verifyReport(bytes,bytes)":{"notice":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate."},"withdraw(uint256)":{"notice":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so."}}}}')},function(e){e.exports=JSON.parse('{"contractName":"EnigmaToken","abi":[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[],"name":"INITIAL_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.12+commit.7709ece9\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"INITIAL_SUPPLY\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_from\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"details\\":\\"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. \\",\\"methods\\":{\\"approve(address,uint256)\\":{\\"details\\":\\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\",\\"params\\":{\\"_spender\\":\\"The address which will spend the funds.\\",\\"_value\\":\\"The amount of tokens to be spent.\\"}},\\"balanceOf(address)\\":{\\"details\\":\\"See {IERC20-balanceOf}.\\"},\\"constructor\\":{\\"details\\":\\"EnigmaToken Constructor Runs only on initial contract creation.\\"},\\"decimals()\\":{\\"details\\":\\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\\"},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\\"},\\"name()\\":{\\"details\\":\\"Returns the name of the token.\\"},\\"symbol()\\":{\\"details\\":\\"Returns the symbol of the token, usually a shorter version of the name.\\"},\\"totalSupply()\\":{\\"details\\":\\"See {IERC20-totalSupply}.\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"Transfer token for a specified address when not paused\\",\\"params\\":{\\"_to\\":\\"The address to transfer to.\\",\\"_value\\":\\"The amount to be transferred.\\"}},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"Transfer tokens from one address to another when not paused\\",\\"params\\":{\\"_from\\":\\"address The address which you want to send tokens from\\",\\"_to\\":\\"address The address which you want to transfer to\\",\\"_value\\":\\"uint256 the amount of tokens to be transferred\\"}}},\\"title\\":\\"Enigma Token\\"},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol\\":\\"EnigmaToken\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol\\":{\\"keccak256\\":\\"0x02ab7fd2fdc4816f2ac021dbc37bd6c0c784a5b18654bebcc59e0f8498768b46\\",\\"urls\\":[\\"bzz-raw://192116264305047f6e30d3cea3695ddfe502d344fd9073aa5f93c737de3f0f98\\",\\"dweb:/ipfs/QmTf56fb2oxN4oKW7NgBDkBgG6e15bHtK1Kjy1bFseHM8V\\"]},\\"openzeppelin-solidity/contracts/GSN/Context.sol\\":{\\"keccak256\\":\\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\\",\\"urls\\":[\\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\\",\\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\\",\\"urls\\":[\\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\\",\\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\":{\\"keccak256\\":\\"0x65a4078c03875c25413a068ce9cfdd7e68a90f8786612d1189c89341e6e3b802\\",\\"urls\\":[\\"bzz-raw://45c0d95495b944fbb1aa09d900b0ab530903a432125ab8fddfa05064a7988991\\",\\"dweb:/ipfs/Qma2VeknkKA1THeubGzshWFk44BktXkXP1UKp9Un2uDSsu\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\":{\\"keccak256\\":\\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\\",\\"urls\\":[\\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\\",\\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\":{\\"keccak256\\":\\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\\",\\"urls\\":[\\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\\",\\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b506040518060400160405280600681526020017f456e69676d6100000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f454e47000000000000000000000000000000000000000000000000000000000081525060088260039080519060200190610095929190610266565b5081516100a9906004906020850190610266565b506005805460ff191660ff92909216919091179055506100d290503366354a6ba7a180006100d7565b610301565b6001600160a01b03821661014c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610165816002546101eb60201b6105a81790919060201c565b6002556001600160a01b038216600090815260208181526040909120546101959183906105a86101eb821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008282018381101561025f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102a757805160ff19168380011785556102d4565b828001600101855582156102d4579182015b828111156102d45782518255916020019190600101906102b9565b506102e09291506102e4565b5090565b6102fe91905b808211156102e057600081556001016102ea565b90565b610a56806103106000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610406565b6100c1610421565b6101626004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610482565b6101626004803603604081101561028857600080fd5b506001600160a01b0381351690602001356104f0565b61017e600480360360408110156102b457600080fd5b506001600160a01b03813581169160200135166104fc565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e8383610508565b9392505050565b60025490565b600061038884848461051c565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006103fd6103b16105a4565b846103f885600160006103c26105a4565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6105a816565b610602565b50600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006103fd61048f6105a4565b846103f8856040518060600160405280602581526020016109fd60259139600160006104b96105a4565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6106ee16565b600061036e8383610785565b600061036e8383610799565b60006103fd6105156105a4565b8484610602565b60006105298484846107c4565b61059a846105356105a4565b6103f88560405180606001604052806028815260200161098c602891396001600160a01b038a166000908152600160205260408120906105736105a4565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6106ee16565b5060019392505050565b3390565b60008282018381101561036e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0383166106475760405162461bcd60e51b81526004018080602001828103825260248152602001806109d96024913960400191505060405180910390fd5b6001600160a01b03821661068c5760405162461bcd60e51b81526004018080602001828103825260228152602001806109446022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000818484111561077d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561074257818101518382015260200161072a565b50505050905090810190601f16801561076f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60006103fd6107926105a4565b84846107c4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166108095760405162461bcd60e51b81526004018080602001828103825260258152602001806109b46025913960400191505060405180910390fd5b6001600160a01b03821661084e5760405162461bcd60e51b81526004018080602001828103825260238152602001806109216023913960400191505060405180910390fd5b61089181604051806060016040528060268152602001610966602691396001600160a01b038616600090815260208190526040902054919063ffffffff6106ee16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108c6908263ffffffff6105a816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158203e9d0db10c7d95ae8a0e37a41764952c46d6f754bcdf02f0f0cda42a7a9cd34564736f6c634300050c0032","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610406565b6100c1610421565b6101626004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610482565b6101626004803603604081101561028857600080fd5b506001600160a01b0381351690602001356104f0565b61017e600480360360408110156102b457600080fd5b506001600160a01b03813581169160200135166104fc565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e8383610508565b9392505050565b60025490565b600061038884848461051c565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006103fd6103b16105a4565b846103f885600160006103c26105a4565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6105a816565b610602565b50600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006103fd61048f6105a4565b846103f8856040518060600160405280602581526020016109fd60259139600160006104b96105a4565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6106ee16565b600061036e8383610785565b600061036e8383610799565b60006103fd6105156105a4565b8484610602565b60006105298484846107c4565b61059a846105356105a4565b6103f88560405180606001604052806028815260200161098c602891396001600160a01b038a166000908152600160205260408120906105736105a4565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6106ee16565b5060019392505050565b3390565b60008282018381101561036e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0383166106475760405162461bcd60e51b81526004018080602001828103825260248152602001806109d96024913960400191505060405180910390fd5b6001600160a01b03821661068c5760405162461bcd60e51b81526004018080602001828103825260228152602001806109446022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000818484111561077d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561074257818101518382015260200161072a565b50505050905090810190601f16801561076f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60006103fd6107926105a4565b84846107c4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166108095760405162461bcd60e51b81526004018080602001828103825260258152602001806109b46025913960400191505060405180910390fd5b6001600160a01b03821661084e5760405162461bcd60e51b81526004018080602001828103825260238152602001806109216023913960400191505060405180910390fd5b61089181604051806060016040528060268152602001610966602691396001600160a01b038616600090815260208190526040902054919063ffffffff6106ee16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108c6908263ffffffff6105a816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158203e9d0db10c7d95ae8a0e37a41764952c46d6f754bcdf02f0f0cda42a7a9cd34564736f6c634300050c0032","sourceMap":"661:1642:2:-;;;914:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;914:105:2;416:163:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;966:1:2;512:4:41;504:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;526:16:41;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:41;:20;;-1:-1:-1;;552:20:41;;;;;;;;;;;;-1:-1:-1;979:33:2;;-1:-1:-1;985:10:2;754:17;979:5;:33::i;:::-;661:1642;;5962:302:40;-1:-1:-1;;;;;6037:21:40;;6029:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:24;6137:6;6120:12;;:16;;;;;;:24;;;;:::i;:::-;6105:12;:39;-1:-1:-1;;;;;6175:18:40;;:9;:18;;;;;;;;;;;;:30;;6198:6;;6175:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;6154:18:40;;:9;:18;;;;;;;;;;;:51;;;;6220:37;;;;;;;6154:18;;:9;;6220:37;;;;;;;;;;5962:302;;:::o;834:176:38:-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:38:o;661:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;661:1642:2;;;-1:-1:-1;661:1642:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","deployedSourceMap":"661:1642:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;661:1642:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:128:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2027:128:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1559:89:40;;;:::i;:::-;;;;;;;;;;;;;;;;1621:150:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1621:150:2;;;;;;;;;;;;;;;;;:::i;713:58::-;;;:::i;1472:81:41:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3802:207:40;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3802:207:40;;;;;;;;:::i;1706:108::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1706:108:40;-1:-1:-1;;;;;1706:108:40;;:::i;838:85:41:-;;;:::i;4496:258:40:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4496:258:40;;;;;;;;:::i;1201:120:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1201:120:2;;;;;;;;:::i;2161:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2161:139:2;;;;;;;;;;:::i;644:81:41:-;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2027:128:2:-;2094:4;2117:31;2131:8;2141:6;2117:13;:31::i;:::-;2110:38;2027:128;-1:-1:-1;;;2027:128:2:o;1559:89:40:-;1629:12;;1559:89;:::o;1621:150:2:-;1703:4;1726:38;1745:5;1752:3;1757:6;1726:18;:38::i;:::-;1719:45;1621:150;-1:-1:-1;;;;1621:150:2:o;713:58::-;754:17;713:58;:::o;1472:81:41:-;1537:9;;;;1472:81;:::o;3802:207:40:-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;-1:-1:-1;;;;;3930:25:40;;;;;;;;;;;;;;;;;-1:-1:-1;3930:25:40;;;:34;;;;;;;;;;;:50;:38;:50;:::i;:::-;3898:8;:83::i;:::-;-1:-1:-1;3998:4:40;3802:207;;;;:::o;1706:108::-;-1:-1:-1;;;;;1789:18:40;1763:7;1789:18;;;;;;;;;;;;1706:108::o;838:85:41:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;4496:258:40;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;-1:-1:-1;;;;;4629:25:40;;;;;;;;;;;;;;;;;-1:-1:-1;4629:25:40;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;1201:120:2:-;1264:4;1287:27;1302:3;1307:6;1287:14;:27::i;2161:139::-;2235:7;2261:32;2277:6;2284:8;2261:15;:32::i;2500:149:40:-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3289:19:40;;;;;;:11;:19;;;;;;3309:12;:10;:12::i;:::-;-1:-1:-1;;;;;3289:33:40;;;;;;;;;;;;-1:-1:-1;3289:33:40;;;:89;;:37;:89;:::i;3258:121::-;-1:-1:-1;3396:4:40;3107:300;;;;;:::o;788:96:36:-;867:10;788:96;:::o;834:176:38:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:38;;;;;;;;;;;;;;;;;;;;;;;;;;;7351:332:40;-1:-1:-1;;;;;7444:19:40;;7436:68;;;;-1:-1:-1;;;7436:68:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7522:21:40;;7514:68;;;;-1:-1:-1;;;7514:68:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7593:18:40;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7644:32;;;;;;;;;;;;;;;;;7351:332;;;:::o;1732:187:38:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:38;;;1732:187::o;2017:155:40:-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;2230:132::-;-1:-1:-1;;;;;2328:18:40;;;2302:7;2328:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2230:132::o;5228:464::-;-1:-1:-1;;;;;5325:20:40;;5317:70;;;;-1:-1:-1;;;5317:70:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5405:23:40;;5397:71;;;;-1:-1:-1;;;5397:71:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5499:17:40;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5479:17:40;;;:9;:17;;;;;;;;;;;:91;;;;5603:20;;;;;;;:32;;5628:6;5603:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5580:20:40;;;:9;:20;;;;;;;;;;;;:55;;;;5650:35;;;;;;;5580:20;;5650:35;;;;;;;;;;;;;5228:464;;;:::o","source":"pragma solidity ^0.5.12;\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\";\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\";\\n\\n/**\\n * @title Enigma Token\\n * @dev ERC20 Enigma Token (ENG)\\n *\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\n * units referred to as \'Grains\'.\\n *\\n * ENG are displayed using 8 decimal places of precision.\\n *\\n * 1 ENG is equivalent to:\\n *   100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n *\\n * 150 million ENG (total supply) is equivalent to:\\n *   15000000000000000 == 150000000 * 10**8 == 1e17\\n *\\n * All initial ENG Grains are assigned to the creator of\\n * this contract.\\n *\\n */\\ncontract EnigmaToken is ERC20, ERC20Detailed {\\n\\n    uint256 public constant INITIAL_SUPPLY = 150000000 * 10**8;  // 150 million ENG specified in Grains\\n\\n    /**\\n    * @dev EnigmaToken Constructor\\n    * Runs only on initial contract creation.\\n    */\\n    constructor() public ERC20Detailed(\\"Enigma\\", \\"ENG\\", 8) {\\n        _mint(msg.sender, INITIAL_SUPPLY);\\n    }\\n\\n    /**\\n    * @dev Transfer token for a specified address when not paused\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\n        return super.transfer(_to, _value);\\n    }\\n\\n    /**\\n    * @dev Transfer tokens from one address to another when not paused\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint256 the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\n        return super.transferFrom(_from, _to, _value);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint256 _value) public returns (bool) {\\n        return super.approve(_spender, _value);\\n    }\\n\\n    function allowance(address _owner, address _spender) public view returns (uint256) {\\n        return super.allowance(_owner,_spender);\\n    }\\n\\n}\\n","sourcePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol","ast":{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1997]},"id":1998,"nodeType":"SourceUnit","nodes":[{"id":1901,"literals":["solidity","^","0.5",".12"],"nodeType":"PragmaDirective","src":"0:24:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1902,"nodeType":"ImportDirective","scope":1998,"sourceUnit":23454,"src":"25:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1903,"nodeType":"ImportDirective","scope":1998,"sourceUnit":23512,"src":"89:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1904,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":23453,"src":"685:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$23453","typeString":"contract ERC20"}},"id":1905,"nodeType":"InheritanceSpecifier","src":"685:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1906,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":23511,"src":"692:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$23511","typeString":"contract ERC20Detailed"}},"id":1907,"nodeType":"InheritanceSpecifier","src":"692:13:2"}],"contractDependencies":[22666,23453,23511,23580],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1997,"linearizedBaseContracts":[1997,23511,23453,23580,22666],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1914,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1997,"src":"713:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"766:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"770:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"766:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"754:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1928,"nodeType":"Block","src":"969:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1923,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"985:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"985:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1925,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"997:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1922,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23337,"src":"979:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"979:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1927,"nodeType":"ExpressionStatement","src":"979:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1929,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"949:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"959:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"966:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1920,"modifierName":{"argumentTypes":null,"id":1916,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23511,"src":"935:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$23511_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"935:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[],"src":"925:2:2"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[],"src":"969:0:2"},"scope":1997,"src":"914:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1944,"nodeType":"Block","src":"1270:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1940,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"1302:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1941,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"1307:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1938,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"1287:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":23111,"src":"1287:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1287:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1937,"id":1943,"nodeType":"Return","src":"1280:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"name":"_to","nodeType":"VariableDeclaration","scope":1945,"src":"1219:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1933,"name":"_value","nodeType":"VariableDeclaration","scope":1945,"src":"1232:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1218:29:2"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"name":"","nodeType":"VariableDeclaration","scope":1945,"src":"1264:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1935,"name":"bool","nodeType":"ElementaryTypeName","src":"1264:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1263:6:2"},"scope":1997,"src":"1201:120:2","stateMutability":"nonpayable","superFunction":23111,"visibility":"public"},{"body":{"id":1963,"nodeType":"Block","src":"1709:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1958,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"1745:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1959,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"1752:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1960,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"1757:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1956,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"1726:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":23182,"src":"1726:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1726:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1955,"id":1962,"nodeType":"Return","src":"1719:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1964,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"name":"_from","nodeType":"VariableDeclaration","scope":1964,"src":"1643:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"1643:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1949,"name":"_to","nodeType":"VariableDeclaration","scope":1964,"src":"1658:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1951,"name":"_value","nodeType":"VariableDeclaration","scope":1964,"src":"1671:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"1671:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1642:44:2"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"name":"","nodeType":"VariableDeclaration","scope":1964,"src":"1703:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1953,"name":"bool","nodeType":"ElementaryTypeName","src":"1703:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1702:6:2"},"scope":1997,"src":"1621:150:2","stateMutability":"nonpayable","superFunction":23182,"visibility":"public"},{"body":{"id":1979,"nodeType":"Block","src":"2100:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1975,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"2131:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1976,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"2141:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1973,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"2117:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":23146,"src":"2117:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2117:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1972,"id":1978,"nodeType":"Return","src":"2110:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1980,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"name":"_spender","nodeType":"VariableDeclaration","scope":1980,"src":"2044:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1968,"name":"_value","nodeType":"VariableDeclaration","scope":1980,"src":"2062:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"2062:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2043:34:2"},"returnParameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"name":"","nodeType":"VariableDeclaration","scope":1980,"src":"2094:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1970,"name":"bool","nodeType":"ElementaryTypeName","src":"2094:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2093:6:2"},"scope":1997,"src":"2027:128:2","stateMutability":"nonpayable","superFunction":23146,"visibility":"public"},{"body":{"id":1995,"nodeType":"Block","src":"2244:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1991,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"2277:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1992,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"2284:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1989,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"2261:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":23127,"src":"2261:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1988,"id":1994,"nodeType":"Return","src":"2254:39:2"}]},"documentation":null,"id":1996,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"name":"_owner","nodeType":"VariableDeclaration","scope":1996,"src":"2180:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"2180:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1984,"name":"_spender","nodeType":"VariableDeclaration","scope":1996,"src":"2196:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"2196:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2179:34:2"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"name":"","nodeType":"VariableDeclaration","scope":1996,"src":"2235:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"2235:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2234:9:2"},"scope":1997,"src":"2161:139:2","stateMutability":"view","superFunction":23127,"visibility":"public"}],"scope":1998,"src":"661:1642:2"}],"src":"0:2304:2"},"legacyAST":{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1997]},"id":1998,"nodeType":"SourceUnit","nodes":[{"id":1901,"literals":["solidity","^","0.5",".12"],"nodeType":"PragmaDirective","src":"0:24:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1902,"nodeType":"ImportDirective","scope":1998,"sourceUnit":23454,"src":"25:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1903,"nodeType":"ImportDirective","scope":1998,"sourceUnit":23512,"src":"89:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1904,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":23453,"src":"685:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$23453","typeString":"contract ERC20"}},"id":1905,"nodeType":"InheritanceSpecifier","src":"685:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1906,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":23511,"src":"692:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$23511","typeString":"contract ERC20Detailed"}},"id":1907,"nodeType":"InheritanceSpecifier","src":"692:13:2"}],"contractDependencies":[22666,23453,23511,23580],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1997,"linearizedBaseContracts":[1997,23511,23453,23580,22666],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1914,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1997,"src":"713:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"766:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"770:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"766:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"754:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1928,"nodeType":"Block","src":"969:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1923,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23595,"src":"985:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"985:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1925,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"997:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1922,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23337,"src":"979:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"979:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1927,"nodeType":"ExpressionStatement","src":"979:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1929,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"949:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"959:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"966:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1920,"modifierName":{"argumentTypes":null,"id":1916,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23511,"src":"935:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$23511_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"935:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[],"src":"925:2:2"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[],"src":"969:0:2"},"scope":1997,"src":"914:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1944,"nodeType":"Block","src":"1270:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1940,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"1302:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1941,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"1307:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1938,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"1287:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":23111,"src":"1287:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1287:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1937,"id":1943,"nodeType":"Return","src":"1280:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"name":"_to","nodeType":"VariableDeclaration","scope":1945,"src":"1219:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1933,"name":"_value","nodeType":"VariableDeclaration","scope":1945,"src":"1232:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1218:29:2"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"name":"","nodeType":"VariableDeclaration","scope":1945,"src":"1264:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1935,"name":"bool","nodeType":"ElementaryTypeName","src":"1264:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1263:6:2"},"scope":1997,"src":"1201:120:2","stateMutability":"nonpayable","superFunction":23111,"visibility":"public"},{"body":{"id":1963,"nodeType":"Block","src":"1709:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1958,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"1745:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1959,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"1752:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1960,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"1757:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1956,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"1726:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":23182,"src":"1726:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1726:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1955,"id":1962,"nodeType":"Return","src":"1719:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1964,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"name":"_from","nodeType":"VariableDeclaration","scope":1964,"src":"1643:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"1643:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1949,"name":"_to","nodeType":"VariableDeclaration","scope":1964,"src":"1658:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1951,"name":"_value","nodeType":"VariableDeclaration","scope":1964,"src":"1671:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"1671:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1642:44:2"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"name":"","nodeType":"VariableDeclaration","scope":1964,"src":"1703:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1953,"name":"bool","nodeType":"ElementaryTypeName","src":"1703:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1702:6:2"},"scope":1997,"src":"1621:150:2","stateMutability":"nonpayable","superFunction":23182,"visibility":"public"},{"body":{"id":1979,"nodeType":"Block","src":"2100:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1975,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"2131:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1976,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"2141:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1973,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"2117:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":23146,"src":"2117:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2117:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1972,"id":1978,"nodeType":"Return","src":"2110:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1980,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"name":"_spender","nodeType":"VariableDeclaration","scope":1980,"src":"2044:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1968,"name":"_value","nodeType":"VariableDeclaration","scope":1980,"src":"2062:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"2062:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2043:34:2"},"returnParameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"name":"","nodeType":"VariableDeclaration","scope":1980,"src":"2094:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1970,"name":"bool","nodeType":"ElementaryTypeName","src":"2094:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2093:6:2"},"scope":1997,"src":"2027:128:2","stateMutability":"nonpayable","superFunction":23146,"visibility":"public"},{"body":{"id":1995,"nodeType":"Block","src":"2244:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1991,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"2277:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1992,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"2284:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1989,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23662,"src":"2261:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1997","typeString":"contract super EnigmaToken"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":23127,"src":"2261:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1988,"id":1994,"nodeType":"Return","src":"2254:39:2"}]},"documentation":null,"id":1996,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"name":"_owner","nodeType":"VariableDeclaration","scope":1996,"src":"2180:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"2180:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1984,"name":"_spender","nodeType":"VariableDeclaration","scope":1996,"src":"2196:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"2196:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2179:34:2"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"name":"","nodeType":"VariableDeclaration","scope":1996,"src":"2235:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"2235:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2234:9:2"},"scope":1997,"src":"2161:139:2","stateMutability":"view","superFunction":23127,"visibility":"public"}],"scope":1998,"src":"661:1642:2"}],"src":"0:2304:2"},"compiler":{"name":"solc","version":"0.5.12+commit.7709ece9.Emscripten.clang"},"networks":{"4447":{"events":{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address","internalType":"address"},{"indexed":true,"name":"to","type":"address","internalType":"address"},{"indexed":false,"name":"value","type":"uint256","internalType":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address","internalType":"address"},{"indexed":true,"name":"spender","type":"address","internalType":"address"},{"indexed":false,"name":"value","type":"uint256","internalType":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}},"links":{},"address":"0xD46123b08c56530A8e09bB65B4DFEfA72418e97B","transactionHash":"0x575cae0fda5111912b0a68241da0f243d559b1a5fe82db930026c74adbc7fda6"},"5777":{"events":{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}},"links":{},"address":"0xaAB4eCc53b9B6Eee785303EaF7691cF20120318C","transactionHash":"0x23e06b59f52b4058a038b692eaadfd40c288c4a8442f16819b3c07b7fc946b53"}},"schemaVersion":"3.0.19","updatedAt":"2019-12-14T13:26:33.988Z","networkType":"ethereum","devdoc":{"details":"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. ","methods":{"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.","params":{"_spender":"The address which will spend the funds.","_value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"EnigmaToken Constructor Runs only on initial contract creation."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"Transfer token for a specified address when not paused","params":{"_to":"The address to transfer to.","_value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another when not paused","params":{"_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}}},"title":"Enigma Token"},"userdoc":{"methods":{}}}')},function(e,t){e.exports=require("jayson/lib/client/browser")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("retry")},function(e,t){e.exports=require("ethereumjs-abi")},function(e,t,n){e.exports=n(17)},function(e,t){e.exports=require("core-js/stable")},function(e,t){e.exports=require("regenerator-runtime/runtime")},function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"ERROR",(function(){return $})),n.d(r,"DEPOSIT_TRANSACTION_HASH",(function(){return h})),n.d(r,"DEPOSIT_CONFIRMATION",(function(){return E})),n.d(r,"DEPOSIT_RECEIPT",(function(){return C})),n.d(r,"WITHDRAW_TRANSACTION_HASH",(function(){return V})),n.d(r,"WITHDRAW_CONFIRMATION",(function(){return x})),n.d(r,"WITHDRAW_RECEIPT",(function(){return L})),n.d(r,"LOGIN_TRANSACTION_HASH",(function(){return N})),n.d(r,"LOGIN_CONFIRMATION",(function(){return w})),n.d(r,"LOGIN_RECEIPT",(function(){return R})),n.d(r,"LOGOUT_TRANSACTION_HASH",(function(){return P})),n.d(r,"LOGOUT_CONFIRMATION",(function(){return A})),n.d(r,"LOGOUT_RECEIPT",(function(){return W})),n.d(r,"DEPLOY_SC_ADDR_RESULT",(function(){return q})),n.d(r,"DEPLOY_SC_ETH_TRANSACTION_HASH",(function(){return M})),n.d(r,"DEPLOY_SC_ETH_CONFIRMATION",(function(){return U})),n.d(r,"DEPLOY_SC_ETH_RECEIPT",(function(){return F})),n.d(r,"DEPLOY_SC_ENG_RECEIPT",(function(){return B})),n.d(r,"CREATE_TASK",(function(){return H})),n.d(r,"CREATE_TASK_INPUT",(function(){return G})),n.d(r,"CREATE_TASK_RECORD_TRANSACTION_HASH",(function(){return O})),n.d(r,"CREATE_TASK_RECORD_CONFIRMATION",(function(){return z})),n.d(r,"CREATE_TASK_RECORD_RECEIPT",(function(){return K})),n.d(r,"CREATE_TASK_RECORD",(function(){return Q})),n.d(r,"SEND_TASK_INPUT_RESULT",(function(){return j})),n.d(r,"POLL_TASK_STATUS_RESULT",(function(){return Y})),n.d(r,"GET_TASK_RESULT_RESULT",(function(){return X})),n.d(r,"DEPLOY_SECRET_CONTRACT_RESULT",(function(){return Z})),n.d(r,"RETURN_FEES_FOR_TASK_RECEIPT",(function(){return J})),n.d(r,"RETURN_FEES_FOR_TASK",(function(){return ee})),n.d(r,"POLL_TASK_ETH_RESULT",(function(){return te})),n.d(r,"RPC_SEND_TASK_INPUT",(function(){return ne})),n.d(r,"RPC_DEPLOY_SECRET_CONTRACT",(function(){return re})),n.d(r,"RPC_GET_TASK_RESULT",(function(){return ae})),n.d(r,"RPC_GET_TASK_STATUS",(function(){return ie})),n.d(r,"GET_TASK_RESULT_SUCCESS",(function(){return se})),n.d(r,"GET_TASK_RESULT_FAILED",(function(){return oe})),n.d(r,"GET_TASK_RESULT_UNVERIFIED",(function(){return de})),n.d(r,"GET_TASK_RESULT_INPROGRESS",(function(){return pe})),n.d(r,"ETH_STATUS_UNDEFINED",(function(){return le})),n.d(r,"ETH_STATUS_CREATED",(function(){return ce})),n.d(r,"ETH_STATUS_VERIFIED",(function(){return ye})),n.d(r,"ETH_STATUS_FAILED",(function(){return ue})),n.d(r,"ETH_STATUS_FAILED_ETH",(function(){return me})),n.d(r,"ETH_STATUS_FAILED_RETURN",(function(){return fe}));n(15),n(16);var a=n(2),i=n.n(a),s=n(3),o=n.n(s),d=n(0),p=n.n(d),l=n(7),c=n.n(l),y=n(4),u=n(5),m=n.n(u);p.a.options.usePureJavaScript=!0;var f=c.a.ec;function b(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2]?"00":"",r=!0,a=!1,s=void 0;try{for(var o,d=t[Symbol.iterator]();!(r=(o=d.next()).done);r=!0){var p=o.value;p=g(p),e+=n+i.a.BigInt(p.length/2).toString(16).padStart(16,"0")+p}}catch(e){a=!0,s=e}finally{try{r||null==d.return||d.return()}finally{if(a)throw s}}return e}function _(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;e=b(e+="01"+i.a.BigInt(d[0].length*(d[1]+9)).toString(16).padStart(16,"0"),d[0],!0)}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function g(e){return"0x"==e.substring(0,2)?e.substring(2):e}var T={test:function(){return"hello2"},generateScAddr:function(e,t){return o.a.soliditySha3({t:"bytes",v:e},{t:"uint",v:t})},hash:function(e){var t=b("",e);return o.a.soliditySha3({t:"bytes",v:t})},principalHash:function(e,t,n,r){var a="";return a=_(a=b(a,[e,t],!0),[[n,20],[r,32]]),o.a.soliditySha3({t:"bytes",v:a})},commitReceiptsHash:function(e,t,n,r,a,i,s,d,p){var l="";return l=b(l,[e]),l=b(l=_(l,[t]),[n]),l=b(l=_(l,[r,a,i]),[s,d,p]),o.a.soliditySha3({t:"bytes",v:l})},getDerivedKey:function(e,t){var n=new f("secp256k1");128==e.length&&(e="04"+e);var r=n.keyFromPrivate(t,"hex"),a=n.keyFromPublic(e,"hex").getPublic().mul(r.getPrivate()),i=2|(a.getY().isOdd()?1:0),s=a.getX(),o=y.Buffer.from([i]),d=s.toArrayLike(y.Buffer,"be",32),l=p.a.md.sha256.create();return l.update(o.toString("binary")),l.update(d.toString("binary")),l.digest().toHex()},encryptMessage:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:p.a.random.getBytesSync(12),r=p.a.util.hexToBytes(e),a=p.a.cipher.createCipher("AES-GCM",r);return a.start({iv:n}),a.update(p.a.util.createBuffer(t)),a.finish(),a.output.putBuffer(a.mode.tag).putBytes(n).toHex()},decryptMessage:function(e,t){var n=p.a.util.hexToBytes(e),r=y.Buffer.from(t,"hex"),a=p.a.util.createBuffer(r.slice(-12)),i=p.a.util.createBuffer(r.slice(-28,-12)),s=p.a.cipher.createDecipher("AES-GCM",n);if(s.start({iv:a,tag:i}),s.update(p.a.util.createBuffer(r.slice(0,-28))),s.finish())return s.output.toHex();throw new Error("decipher did not finish")},toGrains:function(e){return e*Math.pow(10,8)}};T.remove0x=g,T.hexToAscii=function(e){if("number"!=typeof e&&"string"!=typeof e)return"";e=e.toString().replace(/\s+/gi,"");for(var t=[],n=0;n<e.length;n+=2){var r=parseInt(e.substr(n,2),16);isNaN(r)||0===r||t.push(String.fromCharCode(r))}return t.join("")},T.sleep=function(e){return new Promise((function(t){return setTimeout(t,e)}))},T.gzip=function(e){return new Promise((function(t,n){m.a.gzip(e,(function(e,r){e?n(e):t(r)}))}))},T.gunzip=function(e){return new Promise((function(t,n){m.a.gunzip(e,(function(e,r){e?n(e):t(r)}))}))};var D=T,S=n(8),I=n(9),k=n(1),v=n.n(k),$="error",h="depositTransactionHash",E="depositConfirmation",C="depositReceipt",V="withdrawTransactionHash",x="withdrawConfirmation",L="withdrawReceipt",N="loginTransactionHash",w="loginConfirmation",R="loginReceipt",P="logoutTransactionHash",A="logoutConfirmation",W="logoutReceipt",q="deploySCAddrResult",M="deploySCEthTransactionHash",U="deploySCEthConfirmation",F="deploySCEthReceipt",B="deploySCEngReceipt",H="createTask",G="createTaskInput",O="createTaskRecordTransactionHash",z="createTaskRecordConfirmation",K="createTaskRecordReceipt",Q="createTaskRecord",j="sendTaskInputResult",Y="pollTaskStatusResult",X="getTaskResultResult",Z="deploySecretContractResult",J="returnFeesForTaskReceipt",ee="returnFeesForTask",te="pollTaskETHResult",ne="sendTaskInput",re="deploySecretContract",ae="getTaskResult",ie="getTaskStatus",se="SUCCESS",oe="FAILED",de="UNVERIFIED",pe="INPROGRESS",le=0,ce=1,ye=2,ue=3,me=4,fe=5;function be(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _e=function(){function e(t,n,r,a,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.enigmaContract=n,this.tokenContract=r,this.txDefaults=a,this.enigma=i}var t,n,r;return t=e,(n=[{key:"findBySigningAddress",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorkerFromSigningAddress(e).call());case 2:return t=n.sent,n.abrupt("return",{account:t[0],status:parseInt(t[1][1]),report:t[1][2],balance:parseInt(t[1][3]),logs:t[1][4]});case 4:case"end":return n.stop()}}),null,this)}},{key:"getWorkerStatus",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorker(e).call());case 2:return t=n.sent,n.abrupt("return",parseInt(t.status));case 4:case"end":return n.stop()}}),null,this)}},{key:"isDeployed",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=parseInt,t.next=3,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 3:return t.t1=t.sent.status,t.t2=(0,t.t0)(t.t1),t.abrupt("return",1===t.t2);case 6:case"end":return t.stop()}}),null,this)}},{key:"countSecretContracts",value:function(){return regeneratorRuntime.async((function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,regeneratorRuntime.awrap(this.enigmaContract.methods.countSecretContracts().call());case 3:return e.t1=e.sent,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}}),null,this)}},{key:"getSecretContractAddresses",value:function(e,t){return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContractAddresses(e,t).call());case 2:return n.abrupt("return",n.sent);case 3:case"end":return n.stop()}}),null,this)}},{key:"getAllSecretContractAddresses",value:function(){return regeneratorRuntime.async((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getAllSecretContractAddresses().call());case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),null,this)}},{key:"getCodeHash",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return t.abrupt("return",t.sent.codeHash);case 3:case"end":return t.stop()}}),null,this)}},{key:"countStateDeltas",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return t.abrupt("return",t.sent.stateDeltaHashes.length);case 3:case"end":return t.stop()}}),null,this)}},{key:"getStateDeltaHash",value:function(e,t){return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return n.t0=t,n.abrupt("return",n.sent.stateDeltaHashes[n.t0]);case 4:case"end":return n.stop()}}),null,this)}},{key:"getStateDeltaHashes",value:function(e,t,n){return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return r.t0=t,r.t1=n,r.abrupt("return",r.sent.stateDeltaHashes.slice(r.t0,r.t1));case 5:case"end":return r.stop()}}),null,this)}},{key:"isValidDeltaHash",value:function(e,t){return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return n.t0=t,n.abrupt("return",n.sent.stateDeltaHashes.includes(n.t0));case 4:case"end":return n.stop()}}),null,this)}},{key:"login",value:function(e){var t=this,n=new v.a;return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,regeneratorRuntime.awrap(t.enigmaContract.methods.login().send({from:e}).on("transactionHash",(function(e){n.emit(N,e)})).on("confirmation",(function(e,t){n.emit(w,e,t)})).on("receipt",(function(e){n.emit(R,e)})));case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit($,r.t0.message);case 8:case"end":return r.stop()}}),null,null,[[0,5]]),n}},{key:"logout",value:function(e){var t=this,n=new v.a;return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,regeneratorRuntime.awrap(t.enigmaContract.methods.logout().send({from:e}).on("transactionHash",(function(e){n.emit(P,e)})).on("confirmation",(function(e,t){n.emit(A,e,t)})).on("receipt",(function(e){n.emit(W,e)})));case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit($,r.t0.message);case 8:case"end":return r.stop()}}),null,null,[[0,5]]),n}},{key:"deposit",value:function(e,t){var n,r=this,a=new v.a;return regeneratorRuntime.async((function(i){for(;;)switch(i.prev=i.next){case 0:return i.next=2,regeneratorRuntime.awrap(r.tokenContract.methods.balanceOf(e).call());case 2:if(!(i.sent<t)){i.next=7;break}return a.emit("error",{name:"NotEnoughTokens",message:"Not enough tokens in wallet"}),i.abrupt("return");case 7:return i.next=9,regeneratorRuntime.awrap(r.tokenContract.methods.approve(r.enigmaContract.options.address,t).send({from:e}));case 9:return i.prev=9,i.next=12,regeneratorRuntime.awrap(r.enigmaContract.methods.deposit(e,t).send({from:e}).on("transactionHash",(function(e){a.emit(h,e)})).on("confirmation",(function(e,t){a.emit(E,e,t)})));case 12:n=i.sent,a.emit(C,n),i.next=19;break;case 16:i.prev=16,i.t0=i.catch(9),a.emit($,i.t0.message);case 19:case"end":return i.stop()}}),null,null,[[9,16]]),a}},{key:"withdraw",value:function(e,t){var n=this,r=new v.a;return regeneratorRuntime.async((function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,regeneratorRuntime.awrap(n.enigmaContract.methods.withdraw(t).send({from:e}).on("transactionHash",(function(e){r.emit(V,e)})).on("confirmation",(function(e,t){r.emit(x,e,t)})).on("receipt",(function(e){r.emit(L,e)})));case 3:a.next=8;break;case 5:a.prev=5,a.t0=a.catch(0),r.emit($,a.t0.message);case 8:case"end":return a.stop()}}),null,null,[[0,5]]),r}},{key:"getBalance",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=parseInt,t.next=3,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorker(e).call());case 3:return t.t1=t.sent.balance,t.abrupt("return",(0,t.t0)(t.t1));case 5:case"end":return t.stop()}}),null,this)}},{key:"getWorkerSignerAddr",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorker(e).call());case 2:return t.abrupt("return",t.sent.signer);case 3:case"end":return t.stop()}}),null,this)}}])&&be(t.prototype,n),r&&be(t,r),e}();var ge=function e(t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,b){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.inputsHash=D.hash([n,r,b?f:t,o]),this.scAddr=t,this.encryptedFn=n,this.encryptedAbiEncodedArgs=r,this.gasLimit=a,this.gasPx=i,this.msgId=s,this.userPubKey=o,this.firstBlockNumber=d,this.workerAddress=p,this.workerEncryptionKey=l,this.sender=c,this.userTaskSig=y,this.nonce=u,this.preCode=m,this.preCodeHash=f,this.isContractDeploymentTask=b,this.transactionHash="",this.taskId="",this.receipt="",this.ethStatus=0,this.proof="",this.creationBlockNumber=-1,this.encryptedAbiEncodedOutputs="",this.delta="",this.usedGas="",this.ethereumPayload="",this.ethereumAddress="",this.workerTaskSig="",this.engStatus="null",this.decryptedOutput=""},Te=n(10),De=n.n(Te),Se=n(11),Ie=n.n(Se),ke=n(12),ve=n.n(ke),$e=n(13),he=n(6),Ee=n.n(he);function Ce(e){return(Ce="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ve(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var xe=function(){function e(t,n,r,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.txDefaults=i,this.config={},this.config.retry={},this.config.retry.retries=s.retry&&null!=s.retry.retries?s.retry.retries:5,this.config.retry.factor=s.retry&&null!=s.retry.factor?s.retry.factor:2,this.config.retry.minTimeout=s.retry&&null!=s.retry.minTimeout?s.retry.minTimeout:2e3,this.config.retry.maxTimeout=s.retry&&null!=s.retry.maxTimeout?s.retry.maxTimeout:"Infinity",this.config.retry.randomize=!s.retry||(null==s.retry.randomize||s.retry.randomize);this.client=De()((function(e,t){Ie.a.post(a,JSON.parse(e),{headers:{"Content-Type":"application/json",credentials:"include"}}).then((function(e){if($ in e.data)t(e.data.error,null);else{var n=JSON.stringify(e.data.result);t(null,n)}})).catch((function(e){t({code:-32e3,message:e.message},null)}))}),{}),this.workerParamsCache={},this.selectedWorkerGroupCache={},this.taskKeyLocalStorage={},this.createContracts(n,r)}var t,n,r;return t=e,r=[{key:"serializeTask",value:function(e){return e.isContractDeploymentTask?{preCode:e.preCode,encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),encryptedFn:D.remove0x(e.encryptedFn),userDHKey:D.remove0x(e.userPubKey),contractAddress:D.remove0x(e.scAddr),workerAddress:e.workerAddress}:{taskId:D.remove0x(e.taskId),workerAddress:e.workerAddress,encryptedFn:D.remove0x(e.encryptedFn),encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),contractAddress:D.remove0x(e.scAddr),userDHKey:D.remove0x(e.userPubKey)}}},{key:"version",value:function(){return"0.0.1"}}],(n=[{key:"admin",value:function(){this.admin=new _e(this.web3,this.enigmaContract,this.tokenContract,this.txDefaults,this)}},{key:"createContracts",value:function(e,t){this.enigmaContract=new this.web3.eth.Contract(S.abi,e,this.txDefaults),this.tokenContract=new this.web3.eth.Contract(I.abi,t,this.txDefaults)}},{key:"createTask",value:function(e,t,n,r,a,i,s){var o,d,p,l,c,y,u,m,f,b,_,g,T,S,I,k,h,E,C,V,x,L,N,w,R,P,A,W,q=this,M=new v.a;return regeneratorRuntime.async((function(v){for(;;)switch(v.prev=v.next){case 0:return v.t0=parseInt,v.next=3,regeneratorRuntime.awrap(q.enigmaContract.methods.getUserTaskDeployments(a).call());case 3:if(v.t1=v.sent,o=(0,v.t0)(v.t1),d=s?D.generateScAddr(a,o):i,!s){v.next=17;break}if(!Buffer.isBuffer(i)){v.next=14;break}return p=i,v.next=11,regeneratorRuntime.awrap(D.gzip(p));case 11:l=v.sent,v.next=15;break;case 14:throw Error("PreCode expected to be a Buffer, instead got "+Ce(i));case 15:v.next=19;break;case 17:p="",l="";case 19:for(c=s?q.web3.utils.soliditySha3({t:"bytes",value:p.toString("hex")}):"",y=void 0===t||0===t.length?[[],[]]:t[0].map((function(e,n){return t.map((function(e){return e[n]}))})),u=D.remove0x(q.web3.eth.abi.encodeParameters(y[1],y[0])),m=[],f=0;f<u.length;f+=2)m.push(parseInt(u.substr(f,2),16));return v.next=26,regeneratorRuntime.awrap(q.web3.eth.getBlockNumber());case 26:return b=v.sent,v.next=29,regeneratorRuntime.awrap(q.getWorkerParams(b));case 29:return _=v.sent,g=_.firstBlockNumber,v.next=33,regeneratorRuntime.awrap(q.selectWorkerGroup(d,_,1)[0]);case 33:return T=(T=v.sent).toLowerCase().slice(-40),S=q.obtainTaskKeyPair(a,o),I=S.publicKey,k=S.privateKey,v.prev=36,v.next=39,regeneratorRuntime.awrap(new Promise((function(e,t){q.client.request("getWorkerEncryptionKey",{workerAddress:T,userPubKey:I},(function(n,r){n?t(n):e(r)}))})));case 39:if(h=v.sent,E=h.result,C=h.id,V=E.workerEncryptionKey,x=E.workerSig,L="0x0000000000000013456e69676d612055736572204d6573736167650000000000000040"+V,N=(N=Ee.a.recover("0x"+x,q.web3.utils.soliditySha3({t:"bytes",value:L}))).toLowerCase().slice(-40),T===N){v.next=50;break}console.error("Worker address",T,"!= recovered address",N),M.emit($,{name:"InvalidWorker",message:"Invalid worker encryption key + signature combo ".concat(T," != ").concat(N)}),v.next=58;break;case 50:return w=D.getDerivedKey(V,k),R=D.encryptMessage(w,e),P=D.encryptMessage(w,Buffer.from(m)),A=q.web3.utils.soliditySha3({t:"bytes",v:R},{t:"bytes",v:P}),v.next=56,regeneratorRuntime.awrap(q.web3.eth.sign(A,a));case 56:W=v.sent,M.emit(H,new ge(d,R,P,n,r,C,I,g,T,V,a,W,o,l.toString("base64"),c,s));case 58:v.next=63;break;case 60:v.prev=60,v.t2=v.catch(36),M.emit($,v.t2);case 63:case"end":return v.stop()}}),null,null,[[36,60]]),M}},{key:"createTaskRecord",value:function(e){var t,n=this,r=new v.a;return regeneratorRuntime.async((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,regeneratorRuntime.awrap(n.tokenContract.methods.balanceOf(e.sender).call());case 2:if(!(a.sent<e.gasLimit*e.gasPx)){a.next=6;break}return r.emit($,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),a.abrupt("return");case 6:return a.next=8,regeneratorRuntime.awrap(n.tokenContract.methods.approve(n.enigmaContract.options.address,e.gasLimit*e.gasPx).send({from:e.sender}));case 8:if(a.prev=8,!e.isContractDeploymentTask){a.next=15;break}return a.next=12,regeneratorRuntime.awrap(n.enigmaContract.methods.createDeploymentTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber,e.nonce).send({from:e.sender}).on("transactionHash",(function(t){e.transactionHash=t,r.emit(O,t)})).on("confirmation",(function(e,t){r.emit(z,e,t)})));case 12:a.t0=a.sent,a.next=18;break;case 15:return a.next=17,regeneratorRuntime.awrap(n.enigmaContract.methods.createTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber).send({from:e.sender}).on("transactionHash",(function(t){e.transactionHash=t,r.emit(O,t)})).on("confirmation",(function(e,t){r.emit(z,e,t)})));case 17:a.t0=a.sent;case 18:t=a.t0,e.taskId=t.events.TaskRecordCreated.returnValues.taskId,e.receipt=t,e.ethStatus=1,e.creationBlockNumber=t.blockNumber,r.emit(K,t),r.emit(Q,e),a.next=30;break;case 27:a.prev=27,a.t1=a.catch(8),r.emit($,a.t1.message);case 30:case"end":return a.stop()}}),null,null,[[8,27]]),r}},{key:"getTaskRecordStatus",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getTaskRecord(e.taskId).call());case 2:return t=n.sent,e.ethStatus=parseInt(t.status),e.proof=t.proof,n.abrupt("return",e);case 6:case"end":return n.stop()}}),null,this)}},{key:"getTaskRecordFromTaskId",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getTaskRecord(e).call());case 2:return t=n.sent,n.abrupt("return",{sender:t.sender,inputsHash:t.inputsHash,outputHash:t.outputHash,gasLimit:parseInt(t.gasLimit),gasPx:parseInt(t.gasPx),blockNumber:parseInt(t.blockNumber),status:parseInt(t.status),proof:t.proof});case 4:case"end":return n.stop()}}),null,this)}},{key:"getTaskOutputHash",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getTaskRecord(e.taskId).call());case 2:return t.abrupt("return",t.sent.outputHash);case 3:case"end":return t.stop()}}),null,this)}},{key:"getReport",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getReport(e).call());case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),null,this)}},{key:"getWorkerParams",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:if(!(0===Object.keys(this.workerParamsCache).length||e-this.workerParamsCache.firstBlockNumber>=this.epochSize)){n.next=8;break}return n.next=3,regeneratorRuntime.awrap(this.enigmaContract.methods.getEpochSize().call());case 3:return this.epochSize=n.sent,n.next=6,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorkerParams(e).call());case 6:t=n.sent,this.workerParamsCache={firstBlockNumber:parseInt(t[0]),seed:i.a.BigInt(t[1]),workers:t[2],stakes:t[3].map((function(e){return i.a.BigInt(e)}))};case 8:return n.abrupt("return",this.workerParamsCache);case 9:case"end":return n.stop()}}),null,this)}},{key:"selectWorkerGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5,r=t.stakes.reduce((function(e,t){return i.a.add(e,t)}),i.a.BigInt(0)),a=0,s=[];do{for(var d=$e.rawEncode(["uint256","bytes32","uint256"],[t.seed.toString(10),e,a]),p=o.a.keccak256(d),l=i.a.remainder(i.a.BigInt(p),r),c=t.workers[t.workers.length-1],y=0;y<t.workers.length;y++)if((l=i.a.subtract(l,t.stakes[y]))<=0){c=t.workers[y];break}s.includes(c)||s.push(c),a++}while(s.length<n);return s}},{key:"sendTaskInput",value:function(t){var n,r,a=this,i=new v.a;return regeneratorRuntime.async((function(s){for(;;)switch(s.prev=s.next){case 0:return n=ne,r=j,t.isContractDeploymentTask&&(n=re,r=Z),s.prev=3,s.next=6,regeneratorRuntime.awrap(new Promise((function(r,i){a.client.request(n,e.serializeTask(t),(function(e,t){e?i(e):r(t)}))})));case 6:i.emit(r,t),s.next=12;break;case 9:s.prev=9,s.t0=s.catch(3),i.emit($,s.t0);case 12:case"end":return s.stop()}}),null,null,[[3,9]]),i}},{key:"getTaskResult",value:function(e){var t=this,n=new v.a,r=ve.a.operation(this.config.retry);return r.attempt((function(a){var i;return regeneratorRuntime.async((function(s){for(;;)switch(s.prev=s.next){case 0:return s.prev=0,s.next=3,regeneratorRuntime.awrap(new Promise((function(n,r){t.client.request(ae,{taskId:D.remove0x(e.taskId)},(function(e,t){e?r(e):n(t)}))})));case 3:if(!(i=s.sent).result){s.next=20;break}s.t0=i.result.status,s.next=s.t0===se?8:s.t0===oe?12:s.t0===de?15:s.t0===pe?15:17;break;case 8:e.delta=i.result.delta,e.ethereumPayload=i.result.ethereumPayload,e.ethereumAddress=i.result.ethereumAddress,e.preCodeHash=i.result.preCodeHash;case 12:e.encryptedAbiEncodedOutputs=i.result.output,e.usedGas=i.result.usedGas,e.workerTaskSig=i.result.signature;case 15:return e.engStatus=i.result.status,s.abrupt("break",18);case 17:throw new Error("Invalid task result status").message;case 18:s.next=26;break;case 20:if(!r.retry(!0)){s.next=25;break}return console.log("Warning: Got an empty TaskResult on attempt "+a+" of "+(t.config.retry.retries+1)+". Retrying..."),s.abrupt("return");case 25:e.engStatus=null;case 26:n.emit(X,e),s.next=32;break;case 29:s.prev=29,s.t1=s.catch(0),n.emit($,s.t1);case 32:case"end":return s.stop()}}),null,null,[[0,29]])})),n}},{key:"returnFeesForTask",value:function(e){var t,n,r=this,a=new v.a;return regeneratorRuntime.async((function(i){for(;;)switch(i.prev=i.next){case 0:return i.next=2,regeneratorRuntime.awrap(r.enigmaContract.methods.getTaskTimeoutSize().call());case 2:return t=i.sent,i.next=5,regeneratorRuntime.awrap(r.web3.eth.getBlockNumber());case 5:if(!(i.sent-e.creationBlockNumber<=t)){i.next=9;break}return a.emit($,{name:"InvalidTaskReturn",message:"Not enough time has elapsed to return task funds"}),i.abrupt("return");case 9:return i.prev=9,i.next=12,regeneratorRuntime.awrap(r.enigmaContract.methods.returnFeesForTask(e.taskId).send({from:e.sender}));case 12:n=i.sent,e.ethStatus=fe,a.emit(J,n),a.emit(ee,e),i.next=21;break;case 18:i.prev=18,i.t0=i.catch(9),a.emit($,i.t0.message);case 21:case"end":return i.stop()}}),null,null,[[9,18]]),a}},{key:"decryptTaskResult",value:function(e){var t,n,r;return regeneratorRuntime.async((function(a){for(;;)switch(a.prev=a.next){case 0:return console.log("task.encryptedAbiEncodedOutputs is "+e.encryptedAbiEncodedOutputs),e.encryptedAbiEncodedOutputs?(t=this.obtainTaskKeyPair(e.sender,e.nonce),n=t.privateKey,r=D.getDerivedKey(e.workerEncryptionKey,n),e.decryptedOutput=D.decryptMessage(r,e.encryptedAbiEncodedOutputs)):(console.log("Warning: task.encryptedAbiEncodedOutputs is empty, there is nothing to decrypt."),e.decryptedOutput=null),a.abrupt("return",e);case 3:case"end":return a.stop()}}),null,this)}},{key:"verifyTaskOutput",value:function(e){var t,n;return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,regeneratorRuntime.awrap(this.getTaskOutputHash(e));case 2:return t=r.sent,n=this.web3.utils.soliditySha3({t:"bytes",value:e.encryptedAbiEncodedOutputs.toString("hex")}),r.abrupt("return",t===n);case 5:case"end":return r.stop()}}),null,this)}},{key:"verifyTaskStatus",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.getTaskRecordStatus(e));case 2:t=n.sent.ethStatus,n.t0=e.engStatus,n.next=n.t0===se?6:n.t0===oe?8:n.t0===de?10:n.t0===pe?10:12;break;case 6:return n.abrupt("return",t===ye);case 8:return n.abrupt("return",t===ue);case 10:return n.abrupt("return",t===ce);case 12:return n.abrupt("return",t===le);case 13:case"end":return n.stop()}}),null,this)}},{key:"pollTaskStatusGen",value:regeneratorRuntime.mark((function e(t,n){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,new Promise((function(e,a){r.client.request(ie,{taskId:D.remove0x(t.taskId),workerAddress:t.workerAddress,withResult:n},(function(r,i){r?a(r):(t.engStatus=i.result.status,n&&(t.encryptedAbiEncodedOutputs=i.result.output),e(t))}))}));case 3:e.next=0;break;case 5:case"end":return e.stop()}}),e)}))},{key:"innerPollTaskStatus",value:function(e,t,n){var r=this;t.next().value.then((function(a){n.emit(Y,a),"SUCCESS"!==a.engStatus&&"FAILED"!==a.engStatus&&r.innerPollTaskStatus(e,t,n)})).catch((function(e){n.emit($,e)}))}},{key:"pollTaskStatus",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=new v.a,r=this.pollTaskStatusGen(e,t);return this.innerPollTaskStatus(e,r,n),n}},{key:"pollTaskETH",value:function(e){var t,n=arguments;return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:t=n.length>1&&void 0!==n[1]?n[1]:1e3;case 1:if(e.ethStatus!==ce){r.next=9;break}return r.next=4,regeneratorRuntime.awrap(this.getTaskRecordStatus(e));case 4:return e=r.sent,r.next=7,regeneratorRuntime.awrap(D.sleep(t));case 7:r.next=1;break;case 9:return r.abrupt("return",e);case 10:case"end":return r.stop()}}),null,this)}},{key:"obtainTaskKeyPair",value:function(e,t){var n,r=this.getTaskId(e,t),a="undefined"!=typeof window,i=a?atob(window.localStorage.getItem("seed")):this.taskKeyLocalStorage.seed;if(null==i)throw Error("Need to set seed through setTaskKeyPair first");var s=i+r,o=p.a.random.createInstance();o.seedFileSync=function(e){return p.a.util.fillString(s,e)},n=p.a.util.bytesToHex(o.getBytes(32));var d=Ee.a.publicKeyByPrivateKey(n);return a?window.localStorage.setItem("encodedPrivateKey"+r,btoa(n)):this.taskKeyLocalStorage["encodedPrivateKey"+r]=Buffer.from(n,"binary").toString("base64"),{publicKey:d,privateKey:n}}},{key:"setTaskKeyPair",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t="undefined"!=typeof window;if(""===e)for(var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",r=0;r<9;r++)e+=n.charAt(Math.floor(Math.random()*n.length));return t?window.localStorage.setItem("seed",btoa(e)):this.taskKeyLocalStorage.seed=e,e}},{key:"deploySecretContract",value:function(e,t,n,r,a,i){var s,o=this,d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,p=new v.a;return regeneratorRuntime.async((function(l){for(;;)switch(l.prev=l.next){case 0:s=0;case 1:return l.prev=2,l.next=5,regeneratorRuntime.awrap(function(){var s;return regeneratorRuntime.async((function(d){for(;;)switch(d.prev=d.next){case 0:return d.next=2,regeneratorRuntime.awrap(new Promise((function(s,d){o.createTask(e,t,n,r,a,i,!0).on(H,(function(e){return s(e)})).on($,(function(e){return d(e)}))})));case 2:return s=d.sent,p.emit(H,s),d.next=6,regeneratorRuntime.awrap(new Promise((function(e,t){o.createTaskRecord(s).on(Q,(function(t){return e(t)})).on($,(function(e){return t(e)}))})));case 6:return s=d.sent,p.emit(Q,s),d.next=10,regeneratorRuntime.awrap(new Promise((function(e,t){o.sendTaskInput(s).on(Z,(function(t){return e(t)})).on($,(function(e){return t(e)}))})));case 10:return p.emit(Z,s),d.abrupt("return","break");case 12:case"end":return d.stop()}}))}());case 5:if("break"!==l.sent){l.next=8;break}return l.abrupt("break",17);case 8:l.next=15;break;case 10:if(l.prev=10,l.t0=l.catch(2),!(s++>=d||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==l.t0)){l.next=15;break}return p.emit($,l.t0),l.abrupt("break",17);case 15:l.next=1;break;case 17:case"end":return l.stop()}}),null,null,[[2,10]]),p}},{key:"computeTask",value:function(e,t,n,r,a,i){var s,o=this,d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,p=new v.a;return regeneratorRuntime.async((function(l){for(;;)switch(l.prev=l.next){case 0:s=0;case 1:return l.prev=2,l.next=5,regeneratorRuntime.awrap(function(){var s;return regeneratorRuntime.async((function(d){for(;;)switch(d.prev=d.next){case 0:return d.next=2,regeneratorRuntime.awrap(new Promise((function(s,d){o.createTask(e,t,n,r,a,i,!1).on(H,(function(e){return s(e)})).on($,(function(e){return d(e)}))})));case 2:return s=d.sent,p.emit(H,s),d.next=6,regeneratorRuntime.awrap(new Promise((function(e,t){o.createTaskRecord(s).on(Q,(function(t){return e(t)})).on($,(function(e){return t(e)}))})));case 6:return s=d.sent,p.emit(Q,s),d.next=10,regeneratorRuntime.awrap(new Promise((function(e,t){o.sendTaskInput(s).on(j,(function(t){return e(t)})).on($,(function(e){return t(e)}))})));case 10:return p.emit(j,s),d.abrupt("return","break");case 12:case"end":return d.stop()}}))}());case 5:if("break"!==l.sent){l.next=8;break}return l.abrupt("break",17);case 8:l.next=15;break;case 10:if(l.prev=10,l.t0=l.catch(2),!(s++>=d||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==l.t0)){l.next=15;break}return p.emit($,l.t0),l.abrupt("break",17);case 15:l.next=1;break;case 17:case"end":return l.stop()}}),null,null,[[2,10]]),p}},{key:"getTaskId",value:function(e,t){return this.web3.utils.soliditySha3({t:"address",v:e},{t:"uint256",v:t})}}])&&Ve(t.prototype,n),r&&Ve(t,r),e}();n.d(t,"Enigma",(function(){return xe})),n.d(t,"utils",(function(){return D})),n.d(t,"eeConstants",(function(){return r})),n.d(t,"Task",(function(){return ge}))}])}));
//# sourceMappingURL=enigma-js.node.min.js.map