!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("enigma-js",[],t):"object"==typeof exports?exports["enigma-js"]=t():e["enigma-js"]=t()}(global,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=14)}([function(e,t){e.exports=require("node-forge")},function(e,t){e.exports=require("eventemitter3")},function(e,t){e.exports=require("jsbi")},function(e,t){e.exports=require("web3-utils")},function(e,t){e.exports=require("buffer")},function(e,t){e.exports=require("zlib")},function(e,t){e.exports=require("eth-crypto")},function(e,t){e.exports=require("elliptic")},function(e){e.exports=JSON.parse('{"contractName":"Enigma","abi":[{"constant":true,"inputs":[],"name":"getIsvSvn","outputs":[{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getAllSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getTaskTimeoutSize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getMrSigner","outputs":[{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getWorkersParams","outputs":[{"components":[{"name":"firstBlockNumber","type":"uint256"},{"name":"workers","type":"address[]"},{"name":"stakes","type":"uint256[]"},{"name":"seed","type":"uint256"}],"name":"","type":"tuple[5]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_scAddr","type":"bytes32"}],"name":"getSecretContract","outputs":[{"components":[{"name":"owner","type":"address"},{"name":"preCodeHash","type":"bytes32"},{"name":"codeHash","type":"bytes32"},{"name":"stateDeltaHashes","type":"bytes32[]"},{"name":"status","type":"uint8"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"getTaskRecord","outputs":[{"components":[{"name":"sender","type":"address"},{"name":"inputsHash","type":"bytes32"},{"name":"outputHash","type":"bytes32"},{"name":"gasLimit","type":"uint64"},{"name":"gasPx","type":"uint64"},{"name":"blockNumber","type":"uint256"},{"name":"status","type":"uint8"},{"name":"proof","type":"bytes"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_signer","type":"address"}],"name":"getWorkerFromSigningAddress","outputs":[{"name":"","type":"address"},{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getUpdatedEnigmaContractAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_worker","type":"address"}],"name":"getWorker","outputs":[{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSigningAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEpochSize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_sender","type":"address"}],"name":"getUserTaskDeployments","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_tokenAddress","type":"address"},{"name":"_principal","type":"address"},{"name":"_epochSize","type":"uint256"},{"name":"_timeoutThreshold","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event"},{"constant":false,"inputs":[{"name":"_signer","type":"address"},{"name":"_report","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_custodian","type":"address"},{"name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"login","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"logout","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContractFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_preCodeHash","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_initStateDeltaHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"countSecretContracts","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_start","type":"uint256"},{"name":"_stop","type":"uint256"}],"name":"getSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint64"},{"name":"_gasPx","type":"uint64"},{"name":"_firstBlockNumber","type":"uint256"},{"name":"_nonce","type":"uint256"}],"name":"createDeploymentTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint64"},{"name":"_gasPx","type":"uint64"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_stateDeltaHash","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitReceipt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitTaskFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"returnFeesForTask","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_seed","type":"uint256"},{"name":"_sig","type":"bytes"}],"name":"setWorkersParams","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getActiveWorkers","outputs":[{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getFirstBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getWorkerParams","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_scAddr","type":"bytes32"}],"name":"getWorkerGroup","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_custodian","type":"address"}],"name":"getReport","outputs":[{"name":"","type":"address"},{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_data","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"verifyReport","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_updatedEnigmaContractAddress","type":"address"}],"name":"upgradeEnigmaContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_workerAddress","type":"address"},{"name":"_signer","type":"address"},{"name":"_sig","type":"bytes"}],"name":"transferWorkerStakePostUpgrade","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_mrSigner","type":"bytes"}],"name":"setMrSigner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_isvSvn","type":"bytes"}],"name":"setIsvSvn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getActiveWorkers\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getWorkerGroup\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"logout\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_isvSvn\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setIsvSvn\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitReceipt\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getIsvSvn\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"deposit\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_initStateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_seed\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setWorkersParams\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getAllSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getTaskTimeoutSize\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getMrSigner\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getWorkersParams\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple[5]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"countSecretContracts\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getSecretContract\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"register\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_mrSigner\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setMrSigner\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_workerAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"transferWorkerStakePostUpgrade\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_start\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_stop\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getTaskRecord\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"proof\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"isOwner\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getWorkerParams\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorkerFromSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContractFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"login\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_data\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"verifyReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getUpdatedEnigmaContractAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_worker\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorker\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createDeploymentTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitTaskFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getFirstBlockNumber\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getEpochSize\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"returnFeesForTask\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_updatedEnigmaContractAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"upgradeEnigmaContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_sender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getUserTaskDeployments\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"name\\":\\"_tokenAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_principal\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_epochSize\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_timeoutThreshold\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"custodian\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"Registered\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"inclusionBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"indexed\\":false,\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WorkersParameterized\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"deltaHashIndex\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailedETH\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"TaskFeeReturned\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"DepositSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WithdrawSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"initStateDeltaHash\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"SecretContractDeployed\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_optionalEthereumContractAddress\\":\\"Output state hash\\",\\"_optionalEthereumData\\":\\"Output state hash\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_stateDeltaHash\\":\\"Input state delta hash\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"countSecretContracts()\\":{\\"return\\":\\"Number of deployed secret contracts\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\",\\"_nonce\\":\\"Locally-computed nonce value for this deployment\\"}},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_initStateDeltaHash\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumContractAddress\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumData\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_preCodeHash\\":\\"Predeployed bytecode hash\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deposit(address,uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\",\\"_custodian\\":\\"The worker\'s ETH address\\"}},\\"getActiveWorkers(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"}},\\"getAllSecretContractAddresses()\\":{\\"return\\":\\"Array of secret contract addresses\\"},\\"getEpochSize()\\":{\\"return\\":\\"Epoch size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Block number\\"},\\"getIsvSvn()\\":{\\"return\\":\\"isvSvn\\"},\\"getMrSigner()\\":{\\"return\\":\\"mrSigner\\"},\\"getReport(address)\\":{\\"params\\":{\\"_custodian\\":\\"The worker\'s custodian address\\"}},\\"getSecretContract(bytes32)\\":{\\"params\\":{\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"SecretContract struct\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"params\\":{\\"_start\\":\\"Start of range\\",\\"_stop\\":\\"End of range\\"},\\"return\\":\\"Subset of deployed secret contract addresses\\"},\\"getSigningAddress()\\":{\\"return\\":\\"Signing address\\"},\\"getTaskRecord(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique identifier for a given task\\"},\\"return\\":\\"TaskRecord struct\\"},\\"getTaskTimeoutSize()\\":{\\"return\\":\\"task timeout\\"},\\"getUpdatedEnigmaContractAddress()\\":{\\"return\\":\\"Updated Enigma contract address\\"},\\"getUserTaskDeployments(address)\\":{\\"params\\":{\\"_sender\\":\\"Task sender\'s ethereum address\\"},\\"return\\":\\"Current number for task deployments for user\\"},\\"getWorker(address)\\":{\\"params\\":{\\"_worker\\":\\"Worker\'s ethereum address\\"},\\"return\\":\\"Worker struct\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"params\\":{\\"_signer\\":\\"Worker\'s signing address\\"},\\"return\\":\\"Ethereum addressWorker struct\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number the task record was mined\\",\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"Selected workers\' addresses\\"},\\"getWorkerParams(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes\\"},\\"getWorkersParams()\\":{\\"return\\":\\"Array of WorkersParams structs\\"},\\"isOwner()\\":{\\"return\\":\\"true if `msg.sender` is the owner of the contract.\\"},\\"owner()\\":{\\"return\\":\\"the address of the owner.\\"},\\"register(address,bytes,bytes)\\":{\\"params\\":{\\"_report\\":\\"The RLP encoded report returned by the IAS\\",\\"_signature\\":\\"Signature\\",\\"_signer\\":\\"The signer address, derived from the enclave public key\\"}},\\"renounceOwnership()\\":{\\"details\\":\\"Allows the current owner to relinquish control of the contract.\\"},\\"returnFeesForTask(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique taskId\\"}},\\"setIsvSvn(bytes)\\":{\\"params\\":{\\"_isvSvn\\":\\"mrSigner\\"}},\\"setMrSigner(bytes)\\":{\\"params\\":{\\"_mrSigner\\":\\"mrSigner\\"}},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number principal node is attempting to set worker params\\",\\"_seed\\":\\"The random integer generated by the enclave\\",\\"_sig\\":\\"Principal node\'s signature\\"}},\\"transferOwnership(address)\\":{\\"details\\":\\"Allows the current owner to transfer control of the contract to a newOwner.\\",\\"params\\":{\\"newOwner\\":\\"The address to transfer ownership to.\\"}},\\"transferWorkerStakePostUpgrade(address,address,bytes)\\":{\\"params\\":{\\"_sig\\":\\"Signature\\",\\"_signer\\":\\"Newly-registered worker address\\",\\"_workerAddress\\":\\"Newly-registered worker address\\"}},\\"upgradeEnigmaContract(address)\\":{\\"params\\":{\\"_updatedEnigmaContractAddress\\":\\"Updated newly-deployed Enigma contract address\\"}},\\"verifyReport(bytes,bytes)\\":{\\"params\\":{\\"_data\\":\\"The report itself\\",\\"_signature\\":\\"The signature of the report\\"}},\\"withdraw(uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\"}}}},\\"userdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee.\\"},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure.\\"},\\"countSecretContracts()\\":{\\"notice\\":\\"Check if secret contract has been deployed\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"notice\\":\\"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid.\\"},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"notice\\":\\"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deposit(address,uint256)\\":{\\"notice\\":\\"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\"},\\"getActiveWorkers(uint256)\\":{\\"notice\\":\\"Get active workers before a certain block number\\"},\\"getAllSecretContractAddresses()\\":{\\"notice\\":\\"Get all secret contract addresses\\"},\\"getEpochSize()\\":{\\"notice\\":\\"Get the epoch block size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"notice\\":\\"Get the first block number of an epoch that a given block number belongs to\\"},\\"getIsvSvn()\\":{\\"notice\\":\\"Get isvSvn\\"},\\"getMrSigner()\\":{\\"notice\\":\\"Get mrSigner\\"},\\"getReport(address)\\":{\\"notice\\":\\"The RLP encoded report returned by the IAS server\\"},\\"getSecretContract(bytes32)\\":{\\"notice\\":\\"Get a SecretContract struct given a particular secret contract address\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"notice\\":\\"Get deployed secret contract addresses within a range\\"},\\"getSigningAddress()\\":{\\"notice\\":\\"Get signing address of calling worker\\"},\\"getTaskRecord(bytes32)\\":{\\"notice\\":\\"Get a TaskRecord struct given a particular task\'s ID\\"},\\"getTaskTimeoutSize()\\":{\\"notice\\":\\"Get the task timeout size\\"},\\"getUpdatedEnigmaContractAddress()\\":{\\"notice\\":\\"Get updated Enigma contract address\\"},\\"getUserTaskDeployments(address)\\":{\\"notice\\":\\"Get the current number/index (used as unique nonce value) of task deployments for a given user user\\"},\\"getWorker(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s ethereum address\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s signing address\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"notice\\":\\"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address.\\"},\\"getWorkerParams(uint256)\\":{\\"notice\\":\\"Get worker params for an epoch given a particular block number\\"},\\"getWorkersParams()\\":{\\"notice\\":\\"Get epoch-based history of worker params information\\"},\\"login()\\":{\\"notice\\":\\"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process.\\"},\\"logout()\\":{\\"notice\\":\\"Logout worker. Worker must be logged in to do so.\\"},\\"register(address,bytes,bytes)\\":{\\"notice\\":\\"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks.\\"},\\"renounceOwnership()\\":{\\"notice\\":\\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\\"},\\"returnFeesForTask(bytes32)\\":{\\"notice\\":\\"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\"},\\"setIsvSvn(bytes)\\":{\\"notice\\":\\"Set isvSvn\\"},\\"setMrSigner(bytes)\\":{\\"notice\\":\\"Set mrSigner\\"},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"notice\\":\\"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node\\"},\\"transferWorkerStakePostUpgrade(address,address,bytes)\\":{\\"notice\\":\\"Upgrade Enigma Contract\\"},\\"upgradeEnigmaContract(address)\\":{\\"notice\\":\\"Upgrade Enigma Contract\\"},\\"verifyReport(bytes,bytes)\\":{\\"notice\\":\\"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\"},\\"withdraw(uint256)\\":{\\"notice\\":\\"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\"}}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":\\"Enigma\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":{\\"keccak256\\":\\"0xca5e3e4e9cb85e3a29236995c18197eb4f227e686f0f00307c6765ed89b19692\\",\\"urls\\":[\\"bzzr://05ec877e9c13c9581685c0a79ce4b095697ac99345a82acf71989456a36757b3\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol\\":{\\"keccak256\\":\\"0x5bd9c996532891c2234021e7a827a8b997352074a0b3dec322adc52d864f14b3\\",\\"urls\\":[\\"bzzr://0b7c3170039b962271adb4d1289e3bf2287853e48720c6dd50213ed8c4f56c96\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol\\":{\\"keccak256\\":\\"0x3561ef1b7d2b0d76592c63b022e6b5f6490b1898ca75e19e03bb4da04fc4e123\\",\\"urls\\":[\\"bzzr://08fe12fa6d68fa21867a417053674d8006b7d615c1af598c243b79bbbb30c42e\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol\\":{\\"keccak256\\":\\"0x1ffde470701aa2b66ca193eed2d48a53b9e0963a3011048064d974bb8690e90e\\",\\"urls\\":[\\"bzzr://f75a3bcb344313374419c0d3783e3d8659ce017a190546e16187d445b3f4b693\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol\\":{\\"keccak256\\":\\"0xaba87ac6cd834c8a356a454c9eeca6373a159c772e70c2d444facb024907f087\\",\\"urls\\":[\\"bzzr://e8c6d14b96f76d84c547c841b61e0df7a87fdb3f099621cafbe70f45c79cbf05\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol\\":{\\"keccak256\\":\\"0x72a194e1e9a510af7a9cbbbda122b9861389563c982dce89344c443bdc0cb7a0\\",\\"urls\\":[\\"bzzr://f418e9114e7641b548a45e6adec42e92c88398a6b06cc36c5fec12625e22496c\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol\\":{\\"keccak256\\":\\"0xd2620fd3dd9691f88740477d06dd32b4ecb7f090f7c76fd1e99a3117f5072e4f\\",\\"urls\\":[\\"bzzr://1c4cc43db4ca854e6c8d25c09b139000545e942bc05722b95858d6761b425ee7\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol\\":{\\"keccak256\\":\\"0x4e00d7b1cd34e5f91b51a6d6cff4af44221cda6b193ce91e76f71a838fa889f1\\",\\"urls\\":[\\"bzzr://215fe7b649e59d98e2bb8c94efe38336b3364ea428f69fb2871b5896f65432be\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol\\":{\\"keccak256\\":\\"0x9d17880644d1d94b8abf8648a0d5ee9182a330adefd43bcca8861acb97af99ed\\",\\"urls\\":[\\"bzzr://45579ec347c0e747a3dca63c06d714749c6bdc8045c32608e1c32b40a073f55a\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol\\":{\\"keccak256\\":\\"0xa047b775ffc3d64108d1fec5f92d3d9d689e3b4a2720c1ad9c1103eb0d0d3c74\\",\\"urls\\":[\\"bzzr://45dc23c888c05c23f9216727e0fa8b27d1f7415f41d260b21a392f67b8b83fe3\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol\\":{\\"keccak256\\":\\"0x71d569132578d01bd5e170c59664649c748456b60e1a697f9b416a1bc4f6c769\\",\\"urls\\":[\\"bzzr://dc9a15a4f56f89c7c2c4ae725d8e7431b31b9b3ce5adaabeb13fbcd285e70613\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol\\":{\\"keccak256\\":\\"0xe21e3ce303a61dc1fe7e5ee8c77c94b0a96eaa9015f8abe6eb1fbce2d903b8ee\\",\\"urls\\":[\\"bzzr://ff90e3a82eb6fb10497c419d71bf240f43c544d0071b74b251204200dc08bba1\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Base64.sol\\":{\\"keccak256\\":\\"0x6b6fca483b4fd19ab6f282b45b24f02277ad2b0e2e65269c1f1f9b0672bf8ef3\\",\\"urls\\":[\\"bzzr://227cecb0afb5c808a338d0c757cedf9c085786a8f74fece5d9b14fac332f1301\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Bytes.sol\\":{\\"keccak256\\":\\"0xa9504cd72371444aaec522d40e02f930e9017fc59059c80b4d0b60afe6d3f151\\",\\"urls\\":[\\"bzzr://09e35d59d1fd6c478388e098f8f586d0eb3004af0e8402e5dc0c003b3d555e56\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Memory.sol\\":{\\"keccak256\\":\\"0xbb69933fc38ebf561a60fc4496c8d48f4aef12b5cef49bb9dd2957d8c6478ce0\\",\\"urls\\":[\\"bzzr://a4b1117bcf978aebba7df92a10df9e866cf854033bc2f4d8e426e360ba78d1fa\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol\\":{\\"keccak256\\":\\"0x171f88dc2ce91d601aa659bf84a240a2e7565d26d1a3ef1a0f98ec8181573498\\",\\"urls\\":[\\"bzzr://3830487ad541d0a7df9b761dee0a835cf065e369c6f1b2ac5f8409413f1777b6\\"]},\\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\":{\\"keccak256\\":\\"0xb48974d92a87053dc1d6c5389f3d1b2ad522dec23afcb508eaa935d98dfdc0b6\\",\\"urls\\":[\\"bzzr://e665a84309432c27a26e622665dd97ff29d4d6ad7ad655d6e2c50226a5e99b56\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]},\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\":{\\"keccak256\\":\\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\\",\\"urls\\":[\\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\\"]}},\\"version\\":1}","bytecode":"0x60806040523480156200001157600080fd5b5060405160808062004f588339810180604052620000339190810190620000f6565b602580546001600160a01b0319163317908190556040516001600160a01b0391909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600080546001600160a01b039586166001600160a01b03199182161790915560018381559190920260025560038054939094169282169290921790925560048054909216301790915560218190556022556200019a565b8051620000e38162000175565b92915050565b8051620000e3816200018f565b600080600080608085870312156200010d57600080fd5b60006200011b8787620000d6565b94505060206200012e87828801620000d6565b93505060406200014187828801620000e9565b92505060606200015487828801620000e9565b91505092959194509250565b60006001600160a01b038216620000e3565b90565b620001808162000160565b81146200018c57600080fd5b50565b620001808162000172565b614dae80620001aa6000396000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c80638e055b8b11610146578063ba252688116100c3578063d855a57911610087578063d855a57914610552578063df4da4611461055a578063ee6dcef914610562578063f2fde38b14610575578063f74e6e1d14610588578063f9a9b7ae1461059b5761025e565b8063ba252688146104e6578063c011b1c3146104f9578063c652b91914610519578063ca2af5f21461052c578063cbbc061d1461053f5761025e565b8063a153ec601161010a578063a153ec601461048f578063a3bdae3e146104a2578063b34e97e8146104c3578063b5c14992146104cb578063b9758c95146104de5761025e565b80638e055b8b146104035780638ed05737146104165780638f32d59b146104365780639836ca311461044b578063a0c399821461046e5761025e565b8063550baa2f116101df57806375bbf75b116101a357806375bbf75b1461038d5780637624281e14610395578063786cd4d7146103b55780637a743832146103c85780638056b559146103db5780638da5cb5b146103ee5761025e565b8063550baa2f1461033e5780635f25f85014610353578063700dd4df1461036857806370266a4714610370578063715018a6146103855761025e565b8063365a2cb311610226578063365a2cb3146102dd5780633a92d44c146102f057806347e7ef241461030557806348cc37611461031857806350946a9f1461032b5761025e565b806316f9a2a4146102635780631d40ff0b1461028d5780631f3c99c3146102ad5780632e1a7d4d146102b75780633480943b146102ca575b600080fd5b610276610271366004613885565b6105ae565b6040516102849291906146ce565b60405180910390f35b6102a061029b366004613c0f565b610648565b60405161028491906146bd565b6102b56106e7565b005b6102b56102c5366004613885565b610940565b6102b56102d8366004613b42565b610c87565b6102b56102eb3660046138a3565b610caf565b6102f8610f88565b6040516102849190614723565b6102b5610313366004613790565b61101f565b6102b56103263660046138a3565b61126d565b6102b5610339366004613cb1565b611508565b61034661178f565b60405161028491906146f3565b61035b6117e9565b6040516102849190614b86565b6102f86117ef565b610378611850565b6040516102849190614704565b6102b561196a565b61035b6119c5565b6103a86103a3366004613885565b611a57565b6040516102849190614829565b6102b56103c3366004613747565b611b1e565b6102b56103d6366004613b42565b611c0f565b61035b6103e9366004613692565b611c33565b6103f6611cfe565b604051610284919061466f565b610346610411366004613c0f565b611d0d565b610429610424366004613885565b611da3565b6040516102849190614b44565b61043e611ee3565b6040516102849190614715565b61045e610459366004613885565b611ef4565b6040516102849493929190614b94565b61048161047c36600461366c565b611f97565b60405161028492919061469d565b6102b561049d366004613a0d565b6121da565b6104b56104b036600461366c565b6124a6565b60405161028492919061467d565b6102b5612728565b61035b6104d9366004613b76565b612994565b6103f6612a23565b6102b56104f4366004613a85565b612a32565b61050c61050736600461366c565b612aa2565b6040516102849190614b55565b6102b5610527366004613ada565b612c53565b6102b561053a366004613981565b612cd6565b61035b61054d366004613885565b612fa5565b6103f6613034565b61035b613050565b6102b5610570366004613885565b613056565b6102b561058336600461366c565b6130d7565b6102b561059636600461366c565b6130f4565b61035b6105a936600461366c565b6131a2565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b81526004016105eb929190614910565b60006040518083038186803b15801561060357600080fd5b505af4158015610617573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261063f91908101906137f4565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a9061068a9060009087908790600401614b01565b60006040518083038186803b1580156106a257600080fd5b505af41580156106b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106de91908101906137c0565b90505b92915050565b336106f061322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561073857fe5b600281111561074357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107e05780601f106107b5576101008083540402835291602001916107e0565b820191906000526020600020905b8154815290600101906020018083116107c357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561088b57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561085957fe5b600381111561086457fe5b81526020016001820154815260200160028201548152505081526020019060010190610818565b50505091525090915060019050816020015160028111156108a857fe5b146108d157604051600160e51b62461bcd0281526004016108c8906147d9565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f499061090c9060009060040161483a565b60006040518083038186803b15801561092457600080fd5b505af4158015610938573d6000803e3d6000fd5b505050505050565b3361094961322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561099157fe5b600281111561099c57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a395780601f10610a0e57610100808354040283529160200191610a39565b820191906000526020600020905b815481529060010190602001808311610a1c57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610ae457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610ab257fe5b6003811115610abd57fe5b81526020016001820154815260200160028201548152505081526020019060010190610a71565b5050509152509091506002905081602001516002811115610b0157fe5b14610b2157604051600160e51b62461bcd0281526004016108c890614819565b610b2961325b565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610b659085904390600401614b66565b60606040518083038186803b158015610b7d57600080fd5b505af4158015610b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bb59190810190613bd3565b9050600281516003811115610bc657fe5b14610be657604051600160e51b62461bcd0281526004016108c890614779565b8060200151610bf443612fa5565b11610c1457604051600160e51b62461bcd0281526004016108c8906147c9565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df46490610c51906000908890600401614910565b60006040518083038186803b158015610c6957600080fd5b505af4158015610c7d573d6000803e3d6000fd5b5050505050505050565b610c8f611ee3565b610c9857600080fd5b8051610cab90602490602084019061327d565b5050565b6004546001600160a01b03163014610cdc57604051600160e51b62461bcd0281526004016108c890614799565b33610ce561322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610d2d57fe5b6002811115610d3857fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dd55780601f10610daa57610100808354040283529160200191610dd5565b820191906000526020600020905b815481529060010190602001808311610db857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610e8057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610e4e57fe5b6003811115610e5957fe5b81526020016001820154815260200160028201548152505081526020019060010190610e0d565b5050509152509091506001905081602001516002811115610e9d57fe5b14610ebd57604051600160e51b62461bcd0281526004016108c8906147d9565b8960016000828152601f602052604090206004015460ff166001811115610ee057fe5b14610f0057604051600160e51b62461bcd0281526004016108c890614789565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610f4b906000908f908f908f908f908f908f908f908f9060040161492b565b60006040518083038186803b158015610f6357600080fd5b505af4158015610f77573d6000803e3d6000fd5b505050505050505050505050505050565b60248054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156110145780601f10610fe957610100808354040283529160200191611014565b820191906000526020600020905b815481529060010190602001808311610ff757829003601f168201915b505050505090505b90565b6004546001600160a01b0316301461104c57604051600160e51b62461bcd0281526004016108c890614799565b8161105561322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561109d57fe5b60028111156110a857fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111455780601f1061111a57610100808354040283529160200191611145565b820191906000526020600020905b81548152906001019060200180831161112857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156111f057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156111be57fe5b60038111156111c957fe5b8152602001600182015481526020016002820154815250508152602001906001019061117d565b505050915250909150600090508160200151600281111561120d57fe5b141561122e57604051600160e51b62461bcd0281526004016108c8906147e9565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610c5190600090889088906004016148e8565b6004546001600160a01b0316301461129a57604051600160e51b62461bcd0281526004016108c890614799565b336112a361322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156112eb57fe5b60028111156112f657fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113935780601f1061136857610100808354040283529160200191611393565b820191906000526020600020905b81548152906001019060200180831161137657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561143e57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561140c57fe5b600381111561141757fe5b815260200160018201548152602001600282015481525050815260200190600101906113cb565b505050915250909150600190508160200151600281111561145b57fe5b1461147b57604051600160e51b62461bcd0281526004016108c8906147d9565b89600080828152601f602052604090206004015460ff16600181111561149d57fe5b146114bd57604051600160e51b62461bcd0281526004016108c8906147f9565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610f4b906000908f908f908f908f908f908f908f908f9060040161492b565b6004546001600160a01b0316301461153557604051600160e51b62461bcd0281526004016108c890614799565b3361153e61322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561158657fe5b600281111561159157fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561162e5780601f106116035761010080835404028352916020019161162e565b820191906000526020600020905b81548152906001019060200180831161161157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156116d957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156116a757fe5b60038111156116b257fe5b81526020016001820154815260200160028201548152505081526020019060010190611666565b50505091525090915060009050816020015160028111156116f657fe5b141561171757604051600160e51b62461bcd0281526004016108c8906147e9565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b189061175890600090899089908990600401614b1c565b60006040518083038186803b15801561177057600080fd5b505af4158015611784573d6000803e3d6000fd5b505050505050505050565b60606000601b0180548060200260200160405190810160405280929190818152602001828054801561101457602002820191906000526020600020905b8154815260200190600101908083116117cc575050505050905090565b60025490565b60238054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156110145780601f10610fe957610100808354040283529160200191611014565b6118586132fb565b6040805160a08101909152600660056000835b828210156119615783826004020160405180608001604052908160008201548152602001600182018054806020026020016040519081016040528092919081815260200182805480156118e757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116118c9575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561193f57602002820191906000526020600020905b81548152602001906001019080831161192b575b505050505081526020016003820154815250508152602001906001019061186b565b50505050905090565b611972611ee3565b61197b57600080fd5b6025546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3602580546001600160a01b0319169055565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a338690611a0290849060040161483a565b60206040518083038186803b158015611a1a57600080fd5b505af4158015611a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a529190810190613bf1565b905090565b611a5f613329565b6000828152601f6020908152604091829020825160a08101845281546001600160a01b031681526001820154818401526002820154818501526003820180548551818602810186019096528086529194929360608601939290830182828015611ae757602002820191906000526020600020905b815481526020019060010190808311611ad3575b5050509183525050600482015460209091019060ff166001811115611b0857fe5b6001811115611b1357fe5b90525090505b919050565b6004546001600160a01b03163014611b4b57604051600160e51b62461bcd0281526004016108c890614799565b8260005b601a54811015611bcd57816001600160a01b03166000601c01600080601a018481548110611b7957fe5b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902054161415611bc557604051600160e51b62461bcd0281526004016108c890614769565b600101611b4f565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e2090610c51906000908890889088906004016148a7565b611c17611ee3565b611c2057600080fd5b8051610cab90602390602084019061327d565b6004546000906001600160a01b03163314611c6357604051600160e51b62461bcd0281526004016108c890614809565b604051600160e01b632b1dfbd902815273__UpgradeImpl___________________________90632b1dfbd990611ca490600090889088908890600401614863565b60206040518083038186803b158015611cbc57600080fd5b505af4158015611cd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611cf49190810190613bf1565b90505b9392505050565b6025546001600160a01b031690565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a2600990611d4f9060009087908790600401614b01565b60006040518083038186803b158015611d6757600080fd5b505af4158015611d7b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106de9190810190613851565b611dab613354565b6000828152601d602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff90911690811115611e3a57fe5b6005811115611e4557fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611ed35780601f10611ea857610100808354040283529160200191611ed3565b820191906000526020600020905b815481529060010190602001808311611eb657829003601f168201915b5050505050815250509050919050565b6025546001600160a01b0316331490565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611f34929190614910565b60006040518083038186803b158015611f4c57600080fd5b505af4158015611f60573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611f889190810190613c2e565b93509350935093509193509193565b6000611fa161322b565b6000611fab61322b565b60005b601a548110156121cf57601a8054601c9160009184908110611fcc57fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b90910416600281111561202257fe5b600281111561202d57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120ca5780601f1061209f576101008083540402835291602001916120ca565b820191906000526020600020905b8154815290600101906020018083116120ad57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561217557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561214357fe5b600381111561214e57fe5b81526020016001820154815260200160028201548152505081526020019060010190612102565b50505050815250509150856001600160a01b031682600001516001600160a01b031614156121c757601a8054829081106121ab57fe5b6000918252602090912001546001600160a01b031692506121cf565b600101611fae565b509092509050915091565b6004546001600160a01b0316301461220757604051600160e51b62461bcd0281526004016108c890614799565b3361221061322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561225857fe5b600281111561226357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123005780601f106122d557610100808354040283529160200191612300565b820191906000526020600020905b8154815290600101906020018083116122e357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156123ab57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561237957fe5b600381111561238457fe5b81526020016001820154815260200160028201548152505081526020019060010190612338565b50505091525090915060019050816020015160028111156123c857fe5b146123e857604051600160e51b62461bcd0281526004016108c8906147d9565b85600080828152601f602052604090206004015460ff16600181111561240a57fe5b1461242a57604051600160e51b62461bcd0281526004016108c8906147f9565b604051600160e21b6301c7aeeb02815273__TaskImpl______________________________9063071ebbac9061246d906000908b908b908b908b90600401614a1e565b60006040518083038186803b15801561248557600080fd5b505af4158015612499573d6000803e3d6000fd5b5050505050505050505050565b60006060826124b361322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156124fb57fe5b600281111561250657fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125a35780601f10612578576101008083540402835291602001916125a3565b820191906000526020600020905b81548152906001019060200180831161258657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561264e57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561261c57fe5b600381111561262757fe5b815260200160018201548152602001600282015481525050815260200190600101906125db565b505050915250909150600090508160200151600281111561266b57fe5b141561268c57604051600160e51b62461bcd0281526004016108c8906147e9565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f031906126c9906000908990600401614848565b60006040518083038186803b1580156126e157600080fd5b505af41580156126f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261271d91908101906136f6565b935093505050915091565b3361273161322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561277957fe5b600281111561278457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128215780601f106127f657610100808354040283529160200191612821565b820191906000526020600020905b81548152906001019060200180831161280457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156128cc57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561289a57fe5b60038111156128a557fe5b81526020016001820154815260200160028201548152505081526020019060010190612859565b505050508152505090506128df43612fa5565b6128fe57604051600160e51b62461bcd0281526004016108c8906147b9565b60028160200151600281111561291057fe5b1461293057604051600160e51b62461bcd0281526004016108c890614819565b6021546060820151101561295957604051600160e51b62461bcd0281526004016108c890614759565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e29061090c9060009060040161483a565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________906396462368906129d39086908690600401614734565b60206040518083038186803b1580156129eb57600080fd5b505af41580156129ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106de9190810190613bf1565b6004546001600160a01b031690565b6004546001600160a01b03163014612a5f57604051600160e51b62461bcd0281526004016108c890614799565b604051600160e01b638c91056d02815273__TaskImpl______________________________90638c91056d90610c51906000908890889088908890600401614a70565b612aaa61322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115612af257fe5b6002811115612afd57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b9a5780601f10612b6f57610100808354040283529160200191612b9a565b820191906000526020600020905b815481529060010190602001808311612b7d57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612c4557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612c1357fe5b6003811115612c1e57fe5b81526020016001820154815260200160028201548152505081526020019060010190612bd2565b505050915250909392505050565b612c5b611ee3565b612c6457600080fd5b6004546001600160a01b03163014612c9157604051600160e51b62461bcd0281526004016108c890614799565b604051600160e01b6366e13f4302815273__TaskImpl______________________________906366e13f43906117589060009089908990899089908990600401614ab2565b6004546001600160a01b03163014612d0357604051600160e51b62461bcd0281526004016108c890614799565b33612d0c61322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115612d5457fe5b6002811115612d5f57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612dfc5780601f10612dd157610100808354040283529160200191612dfc565b820191906000526020600020905b815481529060010190602001808311612ddf57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612ea757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612e7557fe5b6003811115612e8057fe5b81526020016001820154815260200160028201548152505081526020019060010190612e34565b5050509152509091506001905081602001516002811115612ec457fe5b14612ee457604051600160e51b62461bcd0281526004016108c8906147d9565b8660016000828152601f602052604090206004015460ff166001811115612f0757fe5b14612f2757604051600160e51b62461bcd0281526004016108c890614789565b604051600160e61b6289b28102815273__TaskImpl______________________________9063226ca04090612f6b906000908c908c908c908c908c906004016149be565b60006040518083038186803b158015612f8357600080fd5b505af4158015612f97573d6000803e3d6000fd5b505050505050505050505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612fe49084908690600401614910565b60206040518083038186803b158015612ffc57600080fd5b505af4158015613010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106e19190810190613bf1565b336000908152601c60205260409020546001600160a01b031690565b60015490565b8060016000828152601d6020526040902060059081015460ff169081111561307a57fe5b1461309a57604051600160e51b62461bcd0281526004016108c8906147a9565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b9061090c906000908690600401614910565b6130df611ee3565b6130e857600080fd5b6130f1816131bc565b50565b6130fc611ee3565b61310557600080fd5b6004546001600160a01b0316301461313257604051600160e51b62461bcd0281526004016108c890614799565b604051600160e01b6368fac41b02815273__UpgradeImpl___________________________906368fac41b9061316f906000908590600401614848565b60006040518083038186803b15801561318757600080fd5b505af415801561319b573d6000803e3d6000fd5b5050505050565b6001600160a01b0316600090815260208052604090205490565b6001600160a01b0381166131cf57600080fd5b6025546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3602580546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106132be57805160ff19168380011785556132eb565b828001600101855582156132eb579182015b828111156132eb5782518255916020019190600101906132d0565b506132f7929150613399565b5090565b6040518061028001604052806005905b6133136133b3565b81526020019060019003908161330b5790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b61101c91905b808211156132f7576000815560010161339f565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b80356106e181614d41565b80516106e181614d41565b600082601f83011261340257600080fd5b815161341561341082614bfb565b614bd5565b9150818183526020840193506020810190508385602084028201111561343a57600080fd5b60005b83811015613466578161345088826133e6565b845250602092830192919091019060010161343d565b5050505092915050565b600082601f83011261348157600080fd5b815161348f61341082614bfb565b915081818352602084019350602081019050838560208402820111156134b457600080fd5b60005b8381101561346657816134ca888261355b565b84525060209283019291909101906001016134b7565b600082601f8301126134f157600080fd5b81516134ff61341082614bfb565b9150818183526020840193506020810190508385602084028201111561352457600080fd5b60005b83811015613466578161353a888261355b565b8452506020928301929190910190600101613527565b80356106e181614d55565b80516106e181614d55565b600082601f83011261357757600080fd5b813561358561341082614c1b565b915080825260208301602083018583830111156135a157600080fd5b6135ac838284614cd7565b50505092915050565b600082601f8301126135c657600080fd5b81516135d461341082614c1b565b915080825260208301602083018583830111156135f057600080fd5b6135ac838284614ce3565b80516106e181614d5e565b60006060828403121561361857600080fd5b6136226060614bd5565b9050600061363084846135fb565b82525060206136418484830161355b565b60208301525060406136558482850161355b565b60408301525092915050565b80356106e181614d6b565b60006020828403121561367e57600080fd5b600061368a84846133db565b949350505050565b6000806000606084860312156136a757600080fd5b60006136b386866133db565b93505060206136c4868287016133db565b92505060408401356001600160401b038111156136e057600080fd5b6136ec86828701613566565b9150509250925092565b6000806040838503121561370957600080fd5b600061371585856133e6565b92505060208301516001600160401b0381111561373157600080fd5b61373d858286016135b5565b9150509250929050565b60008060006060848603121561375c57600080fd5b600061376886866133db565b93505060208401356001600160401b0381111561378457600080fd5b6136c486828701613566565b600080604083850312156137a357600080fd5b60006137af85856133db565b925050602061373d85828601613550565b6000602082840312156137d257600080fd5b81516001600160401b038111156137e857600080fd5b61368a848285016133f1565b6000806040838503121561380757600080fd5b82516001600160401b0381111561381d57600080fd5b613829858286016133f1565b92505060208301516001600160401b0381111561384557600080fd5b61373d858286016134e0565b60006020828403121561386357600080fd5b81516001600160401b0381111561387957600080fd5b61368a84828501613470565b60006020828403121561389757600080fd5b600061368a8484613550565b600080600080600080600080610100898b0312156138c057600080fd5b60006138cc8b8b613550565b98505060206138dd8b828c01613550565b97505060406138ee8b828c01613550565b96505060606138ff8b828c01613550565b95505060808901356001600160401b0381111561391b57600080fd5b6139278b828c01613566565b94505060a06139388b828c016133db565b93505060c06139498b828c01613661565b92505060e08901356001600160401b0381111561396557600080fd5b6139718b828c01613566565b9150509295985092959890939650565b600080600080600060a0868803121561399957600080fd5b60006139a58888613550565b95505060206139b688828901613550565b94505060406139c788828901613550565b93505060606139d888828901613661565b92505060808601356001600160401b038111156139f457600080fd5b613a0088828901613566565b9150509295509295909350565b60008060008060808587031215613a2357600080fd5b6000613a2f8787613550565b9450506020613a4087828801613550565b9350506040613a5187828801613661565b92505060608501356001600160401b03811115613a6d57600080fd5b613a7987828801613566565b91505092959194509250565b60008060008060808587031215613a9b57600080fd5b6000613aa78787613550565b9450506020613ab887828801613661565b9350506040613ac987828801613661565b9250506060613a7987828801613550565b600080600080600060a08688031215613af257600080fd5b6000613afe8888613550565b9550506020613b0f88828901613661565b9450506040613b2088828901613661565b9350506060613b3188828901613550565b9250506080613a0088828901613550565b600060208284031215613b5457600080fd5b81356001600160401b03811115613b6a57600080fd5b61368a84828501613566565b60008060408385031215613b8957600080fd5b82356001600160401b03811115613b9f57600080fd5b613bab85828601613566565b92505060208301356001600160401b03811115613bc757600080fd5b61373d85828601613566565b600060608284031215613be557600080fd5b600061368a8484613606565b600060208284031215613c0357600080fd5b600061368a848461355b565b60008060408385031215613c2257600080fd5b60006137af8585613550565b60008060008060808587031215613c4457600080fd5b6000613c50878761355b565b9450506020613c618782880161355b565b93505060408501516001600160401b03811115613c7d57600080fd5b613c89878288016133f1565b92505060608501516001600160401b03811115613ca557600080fd5b613a79878288016134e0565b600080600060608486031215613cc657600080fd5b6000613cd28686613550565b93505060206136c486828701613550565b6000613cef8383613d23565b505060200190565b6000613cef8383614024565b6000613d0f83836144f6565b505060600190565b60006106de838361460b565b613d2c81614c5b565b82525050565b6000613d3d82614c48565b613d478185614c52565b9350613d5283614c42565b8060005b83811015613d80578151613d6a8882613ce3565b9750613d7583614c42565b925050600101613d56565b509495945050505050565b6000613d9682614c48565b613da08185614c52565b9350613dab83614c42565b8060005b83811015613d80578151613dc38882613ce3565b9750613dce83614c42565b925050600101613daf565b6000613de482614c48565b613dee8185614c52565b9350613df983614c42565b8060005b83811015613d80578151613e118882613cf7565b9750613e1c83614c42565b925050600101613dfd565b6000613e3282614c48565b613e3c8185614c52565b9350613e4783614c42565b8060005b83811015613d80578151613e5f8882613cf7565b9750613e6a83614c42565b925050600101613e4b565b6000613e8082614c48565b613e8a8185614c52565b9350613e9583614c42565b8060005b83811015613d80578151613ead8882613d03565b9750613eb883614c42565b925050600101613e99565b6000613ece82614c48565b613ed88185614c52565b9350613ee383614c42565b8060005b83811015613d80578151613efb8882613d03565b9750613f0683614c42565b925050600101613ee7565b6000613f1c82614c4c565b613f268185611b19565b935083602082028501613f388561101c565b8060005b85811015613f725784840389528151613f558582613d17565b9450613f6083614c42565b60209a909a0199925050600101613f3c565b5091979650505050505050565b6000613f8a82614c48565b613f948185614c52565b9350613f9f83614c42565b8060005b83811015613d80578151613fb78882613cf7565b9750613fc283614c42565b925050600101613fa3565b6000613fd882614c48565b613fe28185614c52565b9350613fed83614c42565b8060005b83811015613d805781516140058882613cf7565b975061401083614c42565b925050600101613ff1565b613d2c81614c66565b613d2c8161101c565b600061403882614c48565b6140428185614c52565b9350614052818560208601614ce3565b61405b81614d0f565b9093019392505050565b613d2c81614cab565b613d2c81614cb6565b613d2c81614cc1565b613d2c81614ccc565b6000614096602283614c52565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b60006140dd601883614c52565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b6000614116602783614c52565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000614162601c83614c52565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b600061419b601b83614c52565b7f4e6f74207570646174656420456e69676d6120636f6e74726163740000000000815260200192915050565b60006141d4601383614c52565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b600061420d602783614c52565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b6000614259602e83614c52565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b60006142b8601483614c52565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b60006142f1601383614c52565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b600061432a602083614c52565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000614363602083614c52565b7f4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374815260200192915050565b600061439c602783614c52565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a08401906143ef8582613d23565b5060208301516144026020860182614024565b5060408301516144156040860182614024565b506060830151848203606086015261442d8282613e27565b91505060808301516144426080860182614065565b509392505050565b9052565b80516000906101008401906144638582613d23565b5060208301516144766020860182614024565b5060408301516144896040860182614024565b50606083015161449c6060860182614666565b5060808301516144af6080860182614666565b5060a08301516144c260a0860182614024565b5060c08301516144d560c086018261406e565b5060e083015184820360e08601526144ed828261402d565b95945050505050565b805160608301906145078482614077565b50602082015161451a6020850182614024565b50604082015161452d6040850182614024565b50505050565b805160009060a08401906145478582613d23565b50602083015161455a6020860182614080565b5060408301518482036040860152614572828261402d565b91505060608301516145876060860182614024565b50608083015184820360808601526144ed8282613e75565b805160009060a08401906145b38582613d23565b5060208301516145c66020860182614080565b50604083015184820360408601526145de828261402d565b91505060608301516145f36060860182614024565b50608083015184820360808601526144ed8282613ec3565b8051600090608084019061461f8582614024565b50602083015184820360208601526146378282613d8b565b915050604083015184820360408601526146518282613fcd565b91505060608301516144426060860182614024565b613d2c81614c9f565b602081016106e18284613d23565b6040810161468b8285613d23565b8181036020830152611cf4818461402d565b604081016146ab8285613d23565b8181036020830152611cf48184614533565b602080825281016106de8184613d32565b604080825281016146df8185613d32565b90508181036020830152611cf48184613f7f565b602080825281016106de8184613dd9565b602080825281016106de8184613f11565b602081016106e1828461401b565b602080825281016106de818461402d565b60408082528101614745818561402d565b90508181036020830152611cf4818461402d565b602080825281016106e181614089565b602080825281016106e1816140d0565b602080825281016106e181614109565b602080825281016106e181614155565b602080825281016106e18161418e565b602080825281016106e1816141c7565b602080825281016106e181614200565b602080825281016106e18161424c565b602080825281016106e1816142ab565b602080825281016106e1816142e4565b602080825281016106e18161431d565b602080825281016106e181614356565b602080825281016106e18161438f565b602080825281016106de81846143db565b602081016106e1828461444a565b60408101614856828561444a565b611cf76020830184613d23565b60808101614871828761444a565b61487e6020830186613d23565b61488b6040830185613d23565b818103606083015261489d818461402d565b9695505050505050565b608081016148b5828761444a565b6148c26020830186613d23565b81810360408301526148d4818561402d565b9050818103606083015261489d818461402d565b606081016148f6828661444a565b6149036020830185613d23565b61368a6040830184614024565b6040810161491e828561444a565b611cf76020830184614024565b610120810161493a828c61444a565b614947602083018b614024565b614954604083018a614024565b6149616060830189614024565b61496e6080830188614024565b81810360a0830152614980818761402d565b905061498f60c0830186613d23565b61499c60e0830185614666565b8181036101008301526149af818461402d565b9b9a5050505050505050505050565b60c081016149cc828961444a565b6149d96020830188614024565b6149e66040830187614024565b6149f36060830186614024565b614a006080830185614666565b81810360a0830152614a12818461402d565b98975050505050505050565b60a08101614a2c828861444a565b614a396020830187614024565b614a466040830186614024565b614a536060830185614666565b8181036080830152614a65818461402d565b979650505050505050565b60a08101614a7e828861444a565b614a8b6020830187614024565b614a986040830186614666565b614aa56060830185614666565b61489d6080830184614024565b60c08101614ac0828961444a565b614acd6020830188614024565b614ada6040830187614666565b614ae76060830186614666565b614af46080830185614024565b614a6560a0830184614024565b60608101614b0f828661444a565b6149036020830185614024565b60808101614b2a828761444a565b614b376020830186614024565b61488b6040830185614024565b602080825281016106de818461444e565b602080825281016106de8184614533565b60408082528101614b77818561459f565b9050611cf76020830184614024565b602081016106e18284614024565b60808101614ba28287614024565b614baf6020830186614024565b8181036040830152614bc18185613d32565b9050818103606083015261489d8184613f7f565b6040518181016001600160401b0381118282101715614bf357600080fd5b604052919050565b60006001600160401b03821115614c1157600080fd5b5060209081020190565b60006001600160401b03821115614c3157600080fd5b506020601f91909101601f19160190565b60200190565b5190565b50600590565b90815260200190565b60006106e182614c93565b151590565b80611b1981614d19565b80611b1981614d23565b80611b1981614d2d565b80611b1981614d37565b6001600160a01b031690565b6001600160401b031690565b60006106e182614c6b565b60006106e182614c75565b60006106e182614c7f565b60006106e182614c89565b82818337506000910152565b60005b83811015614cfe578181015183820152602001614ce6565b8381111561452d5750506000910152565b601f01601f191690565b600281106130f157fe5b600681106130f157fe5b600481106130f157fe5b600381106130f157fe5b614d4a81614c5b565b81146130f157600080fd5b614d4a8161101c565b600481106130f157600080fd5b614d4a81614c9f56fea265627a7a7230582048ef9e326d0514eab1ae5cced65bd3c0f2e46771088ddca58d003c5bc3f29c366c6578706572696d656e74616cf50037","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061025e5760003560e01c80638e055b8b11610146578063ba252688116100c3578063d855a57911610087578063d855a57914610552578063df4da4611461055a578063ee6dcef914610562578063f2fde38b14610575578063f74e6e1d14610588578063f9a9b7ae1461059b5761025e565b8063ba252688146104e6578063c011b1c3146104f9578063c652b91914610519578063ca2af5f21461052c578063cbbc061d1461053f5761025e565b8063a153ec601161010a578063a153ec601461048f578063a3bdae3e146104a2578063b34e97e8146104c3578063b5c14992146104cb578063b9758c95146104de5761025e565b80638e055b8b146104035780638ed05737146104165780638f32d59b146104365780639836ca311461044b578063a0c399821461046e5761025e565b8063550baa2f116101df57806375bbf75b116101a357806375bbf75b1461038d5780637624281e14610395578063786cd4d7146103b55780637a743832146103c85780638056b559146103db5780638da5cb5b146103ee5761025e565b8063550baa2f1461033e5780635f25f85014610353578063700dd4df1461036857806370266a4714610370578063715018a6146103855761025e565b8063365a2cb311610226578063365a2cb3146102dd5780633a92d44c146102f057806347e7ef241461030557806348cc37611461031857806350946a9f1461032b5761025e565b806316f9a2a4146102635780631d40ff0b1461028d5780631f3c99c3146102ad5780632e1a7d4d146102b75780633480943b146102ca575b600080fd5b610276610271366004613885565b6105ae565b6040516102849291906146ce565b60405180910390f35b6102a061029b366004613c0f565b610648565b60405161028491906146bd565b6102b56106e7565b005b6102b56102c5366004613885565b610940565b6102b56102d8366004613b42565b610c87565b6102b56102eb3660046138a3565b610caf565b6102f8610f88565b6040516102849190614723565b6102b5610313366004613790565b61101f565b6102b56103263660046138a3565b61126d565b6102b5610339366004613cb1565b611508565b61034661178f565b60405161028491906146f3565b61035b6117e9565b6040516102849190614b86565b6102f86117ef565b610378611850565b6040516102849190614704565b6102b561196a565b61035b6119c5565b6103a86103a3366004613885565b611a57565b6040516102849190614829565b6102b56103c3366004613747565b611b1e565b6102b56103d6366004613b42565b611c0f565b61035b6103e9366004613692565b611c33565b6103f6611cfe565b604051610284919061466f565b610346610411366004613c0f565b611d0d565b610429610424366004613885565b611da3565b6040516102849190614b44565b61043e611ee3565b6040516102849190614715565b61045e610459366004613885565b611ef4565b6040516102849493929190614b94565b61048161047c36600461366c565b611f97565b60405161028492919061469d565b6102b561049d366004613a0d565b6121da565b6104b56104b036600461366c565b6124a6565b60405161028492919061467d565b6102b5612728565b61035b6104d9366004613b76565b612994565b6103f6612a23565b6102b56104f4366004613a85565b612a32565b61050c61050736600461366c565b612aa2565b6040516102849190614b55565b6102b5610527366004613ada565b612c53565b6102b561053a366004613981565b612cd6565b61035b61054d366004613885565b612fa5565b6103f6613034565b61035b613050565b6102b5610570366004613885565b613056565b6102b561058336600461366c565b6130d7565b6102b561059636600461366c565b6130f4565b61035b6105a936600461366c565b6131a2565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b81526004016105eb929190614910565b60006040518083038186803b15801561060357600080fd5b505af4158015610617573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261063f91908101906137f4565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a9061068a9060009087908790600401614b01565b60006040518083038186803b1580156106a257600080fd5b505af41580156106b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106de91908101906137c0565b90505b92915050565b336106f061322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561073857fe5b600281111561074357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107e05780601f106107b5576101008083540402835291602001916107e0565b820191906000526020600020905b8154815290600101906020018083116107c357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561088b57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561085957fe5b600381111561086457fe5b81526020016001820154815260200160028201548152505081526020019060010190610818565b50505091525090915060019050816020015160028111156108a857fe5b146108d157604051600160e51b62461bcd0281526004016108c8906147d9565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f499061090c9060009060040161483a565b60006040518083038186803b15801561092457600080fd5b505af4158015610938573d6000803e3d6000fd5b505050505050565b3361094961322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561099157fe5b600281111561099c57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a395780601f10610a0e57610100808354040283529160200191610a39565b820191906000526020600020905b815481529060010190602001808311610a1c57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610ae457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610ab257fe5b6003811115610abd57fe5b81526020016001820154815260200160028201548152505081526020019060010190610a71565b5050509152509091506002905081602001516002811115610b0157fe5b14610b2157604051600160e51b62461bcd0281526004016108c890614819565b610b2961325b565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610b659085904390600401614b66565b60606040518083038186803b158015610b7d57600080fd5b505af4158015610b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bb59190810190613bd3565b9050600281516003811115610bc657fe5b14610be657604051600160e51b62461bcd0281526004016108c890614779565b8060200151610bf443612fa5565b11610c1457604051600160e51b62461bcd0281526004016108c8906147c9565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df46490610c51906000908890600401614910565b60006040518083038186803b158015610c6957600080fd5b505af4158015610c7d573d6000803e3d6000fd5b5050505050505050565b610c8f611ee3565b610c9857600080fd5b8051610cab90602490602084019061327d565b5050565b6004546001600160a01b03163014610cdc57604051600160e51b62461bcd0281526004016108c890614799565b33610ce561322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610d2d57fe5b6002811115610d3857fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dd55780601f10610daa57610100808354040283529160200191610dd5565b820191906000526020600020905b815481529060010190602001808311610db857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610e8057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610e4e57fe5b6003811115610e5957fe5b81526020016001820154815260200160028201548152505081526020019060010190610e0d565b5050509152509091506001905081602001516002811115610e9d57fe5b14610ebd57604051600160e51b62461bcd0281526004016108c8906147d9565b8960016000828152601f602052604090206004015460ff166001811115610ee057fe5b14610f0057604051600160e51b62461bcd0281526004016108c890614789565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610f4b906000908f908f908f908f908f908f908f908f9060040161492b565b60006040518083038186803b158015610f6357600080fd5b505af4158015610f77573d6000803e3d6000fd5b505050505050505050505050505050565b60248054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156110145780601f10610fe957610100808354040283529160200191611014565b820191906000526020600020905b815481529060010190602001808311610ff757829003601f168201915b505050505090505b90565b6004546001600160a01b0316301461104c57604051600160e51b62461bcd0281526004016108c890614799565b8161105561322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561109d57fe5b60028111156110a857fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111455780601f1061111a57610100808354040283529160200191611145565b820191906000526020600020905b81548152906001019060200180831161112857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156111f057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156111be57fe5b60038111156111c957fe5b8152602001600182015481526020016002820154815250508152602001906001019061117d565b505050915250909150600090508160200151600281111561120d57fe5b141561122e57604051600160e51b62461bcd0281526004016108c8906147e9565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610c5190600090889088906004016148e8565b6004546001600160a01b0316301461129a57604051600160e51b62461bcd0281526004016108c890614799565b336112a361322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156112eb57fe5b60028111156112f657fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113935780601f1061136857610100808354040283529160200191611393565b820191906000526020600020905b81548152906001019060200180831161137657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561143e57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561140c57fe5b600381111561141757fe5b815260200160018201548152602001600282015481525050815260200190600101906113cb565b505050915250909150600190508160200151600281111561145b57fe5b1461147b57604051600160e51b62461bcd0281526004016108c8906147d9565b89600080828152601f602052604090206004015460ff16600181111561149d57fe5b146114bd57604051600160e51b62461bcd0281526004016108c8906147f9565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610f4b906000908f908f908f908f908f908f908f908f9060040161492b565b6004546001600160a01b0316301461153557604051600160e51b62461bcd0281526004016108c890614799565b3361153e61322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561158657fe5b600281111561159157fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561162e5780601f106116035761010080835404028352916020019161162e565b820191906000526020600020905b81548152906001019060200180831161161157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156116d957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156116a757fe5b60038111156116b257fe5b81526020016001820154815260200160028201548152505081526020019060010190611666565b50505091525090915060009050816020015160028111156116f657fe5b141561171757604051600160e51b62461bcd0281526004016108c8906147e9565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b189061175890600090899089908990600401614b1c565b60006040518083038186803b15801561177057600080fd5b505af4158015611784573d6000803e3d6000fd5b505050505050505050565b60606000601b0180548060200260200160405190810160405280929190818152602001828054801561101457602002820191906000526020600020905b8154815260200190600101908083116117cc575050505050905090565b60025490565b60238054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156110145780601f10610fe957610100808354040283529160200191611014565b6118586132fb565b6040805160a08101909152600660056000835b828210156119615783826004020160405180608001604052908160008201548152602001600182018054806020026020016040519081016040528092919081815260200182805480156118e757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116118c9575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561193f57602002820191906000526020600020905b81548152602001906001019080831161192b575b505050505081526020016003820154815250508152602001906001019061186b565b50505050905090565b611972611ee3565b61197b57600080fd5b6025546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3602580546001600160a01b0319169055565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a338690611a0290849060040161483a565b60206040518083038186803b158015611a1a57600080fd5b505af4158015611a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a529190810190613bf1565b905090565b611a5f613329565b6000828152601f6020908152604091829020825160a08101845281546001600160a01b031681526001820154818401526002820154818501526003820180548551818602810186019096528086529194929360608601939290830182828015611ae757602002820191906000526020600020905b815481526020019060010190808311611ad3575b5050509183525050600482015460209091019060ff166001811115611b0857fe5b6001811115611b1357fe5b90525090505b919050565b6004546001600160a01b03163014611b4b57604051600160e51b62461bcd0281526004016108c890614799565b8260005b601a54811015611bcd57816001600160a01b03166000601c01600080601a018481548110611b7957fe5b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902054161415611bc557604051600160e51b62461bcd0281526004016108c890614769565b600101611b4f565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e2090610c51906000908890889088906004016148a7565b611c17611ee3565b611c2057600080fd5b8051610cab90602390602084019061327d565b6004546000906001600160a01b03163314611c6357604051600160e51b62461bcd0281526004016108c890614809565b604051600160e01b632b1dfbd902815273__UpgradeImpl___________________________90632b1dfbd990611ca490600090889088908890600401614863565b60206040518083038186803b158015611cbc57600080fd5b505af4158015611cd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611cf49190810190613bf1565b90505b9392505050565b6025546001600160a01b031690565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a2600990611d4f9060009087908790600401614b01565b60006040518083038186803b158015611d6757600080fd5b505af4158015611d7b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106de9190810190613851565b611dab613354565b6000828152601d602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff90911690811115611e3a57fe5b6005811115611e4557fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611ed35780601f10611ea857610100808354040283529160200191611ed3565b820191906000526020600020905b815481529060010190602001808311611eb657829003601f168201915b5050505050815250509050919050565b6025546001600160a01b0316331490565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611f34929190614910565b60006040518083038186803b158015611f4c57600080fd5b505af4158015611f60573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611f889190810190613c2e565b93509350935093509193509193565b6000611fa161322b565b6000611fab61322b565b60005b601a548110156121cf57601a8054601c9160009184908110611fcc57fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b90910416600281111561202257fe5b600281111561202d57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120ca5780601f1061209f576101008083540402835291602001916120ca565b820191906000526020600020905b8154815290600101906020018083116120ad57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561217557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561214357fe5b600381111561214e57fe5b81526020016001820154815260200160028201548152505081526020019060010190612102565b50505050815250509150856001600160a01b031682600001516001600160a01b031614156121c757601a8054829081106121ab57fe5b6000918252602090912001546001600160a01b031692506121cf565b600101611fae565b509092509050915091565b6004546001600160a01b0316301461220757604051600160e51b62461bcd0281526004016108c890614799565b3361221061322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561225857fe5b600281111561226357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123005780601f106122d557610100808354040283529160200191612300565b820191906000526020600020905b8154815290600101906020018083116122e357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156123ab57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561237957fe5b600381111561238457fe5b81526020016001820154815260200160028201548152505081526020019060010190612338565b50505091525090915060019050816020015160028111156123c857fe5b146123e857604051600160e51b62461bcd0281526004016108c8906147d9565b85600080828152601f602052604090206004015460ff16600181111561240a57fe5b1461242a57604051600160e51b62461bcd0281526004016108c8906147f9565b604051600160e21b6301c7aeeb02815273__TaskImpl______________________________9063071ebbac9061246d906000908b908b908b908b90600401614a1e565b60006040518083038186803b15801561248557600080fd5b505af4158015612499573d6000803e3d6000fd5b5050505050505050505050565b60006060826124b361322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156124fb57fe5b600281111561250657fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125a35780601f10612578576101008083540402835291602001916125a3565b820191906000526020600020905b81548152906001019060200180831161258657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561264e57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561261c57fe5b600381111561262757fe5b815260200160018201548152602001600282015481525050815260200190600101906125db565b505050915250909150600090508160200151600281111561266b57fe5b141561268c57604051600160e51b62461bcd0281526004016108c8906147e9565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f031906126c9906000908990600401614848565b60006040518083038186803b1580156126e157600080fd5b505af41580156126f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261271d91908101906136f6565b935093505050915091565b3361273161322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561277957fe5b600281111561278457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128215780601f106127f657610100808354040283529160200191612821565b820191906000526020600020905b81548152906001019060200180831161280457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156128cc57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561289a57fe5b60038111156128a557fe5b81526020016001820154815260200160028201548152505081526020019060010190612859565b505050508152505090506128df43612fa5565b6128fe57604051600160e51b62461bcd0281526004016108c8906147b9565b60028160200151600281111561291057fe5b1461293057604051600160e51b62461bcd0281526004016108c890614819565b6021546060820151101561295957604051600160e51b62461bcd0281526004016108c890614759565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e29061090c9060009060040161483a565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________906396462368906129d39086908690600401614734565b60206040518083038186803b1580156129eb57600080fd5b505af41580156129ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106de9190810190613bf1565b6004546001600160a01b031690565b6004546001600160a01b03163014612a5f57604051600160e51b62461bcd0281526004016108c890614799565b604051600160e01b638c91056d02815273__TaskImpl______________________________90638c91056d90610c51906000908890889088908890600401614a70565b612aaa61322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115612af257fe5b6002811115612afd57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b9a5780601f10612b6f57610100808354040283529160200191612b9a565b820191906000526020600020905b815481529060010190602001808311612b7d57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612c4557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612c1357fe5b6003811115612c1e57fe5b81526020016001820154815260200160028201548152505081526020019060010190612bd2565b505050915250909392505050565b612c5b611ee3565b612c6457600080fd5b6004546001600160a01b03163014612c9157604051600160e51b62461bcd0281526004016108c890614799565b604051600160e01b6366e13f4302815273__TaskImpl______________________________906366e13f43906117589060009089908990899089908990600401614ab2565b6004546001600160a01b03163014612d0357604051600160e51b62461bcd0281526004016108c890614799565b33612d0c61322b565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115612d5457fe5b6002811115612d5f57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612dfc5780601f10612dd157610100808354040283529160200191612dfc565b820191906000526020600020905b815481529060010190602001808311612ddf57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612ea757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612e7557fe5b6003811115612e8057fe5b81526020016001820154815260200160028201548152505081526020019060010190612e34565b5050509152509091506001905081602001516002811115612ec457fe5b14612ee457604051600160e51b62461bcd0281526004016108c8906147d9565b8660016000828152601f602052604090206004015460ff166001811115612f0757fe5b14612f2757604051600160e51b62461bcd0281526004016108c890614789565b604051600160e61b6289b28102815273__TaskImpl______________________________9063226ca04090612f6b906000908c908c908c908c908c906004016149be565b60006040518083038186803b158015612f8357600080fd5b505af4158015612f97573d6000803e3d6000fd5b505050505050505050505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612fe49084908690600401614910565b60206040518083038186803b158015612ffc57600080fd5b505af4158015613010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106e19190810190613bf1565b336000908152601c60205260409020546001600160a01b031690565b60015490565b8060016000828152601d6020526040902060059081015460ff169081111561307a57fe5b1461309a57604051600160e51b62461bcd0281526004016108c8906147a9565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b9061090c906000908690600401614910565b6130df611ee3565b6130e857600080fd5b6130f1816131bc565b50565b6130fc611ee3565b61310557600080fd5b6004546001600160a01b0316301461313257604051600160e51b62461bcd0281526004016108c890614799565b604051600160e01b6368fac41b02815273__UpgradeImpl___________________________906368fac41b9061316f906000908590600401614848565b60006040518083038186803b15801561318757600080fd5b505af415801561319b573d6000803e3d6000fd5b5050505050565b6001600160a01b0316600090815260208052604090205490565b6001600160a01b0381166131cf57600080fd5b6025546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3602580546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106132be57805160ff19168380011785556132eb565b828001600101855582156132eb579182015b828111156132eb5782518255916020019190600101906132d0565b506132f7929150613399565b5090565b6040518061028001604052806005905b6133136133b3565b81526020019060019003908161330b5790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b61101c91905b808211156132f7576000815560010161339f565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b80356106e181614d41565b80516106e181614d41565b600082601f83011261340257600080fd5b815161341561341082614bfb565b614bd5565b9150818183526020840193506020810190508385602084028201111561343a57600080fd5b60005b83811015613466578161345088826133e6565b845250602092830192919091019060010161343d565b5050505092915050565b600082601f83011261348157600080fd5b815161348f61341082614bfb565b915081818352602084019350602081019050838560208402820111156134b457600080fd5b60005b8381101561346657816134ca888261355b565b84525060209283019291909101906001016134b7565b600082601f8301126134f157600080fd5b81516134ff61341082614bfb565b9150818183526020840193506020810190508385602084028201111561352457600080fd5b60005b83811015613466578161353a888261355b565b8452506020928301929190910190600101613527565b80356106e181614d55565b80516106e181614d55565b600082601f83011261357757600080fd5b813561358561341082614c1b565b915080825260208301602083018583830111156135a157600080fd5b6135ac838284614cd7565b50505092915050565b600082601f8301126135c657600080fd5b81516135d461341082614c1b565b915080825260208301602083018583830111156135f057600080fd5b6135ac838284614ce3565b80516106e181614d5e565b60006060828403121561361857600080fd5b6136226060614bd5565b9050600061363084846135fb565b82525060206136418484830161355b565b60208301525060406136558482850161355b565b60408301525092915050565b80356106e181614d6b565b60006020828403121561367e57600080fd5b600061368a84846133db565b949350505050565b6000806000606084860312156136a757600080fd5b60006136b386866133db565b93505060206136c4868287016133db565b92505060408401356001600160401b038111156136e057600080fd5b6136ec86828701613566565b9150509250925092565b6000806040838503121561370957600080fd5b600061371585856133e6565b92505060208301516001600160401b0381111561373157600080fd5b61373d858286016135b5565b9150509250929050565b60008060006060848603121561375c57600080fd5b600061376886866133db565b93505060208401356001600160401b0381111561378457600080fd5b6136c486828701613566565b600080604083850312156137a357600080fd5b60006137af85856133db565b925050602061373d85828601613550565b6000602082840312156137d257600080fd5b81516001600160401b038111156137e857600080fd5b61368a848285016133f1565b6000806040838503121561380757600080fd5b82516001600160401b0381111561381d57600080fd5b613829858286016133f1565b92505060208301516001600160401b0381111561384557600080fd5b61373d858286016134e0565b60006020828403121561386357600080fd5b81516001600160401b0381111561387957600080fd5b61368a84828501613470565b60006020828403121561389757600080fd5b600061368a8484613550565b600080600080600080600080610100898b0312156138c057600080fd5b60006138cc8b8b613550565b98505060206138dd8b828c01613550565b97505060406138ee8b828c01613550565b96505060606138ff8b828c01613550565b95505060808901356001600160401b0381111561391b57600080fd5b6139278b828c01613566565b94505060a06139388b828c016133db565b93505060c06139498b828c01613661565b92505060e08901356001600160401b0381111561396557600080fd5b6139718b828c01613566565b9150509295985092959890939650565b600080600080600060a0868803121561399957600080fd5b60006139a58888613550565b95505060206139b688828901613550565b94505060406139c788828901613550565b93505060606139d888828901613661565b92505060808601356001600160401b038111156139f457600080fd5b613a0088828901613566565b9150509295509295909350565b60008060008060808587031215613a2357600080fd5b6000613a2f8787613550565b9450506020613a4087828801613550565b9350506040613a5187828801613661565b92505060608501356001600160401b03811115613a6d57600080fd5b613a7987828801613566565b91505092959194509250565b60008060008060808587031215613a9b57600080fd5b6000613aa78787613550565b9450506020613ab887828801613661565b9350506040613ac987828801613661565b9250506060613a7987828801613550565b600080600080600060a08688031215613af257600080fd5b6000613afe8888613550565b9550506020613b0f88828901613661565b9450506040613b2088828901613661565b9350506060613b3188828901613550565b9250506080613a0088828901613550565b600060208284031215613b5457600080fd5b81356001600160401b03811115613b6a57600080fd5b61368a84828501613566565b60008060408385031215613b8957600080fd5b82356001600160401b03811115613b9f57600080fd5b613bab85828601613566565b92505060208301356001600160401b03811115613bc757600080fd5b61373d85828601613566565b600060608284031215613be557600080fd5b600061368a8484613606565b600060208284031215613c0357600080fd5b600061368a848461355b565b60008060408385031215613c2257600080fd5b60006137af8585613550565b60008060008060808587031215613c4457600080fd5b6000613c50878761355b565b9450506020613c618782880161355b565b93505060408501516001600160401b03811115613c7d57600080fd5b613c89878288016133f1565b92505060608501516001600160401b03811115613ca557600080fd5b613a79878288016134e0565b600080600060608486031215613cc657600080fd5b6000613cd28686613550565b93505060206136c486828701613550565b6000613cef8383613d23565b505060200190565b6000613cef8383614024565b6000613d0f83836144f6565b505060600190565b60006106de838361460b565b613d2c81614c5b565b82525050565b6000613d3d82614c48565b613d478185614c52565b9350613d5283614c42565b8060005b83811015613d80578151613d6a8882613ce3565b9750613d7583614c42565b925050600101613d56565b509495945050505050565b6000613d9682614c48565b613da08185614c52565b9350613dab83614c42565b8060005b83811015613d80578151613dc38882613ce3565b9750613dce83614c42565b925050600101613daf565b6000613de482614c48565b613dee8185614c52565b9350613df983614c42565b8060005b83811015613d80578151613e118882613cf7565b9750613e1c83614c42565b925050600101613dfd565b6000613e3282614c48565b613e3c8185614c52565b9350613e4783614c42565b8060005b83811015613d80578151613e5f8882613cf7565b9750613e6a83614c42565b925050600101613e4b565b6000613e8082614c48565b613e8a8185614c52565b9350613e9583614c42565b8060005b83811015613d80578151613ead8882613d03565b9750613eb883614c42565b925050600101613e99565b6000613ece82614c48565b613ed88185614c52565b9350613ee383614c42565b8060005b83811015613d80578151613efb8882613d03565b9750613f0683614c42565b925050600101613ee7565b6000613f1c82614c4c565b613f268185611b19565b935083602082028501613f388561101c565b8060005b85811015613f725784840389528151613f558582613d17565b9450613f6083614c42565b60209a909a0199925050600101613f3c565b5091979650505050505050565b6000613f8a82614c48565b613f948185614c52565b9350613f9f83614c42565b8060005b83811015613d80578151613fb78882613cf7565b9750613fc283614c42565b925050600101613fa3565b6000613fd882614c48565b613fe28185614c52565b9350613fed83614c42565b8060005b83811015613d805781516140058882613cf7565b975061401083614c42565b925050600101613ff1565b613d2c81614c66565b613d2c8161101c565b600061403882614c48565b6140428185614c52565b9350614052818560208601614ce3565b61405b81614d0f565b9093019392505050565b613d2c81614cab565b613d2c81614cb6565b613d2c81614cc1565b613d2c81614ccc565b6000614096602283614c52565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b60006140dd601883614c52565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b6000614116602783614c52565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000614162601c83614c52565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b600061419b601b83614c52565b7f4e6f74207570646174656420456e69676d6120636f6e74726163740000000000815260200192915050565b60006141d4601383614c52565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b600061420d602783614c52565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b6000614259602e83614c52565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b60006142b8601483614c52565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b60006142f1601383614c52565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b600061432a602083614c52565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000614363602083614c52565b7f4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374815260200192915050565b600061439c602783614c52565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a08401906143ef8582613d23565b5060208301516144026020860182614024565b5060408301516144156040860182614024565b506060830151848203606086015261442d8282613e27565b91505060808301516144426080860182614065565b509392505050565b9052565b80516000906101008401906144638582613d23565b5060208301516144766020860182614024565b5060408301516144896040860182614024565b50606083015161449c6060860182614666565b5060808301516144af6080860182614666565b5060a08301516144c260a0860182614024565b5060c08301516144d560c086018261406e565b5060e083015184820360e08601526144ed828261402d565b95945050505050565b805160608301906145078482614077565b50602082015161451a6020850182614024565b50604082015161452d6040850182614024565b50505050565b805160009060a08401906145478582613d23565b50602083015161455a6020860182614080565b5060408301518482036040860152614572828261402d565b91505060608301516145876060860182614024565b50608083015184820360808601526144ed8282613e75565b805160009060a08401906145b38582613d23565b5060208301516145c66020860182614080565b50604083015184820360408601526145de828261402d565b91505060608301516145f36060860182614024565b50608083015184820360808601526144ed8282613ec3565b8051600090608084019061461f8582614024565b50602083015184820360208601526146378282613d8b565b915050604083015184820360408601526146518282613fcd565b91505060608301516144426060860182614024565b613d2c81614c9f565b602081016106e18284613d23565b6040810161468b8285613d23565b8181036020830152611cf4818461402d565b604081016146ab8285613d23565b8181036020830152611cf48184614533565b602080825281016106de8184613d32565b604080825281016146df8185613d32565b90508181036020830152611cf48184613f7f565b602080825281016106de8184613dd9565b602080825281016106de8184613f11565b602081016106e1828461401b565b602080825281016106de818461402d565b60408082528101614745818561402d565b90508181036020830152611cf4818461402d565b602080825281016106e181614089565b602080825281016106e1816140d0565b602080825281016106e181614109565b602080825281016106e181614155565b602080825281016106e18161418e565b602080825281016106e1816141c7565b602080825281016106e181614200565b602080825281016106e18161424c565b602080825281016106e1816142ab565b602080825281016106e1816142e4565b602080825281016106e18161431d565b602080825281016106e181614356565b602080825281016106e18161438f565b602080825281016106de81846143db565b602081016106e1828461444a565b60408101614856828561444a565b611cf76020830184613d23565b60808101614871828761444a565b61487e6020830186613d23565b61488b6040830185613d23565b818103606083015261489d818461402d565b9695505050505050565b608081016148b5828761444a565b6148c26020830186613d23565b81810360408301526148d4818561402d565b9050818103606083015261489d818461402d565b606081016148f6828661444a565b6149036020830185613d23565b61368a6040830184614024565b6040810161491e828561444a565b611cf76020830184614024565b610120810161493a828c61444a565b614947602083018b614024565b614954604083018a614024565b6149616060830189614024565b61496e6080830188614024565b81810360a0830152614980818761402d565b905061498f60c0830186613d23565b61499c60e0830185614666565b8181036101008301526149af818461402d565b9b9a5050505050505050505050565b60c081016149cc828961444a565b6149d96020830188614024565b6149e66040830187614024565b6149f36060830186614024565b614a006080830185614666565b81810360a0830152614a12818461402d565b98975050505050505050565b60a08101614a2c828861444a565b614a396020830187614024565b614a466040830186614024565b614a536060830185614666565b8181036080830152614a65818461402d565b979650505050505050565b60a08101614a7e828861444a565b614a8b6020830187614024565b614a986040830186614666565b614aa56060830185614666565b61489d6080830184614024565b60c08101614ac0828961444a565b614acd6020830188614024565b614ada6040830187614666565b614ae76060830186614666565b614af46080830185614024565b614a6560a0830184614024565b60608101614b0f828661444a565b6149036020830185614024565b60808101614b2a828761444a565b614b376020830186614024565b61488b6040830185614024565b602080825281016106de818461444e565b602080825281016106de8184614533565b60408082528101614b77818561459f565b9050611cf76020830184614024565b602081016106e18284614024565b60808101614ba28287614024565b614baf6020830186614024565b8181036040830152614bc18185613d32565b9050818103606083015261489d8184613f7f565b6040518181016001600160401b0381118282101715614bf357600080fd5b604052919050565b60006001600160401b03821115614c1157600080fd5b5060209081020190565b60006001600160401b03821115614c3157600080fd5b506020601f91909101601f19160190565b60200190565b5190565b50600590565b90815260200190565b60006106e182614c93565b151590565b80611b1981614d19565b80611b1981614d23565b80611b1981614d2d565b80611b1981614d37565b6001600160a01b031690565b6001600160401b031690565b60006106e182614c6b565b60006106e182614c75565b60006106e182614c7f565b60006106e182614c89565b82818337506000910152565b60005b83811015614cfe578181015183820152602001614ce6565b8381111561452d5750506000910152565b601f01601f191690565b600281106130f157fe5b600681106130f157fe5b600481106130f157fe5b600381106130f157fe5b614d4a81614c5b565b81146130f157600080fd5b614d4a8161101c565b600481106130f157600080fd5b614d4a81614c9f56fea265627a7a7230582048ef9e326d0514eab1ae5cced65bd3c0f2e46771088ddca58d003c5bc3f29c366c6578706572696d656e74616cf50037","sourceMap":"885:17988:0:-;;;1124:433;8:9:-1;5:2;;;30:1;27;20:12;5:2;1124:433:0;;;;;;;;;;;;;;;;;;;;;;515:6:36;:19;;-1:-1:-1;;;;;;515:19:36;524:10;515:19;;;;;549:40;;-1:-1:-1;;;;;582:6:36;;;;;515;;549:40;;515:6;;549:40;1237:5:0;:37;;-1:-1:-1;;;;;1237:37:0;;;-1:-1:-1;;;;;;1237:37:0;;;;;;;;1284:28;;;1346:35;;;;1322:21;:59;1391:15;:28;;;;;;;;;;;;;;;;1429:34;:50;;;;;1474:4;1429:50;;;;1489:22;:26;;;1525:21;:25;885:17988;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:134;224:13;;242:33;224:13;242:33;;287:672;;;;;453:3;441:9;432:7;428:23;424:33;421:2;;;470:1;467;460:12;421:2;505:1;522:64;578:7;558:9;522:64;;;512:74;;484:108;623:2;641:64;697:7;688:6;677:9;673:22;641:64;;;631:74;;602:109;742:2;760:64;816:7;807:6;796:9;792:22;760:64;;;750:74;;721:109;861:2;879:64;935:7;926:6;915:9;911:22;879:64;;;869:74;;840:109;415:544;;;;;;;;966:91;;-1:-1;;;;;1126:54;;1028:24;1109:76;1192:72;1254:5;1237:27;1271:117;1340:24;1358:5;1340:24;;;1333:5;1330:35;1320:2;;1379:1;1376;1369:12;1320:2;1314:74;;1395:117;1464:24;1482:5;1464:24;;1438:74;885:17988:0;;;;;;","deployedSourceMap":"885:17988:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;885:17988:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15393:194;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16748:199;;;;;;;;;:::i;:::-;;;;;;;;7642:98;;;:::i;:::-;;7180:132;;;;;;;;;:::i;18762:109::-;;;;;;;;;:::i;13051:574::-;;;;;;;;;:::i;3854:92:10:-;;;:::i;:::-;;;;;;;;6787:195:0;;;;;;;;;:::i;9075:603::-;;;;;;;;;:::i;15035:237::-;;;;;;;;;:::i;3257:121:10:-;;;:::i;:::-;;;;;;;;2133:102;;;:::i;:::-;;;;;;;;3693:96;;;:::i;3011:130::-;;;:::i;:::-;;;;;;;;1347:137:36;;;:::i;9805:149:0:-;;;:::i;2731::10:-;;;;;;;;;:::i;:::-;;;;;;;;6309:235:0;;;;;;;;;:::i;18577:117::-;;;;;;;;;:::i;18230:275::-;;;;;;;;;:::i;659:77:36:-;;;:::i;:::-;;;;;;;;10167:211:0;;;;;;;;;:::i;2409:137:10:-;;;;;;;;;:::i;:::-;;;;;;;;979:90:36;;;:::i;:::-;;;;;;;;16213:198:0;;;;;;;;;:::i;:::-;;;;;;;;;;;1004:492:10;;;;;;;;;:::i;:::-;;;;;;;;;8048:352:0;;;;;;;;;:::i;17085:200::-;;;;;;;;;:::i;:::-;;;;;;;;;7475:90;;;:::i;17490:181::-;;;;;;;;;:::i;3493:131:10:-;;;:::i;12158:289:0:-;;;;;;;;;:::i;679:131:10:-;;;;;;;;;:::i;:::-;;;;;;;;11231:352:0;;;;;;;;;:::i;14016:369::-;;;;;;;;;:::i;15762:167::-;;;;;;;;;:::i;399:115:10:-;;;:::i;1957:90::-;;;:::i;14552:147:0:-;;;;;;;;;:::i;1655:107:36:-;;;;;;;;;:::i;17812:226:0:-;;;;;;;;;:::i;1740:134:10:-;;;;;;;;;:::i;15393:194:0:-;15471:16;15489:13;15525;:34;15560:5;15567:12;15525:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15525:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15525:55:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15525:55:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15525:55:0;;;;;;;;;15518:62;;;;15393:194;;;:::o;16748:199::-;16880:60;;-1:-1:-1;;;;;16880:60:0;;16841:16;;16880:11;;:30;;:60;;16911:5;;16918:12;;16932:7;;16880:60;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16880:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16880:60:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16880:60:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16880:60:0;;;;;;;;;16873:67;;16748:199;;;;;:::o;7642:98::-;7682:10;2221:33;;:::i;:::-;-1:-1:-1;;;;;2257:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2221:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;-1:-1:-1;2221:56:0;;-1:-1:-1;2312:34:0;;-1:-1:-1;2295:6:0;:13;;;:51;;;;;;;;;2287:84;;;;-1:-1:-1;;;;;2287:84:0;;;;;;;;;;;;;;;;;7704:29;;-1:-1:-1;;;;;7704:29:0;;:11;;:22;;:29;;7727:5;;7704:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7704:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7704:29:0;;;;7642:98;;:::o;7180:132::-;7239:10;3466:33;;:::i;:::-;-1:-1:-1;;;;;3502:20:0;;;:5;:20;;;:13;:20;;;;;;;;;3466:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3466:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3466:56:0;;-1:-1:-1;3466:56:0;;-1:-1:-1;3557:35:0;;-1:-1:-1;3540:6:0;:13;;;:52;;;;;;;;;3532:104;;;;-1:-1:-1;;;;;3532:104:0;;;;;;;;;3646:39;;:::i;:::-;3688:56;;-1:-1:-1;;;;;3688:56:0;;:11;;:34;;:56;;3723:6;;3731:12;;3688:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3688:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3688:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3688:56:0;;;;;;;;;3646:98;-1:-1:-1;3791:33:0;3762:25;;:62;;;;;;;;;3754:126;;;;-1:-1:-1;;;;;3754:126:0;;;;;;;;;3934:9;:21;;;3898:33;3918:12;3898:19;:33::i;:::-;:57;3890:128;;;;-1:-1:-1;;;;;3890:128:0;;;;;;;;;7265:40;;-1:-1:-1;;;;;7265:40:0;;:11;;:24;;:40;;7290:5;;7297:7;;7265:40;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7265:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7265:40:0;;;;7180:132;;;;:::o;18762:109::-;863:9:36;:7;:9::i;:::-;855:18;;;;;;18842:22:0;;;;:12;;:22;;;;;:::i;:::-;;18762:109;:::o;13051:574::-;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;13396:10;2221:33;;:::i;:::-;-1:-1:-1;;;;;2257:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2221:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;-1:-1:-1;2221:56:0;;-1:-1:-1;2312:34:0;;-1:-1:-1;2295:6:0;:13;;;:51;;;;;;;;;2287:84;;;;-1:-1:-1;;;;;2287:84:0;;;;;;;;;13429:7;4569:42;4534:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4526:118;;;;-1:-1:-1;;;;;4526:118:0;;;;;;;;;13452:166;;-1:-1:-1;;;;;13452:166:0;;:8;;:26;;:166;;13479:5;;13486:7;;13495;;13504:15;;13521:11;;13534:21;;13569:32;;13603:8;;13613:4;;13452:166;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13452:166:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13452:166:0;;;;2381:1;5557;;13051:574;;;;;;;;:::o;3854:92:10:-;3927:12;3920:19;;;;;;;;-1:-1:-1;;3920:19:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3896:12;;3920:19;;3927:12;;3920:19;;3927:12;3920:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3854:92;;:::o;6787:195:0:-;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;6898:10;1857:33;;:::i;:::-;-1:-1:-1;;;;;1893:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1857:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1857:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1857:56:0;;-1:-1:-1;1857:56:0;;-1:-1:-1;1948:38:0;;-1:-1:-1;1931:6:0;:13;;;:55;;;;;;;;;;1923:87;;;;-1:-1:-1;;;;;1923:87:0;;;;;;;;;6924:51;;-1:-1:-1;;;;;6924:51:0;;:11;;:23;;:51;;6948:5;;6955:10;;6967:7;;6924:51;;;;9075:603;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;9434:10;2221:33;;:::i;:::-;-1:-1:-1;;;;;2257:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2221:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;-1:-1:-1;2221:56:0;;-1:-1:-1;2312:34:0;;-1:-1:-1;2295:6:0;:13;;;:51;;;;;;;;;2287:84;;;;-1:-1:-1;;;;;2287:84:0;;;;;;;;;9468:7;4256:43;4221:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;4213:123;;;;-1:-1:-1;;;;;4213:123:0;;;;;;;;;9491:180;;-1:-1:-1;;;;;9491:180:0;;:8;;:33;;:180;;9525:5;;9532:7;;9541:12;;9555:9;;9566:19;;9599:21;;9622:32;;9656:8;;9666:4;;9491:180;;;;15035:237;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;15171:10;1857:33;;:::i;:::-;-1:-1:-1;;;;;1893:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1857:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1857:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1857:56:0;;-1:-1:-1;1857:56:0;;-1:-1:-1;1948:38:0;;-1:-1:-1;1931:6:0;:13;;;:55;;;;;;;;;;1923:87;;;;-1:-1:-1;;;;;1923:87:0;;;;;;;;;15197:68;;-1:-1:-1;;;;;15197:68:0;;:13;;:34;;:68;;15232:5;;15239:12;;15253:5;;15260:4;;15197:68;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15197:68:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15197:68:0;;;;5557:1;;15035:237;;;:::o;3257:121:10:-;3319:16;3354:5;:17;;3347:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3257:121;:::o;2133:102::-;2207:21;;2133:102;:::o;3693:96::-;3768:14;3761:21;;;;;;;;-1:-1:-1;;3761:21:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3737:12;;3761:21;;3768:14;;3761:21;;3768:14;3761:21;;;;;;;;;;;;;;;;;;;;;;;;3011:130;3060:36;;:::i;:::-;3108:26;;;;;;;;;3115:19;3108:26;3115:5;3108:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3108:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:130;:::o;1347:137:36:-;863:9;:7;:9::i;:::-;855:18;;;;;;1429:6;;1408:40;;1445:1;;-1:-1:-1;;;;;1429:6:36;;1408:40;;1445:1;;1408:40;1458:6;:19;;-1:-1:-1;;;;;;1458:19:36;;;1347:137::o;9805:149:0:-;9897:50;;-1:-1:-1;;;;;9897:50:0;;9870:4;;9897:18;;:43;;:50;;9870:4;;9897:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9897:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9897:50:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9897:50:0;;;;;;;;;9890:57;;9805:149;:::o;2731::10:-;2796:34;;:::i;:::-;2849:5;:24;;;:15;:24;;;;;;;;;2842:31;;;;;;;;;-1:-1:-1;;;;;2842:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:24;;2842:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2842:31:10;;;-1:-1:-1;;2842:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2842:31:10;-1:-1:-1;2731:149:10;;;;:::o;6309:235:0:-;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;6453:7;5132:6;5127:175;5148:21;:28;5144:32;;5127:175;;;5255:7;-1:-1:-1;;;;;5205:57:0;:5;:13;;:39;5219:5;:21;;5241:1;5219:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5219:24:0;;;5205:39;;;;;;;;;;;;;;;:46;;:57;;5197:94;;;;-1:-1:-1;;;;;5197:94:0;;;;;;;;;5178:3;;5127:175;;;-1:-1:-1;6476:61:0;;-1:-1:-1;;;;;6476:61:0;;:11;;:24;;:61;;6501:5;;6508:7;;6517;;6526:10;;6476:61;;;;18577:117;863:9:36;:7;:9::i;:::-;855:18;;;;;;18661:26:0;;;;:14;;:26;;;;;:::i;18230:275::-;5728:34;;18384:7;;-1:-1:-1;;;;;5728:34:0;5714:10;:48;5706:93;;;;-1:-1:-1;;;;;5706:93:0;;;;;;;;;18414:84;;-1:-1:-1;;;;;18414:84:0;;:11;;:46;;:84;;18461:5;;18468:14;;18484:7;;18493:4;;18414:84;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18414:84:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18414:84:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18414:84:0;;;;;;;;;18407:91;;5809:1;18230:275;;;;;:::o;659:77:36:-;723:6;;-1:-1:-1;;;;;723:6:36;659:77;:::o;10167:211:0:-;10300:71;;-1:-1:-1;;;;;10300:71:0;;10261:16;;10300:18;;:49;;:71;;10350:5;;10357:6;;10365:5;;10300:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10300:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10300:71:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;10300:71:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;10300:71:0;;;;;;;;2409:137:10;2470:30;;:::i;:::-;2519:5;:20;;;:11;:20;;;;;;;;;2512:27;;;;;;;;;-1:-1:-1;;;;;2512:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2512:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2519:20;2512:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2512:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2409:137;;;:::o;979:90:36:-;1056:6;;-1:-1:-1;;;;;1056:6:36;1042:10;:20;;979:90::o;16213:198:0:-;16290:4;16296;16302:16;16320:13;16352:11;:31;16384:5;16391:12;16352:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16352:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16352:52:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16352:52:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16352:52:0;;;;;;;;;16345:59;;;;;;;;16213:198;;;;;:::o;1004:492:10:-;1079:7;1088:26;;:::i;:::-;1126:15;1151:33;;:::i;:::-;1199:6;1194:262;1215:21;:28;1211:32;;1194:262;;;1287:21;:24;;1273:13;;:5;;1309:1;;1287:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1287:24:10;;;1273:39;;;;;;;;;;;;;;;;1264:48;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1264:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:7;-1:-1:-1;;;;;1330:24:10;:6;:13;;;-1:-1:-1;;;;;1330:24:10;;1326:120;;;1384:21;:24;;1406:1;;1384:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1384:24:10;;-1:-1:-1;1426:5:10;;1326:120;1245:3;;1194:262;;;-1:-1:-1;1473:7:10;;-1:-1:-1;1482:6:10;-1:-1:-1;1004:492:10;;;:::o;8048:352:0:-;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;8253:10;2221:33;;:::i;:::-;-1:-1:-1;;;;;2257:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2221:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;-1:-1:-1;2221:56:0;;-1:-1:-1;2312:34:0;;-1:-1:-1;2295:6:0;:13;;;:51;;;;;;;;;2287:84;;;;-1:-1:-1;;;;;2287:84:0;;;;;;;;;8287:7;4256:43;4221:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;4213:123;;;;-1:-1:-1;;;;;4213:123:0;;;;;;;;;8310:83;;-1:-1:-1;;;;;8310:83:0;;:8;;:40;;:83;;8351:5;;8358:7;;8367:9;;8378:8;;8388:4;;8310:83;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8310:83:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8310:83:0;;;;2381:1;5557;;8048:352;;;;:::o;17085:200::-;17190:7;17199:12;17165:10;1857:33;;:::i;:::-;-1:-1:-1;;;;;1893:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1857:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1857:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1857:56:0;;-1:-1:-1;1857:56:0;;-1:-1:-1;1948:38:0;;-1:-1:-1;1931:6:0;:13;;;:55;;;;;;;;;;1923:87;;;;-1:-1:-1;;;;;1923:87:0;;;;;;;;;17234:44;;-1:-1:-1;;;;;17234:44:0;;:11;;:25;;:44;;17260:5;;17267:10;;17234:44;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17234:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17234:44:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;17234:44:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;17234:44:0;;;;;;;;;17227:51;;;;17085:200;;;;;:::o;7475:90::-;7508:10;2913:33;;:::i;:::-;-1:-1:-1;;;;;2949:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2913:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2913:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2987:33;3007:12;2987:19;:33::i;:::-;2979:90;;;;-1:-1:-1;;;;;2979:90:0;;;;;;;;;3104:35;3087:6;:13;;;:52;;;;;;;;;3079:104;;;;-1:-1:-1;;;;;3079:104:0;;;;;;;;;3219:22;;3201:14;;;;:40;;3193:87;;;;-1:-1:-1;;;;;3193:87:0;;;;;;;;;7530:28;;-1:-1:-1;;;;;7530:28:0;;:11;;:21;;:28;;7552:5;;7530:28;;;;17490:181;17617:47;;-1:-1:-1;;;;;17617:47:0;;17590:4;;17617:11;;:28;;:47;;17646:5;;17653:10;;17617:47;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17617:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17617:47:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;17617:47:0;;;;;;;;3493:131:10;3583:34;;-1:-1:-1;;;;;3583:34:10;3493:131;:::o;12158:289:0:-;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;12353:87;;-1:-1:-1;;;;;12353:87:0;;:8;;:29;;:87;;12383:5;;12390:11;;12403:9;;12414:6;;12422:17;;12353:87;;;;679:131:10;736:26;;:::i;:::-;-1:-1:-1;;;;;781:22:10;;;:5;:22;;;:13;:22;;;;;;;;;774:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;-1:-1:-1;774:29:10;;679:131;-1:-1:-1;;;679:131:10:o;11231:352:0:-;863:9:36;:7;:9::i;:::-;855:18;;;;;;5481:34:0;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;11471:105;;-1:-1:-1;;;;;11471:105:0;;:8;;:39;;:105;;11511:5;;11518:11;;11531:9;;11542:6;;11550:17;;11569:6;;11471:105;;;;14016:369;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;14238:10;2221:33;;:::i;:::-;-1:-1:-1;;;;;2257:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2221:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;-1:-1:-1;2221:56:0;;-1:-1:-1;2312:34:0;;-1:-1:-1;2295:6:0;:13;;;:51;;;;;;;;;2287:84;;;;-1:-1:-1;;;;;2287:84:0;;;;;;;;;14271:7;4569:42;4534:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4526:118;;;;-1:-1:-1;;;;;4526:118:0;;;;;;;;;14294:84;;-1:-1:-1;;;;;14294:84:0;;:8;;:30;;:84;;14325:5;;14332:7;;14341;;14350:11;;14363:8;;14373:4;;14294:84;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14294:84:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14294:84:0;;;;2381:1;5557;;14016:369;;;;;:::o;15762:167::-;15866:56;;-1:-1:-1;;;;;15866:56:0;;15843:4;;15866:11;;:35;;:56;;15843:4;;15909:12;;15866:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15866:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15866:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15866:56:0;;;;;;;;399:115:10;489:10;449:7;475:25;;;:13;:25;;;;;:32;-1:-1:-1;;;;;475:32:10;399:115;:::o;1957:90::-;2025:15;;1957:90;:::o;14552:147:0:-;14623:7;4876:37;4845:5;:20;;;:11;:20;;;;;:27;;;;;;;;:68;;;;;;;;4837:100;;;;-1:-1:-1;;;;;4837:100:0;;;;;;;;;14646:46;;-1:-1:-1;;;;;14646:46:0;;:8;;:30;;:46;;14677:5;;14684:7;;14646:46;;;;1655:107:36;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;17812:226:0:-;863:9:36;:7;:9::i;:::-;855:18;;;;;;5481:34:0;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;17956:75;;-1:-1:-1;;;;;17956:75:0;;:11;;:37;;:75;;17994:5;;18001:29;;17956:75;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17956:75:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17956:75:0;;;;17812:226;:::o;1740:134:10:-;-1:-1:-1;;;;;1833:34:10;1810:4;1833:34;;;:25;:34;;;;;;;1740:134::o;1906:183:36:-;-1:-1:-1;;;;;1979:22:36;;1971:31;;;;;;2038:6;;2017:38;;-1:-1:-1;;;;;2017:38:36;;;;2038:6;;2017:38;;2038:6;;2017:38;2065:6;:17;;-1:-1:-1;;;;;;2065:17:36;-1:-1:-1;;;;;2065:17:36;;;;;;;;;;1906:183::o;885:17988:0:-;;;;;;;;;;-1:-1:-1;885:17988:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;885:17988:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;885:17988:0;;;-1:-1:-1;885:17988:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;885:17988:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;885:17988:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:722;;429:3;422:4;414:6;410:17;406:27;396:2;;447:1;444;437:12;396:2;477:6;471:13;499:80;514:64;571:6;514:64;;;499:80;;;490:89;;596:5;621:6;614:5;607:21;651:4;643:6;639:17;629:27;;673:4;668:3;664:14;657:21;;726:6;773:3;765:4;757:6;753:17;748:3;744:27;741:36;738:2;;;790:1;787;780:12;738:2;815:1;800:217;825:6;822:1;819:13;800:217;;;883:3;905:48;949:3;937:10;905:48;;;893:61;;-1:-1;977:4;968:14;;;;996;;;;;847:1;840:9;800:217;;;804:14;389:634;;;;;;;;1049:722;;1177:3;1170:4;1162:6;1158:17;1154:27;1144:2;;1195:1;1192;1185:12;1144:2;1225:6;1219:13;1247:80;1262:64;1319:6;1262:64;;1247:80;1238:89;;1344:5;1369:6;1362:5;1355:21;1399:4;1391:6;1387:17;1377:27;;1421:4;1416:3;1412:14;1405:21;;1474:6;1521:3;1513:4;1505:6;1501:17;1496:3;1492:27;1489:36;1486:2;;;1538:1;1535;1528:12;1486:2;1563:1;1548:217;1573:6;1570:1;1567:13;1548:217;;;1631:3;1653:48;1697:3;1685:10;1653:48;;;1641:61;;-1:-1;1725:4;1716:14;;;;1744;;;;;1595:1;1588:9;1548:217;;1797:722;;1925:3;1918:4;1910:6;1906:17;1902:27;1892:2;;1943:1;1940;1933:12;1892:2;1973:6;1967:13;1995:80;2010:64;2067:6;2010:64;;1995:80;1986:89;;2092:5;2117:6;2110:5;2103:21;2147:4;2139:6;2135:17;2125:27;;2169:4;2164:3;2160:14;2153:21;;2222:6;2269:3;2261:4;2253:6;2249:17;2244:3;2240:27;2237:36;2234:2;;;2286:1;2283;2276:12;2234:2;2311:1;2296:217;2321:6;2318:1;2315:13;2296:217;;;2379:3;2401:48;2445:3;2433:10;2401:48;;;2389:61;;-1:-1;2473:4;2464:14;;;;2492;;;;;2343:1;2336:9;2296:217;;2527:130;2594:20;;2619:33;2594:20;2619:33;;2664:134;2742:13;;2760:33;2742:13;2760:33;;2806:440;;2907:3;2900:4;2892:6;2888:17;2884:27;2874:2;;2925:1;2922;2915:12;2874:2;2962:6;2949:20;2984:64;2999:48;3040:6;2999:48;;2984:64;2975:73;;3068:6;3061:5;3054:21;3104:4;3096:6;3092:17;3137:4;3130:5;3126:16;3172:3;3163:6;3158:3;3154:16;3151:25;3148:2;;;3189:1;3186;3179:12;3148:2;3199:41;3233:6;3228:3;3223;3199:41;;;2867:379;;;;;;;;3255:442;;3367:3;3360:4;3352:6;3348:17;3344:27;3334:2;;3385:1;3382;3375:12;3334:2;3415:6;3409:13;3437:64;3452:48;3493:6;3452:48;;3437:64;3428:73;;3521:6;3514:5;3507:21;3557:4;3549:6;3545:17;3590:4;3583:5;3579:16;3625:3;3616:6;3611:3;3607:16;3604:25;3601:2;;;3642:1;3639;3632:12;3601:2;3652:39;3684:6;3679:3;3674;3652:39;;3705:170;3801:13;;3819:51;3801:13;3819:51;;3918:695;;4045:4;4033:9;4028:3;4024:19;4020:30;4017:2;;;4063:1;4060;4053:12;4017:2;4081:20;4096:4;4081:20;;;4072:29;-1:-1;4162:1;4193:78;4267:3;4247:9;4193:78;;;4169:103;;-1:-1;4340:2;4373:60;4429:3;4405:22;;;4373:60;;;4366:4;4359:5;4355:16;4348:86;4293:152;4498:2;4531:60;4587:3;4578:6;4567:9;4563:22;4531:60;;;4524:4;4517:5;4513:16;4506:86;4455:148;4011:602;;;;;4898:128;4964:20;;4989:32;4964:20;4989:32;;5033:241;;5137:2;5125:9;5116:7;5112:23;5108:32;5105:2;;;5153:1;5150;5143:12;5105:2;5188:1;5205:53;5250:7;5230:9;5205:53;;;5195:63;5099:175;-1:-1;;;;5099:175;5281:595;;;;5428:2;5416:9;5407:7;5403:23;5399:32;5396:2;;;5444:1;5441;5434:12;5396:2;5479:1;5496:53;5541:7;5521:9;5496:53;;;5486:63;;5458:97;5586:2;5604:53;5649:7;5640:6;5629:9;5625:22;5604:53;;;5594:63;;5565:98;5722:2;5711:9;5707:18;5694:32;-1:-1;;;;;5738:6;5735:30;5732:2;;;5778:1;5775;5768:12;5732:2;5798:62;5852:7;5843:6;5832:9;5828:22;5798:62;;;5788:72;;5673:193;5390:486;;;;;;5883:496;;;6024:2;6012:9;6003:7;5999:23;5995:32;5992:2;;;6040:1;6037;6030:12;5992:2;6075:1;6092:64;6148:7;6128:9;6092:64;;;6082:74;;6054:108;6214:2;6203:9;6199:18;6193:25;-1:-1;;;;;6230:6;6227:30;6224:2;;;6270:1;6267;6260:12;6224:2;6290:73;6355:7;6346:6;6335:9;6331:22;6290:73;;;6280:83;;6172:197;5986:393;;;;;;6386:699;;;;6542:2;6530:9;6521:7;6517:23;6513:32;6510:2;;;6558:1;6555;6548:12;6510:2;6593:1;6610:53;6655:7;6635:9;6610:53;;;6600:63;;6572:97;6728:2;6717:9;6713:18;6700:32;-1:-1;;;;;6744:6;6741:30;6738:2;;;6784:1;6781;6774:12;6738:2;6804:62;6858:7;6849:6;6838:9;6834:22;6804:62;;7092:366;;;7213:2;7201:9;7192:7;7188:23;7184:32;7181:2;;;7229:1;7226;7219:12;7181:2;7264:1;7281:53;7326:7;7306:9;7281:53;;;7271:63;;7243:97;7371:2;7389:53;7434:7;7425:6;7414:9;7410:22;7389:53;;7465:392;;7605:2;7593:9;7584:7;7580:23;7576:32;7573:2;;;7621:1;7618;7611:12;7573:2;7656:24;;-1:-1;;;;;7689:30;;7686:2;;;7732:1;7729;7722:12;7686:2;7752:89;7833:7;7824:6;7813:9;7809:22;7752:89;;7864:657;;;8046:2;8034:9;8025:7;8021:23;8017:32;8014:2;;;8062:1;8059;8052:12;8014:2;8097:24;;-1:-1;;;;;8130:30;;8127:2;;;8173:1;8170;8163:12;8127:2;8193:89;8274:7;8265:6;8254:9;8250:22;8193:89;;;8183:99;;8076:212;8340:2;8329:9;8325:18;8319:25;-1:-1;;;;;8356:6;8353:30;8350:2;;;8396:1;8393;8386:12;8350:2;8416:89;8497:7;8488:6;8477:9;8473:22;8416:89;;8528:392;;8668:2;8656:9;8647:7;8643:23;8639:32;8636:2;;;8684:1;8681;8674:12;8636:2;8719:24;;-1:-1;;;;;8752:30;;8749:2;;;8795:1;8792;8785:12;8749:2;8815:89;8896:7;8887:6;8876:9;8872:22;8815:89;;8927:241;;9031:2;9019:9;9010:7;9006:23;9002:32;8999:2;;;9047:1;9044;9037:12;8999:2;9082:1;9099:53;9144:7;9124:9;9099:53;;9175:1327;;;;;;;;;9415:3;9403:9;9394:7;9390:23;9386:33;9383:2;;;9432:1;9429;9422:12;9383:2;9467:1;9484:53;9529:7;9509:9;9484:53;;;9474:63;;9446:97;9574:2;9592:53;9637:7;9628:6;9617:9;9613:22;9592:53;;;9582:63;;9553:98;9682:2;9700:53;9745:7;9736:6;9725:9;9721:22;9700:53;;;9690:63;;9661:98;9790:2;9808:53;9853:7;9844:6;9833:9;9829:22;9808:53;;;9798:63;;9769:98;9926:3;9915:9;9911:19;9898:33;-1:-1;;;;;9943:6;9940:30;9937:2;;;9983:1;9980;9973:12;9937:2;10003:62;10057:7;10048:6;10037:9;10033:22;10003:62;;;9993:72;;9877:194;10102:3;10121:53;10166:7;10157:6;10146:9;10142:22;10121:53;;;10111:63;;10081:99;10211:3;10230:52;10274:7;10265:6;10254:9;10250:22;10230:52;;;10220:62;;10190:98;10347:3;10336:9;10332:19;10319:33;-1:-1;;;;;10364:6;10361:30;10358:2;;;10404:1;10401;10394:12;10358:2;10424:62;10478:7;10469:6;10458:9;10454:22;10424:62;;;10414:72;;10298:194;9377:1125;;;;;;;;;;;;10509:845;;;;;;10689:3;10677:9;10668:7;10664:23;10660:33;10657:2;;;10706:1;10703;10696:12;10657:2;10741:1;10758:53;10803:7;10783:9;10758:53;;;10748:63;;10720:97;10848:2;10866:53;10911:7;10902:6;10891:9;10887:22;10866:53;;;10856:63;;10827:98;10956:2;10974:53;11019:7;11010:6;10999:9;10995:22;10974:53;;;10964:63;;10935:98;11064:2;11082:52;11126:7;11117:6;11106:9;11102:22;11082:52;;;11072:62;;11043:97;11199:3;11188:9;11184:19;11171:33;-1:-1;;;;;11216:6;11213:30;11210:2;;;11256:1;11253;11246:12;11210:2;11276:62;11330:7;11321:6;11310:9;11306:22;11276:62;;;11266:72;;11150:194;10651:703;;;;;;;;;11361:719;;;;;11524:3;11512:9;11503:7;11499:23;11495:33;11492:2;;;11541:1;11538;11531:12;11492:2;11576:1;11593:53;11638:7;11618:9;11593:53;;;11583:63;;11555:97;11683:2;11701:53;11746:7;11737:6;11726:9;11722:22;11701:53;;;11691:63;;11662:98;11791:2;11809:52;11853:7;11844:6;11833:9;11829:22;11809:52;;;11799:62;;11770:97;11926:2;11915:9;11911:18;11898:32;-1:-1;;;;;11942:6;11939:30;11936:2;;;11982:1;11979;11972:12;11936:2;12002:62;12056:7;12047:6;12036:9;12032:22;12002:62;;;11992:72;;11877:193;11486:594;;;;;;;;12087:613;;;;;12240:3;12228:9;12219:7;12215:23;12211:33;12208:2;;;12257:1;12254;12247:12;12208:2;12292:1;12309:53;12354:7;12334:9;12309:53;;;12299:63;;12271:97;12399:2;12417:52;12461:7;12452:6;12441:9;12437:22;12417:52;;;12407:62;;12378:97;12506:2;12524:52;12568:7;12559:6;12548:9;12544:22;12524:52;;;12514:62;;12485:97;12613:2;12631:53;12676:7;12667:6;12656:9;12652:22;12631:53;;12707:739;;;;;;12877:3;12865:9;12856:7;12852:23;12848:33;12845:2;;;12894:1;12891;12884:12;12845:2;12929:1;12946:53;12991:7;12971:9;12946:53;;;12936:63;;12908:97;13036:2;13054:52;13098:7;13089:6;13078:9;13074:22;13054:52;;;13044:62;;13015:97;13143:2;13161:52;13205:7;13196:6;13185:9;13181:22;13161:52;;;13151:62;;13122:97;13250:2;13268:53;13313:7;13304:6;13293:9;13289:22;13268:53;;;13258:63;;13229:98;13358:3;13377:53;13422:7;13413:6;13402:9;13398:22;13377:53;;13453:345;;13566:2;13554:9;13545:7;13541:23;13537:32;13534:2;;;13582:1;13579;13572:12;13534:2;13617:31;;-1:-1;;;;;13657:30;;13654:2;;;13700:1;13697;13690:12;13654:2;13720:62;13774:7;13765:6;13754:9;13750:22;13720:62;;13805:574;;;13944:2;13932:9;13923:7;13919:23;13915:32;13912:2;;;13960:1;13957;13950:12;13912:2;13995:31;;-1:-1;;;;;14035:30;;14032:2;;;14078:1;14075;14068:12;14032:2;14098:62;14152:7;14143:6;14132:9;14128:22;14098:62;;;14088:72;;13974:192;14225:2;14214:9;14210:18;14197:32;-1:-1;;;;;14241:6;14238:30;14235:2;;;14281:1;14278;14271:12;14235:2;14301:62;14355:7;14346:6;14335:9;14331:22;14301:62;;14386:317;;14528:2;14516:9;14507:7;14503:23;14499:32;14496:2;;;14544:1;14541;14534:12;14496:2;14579:1;14596:91;14679:7;14659:9;14596:91;;14958:263;;15073:2;15061:9;15052:7;15048:23;15044:32;15041:2;;;15089:1;15086;15079:12;15041:2;15124:1;15141:64;15197:7;15177:9;15141:64;;15228:366;;;15349:2;15337:9;15328:7;15324:23;15320:32;15317:2;;;15365:1;15362;15355:12;15317:2;15400:1;15417:53;15462:7;15442:9;15417:53;;15974:930;;;;;16190:3;16178:9;16169:7;16165:23;16161:33;16158:2;;;16207:1;16204;16197:12;16158:2;16242:1;16259:64;16315:7;16295:9;16259:64;;;16249:74;;16221:108;16360:2;16378:64;16434:7;16425:6;16414:9;16410:22;16378:64;;;16368:74;;16339:109;16500:2;16489:9;16485:18;16479:25;-1:-1;;;;;16516:6;16513:30;16510:2;;;16556:1;16553;16546:12;16510:2;16576:89;16657:7;16648:6;16637:9;16633:22;16576:89;;;16566:99;;16458:213;16723:2;16712:9;16708:18;16702:25;-1:-1;;;;;16739:6;16736:30;16733:2;;;16779:1;16776;16769:12;16733:2;16799:89;16880:7;16871:6;16860:9;16856:22;16799:89;;16911:595;;;;17058:2;17046:9;17037:7;17033:23;17029:32;17026:2;;;17074:1;17071;17064:12;17026:2;17109:1;17126:53;17171:7;17151:9;17126:53;;;17116:63;;17088:97;17216:2;17234:53;17279:7;17270:6;17259:9;17255:22;17234:53;;17514:173;;17601:46;17643:3;17635:6;17601:46;;;-1:-1;;17676:4;17667:14;;17594:93;17696:173;;17783:46;17825:3;17817:6;17783:46;;17878:269;;18011:96;18103:3;18095:6;18011:96;;;-1:-1;;18136:4;18127:14;;18004:143;18450:265;;18605:104;18705:3;18697:6;18605:104;;18905:103;18978:24;18996:5;18978:24;;;18973:3;18966:37;18960:48;;;19412:690;;19557:54;19605:5;19557:54;;;19624:86;19703:6;19698:3;19624:86;;;19617:93;;19731:56;19781:5;19731:56;;;19807:7;19835:1;19820:260;19845:6;19842:1;19839:13;19820:260;;;19912:6;19906:13;19933:63;19992:3;19977:13;19933:63;;;19926:70;;20013:60;20066:6;20013:60;;;20003:70;-1:-1;;19867:1;19860:9;19820:260;;;-1:-1;20093:3;;19536:566;-1:-1;;;;;19536:566;20141:654;;20272:50;20316:5;20272:50;;;20335:76;20404:6;20399:3;20335:76;;;20328:83;;20432:52;20478:5;20432:52;;;20504:7;20532:1;20517:256;20542:6;20539:1;20536:13;20517:256;;;20609:6;20603:13;20630:63;20689:3;20674:13;20630:63;;;20623:70;;20710:56;20759:6;20710:56;;;20700:66;-1:-1;;20564:1;20557:9;20517:256;;20834:690;;20979:54;21027:5;20979:54;;;21046:86;21125:6;21120:3;21046:86;;;21039:93;;21153:56;21203:5;21153:56;;;21229:7;21257:1;21242:260;21267:6;21264:1;21261:13;21242:260;;;21334:6;21328:13;21355:63;21414:3;21399:13;21355:63;;;21348:70;;21435:60;21488:6;21435:60;;;21425:70;-1:-1;;21289:1;21282:9;21242:260;;21563:654;;21694:50;21738:5;21694:50;;;21757:76;21826:6;21821:3;21757:76;;;21750:83;;21854:52;21900:5;21854:52;;;21926:7;21954:1;21939:256;21964:6;21961:1;21958:13;21939:256;;;22031:6;22025:13;22052:63;22111:3;22096:13;22052:63;;;22045:70;;22132:56;22181:6;22132:56;;;22122:66;-1:-1;;21986:1;21979:9;21939:256;;22300:838;;22477:73;22544:5;22477:73;;;22563:99;22655:6;22650:3;22563:99;;;22556:106;;22683:75;22752:5;22683:75;;;22778:7;22806:1;22791:325;22816:6;22813:1;22810:13;22791:325;;;22883:6;22877:13;22904:109;23009:3;22994:13;22904:109;;;22897:116;;23030:79;23102:6;23030:79;;;23020:89;-1:-1;;22838:1;22831:9;22791:325;;23221:862;;23406:73;23473:5;23406:73;;;23492:107;23592:6;23587:3;23492:107;;;23485:114;;23620:75;23689:5;23620:75;;;23715:7;23743:1;23728:333;23753:6;23750:1;23747:13;23728:333;;;23820:6;23814:13;23841:117;23954:3;23939:13;23841:117;;;23834:124;;23975:79;24047:6;23975:79;;;23965:89;-1:-1;;23775:1;23768:9;23728:333;;24176:1052;;24371:79;24444:5;24371:79;;;24463:111;24567:6;24562:3;24463:111;;;24456:118;;24597:3;24639:4;24631:6;24627:17;24622:3;24618:27;24666:81;24741:5;24666:81;;;24767:7;24795:1;24780:409;24805:6;24802:1;24799:13;24780:409;;;24867:9;24861:4;24857:20;24852:3;24845:33;24912:6;24906:13;24934:118;25047:4;25032:13;24934:118;;;24926:126;;25069:85;25147:6;25069:85;;;25177:4;25168:14;;;;;25059:95;-1:-1;;24827:1;24820:9;24780:409;;;-1:-1;25202:4;;24350:878;-1:-1;;;;;;;24350:878;25267:690;;25412:54;25460:5;25412:54;;;25479:86;25558:6;25553:3;25479:86;;;25472:93;;25586:56;25636:5;25586:56;;;25662:7;25690:1;25675:260;25700:6;25697:1;25694:13;25675:260;;;25767:6;25761:13;25788:63;25847:3;25832:13;25788:63;;;25781:70;;25868:60;25921:6;25868:60;;;25858:70;-1:-1;;25722:1;25715:9;25675:260;;25996:654;;26127:50;26171:5;26127:50;;;26190:76;26259:6;26254:3;26190:76;;;26183:83;;26287:52;26333:5;26287:52;;;26359:7;26387:1;26372:256;26397:6;26394:1;26391:13;26372:256;;;26464:6;26458:13;26485:63;26544:3;26529:13;26485:63;;;26478:70;;26565:56;26614:6;26565:56;;;26555:66;-1:-1;;26419:1;26412:9;26372:256;;26658:104;26735:21;26750:5;26735:21;;26769:103;26842:24;26860:5;26842:24;;27007:343;;27117:38;27149:5;27117:38;;;27167:70;27230:6;27225:3;27167:70;;;27160:77;;27242:52;27287:6;27282:3;27275:4;27268:5;27264:16;27242:52;;;27315:29;27337:6;27315:29;;;27306:39;;;;27097:253;-1:-1;;;27097:253;28383:162;28479:60;28533:5;28479:60;;28552:142;28638:50;28682:5;28638:50;;28701:148;28790:53;28837:5;28790:53;;29019:146;29107:52;29153:5;29107:52;;29334:465;;29494:67;29558:2;29553:3;29494:67;;;29594:66;29574:87;;-1:-1;;;;;29690:2;29681:12;;29674:88;29790:2;29781:12;;29480:319;-1:-1;;29480:319;29808:364;;29968:67;30032:2;30027:3;29968:67;;;30068:66;30048:87;;30163:2;30154:12;;29954:218;-1:-1;;29954:218;30181:465;;30341:67;30405:2;30400:3;30341:67;;;30441:66;30421:87;;-1:-1;;;;;30537:2;30528:12;;30521:88;30637:2;30628:12;;30327:319;-1:-1;;30327:319;30655:364;;30815:67;30879:2;30874:3;30815:67;;;30915:66;30895:87;;31010:2;31001:12;;30801:218;-1:-1;;30801:218;31028:364;;31188:67;31252:2;31247:3;31188:67;;;31288:66;31268:87;;31383:2;31374:12;;31174:218;-1:-1;;31174:218;31401:364;;31561:67;31625:2;31620:3;31561:67;;;31661:66;31641:87;;31756:2;31747:12;;31547:218;-1:-1;;31547:218;31774:465;;31934:67;31998:2;31993:3;31934:67;;;32034:66;32014:87;;-1:-1;;;;;32130:2;32121:12;;32114:88;32230:2;32221:12;;31920:319;-1:-1;;31920:319;32248:465;;32408:67;32472:2;32467:3;32408:67;;;32508:66;32488:87;;32609:66;32604:2;32595:12;;32588:88;32704:2;32695:12;;32394:319;-1:-1;;32394:319;32722:364;;32882:67;32946:2;32941:3;32882:67;;;32982:66;32962:87;;33077:2;33068:12;;32868:218;-1:-1;;32868:218;33095:364;;33255:67;33319:2;33314:3;33255:67;;;33355:66;33335:87;;33450:2;33441:12;;33241:218;-1:-1;;33241:218;33468:364;;33628:67;33692:2;33687:3;33628:67;;;33728:66;33708:87;;33823:2;33814:12;;33614:218;-1:-1;;33614:218;33841:364;;34001:67;34065:2;34060:3;34001:67;;;34101:66;34081:87;;34196:2;34187:12;;33987:218;-1:-1;;33987:218;34214:465;;34374:67;34438:2;34433:3;34374:67;;;34474:66;34454:87;;-1:-1;;;;;34570:2;34561:12;;34554:88;34670:2;34661:12;;34360:319;-1:-1;;34360:319;34766:1120;34998:22;;34766:1120;;34931:4;34922:14;;;35026:62;34926:3;34998:22;35026:62;;;34951:143;35174:4;35167:5;35163:16;35157:23;35186:63;35243:4;35238:3;35234:14;35220:12;35186:63;;;35104:151;35332:4;35325:5;35321:16;35315:23;35344:63;35401:4;35396:3;35392:14;35378:12;35344:63;;;35265:148;35498:4;35491:5;35487:16;35481:23;35550:3;35544:4;35540:14;35533:4;35528:3;35524:14;35517:38;35570:99;35664:4;35650:12;35570:99;;;35562:107;;35423:258;35756:4;35749:5;35745:16;35739:23;35768:86;35848:4;35843:3;35839:14;35825:12;35768:86;;;-1:-1;35877:4;34904:982;-1:-1;;;34904:982;35893:122;35992:18;;35986:29;36093:1532;36319:22;;36093:1532;;36250:5;36241:15;;;36347:62;36245:3;36319:22;36347:62;;;36271:144;36494:4;36487:5;36483:16;36477:23;36506:63;36563:4;36558:3;36554:14;36540:12;36506:63;;;36425:150;36654:4;36647:5;36643:16;36637:23;36666:63;36723:4;36718:3;36714:14;36700:12;36666:63;;;36585:150;36812:4;36805:5;36801:16;36795:23;36824:61;36879:4;36874:3;36870:14;36856:12;36824:61;;;36745:146;36965:4;36958:5;36954:16;36948:23;36977:61;37032:4;37027:3;37023:14;37009:12;36977:61;;;36901:143;37124:4;37117:5;37113:16;37107:23;37136:63;37193:4;37188:3;37184:14;37170:12;37136:63;;;37054:151;37280:4;37273:5;37269:16;37263:23;37292:76;37362:4;37357:3;37353:14;37339:12;37292:76;;;37215:159;37448:4;37441:5;37437:16;37431:23;37500:3;37494:4;37490:14;37483:4;37478:3;37474:14;37467:38;37520:67;37582:4;37568:12;37520:67;;;37512:75;36223:1402;-1:-1;;;;;36223:1402;37701:655;37911:22;;37834:4;37825:14;;;37939:78;37829:3;37911:22;37939:78;;;37854:169;38103:4;38096:5;38092:16;38086:23;38115:63;38172:4;38167:3;38163:14;38149:12;38115:63;;;38033:151;38260:4;38253:5;38249:16;38243:23;38272:63;38329:4;38324:3;38320:14;38306:12;38272:63;;;38194:147;37807:549;;;;39189:1201;39406:22;;39189:1201;;39338:4;39329:14;;;39434:62;39333:3;39406:22;39434:62;;;39358:144;39577:4;39570:5;39566:16;39560:23;39589:78;39661:4;39656:3;39652:14;39638:12;39589:78;;;39512:161;39748:4;39741:5;39737:16;39731:23;39800:3;39794:4;39790:14;39783:4;39778:3;39774:14;39767:38;39820:67;39882:4;39868:12;39820:67;;;39812:75;;39683:216;39975:4;39968:5;39964:16;39958:23;39987:63;40044:4;40039:3;40035:14;40021:12;39987:63;;;39909:147;40135:4;40128:5;40124:16;40118:23;40187:3;40181:4;40177:14;40170:4;40165:3;40161:14;40154:38;40207:145;40347:4;40333:12;40207:145;;40460:1249;40685:22;;40460:1249;;40617:4;40608:14;;;40713:70;40612:3;40685:22;40713:70;;;40637:152;40864:4;40857:5;40853:16;40847:23;40876:86;40956:4;40951:3;40947:14;40933:12;40876:86;;;40799:169;41043:4;41036:5;41032:16;41026:23;41095:3;41089:4;41085:14;41078:4;41073:3;41069:14;41062:38;41115:75;41185:4;41171:12;41115:75;;;41107:83;;40978:224;41278:4;41271:5;41267:16;41261:23;41290:71;41355:4;41350:3;41346:14;41332:12;41290:71;;;41212:155;41446:4;41439:5;41435:16;41429:23;41498:3;41492:4;41488:14;41481:4;41476:3;41472:14;41465:38;41518:153;41666:4;41652:12;41518:153;;41793:1020;42020:22;;41793:1020;;41942:4;41933:14;;;42048:62;41937:3;42020:22;42048:62;;;41962:154;42192:4;42185:5;42181:16;42175:23;42244:3;42238:4;42234:14;42227:4;42222:3;42218:14;42211:38;42264:99;42358:4;42344:12;42264:99;;;42256:107;;42126:249;42450:4;42443:5;42439:16;42433:23;42502:3;42496:4;42492:14;42485:4;42480:3;42476:14;42469:38;42522:99;42616:4;42602:12;42522:99;;;42514:107;;42385:248;42706:4;42699:5;42695:16;42689:23;42718:63;42775:4;42770:3;42766:14;42752:12;42718:63;;43296:100;43367:23;43384:5;43367:23;;43528:213;43646:2;43631:18;;43660:71;43635:9;43704:6;43660:71;;43748:408;43912:2;43897:18;;43926:71;43901:9;43970:6;43926:71;;;44045:9;44039:4;44035:20;44030:2;44019:9;44015:18;44008:48;44070:76;44141:4;44132:6;44070:76;;44163:468;44357:2;44342:18;;44371:71;44346:9;44415:6;44371:71;;;44490:9;44484:4;44480:20;44475:2;44464:9;44460:18;44453:48;44515:106;44616:4;44607:6;44515:106;;44638:361;44806:2;44820:47;;;44791:18;;44881:108;44791:18;44975:6;44881:108;;45006:620;45252:2;45266:47;;;45237:18;;45327:108;45237:18;45421:6;45327:108;;;45319:116;;45483:9;45477:4;45473:20;45468:2;45457:9;45453:18;45446:48;45508:108;45611:4;45602:6;45508:108;;45633:361;45801:2;45815:47;;;45786:18;;45876:108;45786:18;45970:6;45876:108;;46001:461;46219:2;46233:47;;;46204:18;;46294:158;46204:18;46438:6;46294:158;;46469:201;46581:2;46566:18;;46595:65;46570:9;46633:6;46595:65;;46677:297;46813:2;46827:47;;;46798:18;;46888:76;46798:18;46950:6;46888:76;;46981:516;47171:2;47185:47;;;47156:18;;47246:84;47156:18;47316:6;47246:84;;;47238:92;;47378:9;47372:4;47368:20;47363:2;47352:9;47348:18;47341:48;47403:84;47482:4;47473:6;47403:84;;47504:407;47695:2;47709:47;;;47680:18;;47770:131;47680:18;47770:131;;47918:407;48109:2;48123:47;;;48094:18;;48184:131;48094:18;48184:131;;48332:407;48523:2;48537:47;;;48508:18;;48598:131;48508:18;48598:131;;48746:407;48937:2;48951:47;;;48922:18;;49012:131;48922:18;49012:131;;49160:407;49351:2;49365:47;;;49336:18;;49426:131;49336:18;49426:131;;49574:407;49765:2;49779:47;;;49750:18;;49840:131;49750:18;49840:131;;49988:407;50179:2;50193:47;;;50164:18;;50254:131;50164:18;50254:131;;50402:407;50593:2;50607:47;;;50578:18;;50668:131;50578:18;50668:131;;50816:407;51007:2;51021:47;;;50992:18;;51082:131;50992:18;51082:131;;51230:407;51421:2;51435:47;;;51406:18;;51496:131;51406:18;51496:131;;51644:407;51835:2;51849:47;;;51820:18;;51910:131;51820:18;51910:131;;52058:407;52249:2;52263:47;;;52234:18;;52324:131;52234:18;52324:131;;52472:407;52663:2;52677:47;;;52648:18;;52738:131;52648:18;52738:131;;52886:389;53068:2;53082:47;;;53053:18;;53143:122;53053:18;53251:6;53143:122;;53282:269;53428:2;53413:18;;53442:99;53417:9;53514:6;53442:99;;53558:388;53732:2;53717:18;;53746:99;53721:9;53818:6;53746:99;;;53856:80;53932:2;53921:9;53917:18;53908:6;53856:80;;53953:711;54201:3;54186:19;;54216:99;54190:9;54288:6;54216:99;;;54326:80;54402:2;54391:9;54387:18;54378:6;54326:80;;;54417;54493:2;54482:9;54478:18;54469:6;54417:80;;;54545:9;54539:4;54535:20;54530:2;54519:9;54515:18;54508:48;54570:84;54649:4;54640:6;54570:84;;;54562:92;54172:492;-1:-1;;;;;;54172:492;54671:795;54937:3;54922:19;;54952:99;54926:9;55024:6;54952:99;;;55062:80;55138:2;55127:9;55123:18;55114:6;55062:80;;;55190:9;55184:4;55180:20;55175:2;55164:9;55160:18;55153:48;55215:84;55294:4;55285:6;55215:84;;;55207:92;;55347:9;55341:4;55337:20;55332:2;55321:9;55317:18;55310:48;55372:84;55451:4;55442:6;55372:84;;55473:507;55675:2;55660:18;;55689:99;55664:9;55761:6;55689:99;;;55799:80;55875:2;55864:9;55860:18;55851:6;55799:80;;;55890;55966:2;55955:9;55951:18;55942:6;55890:80;;55987:388;56161:2;56146:18;;56175:99;56150:9;56247:6;56175:99;;;56285:80;56361:2;56350:9;56346:18;56337:6;56285:80;;56382:1391;56786:3;56771:19;;56801:99;56775:9;56873:6;56801:99;;;56911:80;56987:2;56976:9;56972:18;56963:6;56911:80;;;57002;57078:2;57067:9;57063:18;57054:6;57002:80;;;57093;57169:2;57158:9;57154:18;57145:6;57093:80;;;57184:81;57260:3;57249:9;57245:19;57236:6;57184:81;;;57314:9;57308:4;57304:20;57298:3;57287:9;57283:19;57276:49;57339:84;57418:4;57409:6;57339:84;;;57331:92;;57434:81;57510:3;57499:9;57495:19;57486:6;57434:81;;;57526:79;57600:3;57589:9;57585:19;57576:6;57526:79;;;57654:9;57648:4;57644:20;57638:3;57627:9;57623:19;57616:49;57679:84;57758:4;57749:6;57679:84;;;57671:92;56757:1016;-1:-1;;;;;;;;;;;56757:1016;57780:947;58082:3;58067:19;;58097:99;58071:9;58169:6;58097:99;;;58207:80;58283:2;58272:9;58268:18;58259:6;58207:80;;;58298;58374:2;58363:9;58359:18;58350:6;58298:80;;;58389;58465:2;58454:9;58450:18;58441:6;58389:80;;;58480:79;58554:3;58543:9;58539:19;58530:6;58480:79;;;58608:9;58602:4;58598:20;58592:3;58581:9;58577:19;58570:49;58633:84;58712:4;58703:6;58633:84;;;58625:92;58053:674;-1:-1;;;;;;;;58053:674;58734:827;59008:3;58993:19;;59023:99;58997:9;59095:6;59023:99;;;59133:80;59209:2;59198:9;59194:18;59185:6;59133:80;;;59224;59300:2;59289:9;59285:18;59276:6;59224:80;;;59315:78;59389:2;59378:9;59374:18;59365:6;59315:78;;;59442:9;59436:4;59432:20;59426:3;59415:9;59411:19;59404:49;59467:84;59546:4;59537:6;59467:84;;;59459:92;58979:582;-1:-1;;;;;;;58979:582;59568:739;59822:3;59807:19;;59837:99;59811:9;59909:6;59837:99;;;59947:80;60023:2;60012:9;60008:18;59999:6;59947:80;;;60038:78;60112:2;60101:9;60097:18;60088:6;60038:78;;;60127;60201:2;60190:9;60186:18;60177:6;60127:78;;;60216:81;60292:3;60281:9;60277:19;60268:6;60216:81;;60314:859;60596:3;60581:19;;60611:99;60585:9;60683:6;60611:99;;;60721:80;60797:2;60786:9;60782:18;60773:6;60721:80;;;60812:78;60886:2;60875:9;60871:18;60862:6;60812:78;;;60901;60975:2;60964:9;60960:18;60951:6;60901:78;;;60990:81;61066:3;61055:9;61051:19;61042:6;60990:81;;;61082;61158:3;61147:9;61143:19;61134:6;61082:81;;61575:507;61777:2;61762:18;;61791:99;61766:9;61863:6;61791:99;;;61901:80;61977:2;61966:9;61962:18;61953:6;61901:80;;62603:711;62851:3;62836:19;;62866:99;62840:9;62938:6;62866:99;;;62976:80;63052:2;63041:9;63037:18;63028:6;62976:80;;;63067;63143:2;63132:9;63128:18;63119:6;63067:80;;63321:373;63495:2;63509:47;;;63480:18;;63570:114;63480:18;63670:6;63570:114;;63701:357;63867:2;63881:47;;;63852:18;;63942:106;63852:18;64034:6;63942:106;;64065:492;64267:2;64281:47;;;64252:18;;64342:114;64252:18;64442:6;64342:114;;;64334:122;;64467:80;64543:2;64532:9;64528:18;64519:6;64467:80;;64564:213;64682:2;64667:18;;64696:71;64671:9;64740:6;64696:71;;64784:843;65086:3;65071:19;;65101:71;65075:9;65145:6;65101:71;;;65183:72;65251:2;65240:9;65236:18;65227:6;65183:72;;;65303:9;65297:4;65293:20;65288:2;65277:9;65273:18;65266:48;65328:108;65431:4;65422:6;65328:108;;;65320:116;;65484:9;65478:4;65474:20;65469:2;65458:9;65454:18;65447:48;65509:108;65612:4;65603:6;65509:108;;65634:256;65696:2;65690:9;65722:17;;;-1:-1;;;;;65782:34;;65818:22;;;65779:62;65776:2;;;65854:1;65851;65844:12;65776:2;65870;65863:22;65674:216;;-1:-1;65674:216;65897:258;;-1:-1;;;;;66048:6;66045:30;66042:2;;;66088:1;66085;66078:12;66042:2;-1:-1;66117:4;66105:17;;;66135:15;;65979:176;66692:258;;-1:-1;;;;;66827:6;66824:30;66821:2;;;66867:1;66864;66857:12;66821:2;-1:-1;66940:4;66911;66888:17;;;;-1:-1;;66884:33;66930:15;;66758:192;66960:119;67066:4;67054:17;;67034:45;68066:103;68152:12;;68136:33;68647:123;-1:-1;68762:3;;68746:24;70306:168;70414:19;;;70463:4;70454:14;;70407:67;72833:91;;72895:24;72913:5;72895:24;;72931:85;72997:13;72990:21;;72973:43;73102:156;73189:5;73195:58;73189:5;73195:58;;73265:136;73342:5;73348:48;73342:5;73348:48;;73408:142;73488:5;73494:51;73488:5;73494:51;;73557:140;73636:5;73642:50;73636:5;73642:50;;73704:121;-1:-1;;;;;73766:54;;73749:76;73911:96;-1:-1;;;;;73972:30;;73955:52;74014:156;;74116:49;74159:5;74116:49;;74177:136;;74269:39;74302:5;74269:39;;74320:142;;74415:42;74451:5;74415:42;;74469:140;;74563:41;74598:5;74563:41;;74617:145;74698:6;74693:3;74688;74675:30;-1:-1;74754:1;74736:16;;74729:27;74668:94;74771:268;74836:1;74843:101;74857:6;74854:1;74851:13;74843:101;;;74924:11;;;74918:18;74905:11;;;74898:39;74879:2;74872:10;74843:101;;;74959:6;74956:1;74953:13;74950:2;;;-1:-1;;75024:1;75006:16;;74999:27;74820:219;75047:97;75135:2;75115:14;-1:-1;;75111:28;;75095:49;75152:116;75246:1;75239:5;75236:12;75226:2;;75252:9;75275:106;75359:1;75352:5;75349:12;75339:2;;75365:9;75388:109;75475:1;75468:5;75465:12;75455:2;;75481:9;75504:108;75590:1;75583:5;75580:12;75570:2;;75596:9;75619:117;75688:24;75706:5;75688:24;;;75681:5;75678:35;75668:2;;75727:1;75724;75717:12;75743:117;75812:24;75830:5;75812:24;;75867:112;75954:1;75947:5;75944:12;75934:2;;75970:1;75967;75960:12;76110:115;76178:23;76195:5;76178:23;","source":"pragma solidity ^0.5.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\"openzeppelin-solidity/contracts/math/SafeMath.sol\\";\\nimport \\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\";\\nimport \\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\";\\nimport \\"./utils/SolRsaVerify.sol\\";\\n\\nimport { WorkersImpl } from \\"./impl/WorkersImpl.sol\\";\\nimport { PrincipalImpl } from \\"./impl/PrincipalImpl.sol\\";\\nimport { TaskImpl } from \\"./impl/TaskImpl.sol\\";\\nimport { UpgradeImpl } from \\"./impl/UpgradeImpl.sol\\";\\nimport { SecretContractImpl } from \\"./impl/SecretContractImpl.sol\\";\\nimport { EnigmaCommon } from \\"./impl/EnigmaCommon.sol\\";\\nimport { EnigmaState } from \\"./impl/EnigmaState.sol\\";\\nimport { EnigmaEvents } from \\"./impl/EnigmaEvents.sol\\";\\nimport { EnigmaStorage } from \\"./impl/EnigmaStorage.sol\\";\\nimport { Getters } from \\"./impl/Getters.sol\\";\\nimport { ERC20 } from \\"./interfaces/ERC20.sol\\";\\n\\ncontract Enigma is EnigmaStorage, EnigmaEvents, Getters, Ownable {\\n    using SafeMath for uint256;\\n    using ECDSA for bytes32;\\n\\n    // ========================================== Constructor ==========================================\\n\\n    constructor(address _tokenAddress, address _principal, uint _epochSize, uint _timeoutThreshold) public {\\n        state.engToken = ERC20(_tokenAddress);\\n        state.epochSize = _epochSize;\\n        state.taskTimeoutSize = _timeoutThreshold * state.epochSize;\\n        state.principal = _principal;\\n        state.updatedEnigmaContractAddress = address(this);\\n        state.stakingThreshold = 1;\\n        state.workerGroupSize = 1;\\n    }\\n\\n    // ========================================== Modifiers ==========================================\\n\\n    /**\\n    * Checks if the custodian wallet is registered as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerRegistered(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status != EnigmaCommon.WorkerStatus.Unregistered, \\"Unregistered worker\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged in as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedIn, \\"Worker not logged in\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged out as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedOut(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not logged out\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if worker can log in\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canLogIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(getFirstBlockNumber(block.number) != 0, \\"Principal node has not been initialized\\");\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        require(worker.balance >= state.stakingThreshold, \\"Worker\'s balance is not sufficient\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the worker can withdraw\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canWithdraw(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        EnigmaCommon.WorkerLog memory workerLog = WorkersImpl.getLatestWorkerLogImpl(worker, block.number);\\n        require(workerLog.workerEventType == EnigmaCommon.WorkerLogType.LogOut,\\n            \\"Worker\'s last log is not of LogOut type\\");\\n        require(getFirstBlockNumber(block.number) > workerLog.blockNumber,\\n            \\"Cannot withdraw in same epoch as log out event\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has not been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractUndefined(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Undefined, \\"Secret contract already deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractDeployed(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Deployed, \\"Secret contract not deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks task record has been created and is still pending receipt\\n    *\\n    * @param _taskId Task ID\\n    */\\n    modifier taskWaiting(bytes32 _taskId) {\\n        require(state.tasks[_taskId].status == EnigmaCommon.TaskStatus.RecordCreated, \\"Task is not waiting\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure signing key used for registration is unique\\n    *\\n    * @param _signer Signing key\\n    */\\n    modifier isUniqueSigningKey(address _signer) {\\n        for (uint i = 0; i < state.workerAddresses.length; i++) {\\n            require(state.workers[state.workerAddresses[i]].signer != _signer, \\"Not a unique signing key\\");\\n        }\\n        _;\\n    }\\n\\n    /**\\n    * Ensure that the contract\'s context is the updated contract\\n    *\\n    */\\n    modifier isUpdatedEnigmaContract() {\\n        require(address(this) == state.updatedEnigmaContractAddress, \\"Not updated Enigma contract\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure the sender of the recent call is the updated contract\\n    *\\n    */\\n    modifier fromUpdatedEnigmaContract() {\\n        require(msg.sender == state.updatedEnigmaContractAddress, \\"Not from updated Enigma contract\\");\\n        _;\\n    }\\n\\n    // ========================================== Functions ==========================================\\n\\n    /**\\n    * Registers a new worker or change the signer parameters of an existing\\n    * worker. This should be called by every worker (and the principal)\\n    * node in order to receive tasks.\\n    *\\n    * @param _signer The signer address, derived from the enclave public key\\n    * @param _report The RLP encoded report returned by the IAS\\n    * @param _signature Signature\\n    */\\n    function register(address _signer, bytes memory _report, bytes memory _signature)\\n    public\\n    isUpdatedEnigmaContract\\n    isUniqueSigningKey(_signer)\\n    {\\n        WorkersImpl.registerImpl(state, _signer, _report, _signature);\\n    }\\n\\n    /**\\n    * Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    *\\n    * @param _custodian The worker\'s ETH address\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function deposit(address _custodian, uint _amount)\\n    public\\n    isUpdatedEnigmaContract\\n    workerRegistered(_custodian)\\n    {\\n        WorkersImpl.depositImpl(state, _custodian, _amount);\\n    }\\n\\n    /**\\n    * Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    *\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function withdraw(uint _amount)\\n    public\\n    canWithdraw(msg.sender)\\n    {\\n        WorkersImpl.withdrawImpl(state, _amount);\\n    }\\n\\n    /**\\n    * Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\n    * selection process.\\n    */\\n    function login() public canLogIn(msg.sender) {\\n        WorkersImpl.loginImpl(state);\\n    }\\n\\n    /**\\n    * Logout worker. Worker must be logged in to do so.\\n    */\\n    function logout() public workerLoggedIn(msg.sender) {\\n        WorkersImpl.logoutImpl(state);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContractFailure(\\n        bytes32 _taskId,\\n        bytes32 _codeHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractFailureImpl(state, _taskId, _codeHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _preCodeHash Predeployed bytecode hash\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContract(\\n        bytes32 _taskId,\\n        bytes32 _preCodeHash,\\n        bytes32 _codeHash,\\n        bytes32 _initStateDeltaHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractImpl(state, _taskId, _preCodeHash, _codeHash, _initStateDeltaHash,\\n            _optionalEthereumData, _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Check if secret contract has been deployed\\n    *\\n    * @return  Number of deployed secret contracts\\n    */\\n    function countSecretContracts()\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return SecretContractImpl.countSecretContractsImpl(state);\\n    }\\n\\n    /**\\n    * Get deployed secret contract addresses within a range\\n    *\\n    * @param _start Start of range\\n    * @param _stop End of range\\n    * @return Subset of deployed secret contract addresses\\n    */\\n    function getSecretContractAddresses(uint _start, uint _stop)\\n    public\\n    view\\n    returns (bytes32[] memory)\\n    {\\n        return SecretContractImpl.getSecretContractAddressesImpl(state, _start, _stop);\\n    }\\n\\n    /**\\n    * Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\n    * generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\n    * task deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\n    * the on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\n    * invalid.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    * @param _nonce Locally-computed nonce value for this deployment\\n    */\\n    function createDeploymentTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber,\\n        uint _nonce\\n    )\\n    public\\n    onlyOwner\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createDeploymentTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber, _nonce);\\n    }\\n\\n    /**\\n    * Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\n    * contract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\n    * the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\n    * The task record is finalized and the worker is credited with the task fee.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _stateDeltaHash Input state delta hash\\n    * @param _outputHash Output state hash\\n    * @param _optionalEthereumData Output state hash\\n    * @param _optionalEthereumContractAddress Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitReceipt(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _stateDeltaHash,\\n        bytes32 _outputHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitReceiptImpl(state, _scAddr, _taskId, _stateDeltaHash, _outputHash, _optionalEthereumData,\\n            _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\n    * updated to indicate task failure.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _outputHash Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitTaskFailure(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _outputHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitTaskFailureImpl(state, _scAddr, _taskId, _outputHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    *\\n    * @param _taskId Unique taskId\\n    */\\n    function returnFeesForTask(bytes32 _taskId)\\n    public\\n    taskWaiting(_taskId)\\n    {\\n        TaskImpl.returnFeesForTaskImpl(state, _taskId);\\n    }\\n\\n    /**\\n    * Reparameterizing workers with a new seed\\n    * This should be called for each epoch by the Principal node\\n    *\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n    * @param _seed The random integer generated by the enclave\\n    * @param _sig Principal node\'s signature\\n    */\\n    function setWorkersParams(uint _blockNumber, uint _seed, bytes memory _sig)\\n    public\\n    isUpdatedEnigmaContract\\n    workerRegistered(msg.sender)\\n    {\\n        PrincipalImpl.setWorkersParamsImpl(state, _blockNumber, _seed, _sig);\\n    }\\n\\n    /**\\n    * Get active workers before a certain block number\\n    *\\n    * @param _blockNumber Block number\\n    */\\n    function getActiveWorkers(uint _blockNumber)\\n    public\\n    view\\n    returns (address[] memory, uint[] memory)\\n    {\\n        return PrincipalImpl.getActiveWorkersImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get the first block number of an epoch that a given block number belongs to\\n    *\\n    * @param _blockNumber Block number\\n    * @return Block number\\n    */\\n    function getFirstBlockNumber(uint _blockNumber)\\n    public\\n    view\\n    returns (uint) {\\n        return WorkersImpl.getFirstBlockNumberImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get worker params for an epoch given a particular block number\\n    *\\n    * @param _blockNumber Block number\\n    * @return Epoch\'s first block number\\n    * @return Seed\\n    * @return Array of worker\'s signing addresses\\n    * @return Array of worker\'s stakes\\n    */\\n    function getWorkerParams(uint _blockNumber)\\n    public\\n    view\\n    returns (uint, uint, address[] memory, uint[] memory) {\\n        return WorkersImpl.getWorkerParamsImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\n    * and the secret contract address.\\n    *\\n    * @param _blockNumber Block number the task record was mined\\n    * @param _scAddr Secret contract address\\n    * @return Selected workers\' addresses\\n    */\\n    function getWorkerGroup(uint _blockNumber, bytes32 _scAddr)\\n    public\\n    view\\n    returns (address[] memory)\\n    {\\n        return WorkersImpl.getWorkerGroupImpl(state, _blockNumber, _scAddr);\\n    }\\n\\n    /**\\n    * The RLP encoded report returned by the IAS server\\n    *\\n    * @param _custodian The worker\'s custodian address\\n    */\\n    function getReport(address _custodian)\\n    public\\n    view\\n    workerRegistered(_custodian)\\n    returns (address, bytes memory)\\n    {\\n        return WorkersImpl.getReportImpl(state, _custodian);\\n    }\\n\\n    /**\\n    * This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n    * @param _data The report itself\\n    * @param _signature The signature of the report\\n    */\\n    function verifyReport(bytes memory _data, bytes memory _signature)\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return WorkersImpl.verifyReportImpl(_data, _signature);\\n    }\\n\\n    /**\\n    * Upgrade Enigma Contract\\n    * @param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address\\n    */\\n    function upgradeEnigmaContract(address _updatedEnigmaContractAddress)\\n    public\\n    onlyOwner\\n    isUpdatedEnigmaContract\\n    {\\n        return UpgradeImpl.upgradeEnigmaContractImpl(state, _updatedEnigmaContractAddress);\\n    }\\n\\n    /**\\n    * Upgrade Enigma Contract\\n    * @param _workerAddress Newly-registered worker address\\n    * @param _signer Newly-registered worker address\\n    * @param _sig Signature\\n    */\\n    function transferWorkerStakePostUpgrade(address _workerAddress, address _signer, bytes memory _sig)\\n    public\\n    fromUpdatedEnigmaContract\\n    returns (uint256)\\n    {\\n        return UpgradeImpl.transferWorkerStakePostUpgradeImpl(state, _workerAddress, _signer, _sig);\\n    }\\n\\n    /**\\n    * Set mrSigner\\n    * @param _mrSigner mrSigner\\n    */\\n    function setMrSigner(bytes memory _mrSigner)\\n    public\\n    onlyOwner\\n    {\\n        state.mrSigner = _mrSigner;\\n    }\\n\\n    /**\\n    * Set isvSvn\\n    * @param _isvSvn mrSigner\\n    */\\n    function setIsvSvn(bytes memory _isvSvn)\\n    public\\n    onlyOwner\\n    {\\n        state.isvSvn = _isvSvn;\\n    }\\n}\\n","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[935]},"id":936,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":936,"sourceUnit":21958,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":936,"sourceUnit":21830,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"openzeppelin-solidity/contracts/ownership/Ownable.sol","id":5,"nodeType":"ImportDirective","scope":936,"sourceUnit":22067,"src":"184:63:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":6,"nodeType":"ImportDirective","scope":936,"sourceUnit":21749,"src":"248:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":8,"nodeType":"ImportDirective","scope":936,"sourceUnit":9376,"src":"284:53:0","symbolAliases":[{"foreign":7,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":10,"nodeType":"ImportDirective","scope":936,"sourceUnit":3328,"src":"338:57:0","symbolAliases":[{"foreign":9,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":12,"nodeType":"ImportDirective","scope":936,"sourceUnit":6071,"src":"396:47:0","symbolAliases":[{"foreign":11,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol","file":"./impl/UpgradeImpl.sol","id":14,"nodeType":"ImportDirective","scope":936,"sourceUnit":8356,"src":"444:53:0","symbolAliases":[{"foreign":13,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":16,"nodeType":"ImportDirective","scope":936,"sourceUnit":3966,"src":"498:67:0","symbolAliases":[{"foreign":15,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":18,"nodeType":"ImportDirective","scope":936,"sourceUnit":2438,"src":"566:55:0","symbolAliases":[{"foreign":17,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":20,"nodeType":"ImportDirective","scope":936,"sourceUnit":2594,"src":"622:53:0","symbolAliases":[{"foreign":19,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":22,"nodeType":"ImportDirective","scope":936,"sourceUnit":2536,"src":"676:55:0","symbolAliases":[{"foreign":21,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":24,"nodeType":"ImportDirective","scope":936,"sourceUnit":2602,"src":"732:57:0","symbolAliases":[{"foreign":23,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":26,"nodeType":"ImportDirective","scope":936,"sourceUnit":2803,"src":"790:45:0","symbolAliases":[{"foreign":25,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":28,"nodeType":"ImportDirective","scope":936,"sourceUnit":10361,"src":"836:47:0","symbolAliases":[{"foreign":27,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":29,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2601,"src":"904:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2601","typeString":"contract EnigmaStorage"}},"id":30,"nodeType":"InheritanceSpecifier","src":"904:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":31,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2535,"src":"919:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2535","typeString":"contract EnigmaEvents"}},"id":32,"nodeType":"InheritanceSpecifier","src":"919:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":33,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2802,"src":"933:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2802","typeString":"contract Getters"}},"id":34,"nodeType":"InheritanceSpecifier","src":"933:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":35,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":22066,"src":"942:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$22066","typeString":"contract Ownable"}},"id":36,"nodeType":"InheritanceSpecifier","src":"942:7:0"}],"contractDependencies":[2535,2601,2802,22066],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":935,"linearizedBaseContracts":[935,22066,2802,2535,2601],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":39,"libraryName":{"contractScope":null,"id":37,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":21957,"src":"962:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$21957","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"956:27:0","typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":42,"libraryName":{"contractScope":null,"id":40,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":21829,"src":"994:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$21829","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"988:24:0","typeName":{"id":41,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1004:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":102,"nodeType":"Block","src":"1227:330:0","statements":[{"expression":{"argumentTypes":null,"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":53,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1237:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":55,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2544,"src":"1237:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10360","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":57,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1260:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":56,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10360,"src":"1254:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10360_$","typeString":"type(contract ERC20)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1254:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10360","typeString":"contract ERC20"}},"src":"1237:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10360","typeString":"contract ERC20"}},"id":60,"nodeType":"ExpressionStatement","src":"1237:37:0"},{"expression":{"argumentTypes":null,"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":61,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1284:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":63,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"1284:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":64,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1302:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1284:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":66,"nodeType":"ExpressionStatement","src":"1284:28:0"},{"expression":{"argumentTypes":null,"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":67,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1322:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":69,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2548,"src":"1322:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":70,"name":"_timeoutThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1346:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":71,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1366:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":72,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"1366:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1346:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1322:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":75,"nodeType":"ExpressionStatement","src":"1322:59:0"},{"expression":{"argumentTypes":null,"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":76,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1391:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":78,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2550,"src":"1391:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":79,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1409:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1391:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":81,"nodeType":"ExpressionStatement","src":"1391:28:0"},{"expression":{"argumentTypes":null,"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":82,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1429:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":84,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2552,"src":"1429:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":86,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22690,"src":"1474:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$935","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$935","typeString":"contract Enigma"}],"id":85,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1466:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1466:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1429:50:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":89,"nodeType":"ExpressionStatement","src":"1429:50:0"},{"expression":{"argumentTypes":null,"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":90,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1489:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":92,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2585,"src":"1489:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1514:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1489:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":95,"nodeType":"ExpressionStatement","src":"1489:26:0"},{"expression":{"argumentTypes":null,"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":96,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1525:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":98,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2587,"src":"1525:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1549:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1525:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":101,"nodeType":"ExpressionStatement","src":"1525:25:0"}]},"documentation":null,"id":103,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":103,"src":"1136:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":46,"name":"_principal","nodeType":"VariableDeclaration","scope":103,"src":"1159:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":48,"name":"_epochSize","nodeType":"VariableDeclaration","scope":103,"src":"1179:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint","nodeType":"ElementaryTypeName","src":"1179:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":50,"name":"_timeoutThreshold","nodeType":"VariableDeclaration","scope":103,"src":"1196:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint","nodeType":"ElementaryTypeName","src":"1196:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1135:84:0"},"returnParameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1227:0:0"},"scope":935,"src":"1124:433:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":127,"nodeType":"Block","src":"1847:181:0","statements":[{"assignments":[110],"declarations":[{"constant":false,"id":110,"name":"worker","nodeType":"VariableDeclaration","scope":127,"src":"1857:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":109,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"1857:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":115,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":111,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1893:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"1893:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2344_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":114,"indexExpression":{"argumentTypes":null,"id":113,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"1907:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1893:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1857:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":117,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"1931:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2336,"src":"1931:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":119,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"1948:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"1948:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2385_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1948:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1931:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1988:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"1923:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1923:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":125,"nodeType":"ExpressionStatement","src":"1923:87:0"},{"id":126,"nodeType":"PlaceholderStatement","src":"2020:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":128,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"name":"_user","nodeType":"VariableDeclaration","scope":128,"src":"1832:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"1832:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1831:15:0"},"src":"1806:222:0","visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"2211:178:0","statements":[{"assignments":[135],"declarations":[{"constant":false,"id":135,"name":"worker","nodeType":"VariableDeclaration","scope":152,"src":"2221:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":134,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"2221:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":140,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":136,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"2257:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"2257:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2344_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":139,"indexExpression":{"argumentTypes":null,"id":138,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2271:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2257:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2221:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":142,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2295:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2336,"src":"2295:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":144,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"2312:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"2312:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2385_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2312:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2295:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2348:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2287:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":150,"nodeType":"ExpressionStatement","src":"2287:84:0"},{"id":151,"nodeType":"PlaceholderStatement","src":"2381:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":153,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"name":"_user","nodeType":"VariableDeclaration","scope":153,"src":"2196:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"2196:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2195:15:0"},"src":"2172:217:0","visibility":"internal"},{"body":{"id":177,"nodeType":"Block","src":"2574:180:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"name":"worker","nodeType":"VariableDeclaration","scope":177,"src":"2584:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":159,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"2584:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":165,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":161,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"2620:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"2620:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2344_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":164,"indexExpression":{"argumentTypes":null,"id":163,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2634:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2620:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2584:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":167,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"2658:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2336,"src":"2658:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":169,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"2675:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"2675:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2385_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2675:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2658:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2712:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"2650:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":175,"nodeType":"ExpressionStatement","src":"2650:86:0"},{"id":176,"nodeType":"PlaceholderStatement","src":"2746:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":178,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"name":"_user","nodeType":"VariableDeclaration","scope":178,"src":"2559:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2558:15:0"},"src":"2534:220:0","visibility":"internal"},{"body":{"id":221,"nodeType":"Block","src":"2903:395:0","statements":[{"assignments":[185],"declarations":[{"constant":false,"id":185,"name":"worker","nodeType":"VariableDeclaration","scope":221,"src":"2913:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":184,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"2913:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":190,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":186,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"2949:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"2949:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2344_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":189,"indexExpression":{"argumentTypes":null,"id":188,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"2963:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2949:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2913:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":193,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22630,"src":"3007:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3007:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":192,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"2987:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2987:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3024:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2987:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3027:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":191,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"2979:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2979:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":200,"nodeType":"ExpressionStatement","src":"2979:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":202,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3087:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2336,"src":"3087:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":204,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"3104:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"3104:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2385_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3104:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3087:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3141:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"3079:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3079:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":210,"nodeType":"ExpressionStatement","src":"3079:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3201:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2340,"src":"3201:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":214,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"3219:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2585,"src":"3219:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3201:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3243:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"3193:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3193:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":219,"nodeType":"ExpressionStatement","src":"3193:87:0"},{"id":220,"nodeType":"PlaceholderStatement","src":"3290:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":222,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"name":"_user","nodeType":"VariableDeclaration","scope":222,"src":"2888:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"2888:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2887:15:0"},"src":"2870:428:0","visibility":"internal"},{"body":{"id":278,"nodeType":"Block","src":"3456:580:0","statements":[{"assignments":[229],"declarations":[{"constant":false,"id":229,"name":"worker","nodeType":"VariableDeclaration","scope":278,"src":"3466:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":228,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"3466:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":234,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":230,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"3502:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"3502:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2344_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":233,"indexExpression":{"argumentTypes":null,"id":232,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"3516:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3502:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3466:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":236,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"3540:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2336,"src":"3540:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":238,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"3557:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"3557:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2385_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3557:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3540:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3594:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"3532:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3532:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":244,"nodeType":"ExpressionStatement","src":"3532:104:0"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"name":"workerLog","nodeType":"VariableDeclaration","scope":278,"src":"3646:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2362_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":247,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2362,"src":"3646:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2362_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":255,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":251,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"3723:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":252,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22630,"src":"3731:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3731:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":249,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"3688:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9374,"src":"3688:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2344_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2362_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3688:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2362_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3646:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2393","typeString":"enum EnigmaCommon.WorkerLogType"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":257,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3762:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2362_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"3762:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2393","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":259,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"3791:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"3791:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2393_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3791:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2393","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3762:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3838:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"3754:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3754:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":265,"nodeType":"ExpressionStatement","src":"3754:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":268,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22630,"src":"3918:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3918:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":267,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"3898:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3898:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3934:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2362_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2359,"src":"3934:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3898:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3969:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"3890:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3890:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":276,"nodeType":"ExpressionStatement","src":"3890:128:0"},{"id":277,"nodeType":"PlaceholderStatement","src":"4028:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":279,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"name":"_user","nodeType":"VariableDeclaration","scope":279,"src":"3441:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"3441:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3440:15:0"},"src":"3420:616:0","visibility":"internal"},{"body":{"id":297,"nodeType":"Block","src":"4203:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2388","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":284,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4221:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2579,"src":"4221:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2374_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":287,"indexExpression":{"argumentTypes":null,"id":286,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4237:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4221:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2374_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2373,"src":"4221:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2388","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":289,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"4256:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"4256:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2388_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4256:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2388","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4221:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4301:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"4213:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4213:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":295,"nodeType":"ExpressionStatement","src":"4213:123:0"},{"id":296,"nodeType":"PlaceholderStatement","src":"4346:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":298,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"name":"_scAddr","nodeType":"VariableDeclaration","scope":298,"src":"4186:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4186:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4185:17:0"},"src":"4159:195:0","visibility":"internal"},{"body":{"id":316,"nodeType":"Block","src":"4516:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2388","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":303,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4534:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2579,"src":"4534:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2374_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":306,"indexExpression":{"argumentTypes":null,"id":305,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4550:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4534:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2374_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2373,"src":"4534:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2388","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":308,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"4569:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"4569:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2388_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4569:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2388","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4534:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4613:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4526:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"ExpressionStatement","src":"4526:118:0"},{"id":315,"nodeType":"PlaceholderStatement","src":"4654:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":317,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"name":"_scAddr","nodeType":"VariableDeclaration","scope":317,"src":"4499:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4499:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4498:17:0"},"src":"4473:189:0","visibility":"internal"},{"body":{"id":335,"nodeType":"Block","src":"4827:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2381","typeString":"enum EnigmaCommon.TaskStatus"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":322,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4845:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2572,"src":"4845:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2332_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":325,"indexExpression":{"argumentTypes":null,"id":324,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"4857:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2332_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2329,"src":"4845:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2381","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":327,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"4876:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2381,"src":"4876:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2381_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4876:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2381","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4845:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4915:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"4837:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4837:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"4837:100:0"},{"id":334,"nodeType":"PlaceholderStatement","src":"4947:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":336,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"name":"_taskId","nodeType":"VariableDeclaration","scope":336,"src":"4810:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4810:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4809:17:0"},"src":"4789:166:0","visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"5117:202:0","statements":[{"body":{"id":366,"nodeType":"Block","src":"5183:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":353,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5205:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"5205:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2344_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":359,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":355,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5219:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":356,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2561,"src":"5219:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":358,"indexExpression":{"argumentTypes":null,"id":357,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5241:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5219:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5205:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"5205:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":361,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"5255:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5205:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5264:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"5197:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5197:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":365,"nodeType":"ExpressionStatement","src":"5197:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5144:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":345,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5148:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2561,"src":"5148:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5148:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5144:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":367,"initializationExpression":{"assignments":[341],"declarations":[{"constant":false,"id":341,"name":"i","nodeType":"VariableDeclaration","scope":367,"src":"5132:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint","nodeType":"ElementaryTypeName","src":"5132:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":343,"initialValue":{"argumentTypes":null,"hexValue":"30","id":342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5141:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5132:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5178:3:0","subExpression":{"argumentTypes":null,"id":349,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5178:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":351,"nodeType":"ExpressionStatement","src":"5178:3:0"},"nodeType":"ForStatement","src":"5127:175:0"},{"id":368,"nodeType":"PlaceholderStatement","src":"5311:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":370,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"name":"_signer","nodeType":"VariableDeclaration","scope":370,"src":"5100:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"5100:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5099:17:0"},"src":"5072:247:0","visibility":"internal"},{"body":{"id":383,"nodeType":"Block","src":"5446:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":374,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22690,"src":"5472:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$935","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$935","typeString":"contract Enigma"}],"id":373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5464:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5464:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":376,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5481:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2552,"src":"5481:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5464:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74207570646174656420456e69676d6120636f6e7472616374","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5517:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""},"value":"Not updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""}],"id":372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"5456:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5456:91:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"5456:91:0"},{"id":382,"nodeType":"PlaceholderStatement","src":"5557:1:0"}]},"documentation":"Ensure that the contract\'s context is the updated contract\\n    ","id":384,"name":"isUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[],"src":"5443:2:0"},"src":"5411:154:0","visibility":"internal"},{"body":{"id":396,"nodeType":"Block","src":"5696:121:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":387,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"5714:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5714:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":389,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5728:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2552,"src":"5728:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5714:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5764:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""},"value":"Not from updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""}],"id":386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"5706:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5706:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":394,"nodeType":"ExpressionStatement","src":"5706:93:0"},{"id":395,"nodeType":"PlaceholderStatement","src":"5809:1:0"}]},"documentation":"Ensure the sender of the recent call is the updated contract\\n    ","id":397,"name":"fromUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[],"src":"5693:2:0"},"src":"5659:158:0","visibility":"internal"},{"body":{"id":420,"nodeType":"Block","src":"6466:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":414,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6501:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":415,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"6508:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":416,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"6517:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":417,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6526:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":411,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"6476:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":8642,"src":"6476:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6476:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":419,"nodeType":"ExpressionStatement","src":"6476:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":421,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":406,"modifierName":{"argumentTypes":null,"id":405,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6406:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6406:23:0"},{"arguments":[{"argumentTypes":null,"id":408,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"6453:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":409,"modifierName":{"argumentTypes":null,"id":407,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6434:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6434:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"name":"_signer","nodeType":"VariableDeclaration","scope":421,"src":"6327:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"6327:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":401,"name":"_report","nodeType":"VariableDeclaration","scope":421,"src":"6344:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":400,"name":"bytes","nodeType":"ElementaryTypeName","src":"6344:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":403,"name":"_signature","nodeType":"VariableDeclaration","scope":421,"src":"6366:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":402,"name":"bytes","nodeType":"ElementaryTypeName","src":"6366:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6326:64:0"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"6466:0:0"},"scope":935,"src":"6309:235:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":441,"nodeType":"Block","src":"6914:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":436,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6948:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":437,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6955:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":438,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6967:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":433,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"6924:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":8848,"src":"6924:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6924:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":440,"nodeType":"ExpressionStatement","src":"6924:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":442,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":428,"modifierName":{"argumentTypes":null,"id":427,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6853:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6853:23:0"},{"arguments":[{"argumentTypes":null,"id":430,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6898:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":431,"modifierName":{"argumentTypes":null,"id":429,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"6881:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6881:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"name":"_custodian","nodeType":"VariableDeclaration","scope":442,"src":"6804:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"6804:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":425,"name":"_amount","nodeType":"VariableDeclaration","scope":442,"src":"6824:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint","nodeType":"ElementaryTypeName","src":"6824:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6803:34:0"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"6914:0:0"},"scope":935,"src":"6787:195:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":458,"nodeType":"Block","src":"7255:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":454,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"7290:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":455,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7297:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":451,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"7265:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":8901,"src":"7265:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"7265:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":459,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"7239:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7239:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":449,"modifierName":{"argumentTypes":null,"id":446,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"7227:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7227:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"name":"_amount","nodeType":"VariableDeclaration","scope":459,"src":"7198:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint","nodeType":"ElementaryTypeName","src":"7198:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7197:14:0"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"7255:0:0"},"scope":935,"src":"7180:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":472,"nodeType":"Block","src":"7520:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":469,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"7552:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":466,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"7530:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":8746,"src":"7530:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7530:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"7530:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":473,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":462,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"7508:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7508:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":464,"modifierName":{"argumentTypes":null,"id":461,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"7499:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7499:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"7489:2:0"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7520:0:0"},"scope":935,"src":"7475:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":486,"nodeType":"Block","src":"7694:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":483,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"7727:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":480,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"7704:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":8787,"src":"7704:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7704:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"7704:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":487,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":476,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"7682:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7682:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":478,"modifierName":{"argumentTypes":null,"id":475,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"7667:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7667:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"7657:2:0"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[],"src":"7694:0:0"},"scope":935,"src":"7642:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":517,"nodeType":"Block","src":"8300:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":510,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"8351:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":511,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8358:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":512,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"8367:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":513,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"8378:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":514,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"8388:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":507,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"8310:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6070_$","typeString":"type(library TaskImpl)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4408,"src":"8310:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8310:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":516,"nodeType":"ExpressionStatement","src":"8310:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":518,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":498,"modifierName":{"argumentTypes":null,"id":497,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"8210:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8210:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":500,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"8253:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8253:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":502,"modifierName":{"argumentTypes":null,"id":499,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"8238:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8238:26:0"},{"arguments":[{"argumentTypes":null,"id":504,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":505,"modifierName":{"argumentTypes":null,"id":503,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"8269:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8269:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"name":"_taskId","nodeType":"VariableDeclaration","scope":518,"src":"8094:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8094:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":491,"name":"_codeHash","nodeType":"VariableDeclaration","scope":518,"src":"8119:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8119:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":493,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":518,"src":"8146:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":492,"name":"uint64","nodeType":"ElementaryTypeName","src":"8146:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":495,"name":"_sig","nodeType":"VariableDeclaration","scope":518,"src":"8171:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":494,"name":"bytes","nodeType":"ElementaryTypeName","src":"8171:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8084:110:0"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"8300:0:0"},"scope":935,"src":"8048:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":560,"nodeType":"Block","src":"9481:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":549,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"9525:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":550,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9532:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":551,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"9541:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":552,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"9555:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":553,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"9566:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":554,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"9599:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":555,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"9622:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":556,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"9656:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":557,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"9666:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":546,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"9491:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6070_$","typeString":"type(library TaskImpl)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4795,"src":"9491:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9491:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"9491:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":561,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":537,"modifierName":{"argumentTypes":null,"id":536,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"9391:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9391:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":539,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"9434:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9434:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":541,"modifierName":{"argumentTypes":null,"id":538,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"9419:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"9419:26:0"},{"arguments":[{"argumentTypes":null,"id":543,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9468:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":544,"modifierName":{"argumentTypes":null,"id":542,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9450:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"9450:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"name":"_taskId","nodeType":"VariableDeclaration","scope":561,"src":"9114:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9114:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":522,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":561,"src":"9139:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9139:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":524,"name":"_codeHash","nodeType":"VariableDeclaration","scope":561,"src":"9169:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9169:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":526,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":561,"src":"9196:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":528,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":561,"src":"9233:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":527,"name":"bytes","nodeType":"ElementaryTypeName","src":"9233:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":530,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":561,"src":"9277:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"9277:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":532,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":561,"src":"9327:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":531,"name":"uint64","nodeType":"ElementaryTypeName","src":"9327:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":534,"name":"_sig","nodeType":"VariableDeclaration","scope":561,"src":"9352:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":533,"name":"bytes","nodeType":"ElementaryTypeName","src":"9352:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"9104:271:0"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[],"src":"9481:0:0"},"scope":935,"src":"9075:603:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":571,"nodeType":"Block","src":"9880:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":568,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"9941:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":566,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"9897:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3965_$","typeString":"type(library SecretContractImpl)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3897,"src":"9897:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2592_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9897:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":565,"id":570,"nodeType":"Return","src":"9890:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":572,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[],"src":"9834:2:0"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"name":"","nodeType":"VariableDeclaration","scope":572,"src":"9870:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint","nodeType":"ElementaryTypeName","src":"9870:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9869:6:0"},"scope":935,"src":"9805:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":589,"nodeType":"Block","src":"10283:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":584,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"10350:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":585,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"10357:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":586,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"10365:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":582,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"10300:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3965_$","typeString":"type(library SecretContractImpl)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3964,"src":"10300:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2592_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10300:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":581,"id":588,"nodeType":"Return","src":"10293:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":590,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"name":"_start","nodeType":"VariableDeclaration","scope":590,"src":"10203:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint","nodeType":"ElementaryTypeName","src":"10203:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":576,"name":"_stop","nodeType":"VariableDeclaration","scope":590,"src":"10216:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint","nodeType":"ElementaryTypeName","src":"10216:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10202:25:0"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"name":"","nodeType":"VariableDeclaration","scope":590,"src":"10261:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10261:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":579,"length":null,"nodeType":"ArrayTypeName","src":"10261:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"10260:18:0"},"scope":935,"src":"10167:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":618,"nodeType":"Block","src":"11461:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":610,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"11511:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":611,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"11518:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":612,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11531:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":613,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"11542:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":614,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"11550:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":615,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"11569:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":607,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"11471:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6070_$","typeString":"type(library TaskImpl)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4236,"src":"11471:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11471:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"11471:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":619,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":603,"modifierName":{"argumentTypes":null,"id":602,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22000,"src":"11419:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11419:9:0"},{"arguments":null,"id":605,"modifierName":{"argumentTypes":null,"id":604,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"11433:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11433:23:0"}],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":619,"src":"11276:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11276:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":594,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":619,"src":"11305:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":593,"name":"uint64","nodeType":"ElementaryTypeName","src":"11305:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":596,"name":"_gasPx","nodeType":"VariableDeclaration","scope":619,"src":"11331:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":595,"name":"uint64","nodeType":"ElementaryTypeName","src":"11331:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":598,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":619,"src":"11354:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint","nodeType":"ElementaryTypeName","src":"11354:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":600,"name":"_nonce","nodeType":"VariableDeclaration","scope":619,"src":"11386:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint","nodeType":"ElementaryTypeName","src":"11386:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11266:137:0"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"11461:0:0"},"scope":935,"src":"11231:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":642,"nodeType":"Block","src":"12343:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":635,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"12383:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":636,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"12390:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":637,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"12403:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":638,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"12414:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":639,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"12422:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":632,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"12353:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6070_$","typeString":"type(library TaskImpl)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":5038,"src":"12353:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12353:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"12353:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":643,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":630,"modifierName":{"argumentTypes":null,"id":629,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"12315:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12315:23:0"}],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":643,"src":"12193:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12193:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":623,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":643,"src":"12222:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":622,"name":"uint64","nodeType":"ElementaryTypeName","src":"12222:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":625,"name":"_gasPx","nodeType":"VariableDeclaration","scope":643,"src":"12248:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":624,"name":"uint64","nodeType":"ElementaryTypeName","src":"12248:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":627,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":643,"src":"12271:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint","nodeType":"ElementaryTypeName","src":"12271:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12183:116:0"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[],"src":"12343:0:0"},"scope":935,"src":"12158:289:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":685,"nodeType":"Block","src":"13442:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":674,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"13479:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":675,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"13486:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":676,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"13495:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":677,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"13504:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":678,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"13521:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":679,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"13534:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":680,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"13569:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":681,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"13603:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":682,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"13613:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":671,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"13452:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6070_$","typeString":"type(library TaskImpl)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5710,"src":"13452:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13452:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"ExpressionStatement","src":"13452:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":686,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":662,"modifierName":{"argumentTypes":null,"id":661,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"13353:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13353:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":664,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"13396:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13396:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":666,"modifierName":{"argumentTypes":null,"id":663,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"13381:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13381:26:0"},{"arguments":[{"argumentTypes":null,"id":668,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"13429:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":669,"modifierName":{"argumentTypes":null,"id":667,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"13412:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13412:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"name":"_scAddr","nodeType":"VariableDeclaration","scope":686,"src":"13083:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13083:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":647,"name":"_taskId","nodeType":"VariableDeclaration","scope":686,"src":"13108:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13108:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":649,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":686,"src":"13133:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13133:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":651,"name":"_outputHash","nodeType":"VariableDeclaration","scope":686,"src":"13166:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13166:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":653,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":686,"src":"13195:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":652,"name":"bytes","nodeType":"ElementaryTypeName","src":"13195:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":655,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":686,"src":"13239:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"13239:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":657,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":686,"src":"13289:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":656,"name":"uint64","nodeType":"ElementaryTypeName","src":"13289:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":659,"name":"_sig","nodeType":"VariableDeclaration","scope":686,"src":"13314:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":658,"name":"bytes","nodeType":"ElementaryTypeName","src":"13314:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13073:264:0"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[],"src":"13442:0:0"},"scope":935,"src":"13051:574:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":719,"nodeType":"Block","src":"14284:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":711,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"14325:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":712,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"14332:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":713,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"14341:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":714,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"14350:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":715,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"14363:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":716,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"14373:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":708,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"14294:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6070_$","typeString":"type(library TaskImpl)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5232,"src":"14294:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14294:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":718,"nodeType":"ExpressionStatement","src":"14294:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":720,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":699,"modifierName":{"argumentTypes":null,"id":698,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"14195:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14195:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"14238:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14238:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":703,"modifierName":{"argumentTypes":null,"id":700,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"14223:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14223:26:0"},{"arguments":[{"argumentTypes":null,"id":705,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"14271:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":706,"modifierName":{"argumentTypes":null,"id":704,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"14254:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14254:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"name":"_scAddr","nodeType":"VariableDeclaration","scope":720,"src":"14052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14052:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":690,"name":"_taskId","nodeType":"VariableDeclaration","scope":720,"src":"14077:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14077:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":692,"name":"_outputHash","nodeType":"VariableDeclaration","scope":720,"src":"14102:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":694,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":720,"src":"14131:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":693,"name":"uint64","nodeType":"ElementaryTypeName","src":"14131:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":696,"name":"_sig","nodeType":"VariableDeclaration","scope":720,"src":"14156:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":695,"name":"bytes","nodeType":"ElementaryTypeName","src":"14156:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14042:137:0"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[],"src":"14284:0:0"},"scope":935,"src":"14016:369:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":735,"nodeType":"Block","src":"14636:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":731,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"14677:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":732,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"14684:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":728,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"14646:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6070_$","typeString":"type(library TaskImpl)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6069,"src":"14646:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14646:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"14646:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":736,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":725,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"14623:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":726,"modifierName":{"argumentTypes":null,"id":724,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"14611:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14611:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"name":"_taskId","nodeType":"VariableDeclaration","scope":736,"src":"14579:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14579:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14578:17:0"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[],"src":"14636:0:0"},"scope":935,"src":"14552:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":760,"nodeType":"Block","src":"15187:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":754,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"15232:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":755,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"15239:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":756,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"15253:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":757,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"15260:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":751,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"15197:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3327_$","typeString":"type(library PrincipalImpl)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3156,"src":"15197:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15197:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"ExpressionStatement","src":"15197:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":761,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":745,"modifierName":{"argumentTypes":null,"id":744,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"15126:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15126:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":747,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"15171:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15171:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":749,"modifierName":{"argumentTypes":null,"id":746,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"15154:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"15154:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":761,"src":"15061:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint","nodeType":"ElementaryTypeName","src":"15061:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":740,"name":"_seed","nodeType":"VariableDeclaration","scope":761,"src":"15080:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":739,"name":"uint","nodeType":"ElementaryTypeName","src":"15080:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":742,"name":"_sig","nodeType":"VariableDeclaration","scope":761,"src":"15092:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":741,"name":"bytes","nodeType":"ElementaryTypeName","src":"15092:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"15060:50:0"},"returnParameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"15187:0:0"},"scope":935,"src":"15035:237:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":778,"nodeType":"Block","src":"15508:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":774,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"15560:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":775,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"15567:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":772,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"15525:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3327_$","typeString":"type(library PrincipalImpl)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"15525:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2592_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15525:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":771,"id":777,"nodeType":"Return","src":"15518:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":779,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":779,"src":"15419:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint","nodeType":"ElementaryTypeName","src":"15419:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15418:19:0"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"name":"","nodeType":"VariableDeclaration","scope":779,"src":"15471:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"15471:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":766,"length":null,"nodeType":"ArrayTypeName","src":"15471:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":770,"name":"","nodeType":"VariableDeclaration","scope":779,"src":"15489:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":768,"name":"uint","nodeType":"ElementaryTypeName","src":"15489:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":769,"length":null,"nodeType":"ArrayTypeName","src":"15489:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15470:33:0"},"scope":935,"src":"15393:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":792,"nodeType":"Block","src":"15849:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":788,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"15902:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":789,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"15909:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":786,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"15866:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":9021,"src":"15866:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2592_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15866:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":785,"id":791,"nodeType":"Return","src":"15859:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":793,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":793,"src":"15791:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint","nodeType":"ElementaryTypeName","src":"15791:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15790:19:0"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"name":"","nodeType":"VariableDeclaration","scope":793,"src":"15843:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint","nodeType":"ElementaryTypeName","src":"15843:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15842:6:0"},"scope":935,"src":"15762:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":814,"nodeType":"Block","src":"16335:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":810,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"16384:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":811,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"16391:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":808,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"16352:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":9058,"src":"16352:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2592_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16352:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":807,"id":813,"nodeType":"Return","src":"16345:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":815,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":815,"src":"16238:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint","nodeType":"ElementaryTypeName","src":"16238:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16237:19:0"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"name":"","nodeType":"VariableDeclaration","scope":815,"src":"16290:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint","nodeType":"ElementaryTypeName","src":"16290:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":800,"name":"","nodeType":"VariableDeclaration","scope":815,"src":"16296:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":799,"name":"uint","nodeType":"ElementaryTypeName","src":"16296:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":803,"name":"","nodeType":"VariableDeclaration","scope":815,"src":"16302:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"16302:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":802,"length":null,"nodeType":"ArrayTypeName","src":"16302:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":806,"name":"","nodeType":"VariableDeclaration","scope":815,"src":"16320:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":804,"name":"uint","nodeType":"ElementaryTypeName","src":"16320:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":805,"length":null,"nodeType":"ArrayTypeName","src":"16320:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16289:45:0"},"scope":935,"src":"16213:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":832,"nodeType":"Block","src":"16863:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":827,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"16911:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":828,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"16918:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":829,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"16932:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":825,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"16880:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9322,"src":"16880:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2592_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16880:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":824,"id":831,"nodeType":"Return","src":"16873:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":833,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":833,"src":"16772:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint","nodeType":"ElementaryTypeName","src":"16772:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":819,"name":"_scAddr","nodeType":"VariableDeclaration","scope":833,"src":"16791:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16791:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16771:36:0"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"name":"","nodeType":"VariableDeclaration","scope":833,"src":"16841:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"16841:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":822,"length":null,"nodeType":"ArrayTypeName","src":"16841:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16840:18:0"},"scope":935,"src":"16748:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":851,"nodeType":"Block","src":"17217:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":847,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"17260:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":848,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"17267:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":845,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"17234:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":8679,"src":"17234:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2592_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17234:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":844,"id":850,"nodeType":"Return","src":"17227:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":852,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":838,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"17165:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":839,"modifierName":{"argumentTypes":null,"id":837,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"17148:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"17148:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"name":"_custodian","nodeType":"VariableDeclaration","scope":852,"src":"17104:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"17104:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17103:20:0"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"name":"","nodeType":"VariableDeclaration","scope":852,"src":"17190:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"17190:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":843,"name":"","nodeType":"VariableDeclaration","scope":852,"src":"17199:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":842,"name":"bytes","nodeType":"ElementaryTypeName","src":"17199:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17189:23:0"},"scope":935,"src":"17085:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":867,"nodeType":"Block","src":"17600:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":863,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"17646:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":864,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"17653:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":861,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"17617:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":8705,"src":"17617:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17617:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":860,"id":866,"nodeType":"Return","src":"17610:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":868,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"name":"_data","nodeType":"VariableDeclaration","scope":868,"src":"17512:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":853,"name":"bytes","nodeType":"ElementaryTypeName","src":"17512:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":856,"name":"_signature","nodeType":"VariableDeclaration","scope":868,"src":"17532:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":855,"name":"bytes","nodeType":"ElementaryTypeName","src":"17532:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17511:45:0"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"name":"","nodeType":"VariableDeclaration","scope":868,"src":"17590:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint","nodeType":"ElementaryTypeName","src":"17590:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17589:6:0"},"scope":935,"src":"17490:181:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":883,"nodeType":"Block","src":"17939:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":879,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"17994:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":880,"name":"_updatedEnigmaContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"18001:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":877,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8355,"src":"17956:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8355_$","typeString":"type(library UpgradeImpl)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeEnigmaContractImpl","nodeType":"MemberAccess","referencedDeclaration":8276,"src":"17956:37:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17956:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":876,"id":882,"nodeType":"Return","src":"17949:82:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address","id":884,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":873,"modifierName":{"argumentTypes":null,"id":872,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22000,"src":"17897:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17897:9:0"},{"arguments":null,"id":875,"modifierName":{"argumentTypes":null,"id":874,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"17911:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17911:23:0"}],"name":"upgradeEnigmaContract","nodeType":"FunctionDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"name":"_updatedEnigmaContractAddress","nodeType":"VariableDeclaration","scope":884,"src":"17843:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"17843:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17842:39:0"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"17939:0:0"},"scope":935,"src":"17812:226:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":905,"nodeType":"Block","src":"18397:108:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":899,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"18461:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":900,"name":"_workerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"18468:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":901,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"18484:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":902,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"18493:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":897,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8355,"src":"18414:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8355_$","typeString":"type(library UpgradeImpl)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferWorkerStakePostUpgradeImpl","nodeType":"MemberAccess","referencedDeclaration":8354,"src":"18414:46:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,address,address,bytes memory) returns (uint256)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18414:84:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":896,"id":904,"nodeType":"Return","src":"18407:91:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _workerAddress Newly-registered worker address\\n@param _signer Newly-registered worker address\\n@param _sig Signature","id":906,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":893,"modifierName":{"argumentTypes":null,"id":892,"name":"fromUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"18345:25:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18345:25:0"}],"name":"transferWorkerStakePostUpgrade","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"name":"_workerAddress","nodeType":"VariableDeclaration","scope":906,"src":"18270:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"18270:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":888,"name":"_signer","nodeType":"VariableDeclaration","scope":906,"src":"18294:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"18294:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":890,"name":"_sig","nodeType":"VariableDeclaration","scope":906,"src":"18311:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":889,"name":"bytes","nodeType":"ElementaryTypeName","src":"18311:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18269:60:0"},"returnParameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"name":"","nodeType":"VariableDeclaration","scope":906,"src":"18384:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"18384:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18383:9:0"},"scope":935,"src":"18230:275:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":919,"nodeType":"Block","src":"18651:43:0","statements":[{"expression":{"argumentTypes":null,"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":913,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"18661:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"mrSigner","nodeType":"MemberAccess","referencedDeclaration":2589,"src":"18661:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":916,"name":"_mrSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"18678:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"18661:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":918,"nodeType":"ExpressionStatement","src":"18661:26:0"}]},"documentation":"Set mrSigner\\n@param _mrSigner mrSigner","id":920,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":911,"modifierName":{"argumentTypes":null,"id":910,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22000,"src":"18637:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18637:9:0"}],"name":"setMrSigner","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"name":"_mrSigner","nodeType":"VariableDeclaration","scope":920,"src":"18598:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":907,"name":"bytes","nodeType":"ElementaryTypeName","src":"18598:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18597:24:0"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"18651:0:0"},"scope":935,"src":"18577:117:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":933,"nodeType":"Block","src":"18832:39:0","statements":[{"expression":{"argumentTypes":null,"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":927,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"18842:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isvSvn","nodeType":"MemberAccess","referencedDeclaration":2591,"src":"18842:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":930,"name":"_isvSvn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"18857:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"18842:22:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":932,"nodeType":"ExpressionStatement","src":"18842:22:0"}]},"documentation":"Set isvSvn\\n@param _isvSvn mrSigner","id":934,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":925,"modifierName":{"argumentTypes":null,"id":924,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22000,"src":"18818:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18818:9:0"}],"name":"setIsvSvn","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"name":"_isvSvn","nodeType":"VariableDeclaration","scope":934,"src":"18781:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":921,"name":"bytes","nodeType":"ElementaryTypeName","src":"18781:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18780:22:0"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"18832:0:0"},"scope":935,"src":"18762:109:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":936,"src":"885:17988:0"}],"src":"0:18874:0"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[935]},"id":936,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":936,"sourceUnit":21958,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":936,"sourceUnit":21830,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"openzeppelin-solidity/contracts/ownership/Ownable.sol","id":5,"nodeType":"ImportDirective","scope":936,"sourceUnit":22067,"src":"184:63:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":6,"nodeType":"ImportDirective","scope":936,"sourceUnit":21749,"src":"248:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":8,"nodeType":"ImportDirective","scope":936,"sourceUnit":9376,"src":"284:53:0","symbolAliases":[{"foreign":7,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":10,"nodeType":"ImportDirective","scope":936,"sourceUnit":3328,"src":"338:57:0","symbolAliases":[{"foreign":9,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":12,"nodeType":"ImportDirective","scope":936,"sourceUnit":6071,"src":"396:47:0","symbolAliases":[{"foreign":11,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol","file":"./impl/UpgradeImpl.sol","id":14,"nodeType":"ImportDirective","scope":936,"sourceUnit":8356,"src":"444:53:0","symbolAliases":[{"foreign":13,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":16,"nodeType":"ImportDirective","scope":936,"sourceUnit":3966,"src":"498:67:0","symbolAliases":[{"foreign":15,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":18,"nodeType":"ImportDirective","scope":936,"sourceUnit":2438,"src":"566:55:0","symbolAliases":[{"foreign":17,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":20,"nodeType":"ImportDirective","scope":936,"sourceUnit":2594,"src":"622:53:0","symbolAliases":[{"foreign":19,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":22,"nodeType":"ImportDirective","scope":936,"sourceUnit":2536,"src":"676:55:0","symbolAliases":[{"foreign":21,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":24,"nodeType":"ImportDirective","scope":936,"sourceUnit":2602,"src":"732:57:0","symbolAliases":[{"foreign":23,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":26,"nodeType":"ImportDirective","scope":936,"sourceUnit":2803,"src":"790:45:0","symbolAliases":[{"foreign":25,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":28,"nodeType":"ImportDirective","scope":936,"sourceUnit":10361,"src":"836:47:0","symbolAliases":[{"foreign":27,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":29,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2601,"src":"904:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2601","typeString":"contract EnigmaStorage"}},"id":30,"nodeType":"InheritanceSpecifier","src":"904:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":31,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2535,"src":"919:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2535","typeString":"contract EnigmaEvents"}},"id":32,"nodeType":"InheritanceSpecifier","src":"919:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":33,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2802,"src":"933:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2802","typeString":"contract Getters"}},"id":34,"nodeType":"InheritanceSpecifier","src":"933:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":35,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":22066,"src":"942:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$22066","typeString":"contract Ownable"}},"id":36,"nodeType":"InheritanceSpecifier","src":"942:7:0"}],"contractDependencies":[2535,2601,2802,22066],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":935,"linearizedBaseContracts":[935,22066,2802,2535,2601],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":39,"libraryName":{"contractScope":null,"id":37,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":21957,"src":"962:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$21957","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"956:27:0","typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":42,"libraryName":{"contractScope":null,"id":40,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":21829,"src":"994:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$21829","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"988:24:0","typeName":{"id":41,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1004:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":102,"nodeType":"Block","src":"1227:330:0","statements":[{"expression":{"argumentTypes":null,"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":53,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1237:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":55,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2544,"src":"1237:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10360","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":57,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1260:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":56,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10360,"src":"1254:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10360_$","typeString":"type(contract ERC20)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1254:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10360","typeString":"contract ERC20"}},"src":"1237:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10360","typeString":"contract ERC20"}},"id":60,"nodeType":"ExpressionStatement","src":"1237:37:0"},{"expression":{"argumentTypes":null,"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":61,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1284:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":63,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"1284:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":64,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1302:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1284:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":66,"nodeType":"ExpressionStatement","src":"1284:28:0"},{"expression":{"argumentTypes":null,"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":67,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1322:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":69,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2548,"src":"1322:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":70,"name":"_timeoutThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1346:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":71,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1366:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":72,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"1366:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1346:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1322:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":75,"nodeType":"ExpressionStatement","src":"1322:59:0"},{"expression":{"argumentTypes":null,"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":76,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1391:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":78,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2550,"src":"1391:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":79,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1409:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1391:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":81,"nodeType":"ExpressionStatement","src":"1391:28:0"},{"expression":{"argumentTypes":null,"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":82,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1429:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":84,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2552,"src":"1429:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":86,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22690,"src":"1474:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$935","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$935","typeString":"contract Enigma"}],"id":85,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1466:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1466:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1429:50:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":89,"nodeType":"ExpressionStatement","src":"1429:50:0"},{"expression":{"argumentTypes":null,"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":90,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1489:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":92,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2585,"src":"1489:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1514:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1489:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":95,"nodeType":"ExpressionStatement","src":"1489:26:0"},{"expression":{"argumentTypes":null,"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":96,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1525:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":98,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2587,"src":"1525:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1549:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1525:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":101,"nodeType":"ExpressionStatement","src":"1525:25:0"}]},"documentation":null,"id":103,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":103,"src":"1136:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":46,"name":"_principal","nodeType":"VariableDeclaration","scope":103,"src":"1159:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":48,"name":"_epochSize","nodeType":"VariableDeclaration","scope":103,"src":"1179:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint","nodeType":"ElementaryTypeName","src":"1179:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":50,"name":"_timeoutThreshold","nodeType":"VariableDeclaration","scope":103,"src":"1196:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint","nodeType":"ElementaryTypeName","src":"1196:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1135:84:0"},"returnParameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1227:0:0"},"scope":935,"src":"1124:433:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":127,"nodeType":"Block","src":"1847:181:0","statements":[{"assignments":[110],"declarations":[{"constant":false,"id":110,"name":"worker","nodeType":"VariableDeclaration","scope":127,"src":"1857:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":109,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"1857:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":115,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":111,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1893:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"1893:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2344_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":114,"indexExpression":{"argumentTypes":null,"id":113,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"1907:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1893:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1857:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":117,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"1931:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2336,"src":"1931:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":119,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"1948:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"1948:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2385_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1948:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1931:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1988:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"1923:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1923:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":125,"nodeType":"ExpressionStatement","src":"1923:87:0"},{"id":126,"nodeType":"PlaceholderStatement","src":"2020:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":128,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"name":"_user","nodeType":"VariableDeclaration","scope":128,"src":"1832:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"1832:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1831:15:0"},"src":"1806:222:0","visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"2211:178:0","statements":[{"assignments":[135],"declarations":[{"constant":false,"id":135,"name":"worker","nodeType":"VariableDeclaration","scope":152,"src":"2221:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":134,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"2221:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":140,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":136,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"2257:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"2257:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2344_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":139,"indexExpression":{"argumentTypes":null,"id":138,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2271:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2257:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2221:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":142,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2295:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2336,"src":"2295:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":144,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"2312:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"2312:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2385_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2312:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2295:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2348:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2287:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":150,"nodeType":"ExpressionStatement","src":"2287:84:0"},{"id":151,"nodeType":"PlaceholderStatement","src":"2381:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":153,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"name":"_user","nodeType":"VariableDeclaration","scope":153,"src":"2196:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"2196:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2195:15:0"},"src":"2172:217:0","visibility":"internal"},{"body":{"id":177,"nodeType":"Block","src":"2574:180:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"name":"worker","nodeType":"VariableDeclaration","scope":177,"src":"2584:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":159,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"2584:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":165,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":161,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"2620:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"2620:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2344_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":164,"indexExpression":{"argumentTypes":null,"id":163,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2634:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2620:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2584:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":167,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"2658:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2336,"src":"2658:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":169,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"2675:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"2675:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2385_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2675:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2658:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2712:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"2650:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":175,"nodeType":"ExpressionStatement","src":"2650:86:0"},{"id":176,"nodeType":"PlaceholderStatement","src":"2746:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":178,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"name":"_user","nodeType":"VariableDeclaration","scope":178,"src":"2559:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2558:15:0"},"src":"2534:220:0","visibility":"internal"},{"body":{"id":221,"nodeType":"Block","src":"2903:395:0","statements":[{"assignments":[185],"declarations":[{"constant":false,"id":185,"name":"worker","nodeType":"VariableDeclaration","scope":221,"src":"2913:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":184,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"2913:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":190,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":186,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"2949:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"2949:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2344_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":189,"indexExpression":{"argumentTypes":null,"id":188,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"2963:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2949:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2913:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":193,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22630,"src":"3007:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3007:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":192,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"2987:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2987:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3024:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2987:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3027:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":191,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"2979:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2979:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":200,"nodeType":"ExpressionStatement","src":"2979:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":202,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3087:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2336,"src":"3087:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":204,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"3104:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"3104:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2385_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3104:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3087:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3141:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"3079:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3079:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":210,"nodeType":"ExpressionStatement","src":"3079:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3201:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2340,"src":"3201:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":214,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"3219:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2585,"src":"3219:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3201:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3243:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"3193:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3193:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":219,"nodeType":"ExpressionStatement","src":"3193:87:0"},{"id":220,"nodeType":"PlaceholderStatement","src":"3290:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":222,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"name":"_user","nodeType":"VariableDeclaration","scope":222,"src":"2888:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"2888:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2887:15:0"},"src":"2870:428:0","visibility":"internal"},{"body":{"id":278,"nodeType":"Block","src":"3456:580:0","statements":[{"assignments":[229],"declarations":[{"constant":false,"id":229,"name":"worker","nodeType":"VariableDeclaration","scope":278,"src":"3466:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":228,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2344,"src":"3466:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":234,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":230,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"3502:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"3502:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2344_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":233,"indexExpression":{"argumentTypes":null,"id":232,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"3516:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3502:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3466:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":236,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"3540:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2336,"src":"3540:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":238,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"3557:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"3557:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2385_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3557:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2385","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3540:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3594:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"3532:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3532:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":244,"nodeType":"ExpressionStatement","src":"3532:104:0"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"name":"workerLog","nodeType":"VariableDeclaration","scope":278,"src":"3646:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2362_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":247,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2362,"src":"3646:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2362_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":255,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":251,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"3723:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":252,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22630,"src":"3731:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3731:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2344_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":249,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"3688:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9374,"src":"3688:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2344_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2362_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3688:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2362_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3646:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2393","typeString":"enum EnigmaCommon.WorkerLogType"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":257,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3762:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2362_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"3762:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2393","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":259,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"3791:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"3791:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2393_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3791:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2393","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3762:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3838:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"3754:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3754:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":265,"nodeType":"ExpressionStatement","src":"3754:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":268,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22630,"src":"3918:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3918:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":267,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"3898:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3898:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3934:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2362_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2359,"src":"3934:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3898:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3969:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"3890:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3890:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":276,"nodeType":"ExpressionStatement","src":"3890:128:0"},{"id":277,"nodeType":"PlaceholderStatement","src":"4028:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":279,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"name":"_user","nodeType":"VariableDeclaration","scope":279,"src":"3441:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"3441:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3440:15:0"},"src":"3420:616:0","visibility":"internal"},{"body":{"id":297,"nodeType":"Block","src":"4203:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2388","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":284,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4221:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2579,"src":"4221:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2374_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":287,"indexExpression":{"argumentTypes":null,"id":286,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4237:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4221:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2374_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2373,"src":"4221:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2388","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":289,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"4256:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"4256:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2388_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4256:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2388","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4221:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4301:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"4213:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4213:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":295,"nodeType":"ExpressionStatement","src":"4213:123:0"},{"id":296,"nodeType":"PlaceholderStatement","src":"4346:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":298,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"name":"_scAddr","nodeType":"VariableDeclaration","scope":298,"src":"4186:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4186:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4185:17:0"},"src":"4159:195:0","visibility":"internal"},{"body":{"id":316,"nodeType":"Block","src":"4516:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2388","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":303,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4534:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2579,"src":"4534:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2374_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":306,"indexExpression":{"argumentTypes":null,"id":305,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4550:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4534:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2374_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2373,"src":"4534:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2388","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":308,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"4569:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"4569:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2388_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4569:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2388","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4534:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4613:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4526:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"ExpressionStatement","src":"4526:118:0"},{"id":315,"nodeType":"PlaceholderStatement","src":"4654:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":317,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"name":"_scAddr","nodeType":"VariableDeclaration","scope":317,"src":"4499:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4499:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4498:17:0"},"src":"4473:189:0","visibility":"internal"},{"body":{"id":335,"nodeType":"Block","src":"4827:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2381","typeString":"enum EnigmaCommon.TaskStatus"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":322,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4845:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2572,"src":"4845:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2332_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":325,"indexExpression":{"argumentTypes":null,"id":324,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"4857:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2332_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2329,"src":"4845:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2381","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":327,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"4876:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2437_$","typeString":"type(library EnigmaCommon)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2381,"src":"4876:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2381_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4876:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2381","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4845:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4915:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"4837:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4837:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"4837:100:0"},{"id":334,"nodeType":"PlaceholderStatement","src":"4947:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":336,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"name":"_taskId","nodeType":"VariableDeclaration","scope":336,"src":"4810:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4810:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4809:17:0"},"src":"4789:166:0","visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"5117:202:0","statements":[{"body":{"id":366,"nodeType":"Block","src":"5183:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":353,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5205:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2568,"src":"5205:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2344_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":359,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":355,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5219:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":356,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2561,"src":"5219:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":358,"indexExpression":{"argumentTypes":null,"id":357,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5241:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5219:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5205:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2344_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"5205:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":361,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"5255:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5205:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5264:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"5197:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5197:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":365,"nodeType":"ExpressionStatement","src":"5197:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5144:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":345,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5148:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2561,"src":"5148:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5148:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5144:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":367,"initializationExpression":{"assignments":[341],"declarations":[{"constant":false,"id":341,"name":"i","nodeType":"VariableDeclaration","scope":367,"src":"5132:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint","nodeType":"ElementaryTypeName","src":"5132:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":343,"initialValue":{"argumentTypes":null,"hexValue":"30","id":342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5141:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5132:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5178:3:0","subExpression":{"argumentTypes":null,"id":349,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5178:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":351,"nodeType":"ExpressionStatement","src":"5178:3:0"},"nodeType":"ForStatement","src":"5127:175:0"},{"id":368,"nodeType":"PlaceholderStatement","src":"5311:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":370,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"name":"_signer","nodeType":"VariableDeclaration","scope":370,"src":"5100:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"5100:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5099:17:0"},"src":"5072:247:0","visibility":"internal"},{"body":{"id":383,"nodeType":"Block","src":"5446:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":374,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22690,"src":"5472:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$935","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$935","typeString":"contract Enigma"}],"id":373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5464:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5464:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":376,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5481:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2552,"src":"5481:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5464:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74207570646174656420456e69676d6120636f6e7472616374","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5517:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""},"value":"Not updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""}],"id":372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"5456:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5456:91:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"5456:91:0"},{"id":382,"nodeType":"PlaceholderStatement","src":"5557:1:0"}]},"documentation":"Ensure that the contract\'s context is the updated contract\\n    ","id":384,"name":"isUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[],"src":"5443:2:0"},"src":"5411:154:0","visibility":"internal"},{"body":{"id":396,"nodeType":"Block","src":"5696:121:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":387,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"5714:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5714:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":389,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5728:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2552,"src":"5728:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5714:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5764:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""},"value":"Not from updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""}],"id":386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22643,22644],"referencedDeclaration":22644,"src":"5706:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5706:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":394,"nodeType":"ExpressionStatement","src":"5706:93:0"},{"id":395,"nodeType":"PlaceholderStatement","src":"5809:1:0"}]},"documentation":"Ensure the sender of the recent call is the updated contract\\n    ","id":397,"name":"fromUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[],"src":"5693:2:0"},"src":"5659:158:0","visibility":"internal"},{"body":{"id":420,"nodeType":"Block","src":"6466:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":414,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6501:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":415,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"6508:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":416,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"6517:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":417,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6526:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":411,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"6476:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":8642,"src":"6476:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6476:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":419,"nodeType":"ExpressionStatement","src":"6476:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":421,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":406,"modifierName":{"argumentTypes":null,"id":405,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6406:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6406:23:0"},{"arguments":[{"argumentTypes":null,"id":408,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"6453:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":409,"modifierName":{"argumentTypes":null,"id":407,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6434:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6434:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"name":"_signer","nodeType":"VariableDeclaration","scope":421,"src":"6327:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"6327:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":401,"name":"_report","nodeType":"VariableDeclaration","scope":421,"src":"6344:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":400,"name":"bytes","nodeType":"ElementaryTypeName","src":"6344:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":403,"name":"_signature","nodeType":"VariableDeclaration","scope":421,"src":"6366:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":402,"name":"bytes","nodeType":"ElementaryTypeName","src":"6366:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6326:64:0"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"6466:0:0"},"scope":935,"src":"6309:235:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":441,"nodeType":"Block","src":"6914:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":436,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6948:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":437,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6955:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":438,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6967:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":433,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"6924:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":8848,"src":"6924:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6924:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":440,"nodeType":"ExpressionStatement","src":"6924:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":442,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":428,"modifierName":{"argumentTypes":null,"id":427,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6853:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6853:23:0"},{"arguments":[{"argumentTypes":null,"id":430,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6898:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":431,"modifierName":{"argumentTypes":null,"id":429,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"6881:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6881:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"name":"_custodian","nodeType":"VariableDeclaration","scope":442,"src":"6804:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"6804:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":425,"name":"_amount","nodeType":"VariableDeclaration","scope":442,"src":"6824:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint","nodeType":"ElementaryTypeName","src":"6824:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6803:34:0"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"6914:0:0"},"scope":935,"src":"6787:195:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":458,"nodeType":"Block","src":"7255:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":454,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"7290:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":455,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7297:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":451,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"7265:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":8901,"src":"7265:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"7265:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":459,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"7239:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7239:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":449,"modifierName":{"argumentTypes":null,"id":446,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"7227:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7227:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"name":"_amount","nodeType":"VariableDeclaration","scope":459,"src":"7198:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint","nodeType":"ElementaryTypeName","src":"7198:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7197:14:0"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"7255:0:0"},"scope":935,"src":"7180:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":472,"nodeType":"Block","src":"7520:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":469,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"7552:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":466,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"7530:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":8746,"src":"7530:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7530:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"7530:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":473,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":462,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"7508:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7508:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":464,"modifierName":{"argumentTypes":null,"id":461,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"7499:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7499:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"7489:2:0"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7520:0:0"},"scope":935,"src":"7475:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":486,"nodeType":"Block","src":"7694:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":483,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"7727:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":480,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"7704:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":8787,"src":"7704:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7704:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"7704:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":487,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":476,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"7682:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7682:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":478,"modifierName":{"argumentTypes":null,"id":475,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"7667:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7667:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"7657:2:0"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[],"src":"7694:0:0"},"scope":935,"src":"7642:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":517,"nodeType":"Block","src":"8300:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":510,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"8351:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":511,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8358:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":512,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"8367:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":513,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"8378:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":514,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"8388:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":507,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"8310:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6070_$","typeString":"type(library TaskImpl)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4408,"src":"8310:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8310:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":516,"nodeType":"ExpressionStatement","src":"8310:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":518,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":498,"modifierName":{"argumentTypes":null,"id":497,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"8210:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8210:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":500,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"8253:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8253:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":502,"modifierName":{"argumentTypes":null,"id":499,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"8238:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8238:26:0"},{"arguments":[{"argumentTypes":null,"id":504,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":505,"modifierName":{"argumentTypes":null,"id":503,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"8269:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8269:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"name":"_taskId","nodeType":"VariableDeclaration","scope":518,"src":"8094:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8094:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":491,"name":"_codeHash","nodeType":"VariableDeclaration","scope":518,"src":"8119:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8119:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":493,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":518,"src":"8146:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":492,"name":"uint64","nodeType":"ElementaryTypeName","src":"8146:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":495,"name":"_sig","nodeType":"VariableDeclaration","scope":518,"src":"8171:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":494,"name":"bytes","nodeType":"ElementaryTypeName","src":"8171:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8084:110:0"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"8300:0:0"},"scope":935,"src":"8048:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":560,"nodeType":"Block","src":"9481:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":549,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"9525:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":550,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9532:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":551,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"9541:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":552,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"9555:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":553,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"9566:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":554,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"9599:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":555,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"9622:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":556,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"9656:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":557,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"9666:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":546,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"9491:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6070_$","typeString":"type(library TaskImpl)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4795,"src":"9491:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9491:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"9491:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":561,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":537,"modifierName":{"argumentTypes":null,"id":536,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"9391:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9391:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":539,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"9434:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9434:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":541,"modifierName":{"argumentTypes":null,"id":538,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"9419:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"9419:26:0"},{"arguments":[{"argumentTypes":null,"id":543,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9468:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":544,"modifierName":{"argumentTypes":null,"id":542,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9450:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"9450:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"name":"_taskId","nodeType":"VariableDeclaration","scope":561,"src":"9114:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9114:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":522,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":561,"src":"9139:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9139:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":524,"name":"_codeHash","nodeType":"VariableDeclaration","scope":561,"src":"9169:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9169:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":526,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":561,"src":"9196:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":528,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":561,"src":"9233:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":527,"name":"bytes","nodeType":"ElementaryTypeName","src":"9233:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":530,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":561,"src":"9277:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"9277:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":532,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":561,"src":"9327:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":531,"name":"uint64","nodeType":"ElementaryTypeName","src":"9327:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":534,"name":"_sig","nodeType":"VariableDeclaration","scope":561,"src":"9352:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":533,"name":"bytes","nodeType":"ElementaryTypeName","src":"9352:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"9104:271:0"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[],"src":"9481:0:0"},"scope":935,"src":"9075:603:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":571,"nodeType":"Block","src":"9880:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":568,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"9941:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":566,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"9897:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3965_$","typeString":"type(library SecretContractImpl)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3897,"src":"9897:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2592_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9897:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":565,"id":570,"nodeType":"Return","src":"9890:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":572,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[],"src":"9834:2:0"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"name":"","nodeType":"VariableDeclaration","scope":572,"src":"9870:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint","nodeType":"ElementaryTypeName","src":"9870:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9869:6:0"},"scope":935,"src":"9805:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":589,"nodeType":"Block","src":"10283:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":584,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"10350:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":585,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"10357:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":586,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"10365:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":582,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"10300:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3965_$","typeString":"type(library SecretContractImpl)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3964,"src":"10300:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2592_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10300:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":581,"id":588,"nodeType":"Return","src":"10293:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":590,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"name":"_start","nodeType":"VariableDeclaration","scope":590,"src":"10203:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint","nodeType":"ElementaryTypeName","src":"10203:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":576,"name":"_stop","nodeType":"VariableDeclaration","scope":590,"src":"10216:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint","nodeType":"ElementaryTypeName","src":"10216:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10202:25:0"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"name":"","nodeType":"VariableDeclaration","scope":590,"src":"10261:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10261:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":579,"length":null,"nodeType":"ArrayTypeName","src":"10261:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"10260:18:0"},"scope":935,"src":"10167:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":618,"nodeType":"Block","src":"11461:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":610,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"11511:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":611,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"11518:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":612,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11531:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":613,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"11542:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":614,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"11550:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":615,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"11569:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":607,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"11471:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6070_$","typeString":"type(library TaskImpl)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4236,"src":"11471:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11471:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"11471:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":619,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":603,"modifierName":{"argumentTypes":null,"id":602,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22000,"src":"11419:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11419:9:0"},{"arguments":null,"id":605,"modifierName":{"argumentTypes":null,"id":604,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"11433:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11433:23:0"}],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":619,"src":"11276:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11276:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":594,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":619,"src":"11305:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":593,"name":"uint64","nodeType":"ElementaryTypeName","src":"11305:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":596,"name":"_gasPx","nodeType":"VariableDeclaration","scope":619,"src":"11331:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":595,"name":"uint64","nodeType":"ElementaryTypeName","src":"11331:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":598,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":619,"src":"11354:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint","nodeType":"ElementaryTypeName","src":"11354:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":600,"name":"_nonce","nodeType":"VariableDeclaration","scope":619,"src":"11386:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint","nodeType":"ElementaryTypeName","src":"11386:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11266:137:0"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"11461:0:0"},"scope":935,"src":"11231:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":642,"nodeType":"Block","src":"12343:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":635,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"12383:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":636,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"12390:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":637,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"12403:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":638,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"12414:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":639,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"12422:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":632,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"12353:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6070_$","typeString":"type(library TaskImpl)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":5038,"src":"12353:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12353:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"12353:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":643,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":630,"modifierName":{"argumentTypes":null,"id":629,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"12315:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12315:23:0"}],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":643,"src":"12193:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12193:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":623,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":643,"src":"12222:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":622,"name":"uint64","nodeType":"ElementaryTypeName","src":"12222:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":625,"name":"_gasPx","nodeType":"VariableDeclaration","scope":643,"src":"12248:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":624,"name":"uint64","nodeType":"ElementaryTypeName","src":"12248:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":627,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":643,"src":"12271:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint","nodeType":"ElementaryTypeName","src":"12271:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12183:116:0"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[],"src":"12343:0:0"},"scope":935,"src":"12158:289:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":685,"nodeType":"Block","src":"13442:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":674,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"13479:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":675,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"13486:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":676,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"13495:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":677,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"13504:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":678,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"13521:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":679,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"13534:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":680,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"13569:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":681,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"13603:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":682,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"13613:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":671,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"13452:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6070_$","typeString":"type(library TaskImpl)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5710,"src":"13452:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13452:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"ExpressionStatement","src":"13452:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":686,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":662,"modifierName":{"argumentTypes":null,"id":661,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"13353:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13353:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":664,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"13396:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13396:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":666,"modifierName":{"argumentTypes":null,"id":663,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"13381:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13381:26:0"},{"arguments":[{"argumentTypes":null,"id":668,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"13429:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":669,"modifierName":{"argumentTypes":null,"id":667,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"13412:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13412:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"name":"_scAddr","nodeType":"VariableDeclaration","scope":686,"src":"13083:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13083:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":647,"name":"_taskId","nodeType":"VariableDeclaration","scope":686,"src":"13108:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13108:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":649,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":686,"src":"13133:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13133:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":651,"name":"_outputHash","nodeType":"VariableDeclaration","scope":686,"src":"13166:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13166:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":653,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":686,"src":"13195:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":652,"name":"bytes","nodeType":"ElementaryTypeName","src":"13195:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":655,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":686,"src":"13239:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"13239:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":657,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":686,"src":"13289:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":656,"name":"uint64","nodeType":"ElementaryTypeName","src":"13289:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":659,"name":"_sig","nodeType":"VariableDeclaration","scope":686,"src":"13314:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":658,"name":"bytes","nodeType":"ElementaryTypeName","src":"13314:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13073:264:0"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[],"src":"13442:0:0"},"scope":935,"src":"13051:574:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":719,"nodeType":"Block","src":"14284:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":711,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"14325:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":712,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"14332:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":713,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"14341:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":714,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"14350:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":715,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"14363:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":716,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"14373:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":708,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"14294:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6070_$","typeString":"type(library TaskImpl)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5232,"src":"14294:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14294:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":718,"nodeType":"ExpressionStatement","src":"14294:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":720,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":699,"modifierName":{"argumentTypes":null,"id":698,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"14195:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14195:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"14238:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14238:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":703,"modifierName":{"argumentTypes":null,"id":700,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"14223:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14223:26:0"},{"arguments":[{"argumentTypes":null,"id":705,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"14271:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":706,"modifierName":{"argumentTypes":null,"id":704,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"14254:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14254:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"name":"_scAddr","nodeType":"VariableDeclaration","scope":720,"src":"14052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14052:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":690,"name":"_taskId","nodeType":"VariableDeclaration","scope":720,"src":"14077:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14077:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":692,"name":"_outputHash","nodeType":"VariableDeclaration","scope":720,"src":"14102:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":694,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":720,"src":"14131:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":693,"name":"uint64","nodeType":"ElementaryTypeName","src":"14131:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":696,"name":"_sig","nodeType":"VariableDeclaration","scope":720,"src":"14156:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":695,"name":"bytes","nodeType":"ElementaryTypeName","src":"14156:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14042:137:0"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[],"src":"14284:0:0"},"scope":935,"src":"14016:369:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":735,"nodeType":"Block","src":"14636:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":731,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"14677:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":732,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"14684:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":728,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"14646:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6070_$","typeString":"type(library TaskImpl)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6069,"src":"14646:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14646:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"14646:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":736,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":725,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"14623:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":726,"modifierName":{"argumentTypes":null,"id":724,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"14611:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14611:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"name":"_taskId","nodeType":"VariableDeclaration","scope":736,"src":"14579:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14579:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14578:17:0"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[],"src":"14636:0:0"},"scope":935,"src":"14552:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":760,"nodeType":"Block","src":"15187:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":754,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"15232:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":755,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"15239:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":756,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"15253:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":757,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"15260:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":751,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"15197:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3327_$","typeString":"type(library PrincipalImpl)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3156,"src":"15197:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15197:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"ExpressionStatement","src":"15197:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":761,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":745,"modifierName":{"argumentTypes":null,"id":744,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"15126:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15126:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":747,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22640,"src":"15171:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15171:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":749,"modifierName":{"argumentTypes":null,"id":746,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"15154:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"15154:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":761,"src":"15061:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint","nodeType":"ElementaryTypeName","src":"15061:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":740,"name":"_seed","nodeType":"VariableDeclaration","scope":761,"src":"15080:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":739,"name":"uint","nodeType":"ElementaryTypeName","src":"15080:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":742,"name":"_sig","nodeType":"VariableDeclaration","scope":761,"src":"15092:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":741,"name":"bytes","nodeType":"ElementaryTypeName","src":"15092:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"15060:50:0"},"returnParameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"15187:0:0"},"scope":935,"src":"15035:237:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":778,"nodeType":"Block","src":"15508:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":774,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"15560:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":775,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"15567:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":772,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"15525:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3327_$","typeString":"type(library PrincipalImpl)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"15525:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2592_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15525:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":771,"id":777,"nodeType":"Return","src":"15518:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":779,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":779,"src":"15419:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint","nodeType":"ElementaryTypeName","src":"15419:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15418:19:0"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"name":"","nodeType":"VariableDeclaration","scope":779,"src":"15471:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"15471:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":766,"length":null,"nodeType":"ArrayTypeName","src":"15471:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":770,"name":"","nodeType":"VariableDeclaration","scope":779,"src":"15489:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":768,"name":"uint","nodeType":"ElementaryTypeName","src":"15489:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":769,"length":null,"nodeType":"ArrayTypeName","src":"15489:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15470:33:0"},"scope":935,"src":"15393:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":792,"nodeType":"Block","src":"15849:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":788,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"15902:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":789,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"15909:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":786,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"15866:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":9021,"src":"15866:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2592_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15866:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":785,"id":791,"nodeType":"Return","src":"15859:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":793,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":793,"src":"15791:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint","nodeType":"ElementaryTypeName","src":"15791:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15790:19:0"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"name":"","nodeType":"VariableDeclaration","scope":793,"src":"15843:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint","nodeType":"ElementaryTypeName","src":"15843:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15842:6:0"},"scope":935,"src":"15762:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":814,"nodeType":"Block","src":"16335:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":810,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"16384:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":811,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"16391:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":808,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"16352:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":9058,"src":"16352:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2592_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16352:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":807,"id":813,"nodeType":"Return","src":"16345:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":815,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":815,"src":"16238:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint","nodeType":"ElementaryTypeName","src":"16238:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16237:19:0"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"name":"","nodeType":"VariableDeclaration","scope":815,"src":"16290:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint","nodeType":"ElementaryTypeName","src":"16290:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":800,"name":"","nodeType":"VariableDeclaration","scope":815,"src":"16296:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":799,"name":"uint","nodeType":"ElementaryTypeName","src":"16296:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":803,"name":"","nodeType":"VariableDeclaration","scope":815,"src":"16302:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"16302:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":802,"length":null,"nodeType":"ArrayTypeName","src":"16302:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":806,"name":"","nodeType":"VariableDeclaration","scope":815,"src":"16320:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":804,"name":"uint","nodeType":"ElementaryTypeName","src":"16320:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":805,"length":null,"nodeType":"ArrayTypeName","src":"16320:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16289:45:0"},"scope":935,"src":"16213:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":832,"nodeType":"Block","src":"16863:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":827,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"16911:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":828,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"16918:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":829,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"16932:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":825,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"16880:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9322,"src":"16880:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2592_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16880:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":824,"id":831,"nodeType":"Return","src":"16873:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":833,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":833,"src":"16772:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint","nodeType":"ElementaryTypeName","src":"16772:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":819,"name":"_scAddr","nodeType":"VariableDeclaration","scope":833,"src":"16791:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16791:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16771:36:0"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"name":"","nodeType":"VariableDeclaration","scope":833,"src":"16841:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"16841:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":822,"length":null,"nodeType":"ArrayTypeName","src":"16841:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16840:18:0"},"scope":935,"src":"16748:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":851,"nodeType":"Block","src":"17217:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":847,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"17260:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":848,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"17267:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":845,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"17234:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":8679,"src":"17234:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2592_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17234:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":844,"id":850,"nodeType":"Return","src":"17227:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":852,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":838,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"17165:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":839,"modifierName":{"argumentTypes":null,"id":837,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"17148:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"17148:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"name":"_custodian","nodeType":"VariableDeclaration","scope":852,"src":"17104:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"17104:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17103:20:0"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"name":"","nodeType":"VariableDeclaration","scope":852,"src":"17190:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"17190:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":843,"name":"","nodeType":"VariableDeclaration","scope":852,"src":"17199:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":842,"name":"bytes","nodeType":"ElementaryTypeName","src":"17199:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17189:23:0"},"scope":935,"src":"17085:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":867,"nodeType":"Block","src":"17600:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":863,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"17646:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":864,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"17653:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":861,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"17617:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9375_$","typeString":"type(library WorkersImpl)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":8705,"src":"17617:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17617:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":860,"id":866,"nodeType":"Return","src":"17610:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":868,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"name":"_data","nodeType":"VariableDeclaration","scope":868,"src":"17512:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":853,"name":"bytes","nodeType":"ElementaryTypeName","src":"17512:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":856,"name":"_signature","nodeType":"VariableDeclaration","scope":868,"src":"17532:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":855,"name":"bytes","nodeType":"ElementaryTypeName","src":"17532:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17511:45:0"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"name":"","nodeType":"VariableDeclaration","scope":868,"src":"17590:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint","nodeType":"ElementaryTypeName","src":"17590:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17589:6:0"},"scope":935,"src":"17490:181:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":883,"nodeType":"Block","src":"17939:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":879,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"17994:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":880,"name":"_updatedEnigmaContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"18001:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":877,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8355,"src":"17956:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8355_$","typeString":"type(library UpgradeImpl)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeEnigmaContractImpl","nodeType":"MemberAccess","referencedDeclaration":8276,"src":"17956:37:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17956:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":876,"id":882,"nodeType":"Return","src":"17949:82:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address","id":884,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":873,"modifierName":{"argumentTypes":null,"id":872,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22000,"src":"17897:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17897:9:0"},{"arguments":null,"id":875,"modifierName":{"argumentTypes":null,"id":874,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"17911:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17911:23:0"}],"name":"upgradeEnigmaContract","nodeType":"FunctionDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"name":"_updatedEnigmaContractAddress","nodeType":"VariableDeclaration","scope":884,"src":"17843:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"17843:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17842:39:0"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"17939:0:0"},"scope":935,"src":"17812:226:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":905,"nodeType":"Block","src":"18397:108:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":899,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"18461:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":900,"name":"_workerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"18468:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":901,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"18484:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":902,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"18493:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":897,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8355,"src":"18414:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8355_$","typeString":"type(library UpgradeImpl)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferWorkerStakePostUpgradeImpl","nodeType":"MemberAccess","referencedDeclaration":8354,"src":"18414:46:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2592_storage_ptr_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,address,address,bytes memory) returns (uint256)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18414:84:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":896,"id":904,"nodeType":"Return","src":"18407:91:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _workerAddress Newly-registered worker address\\n@param _signer Newly-registered worker address\\n@param _sig Signature","id":906,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":893,"modifierName":{"argumentTypes":null,"id":892,"name":"fromUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"18345:25:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18345:25:0"}],"name":"transferWorkerStakePostUpgrade","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"name":"_workerAddress","nodeType":"VariableDeclaration","scope":906,"src":"18270:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"18270:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":888,"name":"_signer","nodeType":"VariableDeclaration","scope":906,"src":"18294:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"18294:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":890,"name":"_sig","nodeType":"VariableDeclaration","scope":906,"src":"18311:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":889,"name":"bytes","nodeType":"ElementaryTypeName","src":"18311:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18269:60:0"},"returnParameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"name":"","nodeType":"VariableDeclaration","scope":906,"src":"18384:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"18384:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18383:9:0"},"scope":935,"src":"18230:275:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":919,"nodeType":"Block","src":"18651:43:0","statements":[{"expression":{"argumentTypes":null,"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":913,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"18661:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"mrSigner","nodeType":"MemberAccess","referencedDeclaration":2589,"src":"18661:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":916,"name":"_mrSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"18678:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"18661:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":918,"nodeType":"ExpressionStatement","src":"18661:26:0"}]},"documentation":"Set mrSigner\\n@param _mrSigner mrSigner","id":920,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":911,"modifierName":{"argumentTypes":null,"id":910,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22000,"src":"18637:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18637:9:0"}],"name":"setMrSigner","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"name":"_mrSigner","nodeType":"VariableDeclaration","scope":920,"src":"18598:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":907,"name":"bytes","nodeType":"ElementaryTypeName","src":"18598:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18597:24:0"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"18651:0:0"},"scope":935,"src":"18577:117:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":933,"nodeType":"Block","src":"18832:39:0","statements":[{"expression":{"argumentTypes":null,"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":927,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"18842:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2592_storage","typeString":"struct EnigmaState.State storage ref"}},"id":929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isvSvn","nodeType":"MemberAccess","referencedDeclaration":2591,"src":"18842:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":930,"name":"_isvSvn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"18857:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"18842:22:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":932,"nodeType":"ExpressionStatement","src":"18842:22:0"}]},"documentation":"Set isvSvn\\n@param _isvSvn mrSigner","id":934,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":925,"modifierName":{"argumentTypes":null,"id":924,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22000,"src":"18818:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18818:9:0"}],"name":"setIsvSvn","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"name":"_isvSvn","nodeType":"VariableDeclaration","scope":934,"src":"18781:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":921,"name":"bytes","nodeType":"ElementaryTypeName","src":"18781:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18780:22:0"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"18832:0:0"},"scope":935,"src":"18762:109:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":936,"src":"885:17988:0"}],"src":"0:18874:0"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event","signature":"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"},"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55":{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event","signature":"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55"},"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb":{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event","signature":"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb"},"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd":{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event","signature":"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd"},"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7"},"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7"},"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142"},"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event","signature":"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f"},"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454"},"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f"},"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event","signature":"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f"},"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5":{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event","signature":"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5"},"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9":{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event","signature":"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9"},"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158":{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event","signature":"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158"},"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d"},"0x5b00db39a072b9c10ede0c598bf9c262cd8e40a7057c19e3691a7d38dfa2c84e":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint64[]"},{"indexed":false,"name":"gasPxs","type":"uint64[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0x5b00db39a072b9c10ede0c598bf9c262cd8e40a7057c19e3691a7d38dfa2c84e"},"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9"}},"links":{"WorkersImpl":"0x1eBD3522000aa9E332AA3582c1e51DEea3F24017","PrincipalImpl":"0x989ec4F579Eb2A51dD9325434da21C58C060aD81","TaskImpl":"0x855bDD8F61F536a97424bdcAe64D942ff03A7d76","SecretContractImpl":"0x3FaC26FfA752E55fc627f8750B327b7033399733","UpgradeImpl":"0xA7fa8465E7faBc03D53703Bb4954A761DDbd10b0"},"address":"0x5C3028060304e26155c796e045237747EA72F1df","transactionHash":"0x3f446ec3a876c62db6a28a0f949518e59c38ad458b64f4fc65c999b68633c5ee"}},"schemaVersion":"3.0.10","updatedAt":"2019-10-21T22:29:44.799Z","devdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_optionalEthereumContractAddress":"Output state hash","_optionalEthereumData":"Output state hash","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_stateDeltaHash":"Input state delta hash","_taskId":"Unique taskId"}},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_taskId":"Unique taskId"}},"countSecretContracts()":{"return":"Number of deployed secret contracts"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash","_nonce":"Locally-computed nonce value for this deployment"}},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_initStateDeltaHash":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumContractAddress":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumData":"Initial state delta hash as a result of the contract\'s constructor","_preCodeHash":"Predeployed bytecode hash","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deposit(address,uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit","_custodian":"The worker\'s ETH address"}},"getActiveWorkers(uint256)":{"params":{"_blockNumber":"Block number"}},"getAllSecretContractAddresses()":{"return":"Array of secret contract addresses"},"getEpochSize()":{"return":"Epoch size"},"getFirstBlockNumber(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Block number"},"getIsvSvn()":{"return":"isvSvn"},"getMrSigner()":{"return":"mrSigner"},"getReport(address)":{"params":{"_custodian":"The worker\'s custodian address"}},"getSecretContract(bytes32)":{"params":{"_scAddr":"Secret contract address"},"return":"SecretContract struct"},"getSecretContractAddresses(uint256,uint256)":{"params":{"_start":"Start of range","_stop":"End of range"},"return":"Subset of deployed secret contract addresses"},"getSigningAddress()":{"return":"Signing address"},"getTaskRecord(bytes32)":{"params":{"_taskId":"Unique identifier for a given task"},"return":"TaskRecord struct"},"getTaskTimeoutSize()":{"return":"task timeout"},"getUpdatedEnigmaContractAddress()":{"return":"Updated Enigma contract address"},"getUserTaskDeployments(address)":{"params":{"_sender":"Task sender\'s ethereum address"},"return":"Current number for task deployments for user"},"getWorker(address)":{"params":{"_worker":"Worker\'s ethereum address"},"return":"Worker struct"},"getWorkerFromSigningAddress(address)":{"params":{"_signer":"Worker\'s signing address"},"return":"Ethereum addressWorker struct"},"getWorkerGroup(uint256,bytes32)":{"params":{"_blockNumber":"Block number the task record was mined","_scAddr":"Secret contract address"},"return":"Selected workers\' addresses"},"getWorkerParams(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes"},"getWorkersParams()":{"return":"Array of WorkersParams structs"},"isOwner()":{"return":"true if `msg.sender` is the owner of the contract."},"owner()":{"return":"the address of the owner."},"register(address,bytes,bytes)":{"params":{"_report":"The RLP encoded report returned by the IAS","_signature":"Signature","_signer":"The signer address, derived from the enclave public key"}},"renounceOwnership()":{"details":"Allows the current owner to relinquish control of the contract."},"returnFeesForTask(bytes32)":{"params":{"_taskId":"Unique taskId"}},"setIsvSvn(bytes)":{"params":{"_isvSvn":"mrSigner"}},"setMrSigner(bytes)":{"params":{"_mrSigner":"mrSigner"}},"setWorkersParams(uint256,uint256,bytes)":{"params":{"_blockNumber":"Block number principal node is attempting to set worker params","_seed":"The random integer generated by the enclave","_sig":"Principal node\'s signature"}},"transferOwnership(address)":{"details":"Allows the current owner to transfer control of the contract to a newOwner.","params":{"newOwner":"The address to transfer ownership to."}},"transferWorkerStakePostUpgrade(address,address,bytes)":{"params":{"_sig":"Signature","_signer":"Newly-registered worker address","_workerAddress":"Newly-registered worker address"}},"upgradeEnigmaContract(address)":{"params":{"_updatedEnigmaContractAddress":"Updated newly-deployed Enigma contract address"}},"verifyReport(bytes,bytes)":{"params":{"_data":"The report itself","_signature":"The signature of the report"}},"withdraw(uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit"}}}},"userdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee."},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"notice":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure."},"countSecretContracts()":{"notice":"Check if secret contract has been deployed"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"notice":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid."},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"notice":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deposit(address,uint256)":{"notice":"Deposits ENG stake into contract from worker. Worker must be registered to do so."},"getActiveWorkers(uint256)":{"notice":"Get active workers before a certain block number"},"getAllSecretContractAddresses()":{"notice":"Get all secret contract addresses"},"getEpochSize()":{"notice":"Get the epoch block size"},"getFirstBlockNumber(uint256)":{"notice":"Get the first block number of an epoch that a given block number belongs to"},"getIsvSvn()":{"notice":"Get isvSvn"},"getMrSigner()":{"notice":"Get mrSigner"},"getReport(address)":{"notice":"The RLP encoded report returned by the IAS server"},"getSecretContract(bytes32)":{"notice":"Get a SecretContract struct given a particular secret contract address"},"getSecretContractAddresses(uint256,uint256)":{"notice":"Get deployed secret contract addresses within a range"},"getSigningAddress()":{"notice":"Get signing address of calling worker"},"getTaskRecord(bytes32)":{"notice":"Get a TaskRecord struct given a particular task\'s ID"},"getTaskTimeoutSize()":{"notice":"Get the task timeout size"},"getUpdatedEnigmaContractAddress()":{"notice":"Get updated Enigma contract address"},"getUserTaskDeployments(address)":{"notice":"Get the current number/index (used as unique nonce value) of task deployments for a given user user"},"getWorker(address)":{"notice":"Get Worker struct from a given worker\'s ethereum address"},"getWorkerFromSigningAddress(address)":{"notice":"Get Worker struct from a given worker\'s signing address"},"getWorkerGroup(uint256,bytes32)":{"notice":"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address."},"getWorkerParams(uint256)":{"notice":"Get worker params for an epoch given a particular block number"},"getWorkersParams()":{"notice":"Get epoch-based history of worker params information"},"login()":{"notice":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process."},"logout()":{"notice":"Logout worker. Worker must be logged in to do so."},"register(address,bytes,bytes)":{"notice":"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks."},"renounceOwnership()":{"notice":"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."},"returnFeesForTask(bytes32)":{"notice":"Return the task fee to the task creator when too many blocks have elapsed without task resolution."},"setIsvSvn(bytes)":{"notice":"Set isvSvn"},"setMrSigner(bytes)":{"notice":"Set mrSigner"},"setWorkersParams(uint256,uint256,bytes)":{"notice":"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node"},"transferWorkerStakePostUpgrade(address,address,bytes)":{"notice":"Upgrade Enigma Contract"},"upgradeEnigmaContract(address)":{"notice":"Upgrade Enigma Contract"},"verifyReport(bytes,bytes)":{"notice":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate."},"withdraw(uint256)":{"notice":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so."}}}}')},function(e){e.exports=JSON.parse('{"contractName":"EnigmaToken","abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"INITIAL_SUPPLY","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_from\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"INITIAL_SUPPLY\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"details\\":\\"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. \\",\\"methods\\":{\\"approve(address,uint256)\\":{\\"details\\":\\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\",\\"params\\":{\\"_spender\\":\\"The address which will spend the funds.\\",\\"_value\\":\\"The amount of tokens to be spent.\\"}},\\"balanceOf(address)\\":{\\"details\\":\\"Gets the balance of the specified address.\\",\\"params\\":{\\"owner\\":\\"The address to query the balance of.\\"},\\"return\\":\\"An uint256 representing the amount owned by the passed address.\\"},\\"constructor\\":{\\"details\\":\\"EnigmaToken Constructor Runs only on initial contract creation.\\"},\\"decimals()\\":{\\"return\\":\\"the number of decimals of the token.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"spender\\":\\"The address which will spend the funds.\\",\\"subtractedValue\\":\\"The amount of tokens to decrease the allowance by.\\"}},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"addedValue\\":\\"The amount of tokens to increase the allowance by.\\",\\"spender\\":\\"The address which will spend the funds.\\"}},\\"name()\\":{\\"return\\":\\"the name of the token.\\"},\\"symbol()\\":{\\"return\\":\\"the symbol of the token.\\"},\\"totalSupply()\\":{\\"details\\":\\"Total number of tokens in existence\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"Transfer token for a specified address when not paused\\",\\"params\\":{\\"_to\\":\\"The address to transfer to.\\",\\"_value\\":\\"The amount to be transferred.\\"}},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"Transfer tokens from one address to another when not paused\\",\\"params\\":{\\"_from\\":\\"address The address which you want to send tokens from\\",\\"_to\\":\\"address The address which you want to transfer to\\",\\"_value\\":\\"uint256 the amount of tokens to be transferred\\"}}},\\"title\\":\\"Enigma Token\\"},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":\\"EnigmaToken\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":{\\"keccak256\\":\\"0x1d072d408420008c3d39b1006b9adbbe472f55fc314a8eb80d9861edfeb54c73\\",\\"urls\\":[\\"bzzr://9ec40fae3d143258454c5d7c25811f7969f1ef64abbf88ab96d753d6322906a4\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\":{\\"keccak256\\":\\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\\",\\"urls\\":[\\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\":{\\"keccak256\\":\\"0xe195405e9993d575173cdb5dd408db7459a026b9a98085c1a3b676f020f46584\\",\\"urls\\":[\\"bzzr://4463a0d4f49767f59c02f2a987b90d48e0d31b3ed3424f3e743496f102f96044\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\":{\\"keccak256\\":\\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\\",\\"urls\\":[\\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b506040518060400160405280600681526020017f456e69676d6100000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f454e470000000000000000000000000000000000000000000000000000000000815250600882600390805190602001906100959291906101a9565b5081516100a99060049060208501906101a9565b506005805460ff191660ff92909216919091179055506100d990503366354a6ba7a180006100de602090811b901c565b610244565b6001600160a01b0382166100f157600080fd5b61010a8160025461019060201b6106741790919060201c565b6002556001600160a01b0382166000908152602081815260409091205461013a918390610674610190821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156101a257600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101ea57805160ff1916838001178555610217565b82800160010185558215610217579182015b828111156102175782518255916020019190600101906101fc565b50610223929150610227565b5090565b61024191905b80821115610223576000815560010161022d565b90565b6107d3806102536000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610452565b6100c161046d565b6101626004803603604081101561025c57600080fd5b506001600160a01b0381351690602001356104ce565b6101626004803603604081101561028857600080fd5b506001600160a01b038135169060200135610517565b61017e600480360360408110156102b457600080fd5b506001600160a01b0381358116916020013516610523565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e838361052f565b9392505050565b60025490565b60006103888484846105ab565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006001600160a01b0383166103b957600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61067416565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006001600160a01b0383166104e357600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61068616565b600061036e838361069b565b600061036e83836106b1565b60006001600160a01b03831661054457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6001600160a01b03831660009081526001602090815260408083203384529091528120546105df908363ffffffff61068616565b6001600160a01b038516600090815260016020908152604080832033845290915290205561060e8484846106dc565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561036e57600080fd5b60008282111561069557600080fd5b50900390565b60006106a83384846106dc565b50600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166106ef57600080fd5b6001600160a01b038316600090815260208190526040902054610718908263ffffffff61068616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461074d908263ffffffff61067416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820cd0470b2dddcc56c882132081664f5106c4c77a70e625dbc86f5a15d248f86ec0029","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610452565b6100c161046d565b6101626004803603604081101561025c57600080fd5b506001600160a01b0381351690602001356104ce565b6101626004803603604081101561028857600080fd5b506001600160a01b038135169060200135610517565b61017e600480360360408110156102b457600080fd5b506001600160a01b0381358116916020013516610523565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e838361052f565b9392505050565b60025490565b60006103888484846105ab565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006001600160a01b0383166103b957600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61067416565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006001600160a01b0383166104e357600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61068616565b600061036e838361069b565b600061036e83836106b1565b60006001600160a01b03831661054457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6001600160a01b03831660009081526001602090815260408083203384529091528120546105df908363ffffffff61068616565b6001600160a01b038516600090815260016020908152604080832033845290915290205561060e8484846106dc565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561036e57600080fd5b60008282111561069557600080fd5b50900390565b60006106a83384846106dc565b50600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166106ef57600080fd5b6001600160a01b038316600090815260208190526040902054610718908263ffffffff61068616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461074d908263ffffffff61067416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820cd0470b2dddcc56c882132081664f5106c4c77a70e625dbc86f5a15d248f86ec0029","sourceMap":"660:1642:2:-;;;913:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;913:105:2;405:163:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:1:2;501:4:28;493:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;515:16:28;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:28;:20;;-1:-1:-1;;541:20:28;;;;;;;;;;;;-1:-1:-1;978:33:2;;-1:-1:-1;984:10:2;753:17;978:5;;;;;:33;;:::i;:::-;660:1642;;6198:263:27;-1:-1:-1;;;;;6272:21:27;;6264:30;;;;;;6320:23;6337:5;6320:12;;:16;;;;;;:23;;;;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:27;;:9;:18;;;;;;;;;;;;:29;;6397:5;;6374:22;;;;;:29;;:::i;:::-;-1:-1:-1;;;;;6353:18:27;;:9;:18;;;;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;:9;;6418:36;;;;;;;;;;6198:263;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:26:o;660:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;660:1642:2;;;-1:-1:-1;660:1642:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","deployedSourceMap":"660:1642:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:1642:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:128:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2026:128:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;936:89:27;;;:::i;:::-;;;;;;;;;;;;;;;;1620:150:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1620:150:2;;;;;;;;;;;;;;;;;:::i;712:58::-;;;:::i;930:81:28:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4233:317:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:27;;;;;;;;:::i;1234:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:27;-1:-1:-1;;;;;1234:104:27;;:::i;771:85:28:-;;;:::i;5058:327:27:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:27;;;;;;;;:::i;1200:120:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1200:120:2;;;;;;;;:::i;2160:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2160:139:2;;;;;;;;;;:::i;628:81:28:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2026:128:2:-;2093:4;2116:31;2130:8;2140:6;2116:13;:31::i;:::-;2109:38;2026:128;-1:-1:-1;;;2026:128:2:o;936:89:27:-;1006:12;;936:89;:::o;1620:150:2:-;1702:4;1725:38;1744:5;1751:3;1756:6;1725:18;:38::i;:::-;1718:45;1620:150;-1:-1:-1;;;;1620:150:2:o;712:58::-;753:17;712:58;:::o;930:81:28:-;995:9;;;;930:81;:::o;4233:317:27:-;4313:4;-1:-1:-1;;;;;4337:21:27;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:27;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:27;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;4462:60;;;;;;;;;;;-1:-1:-1;4539:4:27;4233:317;;;;:::o;1234:104::-;-1:-1:-1;;;;;1315:16:27;1289:7;1315:16;;;;;;;;;;;;1234:104::o;771:85:28:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;5058:327:27;5143:4;-1:-1:-1;;;;;5167:21:27;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:27;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1200:120:2:-;1263:4;1286:27;1301:3;1306:6;1286:14;:27::i;2160:139::-;2234:7;2260:32;2276:6;2283:8;2260:15;:32::i;2735:238:27:-;2800:4;-1:-1:-1;;;;;2824:21:27;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:27;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;2909:36;;;;;;;;;;;-1:-1:-1;2962:4:27;2735:238;;;;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:27;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:27;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:27;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;;;;;;;;;;;;-1:-1:-1;3719:4:27;3436:294;;;;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;1205:145;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:26;;;1205:145::o;1962:137:27:-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;:::-;-1:-1:-1;2088:4:27;1962:137;;;;:::o;1669:129::-;-1:-1:-1;;;;;1767:15:27;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;5599:256::-;-1:-1:-1;;;;;5686:16:27;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:27;;:9;:15;;;;;;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:27;;;:9;:15;;;;;;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:27;;;:9;:13;;;;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o","source":"pragma solidity ^0.5.0;\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\";\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\";\\n\\n/**\\n * @title Enigma Token\\n * @dev ERC20 Enigma Token (ENG)\\n *\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\n * units referred to as \'Grains\'.\\n *\\n * ENG are displayed using 8 decimal places of precision.\\n *\\n * 1 ENG is equivalent to:\\n *   100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n *\\n * 150 million ENG (total supply) is equivalent to:\\n *   15000000000000000 == 150000000 * 10**8 == 1e17\\n *\\n * All initial ENG Grains are assigned to the creator of\\n * this contract.\\n *\\n */\\ncontract EnigmaToken is ERC20, ERC20Detailed {\\n\\n    uint256 public constant INITIAL_SUPPLY = 150000000 * 10**8;  // 150 million ENG specified in Grains\\n\\n    /**\\n    * @dev EnigmaToken Constructor\\n    * Runs only on initial contract creation.\\n    */\\n    constructor() public ERC20Detailed(\\"Enigma\\", \\"ENG\\", 8) {\\n        _mint(msg.sender, INITIAL_SUPPLY);\\n    }\\n\\n    /**\\n    * @dev Transfer token for a specified address when not paused\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\n        return super.transfer(_to, _value);\\n    }\\n\\n    /**\\n    * @dev Transfer tokens from one address to another when not paused\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint256 the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\n        return super.transferFrom(_from, _to, _value);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint256 _value) public returns (bool) {\\n        return super.approve(_spender, _value);\\n    }\\n\\n    function allowance(address _owner, address _spender) public view returns (uint256) {\\n        return super.allowance(_owner,_spender);\\n    }\\n\\n}","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1745]},"id":1746,"nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1650,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12706,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1651,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12764,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1652,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":12705,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$12705","typeString":"contract ERC20"}},"id":1653,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1654,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":12763,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$12763","typeString":"contract ERC20Detailed"}},"id":1655,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[12705,12763,12832],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1745,"linearizedBaseContracts":[1745,12763,12705,12832],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1662,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1745,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1676,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12847,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1673,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1670,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12620,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1677,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1668,"modifierName":{"argumentTypes":null,"id":1664,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12763,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$12763_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1745,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1692,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1688,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1689,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1686,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12349,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1685,"id":1691,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"name":"_to","nodeType":"VariableDeclaration","scope":1693,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1681,"name":"_value","nodeType":"VariableDeclaration","scope":1693,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"name":"","nodeType":"VariableDeclaration","scope":1693,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1745,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12349,"visibility":"public"},{"body":{"id":1711,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1706,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1707,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1708,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1704,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":12434,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1703,"id":1710,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"name":"_from","nodeType":"VariableDeclaration","scope":1712,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1697,"name":"_to","nodeType":"VariableDeclaration","scope":1712,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1699,"name":"_value","nodeType":"VariableDeclaration","scope":1712,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"name":"","nodeType":"VariableDeclaration","scope":1712,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1745,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":12434,"visibility":"public"},{"body":{"id":1727,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1723,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1724,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1721,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":12385,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1720,"id":1726,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"name":"_spender","nodeType":"VariableDeclaration","scope":1728,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1716,"name":"_value","nodeType":"VariableDeclaration","scope":1728,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"name":"","nodeType":"VariableDeclaration","scope":1728,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1745,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":12385,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1739,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1740,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1737,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12330,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1742,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"name":"_owner","nodeType":"VariableDeclaration","scope":1744,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1732,"name":"_spender","nodeType":"VariableDeclaration","scope":1744,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"name":"","nodeType":"VariableDeclaration","scope":1744,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1745,"src":"2160:139:2","stateMutability":"view","superFunction":12330,"visibility":"public"}],"scope":1746,"src":"660:1642:2"}],"src":"0:2302:2"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1745]},"id":1746,"nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1650,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12706,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1651,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12764,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1652,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":12705,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$12705","typeString":"contract ERC20"}},"id":1653,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1654,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":12763,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$12763","typeString":"contract ERC20Detailed"}},"id":1655,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[12705,12763,12832],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1745,"linearizedBaseContracts":[1745,12763,12705,12832],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1662,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1745,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1676,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12847,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1673,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1670,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12620,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1677,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1668,"modifierName":{"argumentTypes":null,"id":1664,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12763,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$12763_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1745,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1692,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1688,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1689,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1686,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12349,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1685,"id":1691,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"name":"_to","nodeType":"VariableDeclaration","scope":1693,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1681,"name":"_value","nodeType":"VariableDeclaration","scope":1693,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"name":"","nodeType":"VariableDeclaration","scope":1693,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1745,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12349,"visibility":"public"},{"body":{"id":1711,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1706,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1707,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1708,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1704,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":12434,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1703,"id":1710,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"name":"_from","nodeType":"VariableDeclaration","scope":1712,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1697,"name":"_to","nodeType":"VariableDeclaration","scope":1712,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1699,"name":"_value","nodeType":"VariableDeclaration","scope":1712,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"name":"","nodeType":"VariableDeclaration","scope":1712,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1745,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":12434,"visibility":"public"},{"body":{"id":1727,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1723,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1724,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1721,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":12385,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1720,"id":1726,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"name":"_spender","nodeType":"VariableDeclaration","scope":1728,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1716,"name":"_value","nodeType":"VariableDeclaration","scope":1728,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"name":"","nodeType":"VariableDeclaration","scope":1728,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1745,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":12385,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1739,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1740,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1737,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12330,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1742,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"name":"_owner","nodeType":"VariableDeclaration","scope":1744,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1732,"name":"_spender","nodeType":"VariableDeclaration","scope":1744,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"name":"","nodeType":"VariableDeclaration","scope":1744,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1745,"src":"2160:139:2","stateMutability":"view","superFunction":12330,"visibility":"public"}],"scope":1746,"src":"660:1642:2"}],"src":"0:2302:2"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}},"links":{},"address":"0x2CfAeb492c2BB8d76b0e132CEb2836F27Eb58000","transactionHash":"0x57222cae831102f23b376b3e4c43a49065fbed5d0cf5237245ec93efe3599288"}},"schemaVersion":"3.0.10","updatedAt":"2019-10-21T22:29:44.766Z","devdoc":{"details":"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. ","methods":{"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.","params":{"_spender":"The address which will spend the funds.","_value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"Gets the balance of the specified address.","params":{"owner":"The address to query the balance of."},"return":"An uint256 representing the amount owned by the passed address."},"constructor":{"details":"EnigmaToken Constructor Runs only on initial contract creation."},"decimals()":{"return":"the number of decimals of the token."},"decreaseAllowance(address,uint256)":{"details":"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"spender":"The address which will spend the funds.","subtractedValue":"The amount of tokens to decrease the allowance by."}},"increaseAllowance(address,uint256)":{"details":"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"addedValue":"The amount of tokens to increase the allowance by.","spender":"The address which will spend the funds."}},"name()":{"return":"the name of the token."},"symbol()":{"return":"the symbol of the token."},"totalSupply()":{"details":"Total number of tokens in existence"},"transfer(address,uint256)":{"details":"Transfer token for a specified address when not paused","params":{"_to":"The address to transfer to.","_value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another when not paused","params":{"_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}}},"title":"Enigma Token"},"userdoc":{"methods":{}}}')},function(e,t){e.exports=require("jayson/lib/client/browser")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("retry")},function(e,t){e.exports=require("ethereumjs-abi")},function(e,t,n){e.exports=n(17)},function(e,t){e.exports=require("core-js/stable")},function(e,t){e.exports=require("regenerator-runtime/runtime")},function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"ERROR",function(){return v}),n.d(r,"DEPOSIT_TRANSACTION_HASH",function(){return h}),n.d(r,"DEPOSIT_CONFIRMATION",function(){return E}),n.d(r,"DEPOSIT_RECEIPT",function(){return C}),n.d(r,"WITHDRAW_TRANSACTION_HASH",function(){return V}),n.d(r,"WITHDRAW_CONFIRMATION",function(){return x}),n.d(r,"WITHDRAW_RECEIPT",function(){return L}),n.d(r,"LOGIN_TRANSACTION_HASH",function(){return N}),n.d(r,"LOGIN_CONFIRMATION",function(){return w}),n.d(r,"LOGIN_RECEIPT",function(){return P}),n.d(r,"LOGOUT_TRANSACTION_HASH",function(){return R}),n.d(r,"LOGOUT_CONFIRMATION",function(){return A}),n.d(r,"LOGOUT_RECEIPT",function(){return W}),n.d(r,"DEPLOY_SC_ADDR_RESULT",function(){return q}),n.d(r,"DEPLOY_SC_ETH_TRANSACTION_HASH",function(){return M}),n.d(r,"DEPLOY_SC_ETH_CONFIRMATION",function(){return U}),n.d(r,"DEPLOY_SC_ETH_RECEIPT",function(){return F}),n.d(r,"DEPLOY_SC_ENG_RECEIPT",function(){return H}),n.d(r,"CREATE_TASK",function(){return B}),n.d(r,"CREATE_TASK_INPUT",function(){return O}),n.d(r,"CREATE_TASK_RECORD_TRANSACTION_HASH",function(){return G}),n.d(r,"CREATE_TASK_RECORD_CONFIRMATION",function(){return z}),n.d(r,"CREATE_TASK_RECORD_RECEIPT",function(){return K}),n.d(r,"CREATE_TASK_RECORD",function(){return j}),n.d(r,"SEND_TASK_INPUT_RESULT",function(){return Y}),n.d(r,"POLL_TASK_STATUS_RESULT",function(){return J}),n.d(r,"GET_TASK_RESULT_RESULT",function(){return Z}),n.d(r,"DEPLOY_SECRET_CONTRACT_RESULT",function(){return X}),n.d(r,"RETURN_FEES_FOR_TASK_RECEIPT",function(){return Q}),n.d(r,"RETURN_FEES_FOR_TASK",function(){return ee}),n.d(r,"POLL_TASK_ETH_RESULT",function(){return te}),n.d(r,"RPC_SEND_TASK_INPUT",function(){return ne}),n.d(r,"RPC_DEPLOY_SECRET_CONTRACT",function(){return re}),n.d(r,"RPC_GET_TASK_RESULT",function(){return ae}),n.d(r,"RPC_GET_TASK_STATUS",function(){return ie}),n.d(r,"GET_TASK_RESULT_SUCCESS",function(){return se}),n.d(r,"GET_TASK_RESULT_FAILED",function(){return oe}),n.d(r,"GET_TASK_RESULT_UNVERIFIED",function(){return de}),n.d(r,"GET_TASK_RESULT_INPROGRESS",function(){return pe}),n.d(r,"ETH_STATUS_UNDEFINED",function(){return le}),n.d(r,"ETH_STATUS_CREATED",function(){return ce}),n.d(r,"ETH_STATUS_VERIFIED",function(){return ye}),n.d(r,"ETH_STATUS_FAILED",function(){return ue}),n.d(r,"ETH_STATUS_FAILED_ETH",function(){return me}),n.d(r,"ETH_STATUS_FAILED_RETURN",function(){return fe});n(15),n(16);var a=n(2),i=n.n(a),s=n(3),o=n.n(s),d=n(0),p=n.n(d),l=n(7),c=n.n(l),y=n(4),u=n(5),m=n.n(u);p.a.options.usePureJavaScript=!0;var f=c.a.ec;function _(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;d=g(d),e+=i.a.BigInt(d.length/2).toString(16).padStart(16,"0")+d}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function b(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;e=_(e+=i.a.BigInt(d.length).toString(16).padStart(16,"0"),d)}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function g(e){return"0x"==e.substring(0,2)?e.substring(2):e}var T={test:function(){return"hello2"},generateScAddr:function(e,t){return o.a.soliditySha3({t:"bytes",v:e},{t:"uint",v:t})},hash:function(e){var t=_("",e);return o.a.soliditySha3({t:"bytes",v:t})},principalHash:function(e,t,n,r){var a="";return a=b(a=_(a,[e,t]),[n,r]),o.a.soliditySha3({t:"bytes",v:a})},commitReceiptsHash:function(e,t,n,r,a,i,s,d,p){var l="";return l=_(l,[e]),l=_(l=b(l,[t]),[n]),l=_(l=b(l,[r,a,i]),[s,d,p]),o.a.soliditySha3({t:"bytes",v:l})},getDerivedKey:function(e,t){var n=new f("secp256k1");128==e.length&&(e="04"+e);var r=n.keyFromPrivate(t,"hex"),a=n.keyFromPublic(e,"hex").getPublic().mul(r.getPrivate()),i=2|(a.getY().isOdd()?1:0),s=a.getX(),o=y.Buffer.from([i]),d=s.toArrayLike(y.Buffer,"be",32),l=p.a.md.sha256.create();return l.update(o.toString("binary")),l.update(d.toString("binary")),l.digest().toHex()},encryptMessage:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:p.a.random.getBytesSync(12),r=p.a.util.hexToBytes(e),a=p.a.cipher.createCipher("AES-GCM",r);return a.start({iv:n}),a.update(p.a.util.createBuffer(t)),a.finish(),a.output.putBuffer(a.mode.tag).putBytes(n).toHex()},decryptMessage:function(e,t){var n=p.a.util.hexToBytes(e),r=y.Buffer.from(t,"hex"),a=p.a.util.createBuffer(r.slice(-12)),i=p.a.util.createBuffer(r.slice(-28,-12)),s=p.a.cipher.createDecipher("AES-GCM",n);if(s.start({iv:a,tag:i}),s.update(p.a.util.createBuffer(r.slice(0,-28))),s.finish())return s.output.toHex();throw new Error("decipher did not finish")},toGrains:function(e){return e*Math.pow(10,8)}};T.remove0x=g,T.hexToAscii=function(e){if("number"!=typeof e&&"string"!=typeof e)return"";e=e.toString().replace(/\s+/gi,"");for(var t=[],n=0;n<e.length;n+=2){var r=parseInt(e.substr(n,2),16);isNaN(r)||0===r||t.push(String.fromCharCode(r))}return t.join("")},T.sleep=function(e){return new Promise(function(t){return setTimeout(t,e)})},T.gzip=function(e){return new Promise(function(t,n){m.a.gzip(e,function(e,r){e?n(e):t(r)})})},T.gunzip=function(e){return new Promise(function(t,n){m.a.gunzip(e,function(e,r){e?n(e):t(r)})})};var S=T,D=n(8),I=n(9),k=n(1),$=n.n(k),v="error",h="depositTransactionHash",E="depositConfirmation",C="depositReceipt",V="withdrawTransactionHash",x="withdrawConfirmation",L="withdrawReceipt",N="loginTransactionHash",w="loginConfirmation",P="loginReceipt",R="logoutTransactionHash",A="logoutConfirmation",W="logoutReceipt",q="deploySCAddrResult",M="deploySCEthTransactionHash",U="deploySCEthConfirmation",F="deploySCEthReceipt",H="deploySCEngReceipt",B="createTask",O="createTaskInput",G="createTaskRecordTransactionHash",z="createTaskRecordConfirmation",K="createTaskRecordReceipt",j="createTaskRecord",Y="sendTaskInputResult",J="pollTaskStatusResult",Z="getTaskResultResult",X="deploySecretContractResult",Q="returnFeesForTaskReceipt",ee="returnFeesForTask",te="pollTaskETHResult",ne="sendTaskInput",re="deploySecretContract",ae="getTaskResult",ie="getTaskStatus",se="SUCCESS",oe="FAILED",de="UNVERIFIED",pe="INPROGRESS",le=0,ce=1,ye=2,ue=3,me=4,fe=5;function _e(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function be(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){_e(i,r,a,s,o,"next",e)}function o(e){_e(i,r,a,s,o,"throw",e)}s(void 0)})}}function ge(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Te=function(){function e(t,n,r,a,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.enigmaContract=n,this.tokenContract=r,this.txDefaults=a,this.enigma=i}var t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_;return t=e,(n=[{key:"findBySigningAddress",value:(_=be(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorkerFromSigningAddress(t).call();case 2:return n=e.sent,e.abrupt("return",{account:n[0],status:parseInt(n[1][1]),report:n[1][2],balance:parseInt(n[1][3]),logs:n[1][4]});case 4:case"end":return e.stop()}},e,this)})),function(e){return _.apply(this,arguments)})},{key:"getWorkerStatus",value:(f=be(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return n=e.sent,e.abrupt("return",parseInt(n.status));case 4:case"end":return e.stop()}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"isDeployed",value:(m=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getSecretContract(t).call();case 3:return e.t1=e.sent.status,e.t2=(0,e.t0)(e.t1),e.abrupt("return",1===e.t2);case 6:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"countSecretContracts",value:(u=be(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.countSecretContracts().call();case 3:return e.t1=e.sent,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(){return u.apply(this,arguments)})},{key:"getSecretContractAddresses",value:(y=be(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContractAddresses(t,n).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e,t){return y.apply(this,arguments)})},{key:"getAllSecretContractAddresses",value:(c=be(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getAllSecretContractAddresses().call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(){return c.apply(this,arguments)})},{key:"getCodeHash",value:(l=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.codeHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"countStateDeltas",value:(p=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.stateDeltaHashes.length);case 3:case"end":return e.stop()}},e,this)})),function(e){return p.apply(this,arguments)})},{key:"getStateDeltaHash",value:(d=be(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes[e.t0]);case 4:case"end":return e.stop()}},e,this)})),function(e,t){return d.apply(this,arguments)})},{key:"getStateDeltaHashes",value:(o=be(regeneratorRuntime.mark(function e(t,n,r){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.t1=r,e.abrupt("return",e.sent.stateDeltaHashes.slice(e.t0,e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e,t,n){return o.apply(this,arguments)})},{key:"isValidDeltaHash",value:(s=be(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes.includes(e.t0));case 4:case"end":return e.stop()}},e,this)})),function(e,t){return s.apply(this,arguments)})},{key:"login",value:function(e){var t=this,n=new $.a;return be(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.login().send({from:e}).on("transactionHash",function(e){n.emit(N,e)}).on("confirmation",function(e,t){n.emit(w,e,t)}).on("receipt",function(e){n.emit(P,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(v,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"logout",value:function(e){var t=this,n=new $.a;return be(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.logout().send({from:e}).on("transactionHash",function(e){n.emit(R,e)}).on("confirmation",function(e,t){n.emit(A,e,t)}).on("receipt",function(e){n.emit(W,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(v,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"deposit",value:function(e,t){var n=this,r=new $.a;return be(regeneratorRuntime.mark(function a(){var i;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,n.tokenContract.methods.balanceOf(e).call();case 2:if(!(a.sent<t)){a.next=7;break}return"Not enough tokens in wallet",r.emit("error",{name:"NotEnoughTokens",message:"Not enough tokens in wallet"}),a.abrupt("return");case 7:return a.next=9,n.tokenContract.methods.approve(n.enigmaContract.options.address,t).send({from:e});case 9:return a.prev=9,a.next=12,n.enigmaContract.methods.deposit(e,t).send({from:e}).on("transactionHash",function(e){r.emit(h,e)}).on("confirmation",function(e,t){r.emit(E,e,t)});case 12:i=a.sent,r.emit(C,i),a.next=19;break;case 16:a.prev=16,a.t0=a.catch(9),r.emit(v,a.t0.message);case 19:case"end":return a.stop()}},a,null,[[9,16]])}))(),r}},{key:"withdraw",value:function(e,t){var n=this,r=new $.a;return be(regeneratorRuntime.mark(function a(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,n.enigmaContract.methods.withdraw(t).send({from:e}).on("transactionHash",function(e){r.emit(V,e)}).on("confirmation",function(e,t){r.emit(x,e,t)}).on("receipt",function(e){r.emit(L,e)});case 3:a.next=8;break;case 5:a.prev=5,a.t0=a.catch(0),r.emit(v,a.t0.message);case 8:case"end":return a.stop()}},a,null,[[0,5]])}))(),r}},{key:"getBalance",value:(i=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getWorker(t).call();case 3:return e.t1=e.sent.balance,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e){return i.apply(this,arguments)})},{key:"getWorkerSignerAddr",value:(a=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return e.abrupt("return",e.sent.signer);case 3:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})}])&&ge(t.prototype,n),r&&ge(t,r),e}();var Se=function e(t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.inputsHash=S.hash([n,r,_?f:t,o]),this.scAddr=t,this.encryptedFn=n,this.encryptedAbiEncodedArgs=r,this.gasLimit=a,this.gasPx=i,this.msgId=s,this.userPubKey=o,this.firstBlockNumber=d,this.workerAddress=p,this.workerEncryptionKey=l,this.sender=c,this.userTaskSig=y,this.nonce=u,this.preCode=m,this.preCodeHash=f,this.isContractDeploymentTask=_,this.transactionHash="",this.taskId="",this.receipt="",this.ethStatus=0,this.proof="",this.creationBlockNumber=-1,this.encryptedAbiEncodedOutputs="",this.delta="",this.usedGas="",this.ethereumPayload="",this.ethereumAddress="",this.workerTaskSig="",this.engStatus="null",this.decryptedOutput=""},De=n(10),Ie=n.n(De),ke=n(11),$e=n.n(ke),ve=n(12),he=n.n(ve),Ee=n(13),Ce=n(6),Ve=n.n(Ce);function xe(e){return(xe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Le(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function Ne(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){Le(i,r,a,s,o,"next",e)}function o(e){Le(i,r,a,s,o,"throw",e)}s(void 0)})}}function we(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Pe=function(){function e(t,n,r,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.txDefaults=i,this.config={},this.config.retry={},this.config.retry.retries=s.retry&&null!=s.retry.retries?s.retry.retries:5,this.config.retry.factor=s.retry&&null!=s.retry.factor?s.retry.factor:2,this.config.retry.minTimeout=s.retry&&null!=s.retry.minTimeout?s.retry.minTimeout:2e3,this.config.retry.maxTimeout=s.retry&&null!=s.retry.maxTimeout?s.retry.maxTimeout:"Infinity",this.config.retry.randomize=!s.retry||(null==s.retry.randomize||s.retry.randomize);this.client=Ie()(function(e,t){$e.a.post(a,JSON.parse(e),{headers:{"Content-Type":"application/json",credentials:"include"}}).then(function(e){if(v in e.data)t(e.data.error,null);else{var n=JSON.stringify(e.data.result);t(null,n)}}).catch(function(e){t({code:-32e3,message:e.message},null)})},{}),this.workerParamsCache={},this.selectedWorkerGroupCache={},this.taskKeyLocalStorage={},this.createContracts(n,r)}var t,n,r,a,s,d,l,c,y,u,m,f;return t=e,n=[{key:"admin",value:function(){this.admin=new Te(this.web3,this.enigmaContract,this.tokenContract,this.txDefaults,this)}},{key:"createContracts",value:function(e,t){this.enigmaContract=new this.web3.eth.Contract(D.abi,e,this.txDefaults),this.tokenContract=new this.web3.eth.Contract(I.abi,t,this.txDefaults)}},{key:"createTask",value:function(e,t,n,r,a,i,s){var o=this,d=new $.a;return Ne(regeneratorRuntime.mark(function p(){var l,c,y,u,m,f,_,b,g,T,D,I,k,$,h,E,C,V,x,L,N,w,P,R,A,W,q,M;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:return p.t0=parseInt,p.next=3,o.enigmaContract.methods.getUserTaskDeployments(a).call();case 3:if(p.t1=p.sent,l=(0,p.t0)(p.t1),c=s?S.generateScAddr(a,l):i,!s){p.next=17;break}if(!Buffer.isBuffer(i)){p.next=14;break}return y=i,p.next=11,S.gzip(y);case 11:u=p.sent,p.next=15;break;case 14:throw Error("PreCode expected to be a Buffer, instead got "+xe(i));case 15:p.next=19;break;case 17:y="",u="";case 19:for(m=s?o.web3.utils.soliditySha3({t:"bytes",value:y.toString("hex")}):"",f=void 0===t||0===t.length?[[],[]]:t[0].map(function(e,n){return t.map(function(e){return e[n]})}),_=S.remove0x(o.web3.eth.abi.encodeParameters(f[1],f[0])),b=[],g=0;g<_.length;g+=2)b.push(parseInt(_.substr(g,2),16));return p.next=26,o.web3.eth.getBlockNumber();case 26:return T=p.sent,p.next=29,o.getWorkerParams(T);case 29:return D=p.sent,I=D.firstBlockNumber,p.next=33,o.selectWorkerGroup(c,D,1)[0];case 33:return k=(k=p.sent).toLowerCase().slice(-40),$=o.obtainTaskKeyPair(),h=$.publicKey,E=$.privateKey,p.prev=36,p.next=39,new Promise(function(e,t){o.client.request("getWorkerEncryptionKey",{workerAddress:k,userPubKey:h},function(n,r){n?t(n):e(r)})});case 39:if(C=p.sent,V=C.result,x=C.id,L=V.workerEncryptionKey,N=V.workerSig,w="0x0000000000000013456e69676d612055736572204d6573736167650000000000000040"+L,P=(P=Ve.a.recover("0x"+N,o.web3.utils.soliditySha3({t:"bytes",value:w}))).toLowerCase().slice(-40),k===P){p.next=50;break}console.error("Worker address",k,"!= recovered address",P),d.emit(v,{name:"InvalidWorker",message:"Invalid worker encryption key + signature combo ".concat(k," != ").concat(P)}),p.next=58;break;case 50:return R=S.getDerivedKey(L,E),A=S.encryptMessage(R,e),W=S.encryptMessage(R,Buffer.from(b)),q=o.web3.utils.soliditySha3({t:"bytes",v:A},{t:"bytes",v:W}),p.next=56,o.web3.eth.sign(q,a);case 56:M=p.sent,d.emit(B,new Se(c,A,W,n,r,x,h,I,k,L,a,M,l,u.toString("base64"),m,s));case 58:p.next=63;break;case 60:p.prev=60,p.t2=p.catch(36),d.emit(v,p.t2);case 63:case"end":return p.stop()}},p,null,[[36,60]])}))(),d}},{key:"createTaskRecord",value:function(e){var t=this,n=new $.a;return Ne(regeneratorRuntime.mark(function r(){var a;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.tokenContract.methods.balanceOf(e.sender).call();case 2:if(!(r.sent<e.gasLimit*e.gasPx)){r.next=6;break}return n.emit(v,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 6:return r.next=8,t.tokenContract.methods.approve(t.enigmaContract.options.address,e.gasLimit*e.gasPx).send({from:e.sender});case 8:if(r.prev=8,!e.isContractDeploymentTask){r.next=15;break}return r.next=12,t.enigmaContract.methods.createDeploymentTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber,e.nonce).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(G,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 12:r.t0=r.sent,r.next=18;break;case 15:return r.next=17,t.enigmaContract.methods.createTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(G,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 17:r.t0=r.sent;case 18:a=r.t0,e.taskId=a.events.TaskRecordCreated.returnValues.taskId,e.receipt=a,e.ethStatus=1,e.creationBlockNumber=a.blockNumber,n.emit(K,a),n.emit(j,e),r.next=30;break;case 27:r.prev=27,r.t1=r.catch(8),n.emit(v,r.t1.message);case 30:case"end":return r.stop()}},r,null,[[8,27]])}))(),n}},{key:"getTaskRecordStatus",value:(f=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return n=e.sent,t.ethStatus=parseInt(n.status),t.proof=n.proof,e.abrupt("return",t);case 6:case"end":return e.stop()}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"getTaskRecordFromTaskId",value:(m=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t).call();case 2:return n=e.sent,e.abrupt("return",{sender:n.sender,inputsHash:n.inputsHash,outputHash:n.outputHash,gasLimit:parseInt(n.gasLimit),gasPx:parseInt(n.gasPx),blockNumber:parseInt(n.blockNumber),status:parseInt(n.status),proof:n.proof});case 4:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"getTaskOutputHash",value:(u=Ne(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return e.abrupt("return",e.sent.outputHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return u.apply(this,arguments)})},{key:"getReport",value:(y=Ne(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getReport(t).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e){return y.apply(this,arguments)})},{key:"getWorkerParams",value:(c=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(0===Object.keys(this.workerParamsCache).length||t-this.workerParamsCache.firstBlockNumber>=this.epochSize)){e.next=8;break}return e.next=3,this.enigmaContract.methods.getEpochSize().call();case 3:return this.epochSize=e.sent,e.next=6,this.enigmaContract.methods.getWorkerParams(t).call();case 6:n=e.sent,this.workerParamsCache={firstBlockNumber:parseInt(n[0]),seed:i.a.BigInt(n[1]),workers:n[2],stakes:n[3].map(function(e){return i.a.BigInt(e)})};case 8:return e.abrupt("return",this.workerParamsCache);case 9:case"end":return e.stop()}},e,this)})),function(e){return c.apply(this,arguments)})},{key:"selectWorkerGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5,r=t.stakes.reduce(function(e,t){return i.a.add(e,t)},i.a.BigInt(0)),a=0,s=[];do{for(var d=Ee.rawEncode(["uint256","bytes32","uint256"],[t.seed.toString(10),e,a]),p=o.a.keccak256(d),l=i.a.remainder(i.a.BigInt(p),r),c=t.workers[t.workers.length-1],y=0;y<t.workers.length;y++)if((l=i.a.subtract(l,t.stakes[y]))<=0){c=t.workers[y];break}s.includes(c)||s.push(c),a++}while(s.length<n);return s}},{key:"sendTaskInput",value:function(t){var n=this,r=new $.a;return Ne(regeneratorRuntime.mark(function a(){var i,s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return i=ne,s=Y,t.isContractDeploymentTask&&(i=re,s=X),a.prev=3,a.next=6,new Promise(function(r,a){n.client.request(i,e.serializeTask(t),function(e,t){e?a(e):r(t)})});case 6:r.emit(s,t),a.next=12;break;case 9:a.prev=9,a.t0=a.catch(3),r.emit(v,a.t0);case 12:case"end":return a.stop()}},a,null,[[3,9]])}))(),r}},{key:"getTaskResult",value:function(e){var t=this,n=new $.a,r=he.a.operation(this.config.retry);return r.attempt(function(){var a=Ne(regeneratorRuntime.mark(function a(i){var s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,new Promise(function(n,r){t.client.request(ae,{taskId:S.remove0x(e.taskId)},function(e,t){e?r(e):n(t)})});case 3:if(!(s=a.sent).result){a.next=20;break}a.t0=s.result.status,a.next=a.t0===se?8:a.t0===oe?12:a.t0===de?15:a.t0===pe?15:17;break;case 8:e.delta=s.result.delta,e.ethereumPayload=s.result.ethereumPayload,e.ethereumAddress=s.result.ethereumAddress,e.preCodeHash=s.result.preCodeHash;case 12:e.encryptedAbiEncodedOutputs=s.result.output,e.usedGas=s.result.usedGas,e.workerTaskSig=s.result.signature;case 15:return e.engStatus=s.result.status,a.abrupt("break",18);case 17:throw new Error("Invalid task result status").message;case 18:a.next=26;break;case 20:if(!r.retry(!0)){a.next=25;break}return console.log("Warning: Got an empty TaskResult on attempt "+i+" of "+(t.config.retry.retries+1)+". Retrying..."),a.abrupt("return");case 25:e.engStatus=null;case 26:n.emit(Z,e),a.next=32;break;case 29:a.prev=29,a.t1=a.catch(0),n.emit(v,a.t1);case 32:case"end":return a.stop()}},a,null,[[0,29]])}));return function(e){return a.apply(this,arguments)}}()),n}},{key:"returnFeesForTask",value:function(e){var t=this,n=new $.a;return Ne(regeneratorRuntime.mark(function r(){var a,i;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.enigmaContract.methods.getTaskTimeoutSize().call();case 2:return a=r.sent,r.next=5,t.web3.eth.getBlockNumber();case 5:if(!(r.sent-e.creationBlockNumber<=a)){r.next=9;break}return n.emit(v,{name:"InvalidTaskReturn",message:"Not enough time has elapsed to return task funds"}),r.abrupt("return");case 9:return r.prev=9,r.next=12,t.enigmaContract.methods.returnFeesForTask(e.taskId).send({from:e.sender});case 12:i=r.sent,e.ethStatus=fe,n.emit(Q,i),n.emit(ee,e),r.next=21;break;case 18:r.prev=18,r.t0=r.catch(9),n.emit(v,r.t0.message);case 21:case"end":return r.stop()}},r,null,[[9,18]])}))(),n}},{key:"decryptTaskResult",value:(l=Ne(regeneratorRuntime.mark(function e(t){var n,r,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("task.encryptedAbiEncodedOutputs is "+t.encryptedAbiEncodedOutputs),t.encryptedAbiEncodedOutputs?(n=this.obtainTaskKeyPair(),r=n.privateKey,a=S.getDerivedKey(t.workerEncryptionKey,r),t.decryptedOutput=S.decryptMessage(a,t.encryptedAbiEncodedOutputs)):(console.log("Warning: task.encryptedAbiEncodedOutputs is empty, there is nothing to decrypt."),t.decryptedOutput=null),e.abrupt("return",t);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"verifyTaskOutput",value:(d=Ne(regeneratorRuntime.mark(function e(t){var n,r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getTaskOutputHash(t);case 2:return n=e.sent,r=this.web3.utils.soliditySha3({t:"bytes",value:t.encryptedAbiEncodedOutputs.toString("hex")}),e.abrupt("return",n===r);case 5:case"end":return e.stop()}},e,this)})),function(e){return d.apply(this,arguments)})},{key:"verifyTaskStatus",value:(s=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getTaskRecordStatus(t);case 2:n=e.sent.ethStatus,e.t0=t.engStatus,e.next=e.t0===se?6:e.t0===oe?8:e.t0===de?10:e.t0===pe?10:12;break;case 6:return e.abrupt("return",n===ye);case 8:return e.abrupt("return",n===ue);case 10:return e.abrupt("return",n===ce);case 12:return e.abrupt("return",n===le);case 13:case"end":return e.stop()}},e,this)})),function(e){return s.apply(this,arguments)})},{key:"pollTaskStatusGen",value:regeneratorRuntime.mark(function e(t,n){var r=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,new Promise(function(e,a){r.client.request(ie,{taskId:S.remove0x(t.taskId),workerAddress:t.workerAddress,withResult:n},function(r,i){r?a(r):(t.engStatus=i.result.status,n&&(t.encryptedAbiEncodedOutputs=i.result.output),e(t))})});case 3:e.next=0;break;case 5:case"end":return e.stop()}},e)})},{key:"innerPollTaskStatus",value:function(e,t,n){var r=this;t.next().value.then(function(a){n.emit(J,a),"SUCCESS"!==a.engStatus&&"FAILED"!==a.engStatus&&r.innerPollTaskStatus(e,t,n)}).catch(function(e){n.emit(v,e)})}},{key:"pollTaskStatus",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=new $.a,r=this.pollTaskStatusGen(e,t);return this.innerPollTaskStatus(e,r,n),n}},{key:"pollTaskETH",value:(a=Ne(regeneratorRuntime.mark(function e(t){var n,r=arguments;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=r.length>1&&void 0!==r[1]?r[1]:1e3;case 1:if(t.ethStatus!==ce){e.next=9;break}return e.next=4,this.getTaskRecordStatus(t);case 4:return t=e.sent,e.next=7,S.sleep(n);case 7:e.next=1;break;case 9:return e.abrupt("return",t);case 10:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})},{key:"obtainTaskKeyPair",value:function(){var e,t="undefined"!=typeof window,n=t?window.localStorage.getItem("encodedPrivateKey"):this.taskKeyLocalStorage.encodedPrivateKey;if(null==n)throw Error("Need to set task key pair first");return e=t?atob(n):Buffer.from(n,"base64").toString("binary"),{publicKey:Ve.a.publicKeyByPrivateKey(e),privateKey:e}}},{key:"setTaskKeyPair",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t="undefined"!=typeof window;if(""===e)for(var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",r=0;r<9;r++)e+=n.charAt(Math.floor(Math.random()*n.length));var a=p.a.random.createInstance();a.seedFileSync=function(t){return p.a.util.fillString(e,t)};var i=p.a.util.bytesToHex(a.getBytes(32));return t?window.localStorage.setItem("encodedPrivateKey",btoa(i)):this.taskKeyLocalStorage.encodedPrivateKey=Buffer.from(i,"binary").toString("base64"),e}},{key:"deploySecretContract",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return Ne(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!0).on(B,function(e){return o(e)}).on(v,function(e){return d(e)})});case 2:return p=o.sent,d.emit(B,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(v,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(X,function(t){return e(t)}).on(v,function(e){return t(e)})});case 10:return d.emit(X,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(v,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}},{key:"computeTask",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return Ne(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!1).on(B,function(e){return o(e)}).on(v,function(e){return d(e)})});case 2:return p=o.sent,d.emit(B,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(v,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(Y,function(t){return e(t)}).on(v,function(e){return t(e)})});case 10:return d.emit(Y,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(v,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}}],r=[{key:"serializeTask",value:function(e){return e.isContractDeploymentTask?{preCode:e.preCode,encryptedArgs:S.remove0x(e.encryptedAbiEncodedArgs),encryptedFn:S.remove0x(e.encryptedFn),userDHKey:S.remove0x(e.userPubKey),contractAddress:S.remove0x(e.scAddr),workerAddress:e.workerAddress}:{taskId:S.remove0x(e.taskId),workerAddress:e.workerAddress,encryptedFn:S.remove0x(e.encryptedFn),encryptedArgs:S.remove0x(e.encryptedAbiEncodedArgs),contractAddress:S.remove0x(e.scAddr),userDHKey:S.remove0x(e.userPubKey)}}},{key:"version",value:function(){return"0.0.1"}}],n&&we(t.prototype,n),r&&we(t,r),e}();n.d(t,"Enigma",function(){return Pe}),n.d(t,"utils",function(){return S}),n.d(t,"eeConstants",function(){return r})}])});
//# sourceMappingURL=enigma-js.node.min.js.map