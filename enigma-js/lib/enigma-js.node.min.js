!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("enigma-js",[],t):"object"==typeof exports?exports["enigma-js"]=t():e["enigma-js"]=t()}(global,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=13)}([function(e,t){e.exports=require("node-forge")},function(e,t){e.exports=require("eventemitter3")},function(e,t){e.exports=require("jsbi")},function(e,t){e.exports=require("web3-utils")},function(e,t){e.exports=require("buffer")},function(e,t){e.exports=require("zlib")},function(e,t){e.exports=require("eth-crypto")},function(e,t){e.exports=require("elliptic")},function(e){e.exports=JSON.parse('{"contractName":"Enigma","abi":[{"constant":true,"inputs":[],"name":"getAllSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getWorkersParams","outputs":[{"components":[{"name":"firstBlockNumber","type":"uint256"},{"name":"workers","type":"address[]"},{"name":"stakes","type":"uint256[]"},{"name":"seed","type":"uint256"}],"name":"","type":"tuple[5]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_scAddr","type":"bytes32"}],"name":"getSecretContract","outputs":[{"components":[{"name":"owner","type":"address"},{"name":"preCodeHash","type":"bytes32"},{"name":"codeHash","type":"bytes32"},{"name":"stateDeltaHashes","type":"bytes32[]"},{"name":"status","type":"uint8"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"getTaskRecord","outputs":[{"components":[{"name":"sender","type":"address"},{"name":"inputsHash","type":"bytes32"},{"name":"outputHash","type":"bytes32"},{"name":"gasLimit","type":"uint256"},{"name":"gasPx","type":"uint256"},{"name":"blockNumber","type":"uint256"},{"name":"status","type":"uint8"},{"name":"proof","type":"bytes"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_signer","type":"address"}],"name":"getWorkerFromSigningAddress","outputs":[{"name":"","type":"address"},{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_worker","type":"address"}],"name":"getWorker","outputs":[{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSigningAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEpochSize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_sender","type":"address"}],"name":"getUserTaskDeployments","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_tokenAddress","type":"address"},{"name":"_principal","type":"address"},{"name":"_epochSize","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event"},{"constant":false,"inputs":[{"name":"_signer","type":"address"},{"name":"_report","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_custodian","type":"address"},{"name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"login","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"logout","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContractFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_preCodeHash","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_initStateDeltaHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"countSecretContracts","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_start","type":"uint256"},{"name":"_stop","type":"uint256"}],"name":"getSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint256"},{"name":"_gasPx","type":"uint256"},{"name":"_firstBlockNumber","type":"uint256"},{"name":"_nonce","type":"uint256"}],"name":"createDeploymentTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint256"},{"name":"_gasPx","type":"uint256"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHashes","type":"bytes32[]"},{"name":"_gasLimits","type":"uint256[]"},{"name":"_gasPxs","type":"uint256[]"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecords","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_stateDeltaHash","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitReceipt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitTaskFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"returnFeesForTask","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_seed","type":"uint256"},{"name":"_sig","type":"bytes"}],"name":"setWorkersParams","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getActiveWorkers","outputs":[{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getFirstBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getWorkerParams","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_scAddr","type":"bytes32"}],"name":"getWorkerGroup","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_custodian","type":"address"}],"name":"getReport","outputs":[{"name":"","type":"address"},{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_data","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"verifyReport","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createDeploymentTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"_gasLimits\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"_gasPxs\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecords\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getActiveWorkers\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getWorkerGroup\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"logout\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitReceipt\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"deposit\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_initStateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_seed\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setWorkersParams\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getAllSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getWorkersParams\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple[5]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"countSecretContracts\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getSecretContract\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"register\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_start\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_stop\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getTaskRecord\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"gasPx\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"proof\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getWorkerParams\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorkerFromSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContractFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"login\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_data\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"verifyReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_worker\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorker\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitTaskFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getFirstBlockNumber\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getEpochSize\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"returnFeesForTask\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_sender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getUserTaskDeployments\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"name\\":\\"_tokenAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_principal\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_epochSize\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"custodian\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"Registered\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"hash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"workerAddr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"ValidatedSig\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"inclusionBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"indexed\\":false,\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WorkersParameterized\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"gasPx\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskIds\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimits\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"gasPxs\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordsCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"deltaHashIndex\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskIds\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"outputHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptsVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailedETH\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"TaskFeeReturned\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"DepositSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WithdrawSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"initStateDeltaHash\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"SecretContractDeployed\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_optionalEthereumContractAddress\\":\\"Output state hash\\",\\"_optionalEthereumData\\":\\"Output state hash\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_stateDeltaHash\\":\\"Input state delta hash\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"countSecretContracts()\\":{\\"return\\":\\"Number of deployed secret contracts\\"},\\"createDeploymentTaskRecord(bytes32,uint256,uint256,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\",\\"_nonce\\":\\"Locally-computed nonce value for this deployment\\"}},\\"createTaskRecord(bytes32,uint256,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"createTaskRecords(bytes32[],uint256[],uint256[],uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimits\\":\\"ENG gas limit\\",\\"_gasPxs\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHashes\\":\\"Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_initStateDeltaHash\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumContractAddress\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumData\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_preCodeHash\\":\\"Predeployed bytecode hash\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deposit(address,uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\",\\"_custodian\\":\\"The worker\'s ETH address\\"}},\\"getActiveWorkers(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"}},\\"getAllSecretContractAddresses()\\":{\\"return\\":\\"Array of secret contract addresses\\"},\\"getEpochSize()\\":{\\"return\\":\\"Epoch size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Block number\\"},\\"getReport(address)\\":{\\"params\\":{\\"_custodian\\":\\"The worker\'s custodian address\\"}},\\"getSecretContract(bytes32)\\":{\\"params\\":{\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"SecretContract struct\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"params\\":{\\"_start\\":\\"Start of range\\",\\"_stop\\":\\"End of range\\"},\\"return\\":\\"Subset of deployed secret contract addresses\\"},\\"getSigningAddress()\\":{\\"return\\":\\"Signing address\\"},\\"getTaskRecord(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique identifier for a given task\\"},\\"return\\":\\"TaskRecord struct\\"},\\"getUserTaskDeployments(address)\\":{\\"params\\":{\\"_sender\\":\\"Task sender\'s ethereum address\\"},\\"return\\":\\"Current number for task deployments for user\\"},\\"getWorker(address)\\":{\\"params\\":{\\"_worker\\":\\"Worker\'s ethereum address\\"},\\"return\\":\\"Worker struct\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"params\\":{\\"_signer\\":\\"Worker\'s signing address\\"},\\"return\\":\\"Ethereum addressWorker struct\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number the task record was mined\\",\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"Selected workers\' addresses\\"},\\"getWorkerParams(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes\\"},\\"getWorkersParams()\\":{\\"return\\":\\"Array of WorkersParams structs\\"},\\"register(address,bytes,bytes)\\":{\\"params\\":{\\"_report\\":\\"The RLP encoded report returned by the IAS\\",\\"_signature\\":\\"Signature\\",\\"_signer\\":\\"The signer address, derived from the enclave public key\\"}},\\"returnFeesForTask(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique taskId\\"}},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number principal node is attempting to set worker params\\",\\"_seed\\":\\"The random integer generated by the enclave\\",\\"_sig\\":\\"Principal node\'s signature\\"}},\\"verifyReport(bytes,bytes)\\":{\\"params\\":{\\"_data\\":\\"The report itself\\",\\"_signature\\":\\"The signature of the report\\"}},\\"withdraw(uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\"}}}},\\"userdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee.\\"},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure.\\"},\\"countSecretContracts()\\":{\\"notice\\":\\"Check if secret contract has been deployed\\"},\\"createDeploymentTaskRecord(bytes32,uint256,uint256,uint256,uint256)\\":{\\"notice\\":\\"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid.\\"},\\"createTaskRecord(bytes32,uint256,uint256,uint256)\\":{\\"notice\\":\\"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"createTaskRecords(bytes32[],uint256[],uint256[],uint256)\\":{\\"notice\\":\\"Create task records for tasks (either contract deployment or regular tasks). This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deposit(address,uint256)\\":{\\"notice\\":\\"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\"},\\"getActiveWorkers(uint256)\\":{\\"notice\\":\\"Get active workers before a certain block number\\"},\\"getAllSecretContractAddresses()\\":{\\"notice\\":\\"Get all secret contract addresses\\"},\\"getEpochSize()\\":{\\"notice\\":\\"Get the epoch block size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"notice\\":\\"Get the first block number of an epoch that a given block number belongs to\\"},\\"getReport(address)\\":{\\"notice\\":\\"The RLP encoded report returned by the IAS server\\"},\\"getSecretContract(bytes32)\\":{\\"notice\\":\\"Get a SecretContract struct given a particular secret contract address\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"notice\\":\\"Get deployed secret contract addresses within a range\\"},\\"getSigningAddress()\\":{\\"notice\\":\\"Get signing address of calling worker\\"},\\"getTaskRecord(bytes32)\\":{\\"notice\\":\\"Get a TaskRecord struct given a particular task\'s ID\\"},\\"getUserTaskDeployments(address)\\":{\\"notice\\":\\"Get the current number/index (used as unique nonce value) of task deployments for a given user user\\"},\\"getWorker(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s ethereum address\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s signing address\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"notice\\":\\"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address.\\"},\\"getWorkerParams(uint256)\\":{\\"notice\\":\\"Get worker params for an epoch given a particular block number\\"},\\"getWorkersParams()\\":{\\"notice\\":\\"Get epoch-based history of worker params information\\"},\\"login()\\":{\\"notice\\":\\"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process.\\"},\\"logout()\\":{\\"notice\\":\\"Logout worker. Worker must be logged in to do so.\\"},\\"register(address,bytes,bytes)\\":{\\"notice\\":\\"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks.\\"},\\"returnFeesForTask(bytes32)\\":{\\"notice\\":\\"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\"},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"notice\\":\\"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node\\"},\\"verifyReport(bytes,bytes)\\":{\\"notice\\":\\"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\"},\\"withdraw(uint256)\\":{\\"notice\\":\\"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\"}}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":\\"Enigma\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":{\\"keccak256\\":\\"0x313f3de232180ea6d68ea1390e59e84846bc3d74e1e2460a3524e1e651e8e215\\",\\"urls\\":[\\"bzzr://4726b91f40b6f843585fe474460a85172c9ae7560a059c93425c3f889b342fe9\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol\\":{\\"keccak256\\":\\"0xa3bc352b5936bd601aedf71599ed125dd31b648fa8d69085bafe16f8488a626d\\",\\"urls\\":[\\"bzzr://6bcecf144978d4f951e87ddede6f0c1f899a58cfcc0e3a951e4249e7f2fcabce\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol\\":{\\"keccak256\\":\\"0x0ad522a418f0667849a2358245a07cc64f8e91cc5875804002251cb64873e204\\",\\"urls\\":[\\"bzzr://1e30a5341a140274bd42ebc5081af0d0311bde223876b1e21bd685ab06652d2b\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol\\":{\\"keccak256\\":\\"0xa51a72e8404dbd12f291f205b02b0e9f5ecb505d78c38bc1b86bedb2257b7a28\\",\\"urls\\":[\\"bzzr://9f7f4cc58ebec18084bc7f0ce09692f6f132ab0e0c703fc09bdabec913736fda\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol\\":{\\"keccak256\\":\\"0xaba87ac6cd834c8a356a454c9eeca6373a159c772e70c2d444facb024907f087\\",\\"urls\\":[\\"bzzr://e8c6d14b96f76d84c547c841b61e0df7a87fdb3f099621cafbe70f45c79cbf05\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol\\":{\\"keccak256\\":\\"0xc9bd3a53a57a95af1958676186382951d915ec96f46a3db61164eb8d0298556e\\",\\"urls\\":[\\"bzzr://128fe282e7acd0f113926aaba8983c8fadaaab7c7060f23282d67a68a2c44b7d\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol\\":{\\"keccak256\\":\\"0xd2620fd3dd9691f88740477d06dd32b4ecb7f090f7c76fd1e99a3117f5072e4f\\",\\"urls\\":[\\"bzzr://1c4cc43db4ca854e6c8d25c09b139000545e942bc05722b95858d6761b425ee7\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol\\":{\\"keccak256\\":\\"0x4e00d7b1cd34e5f91b51a6d6cff4af44221cda6b193ce91e76f71a838fa889f1\\",\\"urls\\":[\\"bzzr://215fe7b649e59d98e2bb8c94efe38336b3364ea428f69fb2871b5896f65432be\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol\\":{\\"keccak256\\":\\"0xdcbd012e3e5add646edaeb0df808511171279fcde6ce168fe810f8db13cd6705\\",\\"urls\\":[\\"bzzr://1f1f5312be0c6f1d25bb1302c9c83087e8bb19760d1ae83e3958e40adb798ed1\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol\\":{\\"keccak256\\":\\"0xe918c3a32ffaa3be9a2ca32e0c156fa13f45df3a180b4afb966ed74beac68aee\\",\\"urls\\":[\\"bzzr://4cf87b0dd13996acd984d0964bef0de24f9f5b8a7f9c181ac6fcb2cdf04b2e38\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol\\":{\\"keccak256\\":\\"0xe21e3ce303a61dc1fe7e5ee8c77c94b0a96eaa9015f8abe6eb1fbce2d903b8ee\\",\\"urls\\":[\\"bzzr://ff90e3a82eb6fb10497c419d71bf240f43c544d0071b74b251204200dc08bba1\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Base64.sol\\":{\\"keccak256\\":\\"0x6b6fca483b4fd19ab6f282b45b24f02277ad2b0e2e65269c1f1f9b0672bf8ef3\\",\\"urls\\":[\\"bzzr://227cecb0afb5c808a338d0c757cedf9c085786a8f74fece5d9b14fac332f1301\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Bytes.sol\\":{\\"keccak256\\":\\"0xa9504cd72371444aaec522d40e02f930e9017fc59059c80b4d0b60afe6d3f151\\",\\"urls\\":[\\"bzzr://09e35d59d1fd6c478388e098f8f586d0eb3004af0e8402e5dc0c003b3d555e56\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Memory.sol\\":{\\"keccak256\\":\\"0xbb69933fc38ebf561a60fc4496c8d48f4aef12b5cef49bb9dd2957d8c6478ce0\\",\\"urls\\":[\\"bzzr://a4b1117bcf978aebba7df92a10df9e866cf854033bc2f4d8e426e360ba78d1fa\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol\\":{\\"keccak256\\":\\"0x171f88dc2ce91d601aa659bf84a240a2e7565d26d1a3ef1a0f98ec8181573498\\",\\"urls\\":[\\"bzzr://3830487ad541d0a7df9b761dee0a835cf065e369c6f1b2ac5f8409413f1777b6\\"]},\\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\":{\\"keccak256\\":\\"0xb48974d92a87053dc1d6c5389f3d1b2ad522dec23afcb508eaa935d98dfdc0b6\\",\\"urls\\":[\\"bzzr://e665a84309432c27a26e622665dd97ff29d4d6ad7ad655d6e2c50226a5e99b56\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]}},\\"version\\":1}","bytecode":"0x60806040523480156200001157600080fd5b506040516060806200490483398101806040526200003391908101906200009b565b600080546001600160a01b039485166001600160a01b031991821617909155600191825560c86002556003805493909416921691909117909155601e819055601f5562000129565b8051620000888162000104565b92915050565b805162000088816200011e565b600080600060608486031215620000b157600080fd5b6000620000bf86866200007b565b9350506020620000d2868287016200007b565b9250506040620000e5868287016200008e565b9150509250925092565b60006001600160a01b03821662000088565b90565b6200010f81620000ef565b81146200011b57600080fd5b50565b6200010f8162000101565b6147cb80620001396000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063786cd4d71161010f578063b5c14992116100a2578063d855a57911610071578063d855a57914610454578063df4da46114610469578063ee6dcef914610471578063f9a9b7ae14610484576101e5565b8063b5c14992146103fb578063c011b1c31461040e578063ca2af5f21461042e578063cbbc061d14610441576101e5565b8063a0c39982116100de578063a0c399821461039e578063a153ec60146103bf578063a3bdae3e146103d2578063b34e97e8146103f3576101e5565b8063786cd4d7146103355780638e055b8b146103485780638ed057371461035b5780639836ca311461037b576101e5565b8063365a2cb311610187578063550baa2f11610156578063550baa2f146102d657806370266a47146102eb57806375bbf75b146103005780637624281e14610315576101e5565b8063365a2cb31461028a57806347e7ef241461029d57806348cc3761146102b057806350946a9f146102c3576101e5565b806316f9a2a4116101c357806316f9a2a4146102255780631d40ff0b1461024f5780631f3c99c31461026f5780632e1a7d4d14610277576101e5565b806302e15a91146101ea57806310851876146101ff578063167e54b714610212575b600080fd5b6101fd6101f8366004613512565b610497565b005b6101fd61020d366004613235565b610513565b6101fd6102203660046134ce565b61058c565b6102386102333660046132da565b6105cf565b6040516102469291906140f3565b60405180910390f35b61026261025d366004613613565b610669565b60405161024691906140e2565b6101fd610708565b6101fd6102853660046132da565b610961565b6101fd6102983660046132f8565b610c72565b6101fd6102ab366004613140565b610f1e565b6101fd6102be3660046132f8565b61113f565b6101fd6102d13660046136b5565b6113ad565b6102de6115d0565b6040516102469190614118565b6102f361162b565b6040516102469190614129565b610308611745565b60405161024691906145a2565b6103286103233660046132da565b6117d7565b604051610246919061420f565b6101fd6103433660046130c5565b61189e565b6102de610356366004613613565b611962565b61036e6103693660046132da565b6119f8565b6040516102469190614560565b61038e6103893660046132da565b611b24565b60405161024694939291906145b0565b6103b16103ac36600461304e565b611bc7565b6040516102469291906140c2565b6101fd6103cd366004613462565b611e0a565b6103e56103e036600461304e565b6120a9565b6040516102469291906140a2565b6101fd61232b565b61030861040936600461357a565b612597565b61042161041c36600461304e565b612626565b6040516102469190614571565b6101fd61043c3660046133d6565b6127d7565b61030861044f3660046132da565b612a79565b61045c612b08565b6040516102469190614094565b610308612b24565b6101fd61047f3660046132da565b612b2a565b61030861049236600461304e565b612baa565b604051600160e01b63f37f394502815273__TaskImpl______________________________9063f37f3945906104dc90600090899089908990899089906004016144bc565b60006040518083038186803b1580156104f457600080fd5b505af4158015610508573d6000803e3d6000fd5b505050505050505050565b604051600160e01b63eeb3ea8f02815273__TaskImpl______________________________9063eeb3ea8f906105569060009088908890889088906004016142c3565b60006040518083038186803b15801561056e57600080fd5b505af4158015610582573d6000803e3d6000fd5b5050505050505050565b604051600160e01b6327731d8102815273__TaskImpl______________________________906327731d819061055690600090889088908890889060040161447a565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b815260040161060c92919061431a565b60006040518083038186803b15801561062457600080fd5b505af4158015610638573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261066091908101906131a4565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a906106ab906000908790879060040161450b565b60006040518083038186803b1580156106c357600080fd5b505af41580156106d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ff9190810190613170565b90505b92915050565b33610711612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561075957fe5b600281111561076457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108015780601f106107d657610100808354040283529160200191610801565b820191906000526020600020905b8154815290600101906020018083116107e457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108ac57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561087a57fe5b600381111561088557fe5b81526020016001820154815260200160028201548152505081526020019060010190610839565b50505091525090915060019050816020015160028111156108c957fe5b146108f257604051600160e51b62461bcd0281526004016108e9906141cf565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f499061092d90600090600401614220565b60006040518083038186803b15801561094557600080fd5b505af4158015610959573d6000803e3d6000fd5b505050505050565b3361096a612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156109b257fe5b60028111156109bd57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a5a5780601f10610a2f57610100808354040283529160200191610a5a565b820191906000526020600020905b815481529060010190602001808311610a3d57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610b0557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610ad357fe5b6003811115610ade57fe5b81526020016001820154815260200160028201548152505081526020019060010190610a92565b5050509152509091506002905081602001516002811115610b2257fe5b14610b4257604051600160e51b62461bcd0281526004016108e9906141ff565b610b4a612bf5565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610b869085904390600401614582565b60606040518083038186803b158015610b9e57600080fd5b505af4158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bd691908101906135d7565b9050600281516003811115610be757fe5b14610c0757604051600160e51b62461bcd0281526004016108e99061417f565b8060200151610c1543612a79565b11610c3557604051600160e51b62461bcd0281526004016108e9906141bf565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df4649061055690600090889060040161431a565b33610c7b612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610cc357fe5b6002811115610cce57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d6b5780601f10610d4057610100808354040283529160200191610d6b565b820191906000526020600020905b815481529060010190602001808311610d4e57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610e1657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610de457fe5b6003811115610def57fe5b81526020016001820154815260200160028201548152505081526020019060010190610da3565b5050509152509091506001905081602001516002811115610e3357fe5b14610e5357604051600160e51b62461bcd0281526004016108e9906141cf565b8960016000828152601c602052604090206004015460ff166001811115610e7657fe5b14610e9657604051600160e51b62461bcd0281526004016108e99061418f565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610ee1906000908f908f908f908f908f908f908f908f90600401614335565b60006040518083038186803b158015610ef957600080fd5b505af4158015610f0d573d6000803e3d6000fd5b505050505050505050505050505050565b81610f27612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610f6f57fe5b6002811115610f7a57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110175780601f10610fec57610100808354040283529160200191611017565b820191906000526020600020905b815481529060010190602001808311610ffa57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110c257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561109057fe5b600381111561109b57fe5b8152602001600182015481526020016002820154815250508152602001906001019061104f565b50505091525090915060009050816020015160028111156110df57fe5b141561110057604051600160e51b62461bcd0281526004016108e9906141df565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610556906000908890889060040161429b565b33611148612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561119057fe5b600281111561119b57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112385780601f1061120d57610100808354040283529160200191611238565b820191906000526020600020905b81548152906001019060200180831161121b57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156112e357838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156112b157fe5b60038111156112bc57fe5b81526020016001820154815260200160028201548152505081526020019060010190611270565b505050915250909150600190508160200151600281111561130057fe5b1461132057604051600160e51b62461bcd0281526004016108e9906141cf565b89600080828152601c602052604090206004015460ff16600181111561134257fe5b1461136257604051600160e51b62461bcd0281526004016108e9906141ef565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610ee1906000908f908f908f908f908f908f908f908f90600401614335565b336113b6612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156113fe57fe5b600281111561140957fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114a65780601f1061147b576101008083540402835291602001916114a6565b820191906000526020600020905b81548152906001019060200180831161148957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561155157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561151f57fe5b600381111561152a57fe5b815260200160018201548152602001600282015481525050815260200190600101906114de565b505050915250909150600090508160200151600281111561156e57fe5b141561158f57604051600160e51b62461bcd0281526004016108e9906141df565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b18906104dc90600090899089908990600401614526565b6060600060190180548060200260200160405190810160405280929190818152602001828054801561162157602002820191906000526020600020905b81548152602001906001019080831161160d575b5050505050905090565b611633612c17565b6040805160a08101909152600460056000835b8282101561173c5783826004020160405180608001604052908160008201548152602001600182018054806020026020016040519081016040528092919081815260200182805480156116c257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116116a4575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561171a57602002820191906000526020600020905b815481526020019060010190808311611706575b5050505050815260200160038201548152505081526020019060010190611646565b50505050905090565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a338690611782908490600401614220565b60206040518083038186803b15801561179a57600080fd5b505af41580156117ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117d291908101906135f5565b905090565b6117df612c45565b6000828152601c6020908152604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561186757602002820191906000526020600020905b815481526020019060010190808311611853575b5050509183525050600482015460209091019060ff16600181111561188857fe5b600181111561189357fe5b90525090505b919050565b8260005b60185481101561192057816001600160a01b03166000601a0160008060180184815481106118cc57fe5b60009182526020808320909101546001600160a01b03908116845290830193909352604090910190205416141561191857604051600160e51b62461bcd0281526004016108e99061416f565b6001016118a2565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e209061055690600090889088908890600401614250565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a26009906119a4906000908790879060040161450b565b60006040518083038186803b1580156119bc57600080fd5b505af41580156119d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ff9190810190613201565b611a00612c70565b6000828152601b602090815260409182902082516101008101845281546001600160a01b03168152600182015492810192909252600281015492820192909252600382015460608201526004820154608082015260058083015460a0830152600683015491929160c084019160ff90911690811115611a7b57fe5b6005811115611a8657fe5b815260078201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611b145780601f10611ae957610100808354040283529160200191611b14565b820191906000526020600020905b815481529060010190602001808311611af757829003601f168201915b5050505050815250509050919050565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611b6492919061431a565b60006040518083038186803b158015611b7c57600080fd5b505af4158015611b90573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bb89190810190613632565b93509350935093509193509193565b6000611bd1612bc5565b6000611bdb612bc5565b60005b601854811015611dff5760188054601a9160009184908110611bfc57fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611c5257fe5b6002811115611c5d57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cfa5780601f10611ccf57610100808354040283529160200191611cfa565b820191906000526020600020905b815481529060010190602001808311611cdd57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611da557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611d7357fe5b6003811115611d7e57fe5b81526020016001820154815260200160028201548152505081526020019060010190611d32565b50505050815250509150856001600160a01b031682600001516001600160a01b03161415611df7576018805482908110611ddb57fe5b6000918252602090912001546001600160a01b03169250611dff565b600101611bde565b509092509050915091565b33611e13612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115611e5b57fe5b6002811115611e6657fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f035780601f10611ed857610100808354040283529160200191611f03565b820191906000526020600020905b815481529060010190602001808311611ee657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611fae57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611f7c57fe5b6003811115611f8757fe5b81526020016001820154815260200160028201548152505081526020019060010190611f3b565b5050509152509091506001905081602001516002811115611fcb57fe5b14611feb57604051600160e51b62461bcd0281526004016108e9906141cf565b85600080828152601c602052604090206004015460ff16600181111561200d57fe5b1461202d57604051600160e51b62461bcd0281526004016108e9906141ef565b604051600160e21b6301c7aeeb02815273__TaskImpl______________________________9063071ebbac90612070906000908b908b908b908b90600401614428565b60006040518083038186803b15801561208857600080fd5b505af415801561209c573d6000803e3d6000fd5b5050505050505050505050565b60006060826120b6612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156120fe57fe5b600281111561210957fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121a65780601f1061217b576101008083540402835291602001916121a6565b820191906000526020600020905b81548152906001019060200180831161218957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561225157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561221f57fe5b600381111561222a57fe5b815260200160018201548152602001600282015481525050815260200190600101906121de565b505050915250909150600090508160200151600281111561226e57fe5b141561228f57604051600160e51b62461bcd0281526004016108e9906141df565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f031906122cc90600090899060040161422e565b60006040518083038186803b1580156122e457600080fd5b505af41580156122f8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123209190810190613074565b935093505050915091565b33612334612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561237c57fe5b600281111561238757fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124245780601f106123f957610100808354040283529160200191612424565b820191906000526020600020905b81548152906001019060200180831161240757829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156124cf57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561249d57fe5b60038111156124a857fe5b8152602001600182015481526020016002820154815250508152602001906001019061245c565b505050508152505090506124e243612a79565b61250157604051600160e51b62461bcd0281526004016108e9906141af565b60028160200151600281111561251357fe5b1461253357604051600160e51b62461bcd0281526004016108e9906141ff565b601e546060820151101561255c57604051600160e51b62461bcd0281526004016108e99061415f565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e29061092d90600090600401614220565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________906396462368906125d6908690869060040161413a565b60206040518083038186803b1580156125ee57600080fd5b505af4158015612602573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106ff91908101906135f5565b61262e612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561267657fe5b600281111561268157fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561271e5780601f106126f35761010080835404028352916020019161271e565b820191906000526020600020905b81548152906001019060200180831161270157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156127c957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561279757fe5b60038111156127a257fe5b81526020016001820154815260200160028201548152505081526020019060010190612756565b505050915250909392505050565b336127e0612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561282857fe5b600281111561283357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128d05780601f106128a5576101008083540402835291602001916128d0565b820191906000526020600020905b8154815290600101906020018083116128b357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561297b57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561294957fe5b600381111561295457fe5b81526020016001820154815260200160028201548152505081526020019060010190612908565b505050915250909150600190508160200151600281111561299857fe5b146129b857604051600160e51b62461bcd0281526004016108e9906141cf565b8660016000828152601c602052604090206004015460ff1660018111156129db57fe5b146129fb57604051600160e51b62461bcd0281526004016108e99061418f565b604051600160e61b6289b28102815273__TaskImpl______________________________9063226ca04090612a3f906000908c908c908c908c908c906004016143c8565b60006040518083038186803b158015612a5757600080fd5b505af4158015612a6b573d6000803e3d6000fd5b505050505050505050505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612ab8908490869060040161431a565b60206040518083038186803b158015612ad057600080fd5b505af4158015612ae4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061070291908101906135f5565b336000908152601a60205260409020546001600160a01b031690565b60015490565b8060016000828152601b602052604090206006015460ff166005811115612b4d57fe5b14612b6d57604051600160e51b62461bcd0281526004016108e99061419f565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b9061092d90600090869060040161431a565b6001600160a01b03166000908152601d602052604090205490565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b612c2f612cb5565b815260200190600190039081612c275790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b80356107028161475e565b80516107028161475e565b600082601f830112612d0457600080fd5b8151612d17612d1282614617565b6145f1565b91508181835260208401935060208101905083856020840282011115612d3c57600080fd5b60005b83811015612d685781612d528882612ce8565b8452506020928301929190910190600101612d3f565b5050505092915050565b600082601f830112612d8357600080fd5b8135612d91612d1282614617565b91508181835260208401935060208101905083856020840282011115612db657600080fd5b60005b83811015612d685781612dcc8882612f32565b8452506020928301929190910190600101612db9565b600082601f830112612df357600080fd5b8151612e01612d1282614617565b91508181835260208401935060208101905083856020840282011115612e2657600080fd5b60005b83811015612d685781612e3c8882612f3d565b8452506020928301929190910190600101612e29565b600082601f830112612e6357600080fd5b8135612e71612d1282614617565b91508181835260208401935060208101905083856020840282011115612e9657600080fd5b60005b83811015612d685781612eac8882612f32565b8452506020928301929190910190600101612e99565b600082601f830112612ed357600080fd5b8151612ee1612d1282614617565b91508181835260208401935060208101905083856020840282011115612f0657600080fd5b60005b83811015612d685781612f1c8882612f3d565b8452506020928301929190910190600101612f09565b803561070281614772565b805161070281614772565b600082601f830112612f5957600080fd5b8135612f67612d1282614637565b91508082526020830160208301858383011115612f8357600080fd5b612f8e8382846146f1565b50505092915050565b600082601f830112612fa857600080fd5b8151612fb6612d1282614637565b91508082526020830160208301858383011115612fd257600080fd5b612f8e8382846146fd565b80516107028161477b565b600060608284031215612ffa57600080fd5b61300460606145f1565b905060006130128484612fdd565b825250602061302384848301612f3d565b602083015250604061303784828501612f3d565b60408301525092915050565b803561070281614788565b60006020828403121561306057600080fd5b600061306c8484612cdd565b949350505050565b6000806040838503121561308757600080fd5b60006130938585612ce8565b92505060208301516001600160401b038111156130af57600080fd5b6130bb85828601612f97565b9150509250929050565b6000806000606084860312156130da57600080fd5b60006130e68686612cdd565b93505060208401356001600160401b0381111561310257600080fd5b61310e86828701612f48565b92505060408401356001600160401b0381111561312a57600080fd5b61313686828701612f48565b9150509250925092565b6000806040838503121561315357600080fd5b600061315f8585612cdd565b92505060206130bb85828601612f32565b60006020828403121561318257600080fd5b81516001600160401b0381111561319857600080fd5b61306c84828501612cf3565b600080604083850312156131b757600080fd5b82516001600160401b038111156131cd57600080fd5b6131d985828601612cf3565b92505060208301516001600160401b038111156131f557600080fd5b6130bb85828601612ec2565b60006020828403121561321357600080fd5b81516001600160401b0381111561322957600080fd5b61306c84828501612de2565b6000806000806080858703121561324b57600080fd5b84356001600160401b0381111561326157600080fd5b61326d87828801612d72565b94505060208501356001600160401b0381111561328957600080fd5b61329587828801612e52565b93505060408501356001600160401b038111156132b157600080fd5b6132bd87828801612e52565b92505060606132ce87828801612f32565b91505092959194509250565b6000602082840312156132ec57600080fd5b600061306c8484612f32565b600080600080600080600080610100898b03121561331557600080fd5b60006133218b8b612f32565b98505060206133328b828c01612f32565b97505060406133438b828c01612f32565b96505060606133548b828c01612f32565b95505060808901356001600160401b0381111561337057600080fd5b61337c8b828c01612f48565b94505060a061338d8b828c01612cdd565b93505060c061339e8b828c01613043565b92505060e08901356001600160401b038111156133ba57600080fd5b6133c68b828c01612f48565b9150509295985092959890939650565b600080600080600060a086880312156133ee57600080fd5b60006133fa8888612f32565b955050602061340b88828901612f32565b945050604061341c88828901612f32565b935050606061342d88828901613043565b92505060808601356001600160401b0381111561344957600080fd5b61345588828901612f48565b9150509295509295909350565b6000806000806080858703121561347857600080fd5b60006134848787612f32565b945050602061349587828801612f32565b93505060406134a687828801613043565b92505060608501356001600160401b038111156134c257600080fd5b6132ce87828801612f48565b600080600080608085870312156134e457600080fd5b60006134f08787612f32565b945050602061350187828801612f32565b93505060406132bd87828801612f32565b600080600080600060a0868803121561352a57600080fd5b60006135368888612f32565b955050602061354788828901612f32565b945050604061355888828901612f32565b935050606061356988828901612f32565b925050608061345588828901612f32565b6000806040838503121561358d57600080fd5b82356001600160401b038111156135a357600080fd5b6135af85828601612f48565b92505060208301356001600160401b038111156135cb57600080fd5b6130bb85828601612f48565b6000606082840312156135e957600080fd5b600061306c8484612fe8565b60006020828403121561360757600080fd5b600061306c8484612f3d565b6000806040838503121561362657600080fd5b600061315f8585612f32565b6000806000806080858703121561364857600080fd5b60006136548787612f3d565b945050602061366587828801612f3d565b93505060408501516001600160401b0381111561368157600080fd5b61368d87828801612cf3565b92505060608501516001600160401b038111156136a957600080fd5b6132ce87828801612ec2565b6000806000606084860312156136ca57600080fd5b60006136d68686612f32565b935050602061310e86828701612f32565b60006136f38383613727565b505060200190565b60006136f38383613abb565b60006137138383613f1b565b505060600190565b60006106ff8383614030565b6137308161467a565b82525050565b600061374182614667565b61374b8185614671565b93506137568361465e565b8060005b8381101561378457815161376e88826136e7565b97506137798361465e565b92505060010161375a565b509495945050505050565b600061379a82614667565b6137a48185614671565b93506137af8361465e565b8060005b838110156137845781516137c788826136e7565b97506137d28361465e565b9250506001016137b3565b60006137e882614667565b6137f28185614671565b93506137fd8361465e565b8060005b8381101561378457815161381588826136fb565b97506138208361465e565b925050600101613801565b600061383682614667565b6138408185614671565b935061384b8361465e565b8060005b8381101561378457815161386388826136fb565b975061386e8361465e565b92505060010161384f565b600061388482614667565b61388e8185614671565b93506138998361465e565b8060005b838110156137845781516138b188826136fb565b97506138bc8361465e565b92505060010161389d565b60006138d282614667565b6138dc8185614671565b93506138e78361465e565b8060005b838110156137845781516138ff8882613707565b975061390a8361465e565b9250506001016138eb565b600061392082614667565b61392a8185614671565b93506139358361465e565b8060005b8381101561378457815161394d8882613707565b97506139588361465e565b925050600101613939565b600061396e8261466b565b6139788185611899565b93508360208202850161398a85614664565b8060005b858110156139c457848403895281516139a7858261371b565b94506139b28361465e565b60209a909a019992505060010161398e565b5091979650505050505050565b60006139dc82614667565b6139e68185614671565b93506139f18361465e565b8060005b83811015613784578151613a0988826136fb565b9750613a148361465e565b9250506001016139f5565b6000613a2a82614667565b613a348185614671565b9350613a3f8361465e565b8060005b83811015613784578151613a5788826136fb565b9750613a628361465e565b925050600101613a43565b6000613a7882614667565b613a828185614671565b9350613a8d8361465e565b8060005b83811015613784578151613aa588826136fb565b9750613ab08361465e565b925050600101613a91565b61373081614664565b6000613acf82614667565b613ad98185614671565b9350613ae98185602086016146fd565b613af281614729565b9093019392505050565b613730816146c5565b613730816146d0565b613730816146db565b613730816146e6565b6000613b2d602283614671565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b6000613b74601883614671565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b6000613bad602783614671565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000613bf9601c83614671565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000613c32601383614671565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b6000613c6b602783614671565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b6000613cb7602e83614671565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b6000613d16601483614671565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b6000613d4f601383614671565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b6000613d88602083614671565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000613dc1602783614671565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a0840190613e148582613727565b506020830151613e276020860182613abb565b506040830151613e3a6040860182613abb565b5060608301518482036060860152613e528282613879565b9150506080830151613e676080860182613afc565b509392505050565b9052565b8051600090610100840190613e888582613727565b506020830151613e9b6020860182613abb565b506040830151613eae6040860182613abb565b506060830151613ec16060860182613abb565b506080830151613ed46080860182613abb565b5060a0830151613ee760a0860182613abb565b5060c0830151613efa60c0860182613b05565b5060e083015184820360e0860152613f128282613ac4565b95945050505050565b80516060830190613f2c8482613b0e565b506020820151613f3f6020850182613abb565b506040820151613f526040850182613abb565b50505050565b805160009060a0840190613f6c8582613727565b506020830151613f7f6020860182613b17565b5060408301518482036040860152613f978282613ac4565b9150506060830151613fac6060860182613abb565b5060808301518482036080860152613f1282826138c7565b805160009060a0840190613fd88582613727565b506020830151613feb6020860182613b17565b50604083015184820360408601526140038282613ac4565b91505060608301516140186060860182613abb565b5060808301518482036080860152613f128282613915565b805160009060808401906140448582613abb565b506020830151848203602086015261405c828261378f565b915050604083015184820360408601526140768282613a6d565b9150506060830151613e676060860182613abb565b613730816146b9565b602081016107028284613727565b604081016140b08285613727565b818103602083015261306c8184613ac4565b604081016140d08285613727565b818103602083015261306c8184613f58565b602080825281016106ff8184613736565b604080825281016141048185613736565b9050818103602083015261306c81846139d1565b602080825281016106ff81846137dd565b602080825281016106ff8184613963565b6040808252810161414b8185613ac4565b9050818103602083015261306c8184613ac4565b6020808252810161070281613b20565b6020808252810161070281613b67565b6020808252810161070281613ba0565b6020808252810161070281613bec565b6020808252810161070281613c25565b6020808252810161070281613c5e565b6020808252810161070281613caa565b6020808252810161070281613d09565b6020808252810161070281613d42565b6020808252810161070281613d7b565b6020808252810161070281613db4565b602080825281016106ff8184613e00565b602081016107028284613e6f565b6040810161423c8285613e6f565b6142496020830184613727565b9392505050565b6080810161425e8287613e6f565b61426b6020830186613727565b818103604083015261427d8185613ac4565b905081810360608301526142918184613ac4565b9695505050505050565b606081016142a98286613e6f565b6142b66020830185613727565b61306c6040830184613abb565b60a081016142d18288613e6f565b81810360208301526142e3818761382b565b905081810360408301526142f78186613a1f565b9050818103606083015261430b8185613a1f565b90506142916080830184613abb565b604081016143288285613e6f565b6142496020830184613abb565b6101208101614344828c613e6f565b614351602083018b613abb565b61435e604083018a613abb565b61436b6060830189613abb565b6143786080830188613abb565b81810360a083015261438a8187613ac4565b905061439960c0830186613727565b6143a660e083018561408b565b8181036101008301526143b98184613ac4565b9b9a5050505050505050505050565b60c081016143d68289613e6f565b6143e36020830188613abb565b6143f06040830187613abb565b6143fd6060830186613abb565b61440a608083018561408b565b81810360a083015261441c8184613ac4565b98975050505050505050565b60a081016144368288613e6f565b6144436020830187613abb565b6144506040830186613abb565b61445d606083018561408b565b818103608083015261446f8184613ac4565b979650505050505050565b60a081016144888288613e6f565b6144956020830187613abb565b6144a26040830186613abb565b6144af6060830185613abb565b6142916080830184613abb565b60c081016144ca8289613e6f565b6144d76020830188613abb565b6144e46040830187613abb565b6144f16060830186613abb565b6144fe6080830185613abb565b61446f60a0830184613abb565b606081016145198286613e6f565b6142b66020830185613abb565b608081016145348287613e6f565b6145416020830186613abb565b61454e6040830185613abb565b81810360608301526142918184613ac4565b602080825281016106ff8184613e73565b602080825281016106ff8184613f58565b604080825281016145938185613fc4565b90506142496020830184613abb565b602081016107028284613abb565b608081016145be8287613abb565b6145cb6020830186613abb565b81810360408301526145dd8185613736565b9050818103606083015261429181846139d1565b6040518181016001600160401b038111828210171561460f57600080fd5b604052919050565b60006001600160401b0382111561462d57600080fd5b5060209081020190565b60006001600160401b0382111561464d57600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b6000610702826146ad565b8061189981614733565b8061189981614740565b806118998161474a565b8061189981614754565b6001600160a01b031690565b6001600160401b031690565b600061070282614685565b60006107028261468f565b600061070282614699565b6000610702826146a3565b82818337506000910152565b60005b83811015614718578181015183820152602001614700565b83811115613f525750506000910152565b601f01601f191690565b6002811061473d57fe5b50565b6006811061473d57fe5b6004811061473d57fe5b6003811061473d57fe5b6147678161467a565b811461473d57600080fd5b61476781614664565b6004811061473d57600080fd5b614767816146b956fea265627a7a72305820a57b971263508273b1bd114e85cbbaad7cf4eed138434ab990171554b851d1ca6c6578706572696d656e74616cf50037","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106101e55760003560e01c8063786cd4d71161010f578063b5c14992116100a2578063d855a57911610071578063d855a57914610454578063df4da46114610469578063ee6dcef914610471578063f9a9b7ae14610484576101e5565b8063b5c14992146103fb578063c011b1c31461040e578063ca2af5f21461042e578063cbbc061d14610441576101e5565b8063a0c39982116100de578063a0c399821461039e578063a153ec60146103bf578063a3bdae3e146103d2578063b34e97e8146103f3576101e5565b8063786cd4d7146103355780638e055b8b146103485780638ed057371461035b5780639836ca311461037b576101e5565b8063365a2cb311610187578063550baa2f11610156578063550baa2f146102d657806370266a47146102eb57806375bbf75b146103005780637624281e14610315576101e5565b8063365a2cb31461028a57806347e7ef241461029d57806348cc3761146102b057806350946a9f146102c3576101e5565b806316f9a2a4116101c357806316f9a2a4146102255780631d40ff0b1461024f5780631f3c99c31461026f5780632e1a7d4d14610277576101e5565b806302e15a91146101ea57806310851876146101ff578063167e54b714610212575b600080fd5b6101fd6101f8366004613512565b610497565b005b6101fd61020d366004613235565b610513565b6101fd6102203660046134ce565b61058c565b6102386102333660046132da565b6105cf565b6040516102469291906140f3565b60405180910390f35b61026261025d366004613613565b610669565b60405161024691906140e2565b6101fd610708565b6101fd6102853660046132da565b610961565b6101fd6102983660046132f8565b610c72565b6101fd6102ab366004613140565b610f1e565b6101fd6102be3660046132f8565b61113f565b6101fd6102d13660046136b5565b6113ad565b6102de6115d0565b6040516102469190614118565b6102f361162b565b6040516102469190614129565b610308611745565b60405161024691906145a2565b6103286103233660046132da565b6117d7565b604051610246919061420f565b6101fd6103433660046130c5565b61189e565b6102de610356366004613613565b611962565b61036e6103693660046132da565b6119f8565b6040516102469190614560565b61038e6103893660046132da565b611b24565b60405161024694939291906145b0565b6103b16103ac36600461304e565b611bc7565b6040516102469291906140c2565b6101fd6103cd366004613462565b611e0a565b6103e56103e036600461304e565b6120a9565b6040516102469291906140a2565b6101fd61232b565b61030861040936600461357a565b612597565b61042161041c36600461304e565b612626565b6040516102469190614571565b6101fd61043c3660046133d6565b6127d7565b61030861044f3660046132da565b612a79565b61045c612b08565b6040516102469190614094565b610308612b24565b6101fd61047f3660046132da565b612b2a565b61030861049236600461304e565b612baa565b604051600160e01b63f37f394502815273__TaskImpl______________________________9063f37f3945906104dc90600090899089908990899089906004016144bc565b60006040518083038186803b1580156104f457600080fd5b505af4158015610508573d6000803e3d6000fd5b505050505050505050565b604051600160e01b63eeb3ea8f02815273__TaskImpl______________________________9063eeb3ea8f906105569060009088908890889088906004016142c3565b60006040518083038186803b15801561056e57600080fd5b505af4158015610582573d6000803e3d6000fd5b5050505050505050565b604051600160e01b6327731d8102815273__TaskImpl______________________________906327731d819061055690600090889088908890889060040161447a565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b815260040161060c92919061431a565b60006040518083038186803b15801561062457600080fd5b505af4158015610638573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261066091908101906131a4565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a906106ab906000908790879060040161450b565b60006040518083038186803b1580156106c357600080fd5b505af41580156106d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ff9190810190613170565b90505b92915050565b33610711612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561075957fe5b600281111561076457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108015780601f106107d657610100808354040283529160200191610801565b820191906000526020600020905b8154815290600101906020018083116107e457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108ac57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561087a57fe5b600381111561088557fe5b81526020016001820154815260200160028201548152505081526020019060010190610839565b50505091525090915060019050816020015160028111156108c957fe5b146108f257604051600160e51b62461bcd0281526004016108e9906141cf565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f499061092d90600090600401614220565b60006040518083038186803b15801561094557600080fd5b505af4158015610959573d6000803e3d6000fd5b505050505050565b3361096a612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156109b257fe5b60028111156109bd57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a5a5780601f10610a2f57610100808354040283529160200191610a5a565b820191906000526020600020905b815481529060010190602001808311610a3d57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610b0557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610ad357fe5b6003811115610ade57fe5b81526020016001820154815260200160028201548152505081526020019060010190610a92565b5050509152509091506002905081602001516002811115610b2257fe5b14610b4257604051600160e51b62461bcd0281526004016108e9906141ff565b610b4a612bf5565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610b869085904390600401614582565b60606040518083038186803b158015610b9e57600080fd5b505af4158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bd691908101906135d7565b9050600281516003811115610be757fe5b14610c0757604051600160e51b62461bcd0281526004016108e99061417f565b8060200151610c1543612a79565b11610c3557604051600160e51b62461bcd0281526004016108e9906141bf565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df4649061055690600090889060040161431a565b33610c7b612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610cc357fe5b6002811115610cce57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d6b5780601f10610d4057610100808354040283529160200191610d6b565b820191906000526020600020905b815481529060010190602001808311610d4e57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610e1657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610de457fe5b6003811115610def57fe5b81526020016001820154815260200160028201548152505081526020019060010190610da3565b5050509152509091506001905081602001516002811115610e3357fe5b14610e5357604051600160e51b62461bcd0281526004016108e9906141cf565b8960016000828152601c602052604090206004015460ff166001811115610e7657fe5b14610e9657604051600160e51b62461bcd0281526004016108e99061418f565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610ee1906000908f908f908f908f908f908f908f908f90600401614335565b60006040518083038186803b158015610ef957600080fd5b505af4158015610f0d573d6000803e3d6000fd5b505050505050505050505050505050565b81610f27612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610f6f57fe5b6002811115610f7a57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110175780601f10610fec57610100808354040283529160200191611017565b820191906000526020600020905b815481529060010190602001808311610ffa57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110c257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561109057fe5b600381111561109b57fe5b8152602001600182015481526020016002820154815250508152602001906001019061104f565b50505091525090915060009050816020015160028111156110df57fe5b141561110057604051600160e51b62461bcd0281526004016108e9906141df565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610556906000908890889060040161429b565b33611148612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561119057fe5b600281111561119b57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112385780601f1061120d57610100808354040283529160200191611238565b820191906000526020600020905b81548152906001019060200180831161121b57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156112e357838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156112b157fe5b60038111156112bc57fe5b81526020016001820154815260200160028201548152505081526020019060010190611270565b505050915250909150600190508160200151600281111561130057fe5b1461132057604051600160e51b62461bcd0281526004016108e9906141cf565b89600080828152601c602052604090206004015460ff16600181111561134257fe5b1461136257604051600160e51b62461bcd0281526004016108e9906141ef565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610ee1906000908f908f908f908f908f908f908f908f90600401614335565b336113b6612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156113fe57fe5b600281111561140957fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114a65780601f1061147b576101008083540402835291602001916114a6565b820191906000526020600020905b81548152906001019060200180831161148957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561155157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561151f57fe5b600381111561152a57fe5b815260200160018201548152602001600282015481525050815260200190600101906114de565b505050915250909150600090508160200151600281111561156e57fe5b141561158f57604051600160e51b62461bcd0281526004016108e9906141df565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b18906104dc90600090899089908990600401614526565b6060600060190180548060200260200160405190810160405280929190818152602001828054801561162157602002820191906000526020600020905b81548152602001906001019080831161160d575b5050505050905090565b611633612c17565b6040805160a08101909152600460056000835b8282101561173c5783826004020160405180608001604052908160008201548152602001600182018054806020026020016040519081016040528092919081815260200182805480156116c257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116116a4575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561171a57602002820191906000526020600020905b815481526020019060010190808311611706575b5050505050815260200160038201548152505081526020019060010190611646565b50505050905090565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a338690611782908490600401614220565b60206040518083038186803b15801561179a57600080fd5b505af41580156117ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117d291908101906135f5565b905090565b6117df612c45565b6000828152601c6020908152604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561186757602002820191906000526020600020905b815481526020019060010190808311611853575b5050509183525050600482015460209091019060ff16600181111561188857fe5b600181111561189357fe5b90525090505b919050565b8260005b60185481101561192057816001600160a01b03166000601a0160008060180184815481106118cc57fe5b60009182526020808320909101546001600160a01b03908116845290830193909352604090910190205416141561191857604051600160e51b62461bcd0281526004016108e99061416f565b6001016118a2565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e209061055690600090889088908890600401614250565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a26009906119a4906000908790879060040161450b565b60006040518083038186803b1580156119bc57600080fd5b505af41580156119d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ff9190810190613201565b611a00612c70565b6000828152601b602090815260409182902082516101008101845281546001600160a01b03168152600182015492810192909252600281015492820192909252600382015460608201526004820154608082015260058083015460a0830152600683015491929160c084019160ff90911690811115611a7b57fe5b6005811115611a8657fe5b815260078201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611b145780601f10611ae957610100808354040283529160200191611b14565b820191906000526020600020905b815481529060010190602001808311611af757829003601f168201915b5050505050815250509050919050565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611b6492919061431a565b60006040518083038186803b158015611b7c57600080fd5b505af4158015611b90573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bb89190810190613632565b93509350935093509193509193565b6000611bd1612bc5565b6000611bdb612bc5565b60005b601854811015611dff5760188054601a9160009184908110611bfc57fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611c5257fe5b6002811115611c5d57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cfa5780601f10611ccf57610100808354040283529160200191611cfa565b820191906000526020600020905b815481529060010190602001808311611cdd57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611da557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611d7357fe5b6003811115611d7e57fe5b81526020016001820154815260200160028201548152505081526020019060010190611d32565b50505050815250509150856001600160a01b031682600001516001600160a01b03161415611df7576018805482908110611ddb57fe5b6000918252602090912001546001600160a01b03169250611dff565b600101611bde565b509092509050915091565b33611e13612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115611e5b57fe5b6002811115611e6657fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f035780601f10611ed857610100808354040283529160200191611f03565b820191906000526020600020905b815481529060010190602001808311611ee657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611fae57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611f7c57fe5b6003811115611f8757fe5b81526020016001820154815260200160028201548152505081526020019060010190611f3b565b5050509152509091506001905081602001516002811115611fcb57fe5b14611feb57604051600160e51b62461bcd0281526004016108e9906141cf565b85600080828152601c602052604090206004015460ff16600181111561200d57fe5b1461202d57604051600160e51b62461bcd0281526004016108e9906141ef565b604051600160e21b6301c7aeeb02815273__TaskImpl______________________________9063071ebbac90612070906000908b908b908b908b90600401614428565b60006040518083038186803b15801561208857600080fd5b505af415801561209c573d6000803e3d6000fd5b5050505050505050505050565b60006060826120b6612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156120fe57fe5b600281111561210957fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121a65780601f1061217b576101008083540402835291602001916121a6565b820191906000526020600020905b81548152906001019060200180831161218957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561225157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561221f57fe5b600381111561222a57fe5b815260200160018201548152602001600282015481525050815260200190600101906121de565b505050915250909150600090508160200151600281111561226e57fe5b141561228f57604051600160e51b62461bcd0281526004016108e9906141df565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f031906122cc90600090899060040161422e565b60006040518083038186803b1580156122e457600080fd5b505af41580156122f8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123209190810190613074565b935093505050915091565b33612334612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561237c57fe5b600281111561238757fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124245780601f106123f957610100808354040283529160200191612424565b820191906000526020600020905b81548152906001019060200180831161240757829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156124cf57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561249d57fe5b60038111156124a857fe5b8152602001600182015481526020016002820154815250508152602001906001019061245c565b505050508152505090506124e243612a79565b61250157604051600160e51b62461bcd0281526004016108e9906141af565b60028160200151600281111561251357fe5b1461253357604051600160e51b62461bcd0281526004016108e9906141ff565b601e546060820151101561255c57604051600160e51b62461bcd0281526004016108e99061415f565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e29061092d90600090600401614220565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________906396462368906125d6908690869060040161413a565b60206040518083038186803b1580156125ee57600080fd5b505af4158015612602573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106ff91908101906135f5565b61262e612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561267657fe5b600281111561268157fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561271e5780601f106126f35761010080835404028352916020019161271e565b820191906000526020600020905b81548152906001019060200180831161270157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156127c957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561279757fe5b60038111156127a257fe5b81526020016001820154815260200160028201548152505081526020019060010190612756565b505050915250909392505050565b336127e0612bc5565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561282857fe5b600281111561283357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128d05780601f106128a5576101008083540402835291602001916128d0565b820191906000526020600020905b8154815290600101906020018083116128b357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561297b57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561294957fe5b600381111561295457fe5b81526020016001820154815260200160028201548152505081526020019060010190612908565b505050915250909150600190508160200151600281111561299857fe5b146129b857604051600160e51b62461bcd0281526004016108e9906141cf565b8660016000828152601c602052604090206004015460ff1660018111156129db57fe5b146129fb57604051600160e51b62461bcd0281526004016108e99061418f565b604051600160e61b6289b28102815273__TaskImpl______________________________9063226ca04090612a3f906000908c908c908c908c908c906004016143c8565b60006040518083038186803b158015612a5757600080fd5b505af4158015612a6b573d6000803e3d6000fd5b505050505050505050505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612ab8908490869060040161431a565b60206040518083038186803b158015612ad057600080fd5b505af4158015612ae4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061070291908101906135f5565b336000908152601a60205260409020546001600160a01b031690565b60015490565b8060016000828152601b602052604090206006015460ff166005811115612b4d57fe5b14612b6d57604051600160e51b62461bcd0281526004016108e99061419f565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b9061092d90600090869060040161431a565b6001600160a01b03166000908152601d602052604090205490565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b612c2f612cb5565b815260200190600190039081612c275790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b80356107028161475e565b80516107028161475e565b600082601f830112612d0457600080fd5b8151612d17612d1282614617565b6145f1565b91508181835260208401935060208101905083856020840282011115612d3c57600080fd5b60005b83811015612d685781612d528882612ce8565b8452506020928301929190910190600101612d3f565b5050505092915050565b600082601f830112612d8357600080fd5b8135612d91612d1282614617565b91508181835260208401935060208101905083856020840282011115612db657600080fd5b60005b83811015612d685781612dcc8882612f32565b8452506020928301929190910190600101612db9565b600082601f830112612df357600080fd5b8151612e01612d1282614617565b91508181835260208401935060208101905083856020840282011115612e2657600080fd5b60005b83811015612d685781612e3c8882612f3d565b8452506020928301929190910190600101612e29565b600082601f830112612e6357600080fd5b8135612e71612d1282614617565b91508181835260208401935060208101905083856020840282011115612e9657600080fd5b60005b83811015612d685781612eac8882612f32565b8452506020928301929190910190600101612e99565b600082601f830112612ed357600080fd5b8151612ee1612d1282614617565b91508181835260208401935060208101905083856020840282011115612f0657600080fd5b60005b83811015612d685781612f1c8882612f3d565b8452506020928301929190910190600101612f09565b803561070281614772565b805161070281614772565b600082601f830112612f5957600080fd5b8135612f67612d1282614637565b91508082526020830160208301858383011115612f8357600080fd5b612f8e8382846146f1565b50505092915050565b600082601f830112612fa857600080fd5b8151612fb6612d1282614637565b91508082526020830160208301858383011115612fd257600080fd5b612f8e8382846146fd565b80516107028161477b565b600060608284031215612ffa57600080fd5b61300460606145f1565b905060006130128484612fdd565b825250602061302384848301612f3d565b602083015250604061303784828501612f3d565b60408301525092915050565b803561070281614788565b60006020828403121561306057600080fd5b600061306c8484612cdd565b949350505050565b6000806040838503121561308757600080fd5b60006130938585612ce8565b92505060208301516001600160401b038111156130af57600080fd5b6130bb85828601612f97565b9150509250929050565b6000806000606084860312156130da57600080fd5b60006130e68686612cdd565b93505060208401356001600160401b0381111561310257600080fd5b61310e86828701612f48565b92505060408401356001600160401b0381111561312a57600080fd5b61313686828701612f48565b9150509250925092565b6000806040838503121561315357600080fd5b600061315f8585612cdd565b92505060206130bb85828601612f32565b60006020828403121561318257600080fd5b81516001600160401b0381111561319857600080fd5b61306c84828501612cf3565b600080604083850312156131b757600080fd5b82516001600160401b038111156131cd57600080fd5b6131d985828601612cf3565b92505060208301516001600160401b038111156131f557600080fd5b6130bb85828601612ec2565b60006020828403121561321357600080fd5b81516001600160401b0381111561322957600080fd5b61306c84828501612de2565b6000806000806080858703121561324b57600080fd5b84356001600160401b0381111561326157600080fd5b61326d87828801612d72565b94505060208501356001600160401b0381111561328957600080fd5b61329587828801612e52565b93505060408501356001600160401b038111156132b157600080fd5b6132bd87828801612e52565b92505060606132ce87828801612f32565b91505092959194509250565b6000602082840312156132ec57600080fd5b600061306c8484612f32565b600080600080600080600080610100898b03121561331557600080fd5b60006133218b8b612f32565b98505060206133328b828c01612f32565b97505060406133438b828c01612f32565b96505060606133548b828c01612f32565b95505060808901356001600160401b0381111561337057600080fd5b61337c8b828c01612f48565b94505060a061338d8b828c01612cdd565b93505060c061339e8b828c01613043565b92505060e08901356001600160401b038111156133ba57600080fd5b6133c68b828c01612f48565b9150509295985092959890939650565b600080600080600060a086880312156133ee57600080fd5b60006133fa8888612f32565b955050602061340b88828901612f32565b945050604061341c88828901612f32565b935050606061342d88828901613043565b92505060808601356001600160401b0381111561344957600080fd5b61345588828901612f48565b9150509295509295909350565b6000806000806080858703121561347857600080fd5b60006134848787612f32565b945050602061349587828801612f32565b93505060406134a687828801613043565b92505060608501356001600160401b038111156134c257600080fd5b6132ce87828801612f48565b600080600080608085870312156134e457600080fd5b60006134f08787612f32565b945050602061350187828801612f32565b93505060406132bd87828801612f32565b600080600080600060a0868803121561352a57600080fd5b60006135368888612f32565b955050602061354788828901612f32565b945050604061355888828901612f32565b935050606061356988828901612f32565b925050608061345588828901612f32565b6000806040838503121561358d57600080fd5b82356001600160401b038111156135a357600080fd5b6135af85828601612f48565b92505060208301356001600160401b038111156135cb57600080fd5b6130bb85828601612f48565b6000606082840312156135e957600080fd5b600061306c8484612fe8565b60006020828403121561360757600080fd5b600061306c8484612f3d565b6000806040838503121561362657600080fd5b600061315f8585612f32565b6000806000806080858703121561364857600080fd5b60006136548787612f3d565b945050602061366587828801612f3d565b93505060408501516001600160401b0381111561368157600080fd5b61368d87828801612cf3565b92505060608501516001600160401b038111156136a957600080fd5b6132ce87828801612ec2565b6000806000606084860312156136ca57600080fd5b60006136d68686612f32565b935050602061310e86828701612f32565b60006136f38383613727565b505060200190565b60006136f38383613abb565b60006137138383613f1b565b505060600190565b60006106ff8383614030565b6137308161467a565b82525050565b600061374182614667565b61374b8185614671565b93506137568361465e565b8060005b8381101561378457815161376e88826136e7565b97506137798361465e565b92505060010161375a565b509495945050505050565b600061379a82614667565b6137a48185614671565b93506137af8361465e565b8060005b838110156137845781516137c788826136e7565b97506137d28361465e565b9250506001016137b3565b60006137e882614667565b6137f28185614671565b93506137fd8361465e565b8060005b8381101561378457815161381588826136fb565b97506138208361465e565b925050600101613801565b600061383682614667565b6138408185614671565b935061384b8361465e565b8060005b8381101561378457815161386388826136fb565b975061386e8361465e565b92505060010161384f565b600061388482614667565b61388e8185614671565b93506138998361465e565b8060005b838110156137845781516138b188826136fb565b97506138bc8361465e565b92505060010161389d565b60006138d282614667565b6138dc8185614671565b93506138e78361465e565b8060005b838110156137845781516138ff8882613707565b975061390a8361465e565b9250506001016138eb565b600061392082614667565b61392a8185614671565b93506139358361465e565b8060005b8381101561378457815161394d8882613707565b97506139588361465e565b925050600101613939565b600061396e8261466b565b6139788185611899565b93508360208202850161398a85614664565b8060005b858110156139c457848403895281516139a7858261371b565b94506139b28361465e565b60209a909a019992505060010161398e565b5091979650505050505050565b60006139dc82614667565b6139e68185614671565b93506139f18361465e565b8060005b83811015613784578151613a0988826136fb565b9750613a148361465e565b9250506001016139f5565b6000613a2a82614667565b613a348185614671565b9350613a3f8361465e565b8060005b83811015613784578151613a5788826136fb565b9750613a628361465e565b925050600101613a43565b6000613a7882614667565b613a828185614671565b9350613a8d8361465e565b8060005b83811015613784578151613aa588826136fb565b9750613ab08361465e565b925050600101613a91565b61373081614664565b6000613acf82614667565b613ad98185614671565b9350613ae98185602086016146fd565b613af281614729565b9093019392505050565b613730816146c5565b613730816146d0565b613730816146db565b613730816146e6565b6000613b2d602283614671565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b6000613b74601883614671565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b6000613bad602783614671565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000613bf9601c83614671565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000613c32601383614671565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b6000613c6b602783614671565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b6000613cb7602e83614671565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b6000613d16601483614671565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b6000613d4f601383614671565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b6000613d88602083614671565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000613dc1602783614671565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a0840190613e148582613727565b506020830151613e276020860182613abb565b506040830151613e3a6040860182613abb565b5060608301518482036060860152613e528282613879565b9150506080830151613e676080860182613afc565b509392505050565b9052565b8051600090610100840190613e888582613727565b506020830151613e9b6020860182613abb565b506040830151613eae6040860182613abb565b506060830151613ec16060860182613abb565b506080830151613ed46080860182613abb565b5060a0830151613ee760a0860182613abb565b5060c0830151613efa60c0860182613b05565b5060e083015184820360e0860152613f128282613ac4565b95945050505050565b80516060830190613f2c8482613b0e565b506020820151613f3f6020850182613abb565b506040820151613f526040850182613abb565b50505050565b805160009060a0840190613f6c8582613727565b506020830151613f7f6020860182613b17565b5060408301518482036040860152613f978282613ac4565b9150506060830151613fac6060860182613abb565b5060808301518482036080860152613f1282826138c7565b805160009060a0840190613fd88582613727565b506020830151613feb6020860182613b17565b50604083015184820360408601526140038282613ac4565b91505060608301516140186060860182613abb565b5060808301518482036080860152613f128282613915565b805160009060808401906140448582613abb565b506020830151848203602086015261405c828261378f565b915050604083015184820360408601526140768282613a6d565b9150506060830151613e676060860182613abb565b613730816146b9565b602081016107028284613727565b604081016140b08285613727565b818103602083015261306c8184613ac4565b604081016140d08285613727565b818103602083015261306c8184613f58565b602080825281016106ff8184613736565b604080825281016141048185613736565b9050818103602083015261306c81846139d1565b602080825281016106ff81846137dd565b602080825281016106ff8184613963565b6040808252810161414b8185613ac4565b9050818103602083015261306c8184613ac4565b6020808252810161070281613b20565b6020808252810161070281613b67565b6020808252810161070281613ba0565b6020808252810161070281613bec565b6020808252810161070281613c25565b6020808252810161070281613c5e565b6020808252810161070281613caa565b6020808252810161070281613d09565b6020808252810161070281613d42565b6020808252810161070281613d7b565b6020808252810161070281613db4565b602080825281016106ff8184613e00565b602081016107028284613e6f565b6040810161423c8285613e6f565b6142496020830184613727565b9392505050565b6080810161425e8287613e6f565b61426b6020830186613727565b818103604083015261427d8185613ac4565b905081810360608301526142918184613ac4565b9695505050505050565b606081016142a98286613e6f565b6142b66020830185613727565b61306c6040830184613abb565b60a081016142d18288613e6f565b81810360208301526142e3818761382b565b905081810360408301526142f78186613a1f565b9050818103606083015261430b8185613a1f565b90506142916080830184613abb565b604081016143288285613e6f565b6142496020830184613abb565b6101208101614344828c613e6f565b614351602083018b613abb565b61435e604083018a613abb565b61436b6060830189613abb565b6143786080830188613abb565b81810360a083015261438a8187613ac4565b905061439960c0830186613727565b6143a660e083018561408b565b8181036101008301526143b98184613ac4565b9b9a5050505050505050505050565b60c081016143d68289613e6f565b6143e36020830188613abb565b6143f06040830187613abb565b6143fd6060830186613abb565b61440a608083018561408b565b81810360a083015261441c8184613ac4565b98975050505050505050565b60a081016144368288613e6f565b6144436020830187613abb565b6144506040830186613abb565b61445d606083018561408b565b818103608083015261446f8184613ac4565b979650505050505050565b60a081016144888288613e6f565b6144956020830187613abb565b6144a26040830186613abb565b6144af6060830185613abb565b6142916080830184613abb565b60c081016144ca8289613e6f565b6144d76020830188613abb565b6144e46040830187613abb565b6144f16060830186613abb565b6144fe6080830185613abb565b61446f60a0830184613abb565b606081016145198286613e6f565b6142b66020830185613abb565b608081016145348287613e6f565b6145416020830186613abb565b61454e6040830185613abb565b81810360608301526142918184613ac4565b602080825281016106ff8184613e73565b602080825281016106ff8184613f58565b604080825281016145938185613fc4565b90506142496020830184613abb565b602081016107028284613abb565b608081016145be8287613abb565b6145cb6020830186613abb565b81810360408301526145dd8185613736565b9050818103606083015261429181846139d1565b6040518181016001600160401b038111828210171561460f57600080fd5b604052919050565b60006001600160401b0382111561462d57600080fd5b5060209081020190565b60006001600160401b0382111561464d57600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b6000610702826146ad565b8061189981614733565b8061189981614740565b806118998161474a565b8061189981614754565b6001600160a01b031690565b6001600160401b031690565b600061070282614685565b60006107028261468f565b600061070282614699565b6000610702826146a3565b82818337506000910152565b60005b83811015614718578181015183820152602001614700565b83811115613f525750506000910152565b601f01601f191690565b6002811061473d57fe5b50565b6006811061473d57fe5b6004811061473d57fe5b6003811061473d57fe5b6147678161467a565b811461473d57600080fd5b61476781614664565b6004811061473d57600080fd5b614767816146b956fea265627a7a72305820a57b971263508273b1bd114e85cbbaad7cf4eed138434ab990171554b851d1ca6c6578706572696d656e74616cf50037","sourceMap":"767:16798:0:-;;;997:317;8:9:-1;5:2;;;30:1;27;20:12;5:2;997:317:0;;;;;;;;;;;;;;;;;;;;;;1086:5;:37;;-1:-1:-1;;;;;1086:37:0;;;-1:-1:-1;;;;;;1086:37:0;;;;;;;;1133:28;;;1195:3;1171:21;:27;1208:15;:28;;;;;;;;;;;;;;;1246:22;:26;;;1282:21;:25;767:16798;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:134;224:13;;242:33;224:13;242:33;;287:535;;;;436:2;424:9;415:7;411:23;407:32;404:2;;;452:1;449;442:12;404:2;487:1;504:64;560:7;540:9;504:64;;;494:74;;466:108;605:2;623:64;679:7;670:6;659:9;655:22;623:64;;;613:74;;584:109;724:2;742:64;798:7;789:6;778:9;774:22;742:64;;;732:74;;703:109;398:424;;;;;;829:91;;-1:-1;;;;;989:54;;891:24;972:76;1055:72;1117:5;1100:27;1134:117;1203:24;1221:5;1203:24;;;1196:5;1193:35;1183:2;;1242:1;1239;1232:12;1183:2;1177:74;;1258:117;1327:24;1345:5;1327:24;;1301:74;767:16798:0;;;;;;","deployedSourceMap":"767:16798:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;767:16798:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10380:306;;;;;;;;;:::i;:::-;;12129:294;;;;;;;;;:::i;11261:257::-;;;;;;;;;:::i;15285:194::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16640:199;;;;;;;;;:::i;:::-;;;;;;;;6847:98;;;:::i;6385:132::-;;;;;;;;;:::i;13027:546::-;;;;;;;;;:::i;6020:167::-;;;;;;;;;:::i;8252:575::-;;;;;;;;;:::i;14955:209::-;;;;;;;;;:::i;3069:121:10:-;;;:::i;:::-;;;;;;;;2823:130;;;:::i;:::-;;;;;;;;8954:149:0;;;:::i;:::-;;;;;;;;2543::10;;;;;;;;;:::i;:::-;;;;;;;;5568:207:0;;;;;;;;;:::i;9316:211::-;;;;;;;;;:::i;2221:137:10:-;;;;;;;;;:::i;:::-;;;;;;;;16105:198:0;;;;;;;;;:::i;:::-;;;;;;;;;;;1004:492:10;;;;;;;;;:::i;:::-;;;;;;;;;7253:324:0;;;;;;;;;:::i;16977:200::-;;;;;;;;;:::i;:::-;;;;;;;;;6680:90;;;:::i;17382:181::-;;;;;;;;;:::i;679:131:10:-;;;;;;;;;:::i;:::-;;;;;;;;13964:341:0;;;;;;;;;:::i;15654:167::-;;;;;;;;;:::i;399:115:10:-;;;:::i;:::-;;;;;;;;1957:90;;;:::i;14472:147:0:-;;;;;;;;;:::i;1740:134:10:-;;;;;;;;;:::i;10380:306:0:-;10574:105;;-1:-1:-1;;;;;10574:105:0;;:8;;:39;;:105;;10614:5;;10621:11;;10634:9;;10645:6;;10653:17;;10672:6;;10574:105;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10574:105:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10574:105:0;;;;10380:306;;;;;:::o;12129:294::-;12324:92;;-1:-1:-1;;;;;12324:92:0;;:8;;:30;;:92;;12355:5;;12362:13;;12377:10;;12389:7;;12398:17;;12324:92;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12324:92:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12324:92:0;;;;12129:294;;;;:::o;11261:257::-;11424:87;;-1:-1:-1;;;;;11424:87:0;;:8;;:29;;:87;;11454:5;;11461:11;;11474:9;;11485:6;;11493:17;;11424:87;;;;15285:194;15363:16;15381:13;15417;:34;15452:5;15459:12;15417:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15417:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15417:55:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15417:55:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15417:55:0;;;;;;;;;15410:62;;;;15285:194;;;:::o;16640:199::-;16772:60;;-1:-1:-1;;;;;16772:60:0;;16733:16;;16772:11;;:30;;:60;;16803:5;;16810:12;;16824:7;;16772:60;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16772:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16772:60:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16772:60:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16772:60:0;;;;;;;;;16765:67;;16640:199;;;;;:::o;6847:98::-;6887:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;;;;;;;;;6909:29;;-1:-1:-1;;;;;6909:29:0;;:11;;:22;;:29;;6932:5;;6909:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6909:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6909:29:0;;;;6847:98;;:::o;6385:132::-;6444:10;3223:33;;:::i;:::-;-1:-1:-1;;;;;3259:20:0;;;:5;:20;;;:13;:20;;;;;;;;;3223:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3223:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3223:56:0;;-1:-1:-1;3223:56:0;;-1:-1:-1;3314:35:0;;-1:-1:-1;3297:6:0;:13;;;:52;;;;;;;;;3289:104;;;;-1:-1:-1;;;;;3289:104:0;;;;;;;;;3403:39;;:::i;:::-;3445:56;;-1:-1:-1;;;;;3445:56:0;;:11;;:34;;:56;;3480:6;;3488:12;;3445:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3445:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3445:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3445:56:0;;;;;;;;;3403:98;-1:-1:-1;3548:33:0;3519:25;;:62;;;;;;;;;3511:126;;;;-1:-1:-1;;;;;3511:126:0;;;;;;;;;3691:9;:21;;;3655:33;3675:12;3655:19;:33::i;:::-;:57;3647:128;;;;-1:-1:-1;;;;;3647:128:0;;;;;;;;;6470:40;;-1:-1:-1;;;;;6470:40:0;;:11;;:24;;:40;;6495:5;;6502:7;;6470:40;;;;13027:546;13344:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;13377:7;4326:42;4291:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4283:118;;;;-1:-1:-1;;;;;4283:118:0;;;;;;;;;13400:166;;-1:-1:-1;;;;;13400:166:0;;:8;;:26;;:166;;13427:5;;13434:7;;13443;;13452:15;;13469:11;;13482:21;;13517:32;;13551:8;;13561:4;;13400:166;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13400:166:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13400:166:0;;;;2138:1;13027:546;;;;;;;;;;:::o;6020:167::-;6103:10;1614:33;;:::i;:::-;-1:-1:-1;;;;;1650:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1614:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;-1:-1:-1;1614:56:0;;-1:-1:-1;1705:38:0;;-1:-1:-1;1688:6:0;:13;;;:55;;;;;;;;;;1680:87;;;;-1:-1:-1;;;;;1680:87:0;;;;;;;;;6129:51;;-1:-1:-1;;;;;6129:51:0;;:11;;:23;;:51;;6153:5;;6160:10;;6172:7;;6129:51;;;;8252:575;8583:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;8617:7;4013:43;3978:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;3970:123;;;;-1:-1:-1;;;;;3970:123:0;;;;;;;;;8640:180;;-1:-1:-1;;;;;8640:180:0;;:8;;:33;;:180;;8674:5;;8681:7;;8690:12;;8704:9;;8715:19;;8748:21;;8771:32;;8805:8;;8815:4;;8640:180;;;;14955:209;15063:10;1614:33;;:::i;:::-;-1:-1:-1;;;;;1650:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1614:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;-1:-1:-1;1614:56:0;;-1:-1:-1;1705:38:0;;-1:-1:-1;1688:6:0;:13;;;:55;;;;;;;;;;1680:87;;;;-1:-1:-1;;;;;1680:87:0;;;;;;;;;15089:68;;-1:-1:-1;;;;;15089:68:0;;:13;;:34;;:68;;15124:5;;15131:12;;15145:5;;15152:4;;15089:68;;;;3069:121:10;3131:16;3166:5;:17;;3159:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:121;:::o;2823:130::-;2872:36;;:::i;:::-;2920:26;;;;;;;;;2927:19;2920:26;2927:5;2920:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2920:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2823:130;:::o;8954:149:0:-;9046:50;;-1:-1:-1;;;;;9046:50:0;;9019:4;;9046:18;;:43;;:50;;9019:4;;9046:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9046:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9046:50:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9046:50:0;;;;;;;;;9039:57;;8954:149;:::o;2543::10:-;2608:34;;:::i;:::-;2661:5;:24;;;:15;:24;;;;;;;;;2654:31;;;;;;;;;-1:-1:-1;;;;;2654:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2661:24;;2654:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2654:31:10;;;-1:-1:-1;;2654:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2654:31:10;-1:-1:-1;2543:149:10;;;;:::o;5568:207:0:-;5684:7;4889:6;4884:175;4905:21;:28;4901:32;;4884:175;;;5012:7;-1:-1:-1;;;;;4962:57:0;:5;:13;;:39;4976:5;:21;;4998:1;4976:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4976:24:0;;;4962:39;;;;;;;;;;;;;;;:46;;:57;;4954:94;;;;-1:-1:-1;;;;;4954:94:0;;;;;;;;;4935:3;;4884:175;;;-1:-1:-1;5707:61:0;;-1:-1:-1;;;;;5707:61:0;;:11;;:24;;:61;;5732:5;;5739:7;;5748;;5757:10;;5707:61;;;;9316:211;9449:71;;-1:-1:-1;;;;;9449:71:0;;9410:16;;9449:18;;:49;;:71;;9499:5;;9506:6;;9514:5;;9449:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9449:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9449:71:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;9449:71:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;9449:71:0;;;;;;;;2221:137:10;2282:30;;:::i;:::-;2331:5;:20;;;:11;:20;;;;;;;;;2324:27;;;;;;;;;-1:-1:-1;;;;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2331:20;2324:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2221:137;;;:::o;16105:198:0:-;16182:4;16188;16194:16;16212:13;16244:11;:31;16276:5;16283:12;16244:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16244:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16244:52:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16244:52:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16244:52:0;;;;;;;;;16237:59;;;;;;;;16105:198;;;;;:::o;1004:492:10:-;1079:7;1088:26;;:::i;:::-;1126:15;1151:33;;:::i;:::-;1199:6;1194:262;1215:21;:28;1211:32;;1194:262;;;1287:21;:24;;1273:13;;:5;;1309:1;;1287:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1287:24:10;;;1273:39;;;;;;;;;;;;;;;;1264:48;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1264:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:7;-1:-1:-1;;;;;1330:24:10;:6;:13;;;-1:-1:-1;;;;;1330:24:10;;1326:120;;;1384:21;:24;;1406:1;;1384:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1384:24:10;;-1:-1:-1;1426:5:10;;1326:120;1245:3;;1194:262;;;-1:-1:-1;1473:7:10;;-1:-1:-1;1482:6:10;-1:-1:-1;1004:492:10;;;:::o;7253:324:0:-;7430:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;7464:7;4013:43;3978:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;3970:123;;;;-1:-1:-1;;;;;3970:123:0;;;;;;;;;7487:83;;-1:-1:-1;;;;;7487:83:0;;:8;;:40;;:83;;7528:5;;7535:7;;7544:9;;7555:8;;7565:4;;7487:83;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7487:83:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7487:83:0;;;;2138:1;7253:324;;;;;;:::o;16977:200::-;17082:7;17091:12;17057:10;1614:33;;:::i;:::-;-1:-1:-1;;;;;1650:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1614:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;-1:-1:-1;1614:56:0;;-1:-1:-1;1705:38:0;;-1:-1:-1;1688:6:0;:13;;;:55;;;;;;;;;;1680:87;;;;-1:-1:-1;;;;;1680:87:0;;;;;;;;;17126:44;;-1:-1:-1;;;;;17126:44:0;;:11;;:25;;:44;;17152:5;;17159:10;;17126:44;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17126:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17126:44:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;17126:44:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;17126:44:0;;;;;;;;;17119:51;;;;16977:200;;;;;:::o;6680:90::-;6713:10;2670:33;;:::i;:::-;-1:-1:-1;;;;;2706:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2670:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2670:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2744:33;2764:12;2744:19;:33::i;:::-;2736:90;;;;-1:-1:-1;;;;;2736:90:0;;;;;;;;;2861:35;2844:6;:13;;;:52;;;;;;;;;2836:104;;;;-1:-1:-1;;;;;2836:104:0;;;;;;;;;2976:22;;2958:14;;;;:40;;2950:87;;;;-1:-1:-1;;;;;2950:87:0;;;;;;;;;6735:28;;-1:-1:-1;;;;;6735:28:0;;:11;;:21;;:28;;6757:5;;6735:28;;;;17382:181;17509:47;;-1:-1:-1;;;;;17509:47:0;;17482:4;;17509:11;;:28;;:47;;17538:5;;17545:10;;17509:47;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17509:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17509:47:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;17509:47:0;;;;;;;;679:131:10;736:26;;:::i;:::-;-1:-1:-1;;;;;781:22:10;;;:5;:22;;;:13;:22;;;;;;;;;774:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;-1:-1:-1;774:29:10;;679:131;-1:-1:-1;;;679:131:10:o;13964:341:0:-;14158:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;14191:7;4326:42;4291:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4283:118;;;;-1:-1:-1;;;;;4283:118:0;;;;;;;;;14214:84;;-1:-1:-1;;;;;14214:84:0;;:8;;:30;;:84;;14245:5;;14252:7;;14261;;14270:11;;14283:8;;14293:4;;14214:84;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14214:84:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14214:84:0;;;;2138:1;13964:341;;;;;;;:::o;15654:167::-;15758:56;;-1:-1:-1;;;;;15758:56:0;;15735:4;;15758:11;;:35;;:56;;15735:4;;15801:12;;15758:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15758:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15758:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15758:56:0;;;;;;;;399:115:10;489:10;449:7;475:25;;;:13;:25;;;;;:32;-1:-1:-1;;;;;475:32:10;399:115;:::o;1957:90::-;2025:15;;1957:90;:::o;14472:147:0:-;14543:7;4633:37;4602:5;:20;;;:11;:20;;;;;:27;;;;;:68;;;;;;;;;4594:100;;;;-1:-1:-1;;;;;4594:100:0;;;;;;;;;14566:46;;-1:-1:-1;;;;;14566:46:0;;:8;;:30;;:46;;14597:5;;14604:7;;14566:46;;;;1740:134:10;-1:-1:-1;;;;;1833:34:10;1810:4;1833:34;;;:25;:34;;;;;;;1740:134::o;767:16798:0:-;;;;;;;;;;-1:-1:-1;767:16798:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;767:16798:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;767:16798:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;767:16798:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:722;;429:3;422:4;414:6;410:17;406:27;396:2;;447:1;444;437:12;396:2;477:6;471:13;499:80;514:64;571:6;514:64;;;499:80;;;490:89;;596:5;621:6;614:5;607:21;651:4;643:6;639:17;629:27;;673:4;668:3;664:14;657:21;;726:6;773:3;765:4;757:6;753:17;748:3;744:27;741:36;738:2;;;790:1;787;780:12;738:2;815:1;800:217;825:6;822:1;819:13;800:217;;;883:3;905:48;949:3;937:10;905:48;;;893:61;;-1:-1;977:4;968:14;;;;996;;;;;847:1;840:9;800:217;;;804:14;389:634;;;;;;;;1049:707;;1166:3;1159:4;1151:6;1147:17;1143:27;1133:2;;1184:1;1181;1174:12;1133:2;1221:6;1208:20;1243:80;1258:64;1315:6;1258:64;;1243:80;1234:89;;1340:5;1365:6;1358:5;1351:21;1395:4;1387:6;1383:17;1373:27;;1417:4;1412:3;1408:14;1401:21;;1470:6;1517:3;1509:4;1501:6;1497:17;1492:3;1488:27;1485:36;1482:2;;;1534:1;1531;1524:12;1482:2;1559:1;1544:206;1569:6;1566:1;1563:13;1544:206;;;1627:3;1649:37;1682:3;1670:10;1649:37;;;1637:50;;-1:-1;1710:4;1701:14;;;;1729;;;;;1591:1;1584:9;1544:206;;1782:722;;1910:3;1903:4;1895:6;1891:17;1887:27;1877:2;;1928:1;1925;1918:12;1877:2;1958:6;1952:13;1980:80;1995:64;2052:6;1995:64;;1980:80;1971:89;;2077:5;2102:6;2095:5;2088:21;2132:4;2124:6;2120:17;2110:27;;2154:4;2149:3;2145:14;2138:21;;2207:6;2254:3;2246:4;2238:6;2234:17;2229:3;2225:27;2222:36;2219:2;;;2271:1;2268;2261:12;2219:2;2296:1;2281:217;2306:6;2303:1;2300:13;2281:217;;;2364:3;2386:48;2430:3;2418:10;2386:48;;;2374:61;;-1:-1;2458:4;2449:14;;;;2477;;;;;2328:1;2321:9;2281:217;;2530:707;;2647:3;2640:4;2632:6;2628:17;2624:27;2614:2;;2665:1;2662;2655:12;2614:2;2702:6;2689:20;2724:80;2739:64;2796:6;2739:64;;2724:80;2715:89;;2821:5;2846:6;2839:5;2832:21;2876:4;2868:6;2864:17;2854:27;;2898:4;2893:3;2889:14;2882:21;;2951:6;2998:3;2990:4;2982:6;2978:17;2973:3;2969:27;2966:36;2963:2;;;3015:1;3012;3005:12;2963:2;3040:1;3025:206;3050:6;3047:1;3044:13;3025:206;;;3108:3;3130:37;3163:3;3151:10;3130:37;;;3118:50;;-1:-1;3191:4;3182:14;;;;3210;;;;;3072:1;3065:9;3025:206;;3263:722;;3391:3;3384:4;3376:6;3372:17;3368:27;3358:2;;3409:1;3406;3399:12;3358:2;3439:6;3433:13;3461:80;3476:64;3533:6;3476:64;;3461:80;3452:89;;3558:5;3583:6;3576:5;3569:21;3613:4;3605:6;3601:17;3591:27;;3635:4;3630:3;3626:14;3619:21;;3688:6;3735:3;3727:4;3719:6;3715:17;3710:3;3706:27;3703:36;3700:2;;;3752:1;3749;3742:12;3700:2;3777:1;3762:217;3787:6;3784:1;3781:13;3762:217;;;3845:3;3867:48;3911:3;3899:10;3867:48;;;3855:61;;-1:-1;3939:4;3930:14;;;;3958;;;;;3809:1;3802:9;3762:217;;3993:130;4060:20;;4085:33;4060:20;4085:33;;4130:134;4208:13;;4226:33;4208:13;4226:33;;4272:440;;4373:3;4366:4;4358:6;4354:17;4350:27;4340:2;;4391:1;4388;4381:12;4340:2;4428:6;4415:20;4450:64;4465:48;4506:6;4465:48;;4450:64;4441:73;;4534:6;4527:5;4520:21;4570:4;4562:6;4558:17;4603:4;4596:5;4592:16;4638:3;4629:6;4624:3;4620:16;4617:25;4614:2;;;4655:1;4652;4645:12;4614:2;4665:41;4699:6;4694:3;4689;4665:41;;;4333:379;;;;;;;;4721:442;;4833:3;4826:4;4818:6;4814:17;4810:27;4800:2;;4851:1;4848;4841:12;4800:2;4881:6;4875:13;4903:64;4918:48;4959:6;4918:48;;4903:64;4894:73;;4987:6;4980:5;4973:21;5023:4;5015:6;5011:17;5056:4;5049:5;5045:16;5091:3;5082:6;5077:3;5073:16;5070:25;5067:2;;;5108:1;5105;5098:12;5067:2;5118:39;5150:6;5145:3;5140;5118:39;;5171:170;5267:13;;5285:51;5267:13;5285:51;;5384:695;;5511:4;5499:9;5494:3;5490:19;5486:30;5483:2;;;5529:1;5526;5519:12;5483:2;5547:20;5562:4;5547:20;;;5538:29;-1:-1;5628:1;5659:78;5733:3;5713:9;5659:78;;;5635:103;;-1:-1;5806:2;5839:60;5895:3;5871:22;;;5839:60;;;5832:4;5825:5;5821:16;5814:86;5759:152;5964:2;5997:60;6053:3;6044:6;6033:9;6029:22;5997:60;;;5990:4;5983:5;5979:16;5972:86;5921:148;5477:602;;;;;6364:128;6430:20;;6455:32;6430:20;6455:32;;6499:241;;6603:2;6591:9;6582:7;6578:23;6574:32;6571:2;;;6619:1;6616;6609:12;6571:2;6654:1;6671:53;6716:7;6696:9;6671:53;;;6661:63;6565:175;-1:-1;;;;6565:175;6747:496;;;6888:2;6876:9;6867:7;6863:23;6859:32;6856:2;;;6904:1;6901;6894:12;6856:2;6939:1;6956:64;7012:7;6992:9;6956:64;;;6946:74;;6918:108;7078:2;7067:9;7063:18;7057:25;-1:-1;;;;;7094:6;7091:30;7088:2;;;7134:1;7131;7124:12;7088:2;7154:73;7219:7;7210:6;7199:9;7195:22;7154:73;;;7144:83;;7036:197;6850:393;;;;;;7250:699;;;;7406:2;7394:9;7385:7;7381:23;7377:32;7374:2;;;7422:1;7419;7412:12;7374:2;7457:1;7474:53;7519:7;7499:9;7474:53;;;7464:63;;7436:97;7592:2;7581:9;7577:18;7564:32;-1:-1;;;;;7608:6;7605:30;7602:2;;;7648:1;7645;7638:12;7602:2;7668:62;7722:7;7713:6;7702:9;7698:22;7668:62;;;7658:72;;7543:193;7795:2;7784:9;7780:18;7767:32;-1:-1;;;;;7811:6;7808:30;7805:2;;;7851:1;7848;7841:12;7805:2;7871:62;7925:7;7916:6;7905:9;7901:22;7871:62;;;7861:72;;7746:193;7368:581;;;;;;7956:366;;;8077:2;8065:9;8056:7;8052:23;8048:32;8045:2;;;8093:1;8090;8083:12;8045:2;8128:1;8145:53;8190:7;8170:9;8145:53;;;8135:63;;8107:97;8235:2;8253:53;8298:7;8289:6;8278:9;8274:22;8253:53;;8329:392;;8469:2;8457:9;8448:7;8444:23;8440:32;8437:2;;;8485:1;8482;8475:12;8437:2;8520:24;;-1:-1;;;;;8553:30;;8550:2;;;8596:1;8593;8586:12;8550:2;8616:89;8697:7;8688:6;8677:9;8673:22;8616:89;;8728:657;;;8910:2;8898:9;8889:7;8885:23;8881:32;8878:2;;;8926:1;8923;8916:12;8878:2;8961:24;;-1:-1;;;;;8994:30;;8991:2;;;9037:1;9034;9027:12;8991:2;9057:89;9138:7;9129:6;9118:9;9114:22;9057:89;;;9047:99;;8940:212;9204:2;9193:9;9189:18;9183:25;-1:-1;;;;;9220:6;9217:30;9214:2;;;9260:1;9257;9250:12;9214:2;9280:89;9361:7;9352:6;9341:9;9337:22;9280:89;;9392:392;;9532:2;9520:9;9511:7;9507:23;9503:32;9500:2;;;9548:1;9545;9538:12;9500:2;9583:24;;-1:-1;;;;;9616:30;;9613:2;;;9659:1;9656;9649:12;9613:2;9679:89;9760:7;9751:6;9740:9;9736:22;9679:89;;9791:1025;;;;;10021:3;10009:9;10000:7;9996:23;9992:33;9989:2;;;10038:1;10035;10028:12;9989:2;10073:31;;-1:-1;;;;;10113:30;;10110:2;;;10156:1;10153;10146:12;10110:2;10176:78;10246:7;10237:6;10226:9;10222:22;10176:78;;;10166:88;;10052:208;10319:2;10308:9;10304:18;10291:32;-1:-1;;;;;10335:6;10332:30;10329:2;;;10375:1;10372;10365:12;10329:2;10395:78;10465:7;10456:6;10445:9;10441:22;10395:78;;;10385:88;;10270:209;10538:2;10527:9;10523:18;10510:32;-1:-1;;;;;10554:6;10551:30;10548:2;;;10594:1;10591;10584:12;10548:2;10614:78;10684:7;10675:6;10664:9;10660:22;10614:78;;;10604:88;;10489:209;10729:2;10747:53;10792:7;10783:6;10772:9;10768:22;10747:53;;;10737:63;;10708:98;9983:833;;;;;;;;10823:241;;10927:2;10915:9;10906:7;10902:23;10898:32;10895:2;;;10943:1;10940;10933:12;10895:2;10978:1;10995:53;11040:7;11020:9;10995:53;;11071:1327;;;;;;;;;11311:3;11299:9;11290:7;11286:23;11282:33;11279:2;;;11328:1;11325;11318:12;11279:2;11363:1;11380:53;11425:7;11405:9;11380:53;;;11370:63;;11342:97;11470:2;11488:53;11533:7;11524:6;11513:9;11509:22;11488:53;;;11478:63;;11449:98;11578:2;11596:53;11641:7;11632:6;11621:9;11617:22;11596:53;;;11586:63;;11557:98;11686:2;11704:53;11749:7;11740:6;11729:9;11725:22;11704:53;;;11694:63;;11665:98;11822:3;11811:9;11807:19;11794:33;-1:-1;;;;;11839:6;11836:30;11833:2;;;11879:1;11876;11869:12;11833:2;11899:62;11953:7;11944:6;11933:9;11929:22;11899:62;;;11889:72;;11773:194;11998:3;12017:53;12062:7;12053:6;12042:9;12038:22;12017:53;;;12007:63;;11977:99;12107:3;12126:52;12170:7;12161:6;12150:9;12146:22;12126:52;;;12116:62;;12086:98;12243:3;12232:9;12228:19;12215:33;-1:-1;;;;;12260:6;12257:30;12254:2;;;12300:1;12297;12290:12;12254:2;12320:62;12374:7;12365:6;12354:9;12350:22;12320:62;;;12310:72;;12194:194;11273:1125;;;;;;;;;;;;12405:845;;;;;;12585:3;12573:9;12564:7;12560:23;12556:33;12553:2;;;12602:1;12599;12592:12;12553:2;12637:1;12654:53;12699:7;12679:9;12654:53;;;12644:63;;12616:97;12744:2;12762:53;12807:7;12798:6;12787:9;12783:22;12762:53;;;12752:63;;12723:98;12852:2;12870:53;12915:7;12906:6;12895:9;12891:22;12870:53;;;12860:63;;12831:98;12960:2;12978:52;13022:7;13013:6;13002:9;12998:22;12978:52;;;12968:62;;12939:97;13095:3;13084:9;13080:19;13067:33;-1:-1;;;;;13112:6;13109:30;13106:2;;;13152:1;13149;13142:12;13106:2;13172:62;13226:7;13217:6;13206:9;13202:22;13172:62;;;13162:72;;13046:194;12547:703;;;;;;;;;13257:719;;;;;13420:3;13408:9;13399:7;13395:23;13391:33;13388:2;;;13437:1;13434;13427:12;13388:2;13472:1;13489:53;13534:7;13514:9;13489:53;;;13479:63;;13451:97;13579:2;13597:53;13642:7;13633:6;13622:9;13618:22;13597:53;;;13587:63;;13558:98;13687:2;13705:52;13749:7;13740:6;13729:9;13725:22;13705:52;;;13695:62;;13666:97;13822:2;13811:9;13807:18;13794:32;-1:-1;;;;;13838:6;13835:30;13832:2;;;13878:1;13875;13868:12;13832:2;13898:62;13952:7;13943:6;13932:9;13928:22;13898:62;;13983:617;;;;;14138:3;14126:9;14117:7;14113:23;14109:33;14106:2;;;14155:1;14152;14145:12;14106:2;14190:1;14207:53;14252:7;14232:9;14207:53;;;14197:63;;14169:97;14297:2;14315:53;14360:7;14351:6;14340:9;14336:22;14315:53;;;14305:63;;14276:98;14405:2;14423:53;14468:7;14459:6;14448:9;14444:22;14423:53;;14607:743;;;;;;14779:3;14767:9;14758:7;14754:23;14750:33;14747:2;;;14796:1;14793;14786:12;14747:2;14831:1;14848:53;14893:7;14873:9;14848:53;;;14838:63;;14810:97;14938:2;14956:53;15001:7;14992:6;14981:9;14977:22;14956:53;;;14946:63;;14917:98;15046:2;15064:53;15109:7;15100:6;15089:9;15085:22;15064:53;;;15054:63;;15025:98;15154:2;15172:53;15217:7;15208:6;15197:9;15193:22;15172:53;;;15162:63;;15133:98;15262:3;15281:53;15326:7;15317:6;15306:9;15302:22;15281:53;;15357:574;;;15496:2;15484:9;15475:7;15471:23;15467:32;15464:2;;;15512:1;15509;15502:12;15464:2;15547:31;;-1:-1;;;;;15587:30;;15584:2;;;15630:1;15627;15620:12;15584:2;15650:62;15704:7;15695:6;15684:9;15680:22;15650:62;;;15640:72;;15526:192;15777:2;15766:9;15762:18;15749:32;-1:-1;;;;;15793:6;15790:30;15787:2;;;15833:1;15830;15823:12;15787:2;15853:62;15907:7;15898:6;15887:9;15883:22;15853:62;;15938:317;;16080:2;16068:9;16059:7;16055:23;16051:32;16048:2;;;16096:1;16093;16086:12;16048:2;16131:1;16148:91;16231:7;16211:9;16148:91;;16510:263;;16625:2;16613:9;16604:7;16600:23;16596:32;16593:2;;;16641:1;16638;16631:12;16593:2;16676:1;16693:64;16749:7;16729:9;16693:64;;16780:366;;;16901:2;16889:9;16880:7;16876:23;16872:32;16869:2;;;16917:1;16914;16907:12;16869:2;16952:1;16969:53;17014:7;16994:9;16969:53;;17526:930;;;;;17742:3;17730:9;17721:7;17717:23;17713:33;17710:2;;;17759:1;17756;17749:12;17710:2;17794:1;17811:64;17867:7;17847:9;17811:64;;;17801:74;;17773:108;17912:2;17930:64;17986:7;17977:6;17966:9;17962:22;17930:64;;;17920:74;;17891:109;18052:2;18041:9;18037:18;18031:25;-1:-1;;;;;18068:6;18065:30;18062:2;;;18108:1;18105;18098:12;18062:2;18128:89;18209:7;18200:6;18189:9;18185:22;18128:89;;;18118:99;;18010:213;18275:2;18264:9;18260:18;18254:25;-1:-1;;;;;18291:6;18288:30;18285:2;;;18331:1;18328;18321:12;18285:2;18351:89;18432:7;18423:6;18412:9;18408:22;18351:89;;18463:595;;;;18610:2;18598:9;18589:7;18585:23;18581:32;18578:2;;;18626:1;18623;18616:12;18578:2;18661:1;18678:53;18723:7;18703:9;18678:53;;;18668:63;;18640:97;18768:2;18786:53;18831:7;18822:6;18811:9;18807:22;18786:53;;19066:173;;19153:46;19195:3;19187:6;19153:46;;;-1:-1;;19228:4;19219:14;;19146:93;19248:173;;19335:46;19377:3;19369:6;19335:46;;19628:269;;19761:96;19853:3;19845:6;19761:96;;;-1:-1;;19886:4;19877:14;;19754:143;20200:265;;20355:104;20455:3;20447:6;20355:104;;20853:103;20926:24;20944:5;20926:24;;;20921:3;20914:37;20908:48;;;21360:690;;21505:54;21553:5;21505:54;;;21572:86;21651:6;21646:3;21572:86;;;21565:93;;21679:56;21729:5;21679:56;;;21755:7;21783:1;21768:260;21793:6;21790:1;21787:13;21768:260;;;21860:6;21854:13;21881:63;21940:3;21925:13;21881:63;;;21874:70;;21961:60;22014:6;21961:60;;;21951:70;-1:-1;;21815:1;21808:9;21768:260;;;-1:-1;22041:3;;21484:566;-1:-1;;;;;21484:566;22089:654;;22220:50;22264:5;22220:50;;;22283:76;22352:6;22347:3;22283:76;;;22276:83;;22380:52;22426:5;22380:52;;;22452:7;22480:1;22465:256;22490:6;22487:1;22484:13;22465:256;;;22557:6;22551:13;22578:63;22637:3;22622:13;22578:63;;;22571:70;;22658:56;22707:6;22658:56;;;22648:66;-1:-1;;22512:1;22505:9;22465:256;;22782:690;;22927:54;22975:5;22927:54;;;22994:86;23073:6;23068:3;22994:86;;;22987:93;;23101:56;23151:5;23101:56;;;23177:7;23205:1;23190:260;23215:6;23212:1;23209:13;23190:260;;;23282:6;23276:13;23303:63;23362:3;23347:13;23303:63;;;23296:70;;23383:60;23436:6;23383:60;;;23373:70;-1:-1;;23237:1;23230:9;23190:260;;23511:714;;23664:54;23712:5;23664:54;;;23731:94;23818:6;23813:3;23731:94;;;23724:101;;23846:56;23896:5;23846:56;;;23922:7;23950:1;23935:268;23960:6;23957:1;23954:13;23935:268;;;24027:6;24021:13;24048:71;24115:3;24100:13;24048:71;;;24041:78;;24136:60;24189:6;24136:60;;;24126:70;-1:-1;;23982:1;23975:9;23935:268;;24264:654;;24395:50;24439:5;24395:50;;;24458:76;24527:6;24522:3;24458:76;;;24451:83;;24555:52;24601:5;24555:52;;;24627:7;24655:1;24640:256;24665:6;24662:1;24659:13;24640:256;;;24732:6;24726:13;24753:63;24812:3;24797:13;24753:63;;;24746:70;;24833:56;24882:6;24833:56;;;24823:66;-1:-1;;24687:1;24680:9;24640:256;;25001:838;;25178:73;25245:5;25178:73;;;25264:99;25356:6;25351:3;25264:99;;;25257:106;;25384:75;25453:5;25384:75;;;25479:7;25507:1;25492:325;25517:6;25514:1;25511:13;25492:325;;;25584:6;25578:13;25605:109;25710:3;25695:13;25605:109;;;25598:116;;25731:79;25803:6;25731:79;;;25721:89;-1:-1;;25539:1;25532:9;25492:325;;25922:862;;26107:73;26174:5;26107:73;;;26193:107;26293:6;26288:3;26193:107;;;26186:114;;26321:75;26390:5;26321:75;;;26416:7;26444:1;26429:333;26454:6;26451:1;26448:13;26429:333;;;26521:6;26515:13;26542:117;26655:3;26640:13;26542:117;;;26535:124;;26676:79;26748:6;26676:79;;;26666:89;-1:-1;;26476:1;26469:9;26429:333;;26877:1052;;27072:79;27145:5;27072:79;;;27164:111;27268:6;27263:3;27164:111;;;27157:118;;27298:3;27340:4;27332:6;27328:17;27323:3;27319:27;27367:81;27442:5;27367:81;;;27468:7;27496:1;27481:409;27506:6;27503:1;27500:13;27481:409;;;27568:9;27562:4;27558:20;27553:3;27546:33;27613:6;27607:13;27635:118;27748:4;27733:13;27635:118;;;27627:126;;27770:85;27848:6;27770:85;;;27878:4;27869:14;;;;;27760:95;-1:-1;;27528:1;27521:9;27481:409;;;-1:-1;27903:4;;27051:878;-1:-1;;;;;;;27051:878;27968:690;;28113:54;28161:5;28113:54;;;28180:86;28259:6;28254:3;28180:86;;;28173:93;;28287:56;28337:5;28287:56;;;28363:7;28391:1;28376:260;28401:6;28398:1;28395:13;28376:260;;;28468:6;28462:13;28489:63;28548:3;28533:13;28489:63;;;28482:70;;28569:60;28622:6;28569:60;;;28559:70;-1:-1;;28423:1;28416:9;28376:260;;28697:714;;28850:54;28898:5;28850:54;;;28917:94;29004:6;28999:3;28917:94;;;28910:101;;29032:56;29082:5;29032:56;;;29108:7;29136:1;29121:268;29146:6;29143:1;29140:13;29121:268;;;29213:6;29207:13;29234:71;29301:3;29286:13;29234:71;;;29227:78;;29322:60;29375:6;29322:60;;;29312:70;-1:-1;;29168:1;29161:9;29121:268;;29450:654;;29581:50;29625:5;29581:50;;;29644:76;29713:6;29708:3;29644:76;;;29637:83;;29741:52;29787:5;29741:52;;;29813:7;29841:1;29826:256;29851:6;29848:1;29845:13;29826:256;;;29918:6;29912:13;29939:63;29998:3;29983:13;29939:63;;;29932:70;;30019:56;30068:6;30019:56;;;30009:66;-1:-1;;29873:1;29866:9;29826:256;;30112:103;30185:24;30203:5;30185:24;;30468:343;;30578:38;30610:5;30578:38;;;30628:70;30691:6;30686:3;30628:70;;;30621:77;;30703:52;30748:6;30743:3;30736:4;30729:5;30725:16;30703:52;;;30776:29;30798:6;30776:29;;;30767:39;;;;30558:253;-1:-1;;;30558:253;31844:162;31940:60;31994:5;31940:60;;32013:142;32099:50;32143:5;32099:50;;32162:148;32251:53;32298:5;32251:53;;32480:146;32568:52;32614:5;32568:52;;32795:465;;32955:67;33019:2;33014:3;32955:67;;;33055:66;33035:87;;-1:-1;;;;;33151:2;33142:12;;33135:88;33251:2;33242:12;;32941:319;-1:-1;;32941:319;33269:364;;33429:67;33493:2;33488:3;33429:67;;;33529:66;33509:87;;33624:2;33615:12;;33415:218;-1:-1;;33415:218;33642:465;;33802:67;33866:2;33861:3;33802:67;;;33902:66;33882:87;;-1:-1;;;;;33998:2;33989:12;;33982:88;34098:2;34089:12;;33788:319;-1:-1;;33788:319;34116:364;;34276:67;34340:2;34335:3;34276:67;;;34376:66;34356:87;;34471:2;34462:12;;34262:218;-1:-1;;34262:218;34489:364;;34649:67;34713:2;34708:3;34649:67;;;34749:66;34729:87;;34844:2;34835:12;;34635:218;-1:-1;;34635:218;34862:465;;35022:67;35086:2;35081:3;35022:67;;;35122:66;35102:87;;-1:-1;;;;;35218:2;35209:12;;35202:88;35318:2;35309:12;;35008:319;-1:-1;;35008:319;35336:465;;35496:67;35560:2;35555:3;35496:67;;;35596:66;35576:87;;35697:66;35692:2;35683:12;;35676:88;35792:2;35783:12;;35482:319;-1:-1;;35482:319;35810:364;;35970:67;36034:2;36029:3;35970:67;;;36070:66;36050:87;;36165:2;36156:12;;35956:218;-1:-1;;35956:218;36183:364;;36343:67;36407:2;36402:3;36343:67;;;36443:66;36423:87;;36538:2;36529:12;;36329:218;-1:-1;;36329:218;36556:364;;36716:67;36780:2;36775:3;36716:67;;;36816:66;36796:87;;36911:2;36902:12;;36702:218;-1:-1;;36702:218;36929:465;;37089:67;37153:2;37148:3;37089:67;;;37189:66;37169:87;;-1:-1;;;;;37285:2;37276:12;;37269:88;37385:2;37376:12;;37075:319;-1:-1;;37075:319;37481:1120;37713:22;;37481:1120;;37646:4;37637:14;;;37741:62;37641:3;37713:22;37741:62;;;37666:143;37889:4;37882:5;37878:16;37872:23;37901:63;37958:4;37953:3;37949:14;37935:12;37901:63;;;37819:151;38047:4;38040:5;38036:16;38030:23;38059:63;38116:4;38111:3;38107:14;38093:12;38059:63;;;37980:148;38213:4;38206:5;38202:16;38196:23;38265:3;38259:4;38255:14;38248:4;38243:3;38239:14;38232:38;38285:99;38379:4;38365:12;38285:99;;;38277:107;;38138:258;38471:4;38464:5;38460:16;38454:23;38483:86;38563:4;38558:3;38554:14;38540:12;38483:86;;;-1:-1;38592:4;37619:982;-1:-1;;;37619:982;38608:122;38707:18;;38701:29;38808:1536;39034:22;;38808:1536;;38965:5;38956:15;;;39062:62;38960:3;39034:22;39062:62;;;38986:144;39209:4;39202:5;39198:16;39192:23;39221:63;39278:4;39273:3;39269:14;39255:12;39221:63;;;39140:150;39369:4;39362:5;39358:16;39352:23;39381:63;39438:4;39433:3;39429:14;39415:12;39381:63;;;39300:150;39527:4;39520:5;39516:16;39510:23;39539:63;39596:4;39591:3;39587:14;39573:12;39539:63;;;39460:148;39682:4;39675:5;39671:16;39665:23;39694:63;39751:4;39746:3;39742:14;39728:12;39694:63;;;39618:145;39843:4;39836:5;39832:16;39826:23;39855:63;39912:4;39907:3;39903:14;39889:12;39855:63;;;39773:151;39999:4;39992:5;39988:16;39982:23;40011:76;40081:4;40076:3;40072:14;40058:12;40011:76;;;39934:159;40167:4;40160:5;40156:16;40150:23;40219:3;40213:4;40209:14;40202:4;40197:3;40193:14;40186:38;40239:67;40301:4;40287:12;40239:67;;;40231:75;38938:1406;-1:-1;;;;;38938:1406;40420:655;40630:22;;40553:4;40544:14;;;40658:78;40548:3;40630:22;40658:78;;;40573:169;40822:4;40815:5;40811:16;40805:23;40834:63;40891:4;40886:3;40882:14;40868:12;40834:63;;;40752:151;40979:4;40972:5;40968:16;40962:23;40991:63;41048:4;41043:3;41039:14;41025:12;40991:63;;;40913:147;40526:549;;;;41908:1201;42125:22;;41908:1201;;42057:4;42048:14;;;42153:62;42052:3;42125:22;42153:62;;;42077:144;42296:4;42289:5;42285:16;42279:23;42308:78;42380:4;42375:3;42371:14;42357:12;42308:78;;;42231:161;42467:4;42460:5;42456:16;42450:23;42519:3;42513:4;42509:14;42502:4;42497:3;42493:14;42486:38;42539:67;42601:4;42587:12;42539:67;;;42531:75;;42402:216;42694:4;42687:5;42683:16;42677:23;42706:63;42763:4;42758:3;42754:14;42740:12;42706:63;;;42628:147;42854:4;42847:5;42843:16;42837:23;42906:3;42900:4;42896:14;42889:4;42884:3;42880:14;42873:38;42926:145;43066:4;43052:12;42926:145;;43179:1249;43404:22;;43179:1249;;43336:4;43327:14;;;43432:70;43331:3;43404:22;43432:70;;;43356:152;43583:4;43576:5;43572:16;43566:23;43595:86;43675:4;43670:3;43666:14;43652:12;43595:86;;;43518:169;43762:4;43755:5;43751:16;43745:23;43814:3;43808:4;43804:14;43797:4;43792:3;43788:14;43781:38;43834:75;43904:4;43890:12;43834:75;;;43826:83;;43697:224;43997:4;43990:5;43986:16;43980:23;44009:71;44074:4;44069:3;44065:14;44051:12;44009:71;;;43931:155;44165:4;44158:5;44154:16;44148:23;44217:3;44211:4;44207:14;44200:4;44195:3;44191:14;44184:38;44237:153;44385:4;44371:12;44237:153;;44512:1020;44739:22;;44512:1020;;44661:4;44652:14;;;44767:62;44656:3;44739:22;44767:62;;;44681:154;44911:4;44904:5;44900:16;44894:23;44963:3;44957:4;44953:14;44946:4;44941:3;44937:14;44930:38;44983:99;45077:4;45063:12;44983:99;;;44975:107;;44845:249;45169:4;45162:5;45158:16;45152:23;45221:3;45215:4;45211:14;45204:4;45199:3;45195:14;45188:38;45241:99;45335:4;45321:12;45241:99;;;45233:107;;45104:248;45425:4;45418:5;45414:16;45408:23;45437:63;45494:4;45489:3;45485:14;45471:12;45437:63;;46015:118;46104:23;46121:5;46104:23;;46140:213;46258:2;46243:18;;46272:71;46247:9;46316:6;46272:71;;46360:408;46524:2;46509:18;;46538:71;46513:9;46582:6;46538:71;;;46657:9;46651:4;46647:20;46642:2;46631:9;46627:18;46620:48;46682:76;46753:4;46744:6;46682:76;;46775:468;46969:2;46954:18;;46983:71;46958:9;47027:6;46983:71;;;47102:9;47096:4;47092:20;47087:2;47076:9;47072:18;47065:48;47127:106;47228:4;47219:6;47127:106;;47250:361;47418:2;47432:47;;;47403:18;;47493:108;47403:18;47587:6;47493:108;;47618:620;47864:2;47878:47;;;47849:18;;47939:108;47849:18;48033:6;47939:108;;;47931:116;;48095:9;48089:4;48085:20;48080:2;48069:9;48065:18;48058:48;48120:108;48223:4;48214:6;48120:108;;48245:361;48413:2;48427:47;;;48398:18;;48488:108;48398:18;48582:6;48488:108;;48613:461;48831:2;48845:47;;;48816:18;;48906:158;48816:18;49050:6;48906:158;;49081:516;49271:2;49285:47;;;49256:18;;49346:84;49256:18;49416:6;49346:84;;;49338:92;;49478:9;49472:4;49468:20;49463:2;49452:9;49448:18;49441:48;49503:84;49582:4;49573:6;49503:84;;49604:407;49795:2;49809:47;;;49780:18;;49870:131;49780:18;49870:131;;50018:407;50209:2;50223:47;;;50194:18;;50284:131;50194:18;50284:131;;50432:407;50623:2;50637:47;;;50608:18;;50698:131;50608:18;50698:131;;50846:407;51037:2;51051:47;;;51022:18;;51112:131;51022:18;51112:131;;51260:407;51451:2;51465:47;;;51436:18;;51526:131;51436:18;51526:131;;51674:407;51865:2;51879:47;;;51850:18;;51940:131;51850:18;51940:131;;52088:407;52279:2;52293:47;;;52264:18;;52354:131;52264:18;52354:131;;52502:407;52693:2;52707:47;;;52678:18;;52768:131;52678:18;52768:131;;52916:407;53107:2;53121:47;;;53092:18;;53182:131;53092:18;53182:131;;53330:407;53521:2;53535:47;;;53506:18;;53596:131;53506:18;53596:131;;53744:407;53935:2;53949:47;;;53920:18;;54010:131;53920:18;54010:131;;54158:389;54340:2;54354:47;;;54325:18;;54415:122;54325:18;54523:6;54415:122;;54554:269;54700:2;54685:18;;54714:99;54689:9;54786:6;54714:99;;54830:388;55004:2;54989:18;;55018:99;54993:9;55090:6;55018:99;;;55128:80;55204:2;55193:9;55189:18;55180:6;55128:80;;;54975:243;;;;;;55225:795;55491:3;55476:19;;55506:99;55480:9;55578:6;55506:99;;;55616:80;55692:2;55681:9;55677:18;55668:6;55616:80;;;55744:9;55738:4;55734:20;55729:2;55718:9;55714:18;55707:48;55769:84;55848:4;55839:6;55769:84;;;55761:92;;55901:9;55895:4;55891:20;55886:2;55875:9;55871:18;55864:48;55926:84;56005:4;55996:6;55926:84;;;55918:92;55462:558;-1:-1;;;;;;55462:558;56027:507;56229:2;56214:18;;56243:99;56218:9;56315:6;56243:99;;;56353:80;56429:2;56418:9;56414:18;56405:6;56353:80;;;56444;56520:2;56509:9;56505:18;56496:6;56444:80;;56541:1191;56949:3;56934:19;;56964:99;56938:9;57036:6;56964:99;;;57111:9;57105:4;57101:20;57096:2;57085:9;57081:18;57074:48;57136:116;57247:4;57238:6;57136:116;;;57128:124;;57300:9;57294:4;57290:20;57285:2;57274:9;57270:18;57263:48;57325:116;57436:4;57427:6;57325:116;;;57317:124;;57489:9;57483:4;57479:20;57474:2;57463:9;57459:18;57452:48;57514:116;57625:4;57616:6;57514:116;;;57506:124;;57641:81;57717:3;57706:9;57702:19;57693:6;57641:81;;57739:388;57913:2;57898:18;;57927:99;57902:9;57999:6;57927:99;;;58037:80;58113:2;58102:9;58098:18;58089:6;58037:80;;58134:1391;58538:3;58523:19;;58553:99;58527:9;58625:6;58553:99;;;58663:80;58739:2;58728:9;58724:18;58715:6;58663:80;;;58754;58830:2;58819:9;58815:18;58806:6;58754:80;;;58845;58921:2;58910:9;58906:18;58897:6;58845:80;;;58936:81;59012:3;59001:9;58997:19;58988:6;58936:81;;;59066:9;59060:4;59056:20;59050:3;59039:9;59035:19;59028:49;59091:84;59170:4;59161:6;59091:84;;;59083:92;;59186:81;59262:3;59251:9;59247:19;59238:6;59186:81;;;59278:79;59352:3;59341:9;59337:19;59328:6;59278:79;;;59406:9;59400:4;59396:20;59390:3;59379:9;59375:19;59368:49;59431:84;59510:4;59501:6;59431:84;;;59423:92;58509:1016;-1:-1;;;;;;;;;;;58509:1016;59532:947;59834:3;59819:19;;59849:99;59823:9;59921:6;59849:99;;;59959:80;60035:2;60024:9;60020:18;60011:6;59959:80;;;60050;60126:2;60115:9;60111:18;60102:6;60050:80;;;60141;60217:2;60206:9;60202:18;60193:6;60141:80;;;60232:79;60306:3;60295:9;60291:19;60282:6;60232:79;;;60360:9;60354:4;60350:20;60344:3;60333:9;60329:19;60322:49;60385:84;60464:4;60455:6;60385:84;;;60377:92;59805:674;-1:-1;;;;;;;;59805:674;60486:827;60760:3;60745:19;;60775:99;60749:9;60847:6;60775:99;;;60885:80;60961:2;60950:9;60946:18;60937:6;60885:80;;;60976;61052:2;61041:9;61037:18;61028:6;60976:80;;;61067:78;61141:2;61130:9;61126:18;61117:6;61067:78;;;61194:9;61188:4;61184:20;61178:3;61167:9;61163:19;61156:49;61219:84;61298:4;61289:6;61219:84;;;61211:92;60731:582;-1:-1;;;;;;;60731:582;61320:747;61578:3;61563:19;;61593:99;61567:9;61665:6;61593:99;;;61703:80;61779:2;61768:9;61764:18;61755:6;61703:80;;;61794;61870:2;61859:9;61855:18;61846:6;61794:80;;;61885;61961:2;61950:9;61946:18;61937:6;61885:80;;;61976:81;62052:3;62041:9;62037:19;62028:6;61976:81;;62074:867;62360:3;62345:19;;62375:99;62349:9;62447:6;62375:99;;;62485:80;62561:2;62550:9;62546:18;62537:6;62485:80;;;62576;62652:2;62641:9;62637:18;62628:6;62576:80;;;62667;62743:2;62732:9;62728:18;62719:6;62667:80;;;62758:81;62834:3;62823:9;62819:19;62810:6;62758:81;;;62850;62926:3;62915:9;62911:19;62902:6;62850:81;;63343:507;63545:2;63530:18;;63559:99;63534:9;63631:6;63559:99;;;63669:80;63745:2;63734:9;63730:18;63721:6;63669:80;;64371:711;64619:3;64604:19;;64634:99;64608:9;64706:6;64634:99;;;64744:80;64820:2;64809:9;64805:18;64796:6;64744:80;;;64835;64911:2;64900:9;64896:18;64887:6;64835:80;;;64963:9;64957:4;64953:20;64948:2;64937:9;64933:18;64926:48;64988:84;65067:4;65058:6;64988:84;;65089:373;65263:2;65277:47;;;65248:18;;65338:114;65248:18;65438:6;65338:114;;65469:357;65635:2;65649:47;;;65620:18;;65710:106;65620:18;65802:6;65710:106;;65833:492;66035:2;66049:47;;;66020:18;;66110:114;66020:18;66210:6;66110:114;;;66102:122;;66235:80;66311:2;66300:9;66296:18;66287:6;66235:80;;66332:213;66450:2;66435:18;;66464:71;66439:9;66508:6;66464:71;;66552:843;66854:3;66839:19;;66869:71;66843:9;66913:6;66869:71;;;66951:72;67019:2;67008:9;67004:18;66995:6;66951:72;;;67071:9;67065:4;67061:20;67056:2;67045:9;67041:18;67034:48;67096:108;67199:4;67190:6;67096:108;;;67088:116;;67252:9;67246:4;67242:20;67237:2;67226:9;67222:18;67215:48;67277:108;67380:4;67371:6;67277:108;;67402:256;67464:2;67458:9;67490:17;;;-1:-1;;;;;67550:34;;67586:22;;;67547:62;67544:2;;;67622:1;67619;67612:12;67544:2;67638;67631:22;67442:216;;-1:-1;67442:216;67665:258;;-1:-1;;;;;67816:6;67813:30;67810:2;;;67856:1;67853;67846:12;67810:2;-1:-1;67885:4;67873:17;;;67903:15;;67747:176;68460:258;;-1:-1;;;;;68595:6;68592:30;68589:2;;;68635:1;68632;68625:12;68589:2;-1:-1;68708:4;68679;68656:17;;;;-1:-1;;68652:33;68698:15;;68526:192;68728:119;68834:4;68822:17;;68802:45;69419:137;69542:6;69522:34;69834:103;69920:12;;69904:33;70415:123;-1:-1;70530:3;;70514:24;72074:168;72182:19;;;72231:4;72222:14;;72175:67;74991:91;;75053:24;75071:5;75053:24;;75168:156;75255:5;75261:58;75255:5;75261:58;;75331:136;75408:5;75414:48;75408:5;75414:48;;75474:142;75554:5;75560:51;75554:5;75560:51;;75623:140;75702:5;75708:50;75702:5;75708:50;;75770:121;-1:-1;;;;;75832:54;;75815:76;75977:96;-1:-1;;;;;76038:30;;76021:52;76080:156;;76182:49;76225:5;76182:49;;76243:136;;76335:39;76368:5;76335:39;;76386:142;;76481:42;76517:5;76481:42;;76535:140;;76629:41;76664:5;76629:41;;76683:145;76764:6;76759:3;76754;76741:30;-1:-1;76820:1;76802:16;;76795:27;76734:94;76837:268;76902:1;76909:101;76923:6;76920:1;76917:13;76909:101;;;76990:11;;;76984:18;76971:11;;;76964:39;76945:2;76938:10;76909:101;;;77025:6;77022:1;77019:13;77016:2;;;-1:-1;;77090:1;77072:16;;77065:27;76886:219;77113:97;77201:2;77181:14;-1:-1;;77177:28;;77161:49;77218:116;77312:1;77305:5;77302:12;77292:2;;77318:9;77292:2;77286:48;;77341:106;77425:1;77418:5;77415:12;77405:2;;77431:9;77454:109;77541:1;77534:5;77531:12;77521:2;;77547:9;77570:108;77656:1;77649:5;77646:12;77636:2;;77662:9;77685:117;77754:24;77772:5;77754:24;;;77747:5;77744:35;77734:2;;77793:1;77790;77783:12;77809:117;77878:24;77896:5;77878:24;;77933:112;78020:1;78013:5;78010:12;78000:2;;78036:1;78033;78026:12;78176:115;78244:23;78261:5;78244:23;","source":"pragma solidity ^0.5.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\"openzeppelin-solidity/contracts/math/SafeMath.sol\\";\\nimport \\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\";\\nimport \\"./utils/SolRsaVerify.sol\\";\\n\\nimport { WorkersImpl } from \\"./impl/WorkersImpl.sol\\";\\nimport { PrincipalImpl } from \\"./impl/PrincipalImpl.sol\\";\\nimport { TaskImpl } from \\"./impl/TaskImpl.sol\\";\\nimport { SecretContractImpl } from \\"./impl/SecretContractImpl.sol\\";\\nimport { EnigmaCommon } from \\"./impl/EnigmaCommon.sol\\";\\nimport { EnigmaState } from \\"./impl/EnigmaState.sol\\";\\nimport { EnigmaEvents } from \\"./impl/EnigmaEvents.sol\\";\\nimport { EnigmaStorage } from \\"./impl/EnigmaStorage.sol\\";\\nimport { Getters } from \\"./impl/Getters.sol\\";\\nimport { ERC20 } from \\"./interfaces/ERC20.sol\\";\\n\\ncontract Enigma is EnigmaStorage, EnigmaEvents, Getters {\\n    using SafeMath for uint256;\\n    using ECDSA for bytes32;\\n\\n    // ========================================== Constructor ==========================================\\n\\n    constructor(address _tokenAddress, address _principal, uint _epochSize) public {\\n        state.engToken = ERC20(_tokenAddress);\\n        state.epochSize = _epochSize;\\n        state.taskTimeoutSize = 200;\\n        state.principal = _principal;\\n        state.stakingThreshold = 1;\\n        state.workerGroupSize = 1;\\n    }\\n\\n    // ========================================== Modifiers ==========================================\\n\\n    /**\\n    * Checks if the custodian wallet is registered as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerRegistered(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status != EnigmaCommon.WorkerStatus.Unregistered, \\"Unregistered worker\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged in as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedIn, \\"Worker not logged in\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged out as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedOut(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not logged out\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if worker can log in\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canLogIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(getFirstBlockNumber(block.number) != 0, \\"Principal node has not been initialized\\");\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        require(worker.balance >= state.stakingThreshold, \\"Worker\'s balance is not sufficient\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the worker can withdraw\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canWithdraw(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        EnigmaCommon.WorkerLog memory workerLog = WorkersImpl.getLatestWorkerLogImpl(worker, block.number);\\n        require(workerLog.workerEventType == EnigmaCommon.WorkerLogType.LogOut,\\n            \\"Worker\'s last log is not of LogOut type\\");\\n        require(getFirstBlockNumber(block.number) > workerLog.blockNumber,\\n            \\"Cannot withdraw in same epoch as log out event\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has not been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractUndefined(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Undefined, \\"Secret contract already deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractDeployed(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Deployed, \\"Secret contract not deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks task record has been created and is still pending receipt\\n    *\\n    * @param _taskId Task ID\\n    */\\n    modifier taskWaiting(bytes32 _taskId) {\\n        require(state.tasks[_taskId].status == EnigmaCommon.TaskStatus.RecordCreated, \\"Task is not waiting\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure signing key used for registration is unique\\n    *\\n    * @param _signer Signing key\\n    */\\n    modifier isUniqueSigningKey(address _signer) {\\n        for (uint i = 0; i < state.workerAddresses.length; i++) {\\n            require(state.workers[state.workerAddresses[i]].signer != _signer, \\"Not a unique signing key\\");\\n        }\\n        _;\\n    }\\n\\n    // ========================================== Functions ==========================================\\n\\n    /**\\n    * Registers a new worker or change the signer parameters of an existing\\n    * worker. This should be called by every worker (and the principal)\\n    * node in order to receive tasks.\\n    *\\n    * @param _signer The signer address, derived from the enclave public key\\n    * @param _report The RLP encoded report returned by the IAS\\n    * @param _signature Signature\\n    */\\n    function register(address _signer, bytes memory _report, bytes memory _signature)\\n    public\\n    isUniqueSigningKey(_signer)\\n    {\\n        WorkersImpl.registerImpl(state, _signer, _report, _signature);\\n    }\\n//\\n    /**\\n    * Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    *\\n    * @param _custodian The worker\'s ETH address\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function deposit(address _custodian, uint _amount)\\n    public\\n    workerRegistered(_custodian)\\n    {\\n        WorkersImpl.depositImpl(state, _custodian, _amount);\\n    }\\n\\n    /**\\n    * Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    *\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function withdraw(uint _amount)\\n    public\\n    canWithdraw(msg.sender)\\n    {\\n        WorkersImpl.withdrawImpl(state, _amount);\\n    }\\n\\n    /**\\n    * Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\n    * selection process.\\n    */\\n    function login() public canLogIn(msg.sender) {\\n        WorkersImpl.loginImpl(state);\\n    }\\n\\n    /**\\n    * Logout worker. Worker must be logged in to do so.\\n    */\\n    function logout() public workerLoggedIn(msg.sender) {\\n        WorkersImpl.logoutImpl(state);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContractFailure(\\n        bytes32 _taskId,\\n        bytes32 _codeHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractFailureImpl(state, _taskId, _codeHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _preCodeHash Predeployed bytecode hash\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContract(\\n        bytes32 _taskId,\\n        bytes32 _preCodeHash,\\n        bytes32 _codeHash,\\n        bytes32 _initStateDeltaHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractImpl(state, _taskId, _preCodeHash, _codeHash, _initStateDeltaHash,\\n            _optionalEthereumData, _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Check if secret contract has been deployed\\n    *\\n    * @return  Number of deployed secret contracts\\n    */\\n    function countSecretContracts()\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return SecretContractImpl.countSecretContractsImpl(state);\\n    }\\n\\n    /**\\n    * Get deployed secret contract addresses within a range\\n    *\\n    * @param _start Start of range\\n    * @param _stop End of range\\n    * @return Subset of deployed secret contract addresses\\n    */\\n    function getSecretContractAddresses(uint _start, uint _stop)\\n    public\\n    view\\n    returns (bytes32[] memory)\\n    {\\n        return SecretContractImpl.getSecretContractAddressesImpl(state, _start, _stop);\\n    }\\n\\n    /**\\n    * Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\n    * generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\n    * task deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\n    * the on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\n    * invalid.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    * @param _nonce Locally-computed nonce value for this deployment\\n    */\\n    function createDeploymentTaskRecord(\\n        bytes32 _inputsHash,\\n        uint _gasLimit,\\n        uint _gasPx,\\n        uint _firstBlockNumber,\\n        uint _nonce\\n    )\\n    public\\n    {\\n        TaskImpl.createDeploymentTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber, _nonce);\\n    }\\n\\n    /**\\n    * Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\n    * contract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\n    * the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecord(\\n        bytes32 _inputsHash,\\n        uint _gasLimit,\\n        uint _gasPx,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    {\\n        TaskImpl.createTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\n    * transferring task fee from sender to contract, generating the unique taskId, saving the block number\\n    * when the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimits ENG gas limit\\n    * @param _gasPxs ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecords(\\n        bytes32[] memory _inputsHashes,\\n        uint[] memory _gasLimits,\\n        uint[] memory _gasPxs,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    {\\n        TaskImpl.createTaskRecordsImpl(state, _inputsHashes, _gasLimits, _gasPxs, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\n    * The task record is finalized and the worker is credited with the task fee.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _stateDeltaHash Input state delta hash\\n    * @param _outputHash Output state hash\\n    * @param _optionalEthereumData Output state hash\\n    * @param _optionalEthereumContractAddress Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitReceipt(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _stateDeltaHash,\\n        bytes32 _outputHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitReceiptImpl(state, _scAddr, _taskId, _stateDeltaHash, _outputHash, _optionalEthereumData,\\n            _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\n    * updated to indicate task failure.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _outputHash Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitTaskFailure(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _outputHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitTaskFailureImpl(state, _scAddr, _taskId, _outputHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    *\\n    * @param _taskId Unique taskId\\n    */\\n    function returnFeesForTask(bytes32 _taskId)\\n    public\\n    taskWaiting(_taskId)\\n    {\\n        TaskImpl.returnFeesForTaskImpl(state, _taskId);\\n    }\\n\\n    /**\\n    * Reparameterizing workers with a new seed\\n    * This should be called for each epoch by the Principal node\\n    *\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n    * @param _seed The random integer generated by the enclave\\n    * @param _sig Principal node\'s signature\\n    */\\n    function setWorkersParams(uint _blockNumber, uint _seed, bytes memory _sig)\\n    public\\n    workerRegistered(msg.sender)\\n    {\\n        PrincipalImpl.setWorkersParamsImpl(state, _blockNumber, _seed, _sig);\\n    }\\n\\n    /**\\n    * Get active workers before a certain block number\\n    *\\n    * @param _blockNumber Block number\\n    */\\n    function getActiveWorkers(uint _blockNumber)\\n    public\\n    view\\n    returns (address[] memory, uint[] memory)\\n    {\\n        return PrincipalImpl.getActiveWorkersImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get the first block number of an epoch that a given block number belongs to\\n    *\\n    * @param _blockNumber Block number\\n    * @return Block number\\n    */\\n    function getFirstBlockNumber(uint _blockNumber)\\n    public\\n    view\\n    returns (uint) {\\n        return WorkersImpl.getFirstBlockNumberImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get worker params for an epoch given a particular block number\\n    *\\n    * @param _blockNumber Block number\\n    * @return Epoch\'s first block number\\n    * @return Seed\\n    * @return Array of worker\'s signing addresses\\n    * @return Array of worker\'s stakes\\n    */\\n    function getWorkerParams(uint _blockNumber)\\n    public\\n    view\\n    returns (uint, uint, address[] memory, uint[] memory) {\\n        return WorkersImpl.getWorkerParamsImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\n    * and the secret contract address.\\n    *\\n    * @param _blockNumber Block number the task record was mined\\n    * @param _scAddr Secret contract address\\n    * @return Selected workers\' addresses\\n    */\\n    function getWorkerGroup(uint _blockNumber, bytes32 _scAddr)\\n    public\\n    view\\n    returns (address[] memory)\\n    {\\n        return WorkersImpl.getWorkerGroupImpl(state, _blockNumber, _scAddr);\\n    }\\n\\n    /**\\n    * The RLP encoded report returned by the IAS server\\n    *\\n    * @param _custodian The worker\'s custodian address\\n    */\\n    function getReport(address _custodian)\\n    public\\n    view\\n    workerRegistered(_custodian)\\n    returns (address, bytes memory)\\n    {\\n        return WorkersImpl.getReportImpl(state, _custodian);\\n    }\\n\\n    /**\\n    * This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n    * @param _data The report itself\\n    * @param _signature The signature of the report\\n    */\\n    function verifyReport(bytes memory _data, bytes memory _signature)\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return WorkersImpl.verifyReportImpl(_data, _signature);\\n    }\\n}\\n","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[829]},"id":830,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":830,"sourceUnit":12318,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":830,"sourceUnit":12190,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":5,"nodeType":"ImportDirective","scope":830,"sourceUnit":12109,"src":"184:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":7,"nodeType":"ImportDirective","scope":830,"sourceUnit":9282,"src":"220:53:0","symbolAliases":[{"foreign":6,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":9,"nodeType":"ImportDirective","scope":830,"sourceUnit":3110,"src":"274:57:0","symbolAliases":[{"foreign":8,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":11,"nodeType":"ImportDirective","scope":830,"sourceUnit":6005,"src":"332:47:0","symbolAliases":[{"foreign":10,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":13,"nodeType":"ImportDirective","scope":830,"sourceUnit":3748,"src":"380:67:0","symbolAliases":[{"foreign":12,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":15,"nodeType":"ImportDirective","scope":830,"sourceUnit":2226,"src":"448:55:0","symbolAliases":[{"foreign":14,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":17,"nodeType":"ImportDirective","scope":830,"sourceUnit":2412,"src":"504:53:0","symbolAliases":[{"foreign":16,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":19,"nodeType":"ImportDirective","scope":830,"sourceUnit":2365,"src":"558:55:0","symbolAliases":[{"foreign":18,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":21,"nodeType":"ImportDirective","scope":830,"sourceUnit":2420,"src":"614:57:0","symbolAliases":[{"foreign":20,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":23,"nodeType":"ImportDirective","scope":830,"sourceUnit":2585,"src":"672:45:0","symbolAliases":[{"foreign":22,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":25,"nodeType":"ImportDirective","scope":830,"sourceUnit":10267,"src":"718:47:0","symbolAliases":[{"foreign":24,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":26,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2419,"src":"786:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2419","typeString":"contract EnigmaStorage"}},"id":27,"nodeType":"InheritanceSpecifier","src":"786:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":28,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2364,"src":"801:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2364","typeString":"contract EnigmaEvents"}},"id":29,"nodeType":"InheritanceSpecifier","src":"801:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":30,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2584,"src":"815:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2584","typeString":"contract Getters"}},"id":31,"nodeType":"InheritanceSpecifier","src":"815:7:0"}],"contractDependencies":[2364,2419,2584],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":829,"linearizedBaseContracts":[829,2584,2364,2419],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":34,"libraryName":{"contractScope":null,"id":32,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":12317,"src":"835:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$12317","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"829:27:0","typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":37,"libraryName":{"contractScope":null,"id":35,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":12189,"src":"867:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$12189","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"861:24:0","typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":84,"nodeType":"Block","src":"1076:238:0","statements":[{"expression":{"argumentTypes":null,"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":46,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1086:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":48,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2373,"src":"1086:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10266","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":50,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1109:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10266,"src":"1103:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10266_$","typeString":"type(contract ERC20)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1103:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10266","typeString":"contract ERC20"}},"src":"1086:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10266","typeString":"contract ERC20"}},"id":53,"nodeType":"ExpressionStatement","src":"1086:37:0"},{"expression":{"argumentTypes":null,"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":54,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1133:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":56,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2375,"src":"1133:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":57,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"1151:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1133:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":59,"nodeType":"ExpressionStatement","src":"1133:28:0"},{"expression":{"argumentTypes":null,"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":60,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1171:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":62,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2377,"src":"1171:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"323030","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1195:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"1171:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65,"nodeType":"ExpressionStatement","src":"1171:27:0"},{"expression":{"argumentTypes":null,"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":66,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1208:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":68,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"1208:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":69,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1226:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1208:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":71,"nodeType":"ExpressionStatement","src":"1208:28:0"},{"expression":{"argumentTypes":null,"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":72,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1246:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"1246:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1271:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1246:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":77,"nodeType":"ExpressionStatement","src":"1246:26:0"},{"expression":{"argumentTypes":null,"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":78,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1282:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":80,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2409,"src":"1282:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1306:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1282:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":83,"nodeType":"ExpressionStatement","src":"1282:25:0"}]},"documentation":null,"id":85,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":85,"src":"1009:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":41,"name":"_principal","nodeType":"VariableDeclaration","scope":85,"src":"1032:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":43,"name":"_epochSize","nodeType":"VariableDeclaration","scope":85,"src":"1052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint","nodeType":"ElementaryTypeName","src":"1052:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1008:60:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"1076:0:0"},"scope":829,"src":"997:317:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":109,"nodeType":"Block","src":"1604:181:0","statements":[{"assignments":[92],"declarations":[{"constant":false,"id":92,"name":"worker","nodeType":"VariableDeclaration","scope":109,"src":"1614:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":91,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2132,"src":"1614:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":97,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":93,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1650:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":94,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"1650:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2132_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":96,"indexExpression":{"argumentTypes":null,"id":95,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"1664:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1650:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1614:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":99,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1688:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2124,"src":"1688:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":101,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"1705:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"1705:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2173_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1705:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1688:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1745:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"1680:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1680:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"1680:87:0"},{"id":108,"nodeType":"PlaceholderStatement","src":"1777:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":110,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"name":"_user","nodeType":"VariableDeclaration","scope":110,"src":"1589:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1588:15:0"},"src":"1563:222:0","visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"1968:178:0","statements":[{"assignments":[117],"declarations":[{"constant":false,"id":117,"name":"worker","nodeType":"VariableDeclaration","scope":134,"src":"1978:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":116,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2132,"src":"1978:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":122,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":118,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"2014:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"2014:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2132_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":121,"indexExpression":{"argumentTypes":null,"id":120,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2028:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2014:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1978:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":124,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2052:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2124,"src":"2052:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":126,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"2069:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"2069:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2173_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2069:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2052:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2105:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"2044:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2044:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"2044:84:0"},{"id":133,"nodeType":"PlaceholderStatement","src":"2138:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":135,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"name":"_user","nodeType":"VariableDeclaration","scope":135,"src":"1953:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"1953:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1952:15:0"},"src":"1929:217:0","visibility":"internal"},{"body":{"id":159,"nodeType":"Block","src":"2331:180:0","statements":[{"assignments":[142],"declarations":[{"constant":false,"id":142,"name":"worker","nodeType":"VariableDeclaration","scope":159,"src":"2341:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":141,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2132,"src":"2341:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":147,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":143,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"2377:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"2377:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2132_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":146,"indexExpression":{"argumentTypes":null,"id":145,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2391:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2377:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2341:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":149,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2415:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2124,"src":"2415:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":151,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"2432:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"2432:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2173_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2432:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2415:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2469:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"2407:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2407:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":157,"nodeType":"ExpressionStatement","src":"2407:86:0"},{"id":158,"nodeType":"PlaceholderStatement","src":"2503:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":160,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"name":"_user","nodeType":"VariableDeclaration","scope":160,"src":"2316:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2315:15:0"},"src":"2291:220:0","visibility":"internal"},{"body":{"id":203,"nodeType":"Block","src":"2660:395:0","statements":[{"assignments":[167],"declarations":[{"constant":false,"id":167,"name":"worker","nodeType":"VariableDeclaration","scope":203,"src":"2670:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":166,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2132,"src":"2670:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":172,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":168,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"2706:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"2706:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2132_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":171,"indexExpression":{"argumentTypes":null,"id":170,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2720:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2706:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2670:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":175,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12881,"src":"2764:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2764:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":174,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"2744:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2744:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2781:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2744:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2784:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"2736:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":182,"nodeType":"ExpressionStatement","src":"2736:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":184,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2844:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2124,"src":"2844:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":186,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"2861:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"2861:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2173_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2861:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2844:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2898:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"2836:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2836:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":192,"nodeType":"ExpressionStatement","src":"2836:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":194,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2958:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"2958:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":196,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"2976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"2976:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3000:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"2950:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2950:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"ExpressionStatement","src":"2950:87:0"},{"id":202,"nodeType":"PlaceholderStatement","src":"3047:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":204,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"name":"_user","nodeType":"VariableDeclaration","scope":204,"src":"2645:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"2645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2644:15:0"},"src":"2627:428:0","visibility":"internal"},{"body":{"id":260,"nodeType":"Block","src":"3213:580:0","statements":[{"assignments":[211],"declarations":[{"constant":false,"id":211,"name":"worker","nodeType":"VariableDeclaration","scope":260,"src":"3223:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":210,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2132,"src":"3223:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":216,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"3259:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"3259:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2132_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":215,"indexExpression":{"argumentTypes":null,"id":214,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"3273:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3259:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3223:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":218,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3297:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2124,"src":"3297:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":220,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"3314:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"3314:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2173_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3314:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3297:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3351:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"3289:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3289:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"ExpressionStatement","src":"3289:104:0"},{"assignments":[230],"declarations":[{"constant":false,"id":230,"name":"workerLog","nodeType":"VariableDeclaration","scope":260,"src":"3403:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2150_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":229,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2150,"src":"3403:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2150_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":237,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":233,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3480:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":234,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12881,"src":"3488:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3488:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":231,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"3445:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9280,"src":"3445:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2132_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2150_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3445:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2150_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3403:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2181","typeString":"enum EnigmaCommon.WorkerLogType"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3519:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2150_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2145,"src":"3519:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2181","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":241,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"3548:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2181,"src":"3548:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2181_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3548:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2181","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3519:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3595:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"3511:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3511:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"ExpressionStatement","src":"3511:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":250,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12881,"src":"3675:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3675:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":249,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3655:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3655:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":253,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3691:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2150_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2147,"src":"3691:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3655:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3726:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"3647:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3647:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":258,"nodeType":"ExpressionStatement","src":"3647:128:0"},{"id":259,"nodeType":"PlaceholderStatement","src":"3785:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":261,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"name":"_user","nodeType":"VariableDeclaration","scope":261,"src":"3198:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"3198:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3197:15:0"},"src":"3177:616:0","visibility":"internal"},{"body":{"id":279,"nodeType":"Block","src":"3960:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2176","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":266,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"3978:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2401,"src":"3978:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2162_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":269,"indexExpression":{"argumentTypes":null,"id":268,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3994:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3978:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2162_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2161,"src":"3978:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2176","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4013:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2176,"src":"4013:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2176_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4013:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2176","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"3978:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4058:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"3970:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"ExpressionStatement","src":"3970:123:0"},{"id":278,"nodeType":"PlaceholderStatement","src":"4103:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":280,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"name":"_scAddr","nodeType":"VariableDeclaration","scope":280,"src":"3943:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3943:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3942:17:0"},"src":"3916:195:0","visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"4273:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2176","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":285,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4291:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2401,"src":"4291:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2162_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":288,"indexExpression":{"argumentTypes":null,"id":287,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"4307:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4291:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2162_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2161,"src":"4291:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2176","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":290,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4326:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2176,"src":"4326:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2176_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4326:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2176","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4291:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4370:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"4283:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4283:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"ExpressionStatement","src":"4283:118:0"},{"id":297,"nodeType":"PlaceholderStatement","src":"4411:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":299,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"name":"_scAddr","nodeType":"VariableDeclaration","scope":299,"src":"4256:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4256:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4255:17:0"},"src":"4230:189:0","visibility":"internal"},{"body":{"id":317,"nodeType":"Block","src":"4584:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2169","typeString":"enum EnigmaCommon.TaskStatus"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":304,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4602:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2397,"src":"4602:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2120_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":307,"indexExpression":{"argumentTypes":null,"id":306,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"4614:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4602:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2120_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2117,"src":"4602:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2169","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":309,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4633:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2169,"src":"4633:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2169_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4633:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2169","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4602:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"4594:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4594:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":315,"nodeType":"ExpressionStatement","src":"4594:100:0"},{"id":316,"nodeType":"PlaceholderStatement","src":"4704:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":318,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"name":"_taskId","nodeType":"VariableDeclaration","scope":318,"src":"4567:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4567:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4566:17:0"},"src":"4546:166:0","visibility":"internal"},{"body":{"id":351,"nodeType":"Block","src":"4874:202:0","statements":[{"body":{"id":348,"nodeType":"Block","src":"4940:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":335,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4962:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"4962:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2132_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":341,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":337,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2386,"src":"4976:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":340,"indexExpression":{"argumentTypes":null,"id":339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4998:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4976:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4962:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2122,"src":"4962:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":343,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"5012:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4962:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5021:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"4954:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4954:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"4954:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4901:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":327,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4905:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2386,"src":"4905:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4905:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4901:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":349,"initializationExpression":{"assignments":[323],"declarations":[{"constant":false,"id":323,"name":"i","nodeType":"VariableDeclaration","scope":349,"src":"4889:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint","nodeType":"ElementaryTypeName","src":"4889:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":325,"initialValue":{"argumentTypes":null,"hexValue":"30","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4898:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4889:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4935:3:0","subExpression":{"argumentTypes":null,"id":331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4935:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"nodeType":"ExpressionStatement","src":"4935:3:0"},"nodeType":"ForStatement","src":"4884:175:0"},{"id":350,"nodeType":"PlaceholderStatement","src":"5068:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":352,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"name":"_signer","nodeType":"VariableDeclaration","scope":352,"src":"4857:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"4857:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4856:17:0"},"src":"4829:247:0","visibility":"internal"},{"body":{"id":373,"nodeType":"Block","src":"5697:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":367,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"5732:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":368,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5739:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":369,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5748:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":370,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5757:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":364,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"5707:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":8548,"src":"5707:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5707:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"5707:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":374,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":361,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":362,"modifierName":{"argumentTypes":null,"id":360,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"5665:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"5665:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"name":"_signer","nodeType":"VariableDeclaration","scope":374,"src":"5586:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"5586:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":356,"name":"_report","nodeType":"VariableDeclaration","scope":374,"src":"5603:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":355,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":358,"name":"_signature","nodeType":"VariableDeclaration","scope":374,"src":"5625:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":357,"name":"bytes","nodeType":"ElementaryTypeName","src":"5625:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5585:64:0"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"5697:0:0"},"scope":829,"src":"5568:207:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":392,"nodeType":"Block","src":"6119:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":387,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6153:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":388,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6160:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":389,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"6172:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":384,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"6129:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":8754,"src":"6129:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6129:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"6129:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":393,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":381,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6103:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":382,"modifierName":{"argumentTypes":null,"id":380,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"6086:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6086:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"name":"_custodian","nodeType":"VariableDeclaration","scope":393,"src":"6037:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"6037:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":378,"name":"_amount","nodeType":"VariableDeclaration","scope":393,"src":"6057:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint","nodeType":"ElementaryTypeName","src":"6057:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6036:34:0"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"6119:0:0"},"scope":829,"src":"6020:167:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":409,"nodeType":"Block","src":"6460:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":405,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6495:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":406,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":402,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"6470:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":8807,"src":"6470:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6470:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"6470:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":410,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":398,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"6444:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6444:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":400,"modifierName":{"argumentTypes":null,"id":397,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6432:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6432:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"name":"_amount","nodeType":"VariableDeclaration","scope":410,"src":"6403:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint","nodeType":"ElementaryTypeName","src":"6403:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6402:14:0"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"6460:0:0"},"scope":829,"src":"6385:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":423,"nodeType":"Block","src":"6725:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":420,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6757:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":417,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"6735:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":8652,"src":"6735:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6735:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"6735:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":424,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"6713:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6713:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":415,"modifierName":{"argumentTypes":null,"id":412,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6704:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6704:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"6694:2:0"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"6725:0:0"},"scope":829,"src":"6680:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":437,"nodeType":"Block","src":"6899:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":434,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6932:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":431,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"6909:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":8693,"src":"6909:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6909:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"6909:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":438,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":427,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"6887:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6887:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":429,"modifierName":{"argumentTypes":null,"id":426,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"6872:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6872:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"6862:2:0"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"6899:0:0"},"scope":829,"src":"6847:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":466,"nodeType":"Block","src":"7477:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":459,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"7528:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":460,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7535:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":461,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"7544:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":462,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7555:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":463,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"7565:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":456,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"7487:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4201,"src":"7487:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7487:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"ExpressionStatement","src":"7487:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":467,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":449,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"7430:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7430:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":451,"modifierName":{"argumentTypes":null,"id":448,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"7415:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7415:26:0"},{"arguments":[{"argumentTypes":null,"id":453,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7464:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":454,"modifierName":{"argumentTypes":null,"id":452,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7446:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"7446:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"name":"_taskId","nodeType":"VariableDeclaration","scope":467,"src":"7299:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7299:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":442,"name":"_codeHash","nodeType":"VariableDeclaration","scope":467,"src":"7324:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7324:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":444,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":467,"src":"7351:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":443,"name":"uint64","nodeType":"ElementaryTypeName","src":"7351:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":446,"name":"_sig","nodeType":"VariableDeclaration","scope":467,"src":"7376:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":445,"name":"bytes","nodeType":"ElementaryTypeName","src":"7376:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"7289:110:0"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"7477:0:0"},"scope":829,"src":"7253:324:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":507,"nodeType":"Block","src":"8630:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":496,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"8674:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":497,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"8681:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":498,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"8690:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":499,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"8704:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":500,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"8715:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":501,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"8748:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":502,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"8771:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":503,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"8805:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":504,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"8815:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":493,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"8640:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4571,"src":"8640:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8640:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"ExpressionStatement","src":"8640:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":508,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":486,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"8583:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8583:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":488,"modifierName":{"argumentTypes":null,"id":485,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"8568:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8568:26:0"},{"arguments":[{"argumentTypes":null,"id":490,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"8617:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":491,"modifierName":{"argumentTypes":null,"id":489,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"8599:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8599:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"name":"_taskId","nodeType":"VariableDeclaration","scope":508,"src":"8291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8291:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":471,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":508,"src":"8316:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8316:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":473,"name":"_codeHash","nodeType":"VariableDeclaration","scope":508,"src":"8346:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8346:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":475,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":508,"src":"8373:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8373:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":477,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":508,"src":"8410:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":476,"name":"bytes","nodeType":"ElementaryTypeName","src":"8410:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":479,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":508,"src":"8454:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"8454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":481,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":508,"src":"8504:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":480,"name":"uint64","nodeType":"ElementaryTypeName","src":"8504:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":483,"name":"_sig","nodeType":"VariableDeclaration","scope":508,"src":"8529:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":482,"name":"bytes","nodeType":"ElementaryTypeName","src":"8529:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8281:271:0"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[],"src":"8630:0:0"},"scope":829,"src":"8252:575:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":518,"nodeType":"Block","src":"9029:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":515,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"9090:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":513,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"9046:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3747_$","typeString":"type(library SecretContractImpl)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"9046:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2410_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9046:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":512,"id":517,"nodeType":"Return","src":"9039:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":519,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"8983:2:0"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"name":"","nodeType":"VariableDeclaration","scope":519,"src":"9019:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint","nodeType":"ElementaryTypeName","src":"9019:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9018:6:0"},"scope":829,"src":"8954:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":536,"nodeType":"Block","src":"9432:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":531,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"9499:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":532,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9506:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":533,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"9514:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":529,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"9449:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3747_$","typeString":"type(library SecretContractImpl)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"9449:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2410_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9449:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":528,"id":535,"nodeType":"Return","src":"9442:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":537,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"name":"_start","nodeType":"VariableDeclaration","scope":537,"src":"9352:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint","nodeType":"ElementaryTypeName","src":"9352:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":523,"name":"_stop","nodeType":"VariableDeclaration","scope":537,"src":"9365:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint","nodeType":"ElementaryTypeName","src":"9365:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9351:25:0"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"name":"","nodeType":"VariableDeclaration","scope":537,"src":"9410:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9410:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":526,"length":null,"nodeType":"ArrayTypeName","src":"9410:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"9409:18:0"},"scope":829,"src":"9316:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"10564:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":553,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"10614:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":554,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"10621:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":555,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"10634:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":556,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"10645:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":557,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10653:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":558,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10672:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":550,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"10574:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4040,"src":"10574:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint256,uint256,uint256,uint256)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10574:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"ExpressionStatement","src":"10574:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":562,"implemented":true,"kind":"function","modifiers":[],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":562,"src":"10425:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10425:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":541,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":562,"src":"10454:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint","nodeType":"ElementaryTypeName","src":"10454:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":543,"name":"_gasPx","nodeType":"VariableDeclaration","scope":562,"src":"10478:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint","nodeType":"ElementaryTypeName","src":"10478:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":545,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":562,"src":"10499:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint","nodeType":"ElementaryTypeName","src":"10499:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":547,"name":"_nonce","nodeType":"VariableDeclaration","scope":562,"src":"10531:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint","nodeType":"ElementaryTypeName","src":"10531:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10415:133:0"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"10564:0:0"},"scope":829,"src":"10380:306:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":583,"nodeType":"Block","src":"11414:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":576,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"11454:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":577,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"11461:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":578,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"11474:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":579,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"11485:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":580,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"11493:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":573,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"11424:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4806,"src":"11424:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint256,uint256,uint256)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11424:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":582,"nodeType":"ExpressionStatement","src":"11424:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":584,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":584,"src":"11296:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11296:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":566,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":584,"src":"11325:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint","nodeType":"ElementaryTypeName","src":"11325:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":568,"name":"_gasPx","nodeType":"VariableDeclaration","scope":584,"src":"11349:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint","nodeType":"ElementaryTypeName","src":"11349:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":570,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":584,"src":"11370:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint","nodeType":"ElementaryTypeName","src":"11370:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11286:112:0"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"11414:0:0"},"scope":829,"src":"11261:257:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":608,"nodeType":"Block","src":"12314:109:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":601,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"12355:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":602,"name":"_inputsHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"12362:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"argumentTypes":null,"id":603,"name":"_gasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"12377:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"argumentTypes":null,"id":604,"name":"_gasPxs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"12389:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"argumentTypes":null,"id":605,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"12398:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":598,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"12324:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordsImpl","nodeType":"MemberAccess","referencedDeclaration":5644,"src":"12324:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32[] memory,uint256[] memory,uint256[] memory,uint256)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12324:92:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"12324:92:0"}]},"documentation":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\ntransferring task fee from sender to contract, generating the unique taskId, saving the block number\\nwhen the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimits ENG gas limit\\n@param _gasPxs ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":609,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecords","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"name":"_inputsHashes","nodeType":"VariableDeclaration","scope":609,"src":"12165:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12165:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":586,"length":null,"nodeType":"ArrayTypeName","src":"12165:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":590,"name":"_gasLimits","nodeType":"VariableDeclaration","scope":609,"src":"12205:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":588,"name":"uint","nodeType":"ElementaryTypeName","src":"12205:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":589,"length":null,"nodeType":"ArrayTypeName","src":"12205:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":593,"name":"_gasPxs","nodeType":"VariableDeclaration","scope":609,"src":"12239:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":591,"name":"uint","nodeType":"ElementaryTypeName","src":"12239:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":592,"length":null,"nodeType":"ArrayTypeName","src":"12239:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":595,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":609,"src":"12270:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint","nodeType":"ElementaryTypeName","src":"12270:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12155:143:0"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"12314:0:0"},"scope":829,"src":"12129:294:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":649,"nodeType":"Block","src":"13390:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":638,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"13427:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":639,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"13434:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":640,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"13443:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":641,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"13452:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":642,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"13469:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":643,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"13482:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":644,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"13517:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":645,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"13551:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":646,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"13561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":635,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"13400:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5446,"src":"13400:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13400:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"13400:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":650,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":628,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"13344:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13344:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":630,"modifierName":{"argumentTypes":null,"id":627,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"13329:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13329:26:0"},{"arguments":[{"argumentTypes":null,"id":632,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"13377:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":633,"modifierName":{"argumentTypes":null,"id":631,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"13360:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13360:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"name":"_scAddr","nodeType":"VariableDeclaration","scope":650,"src":"13059:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13059:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":613,"name":"_taskId","nodeType":"VariableDeclaration","scope":650,"src":"13084:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13084:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":615,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":650,"src":"13109:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13109:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":617,"name":"_outputHash","nodeType":"VariableDeclaration","scope":650,"src":"13142:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13142:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":619,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":650,"src":"13171:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":618,"name":"bytes","nodeType":"ElementaryTypeName","src":"13171:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":621,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":650,"src":"13215:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"13215:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":623,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":650,"src":"13265:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":622,"name":"uint64","nodeType":"ElementaryTypeName","src":"13265:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":625,"name":"_sig","nodeType":"VariableDeclaration","scope":650,"src":"13290:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":624,"name":"bytes","nodeType":"ElementaryTypeName","src":"13290:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13049:264:0"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[],"src":"13390:0:0"},"scope":829,"src":"13027:546:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":681,"nodeType":"Block","src":"14204:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":673,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"14245:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":674,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"14252:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":675,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"14261:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":676,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"14270:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":677,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"14283:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":678,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"14293:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":670,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"14214:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4989,"src":"14214:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14214:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":680,"nodeType":"ExpressionStatement","src":"14214:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":682,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"14158:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14158:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":665,"modifierName":{"argumentTypes":null,"id":662,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"14143:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14143:26:0"},{"arguments":[{"argumentTypes":null,"id":667,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"14191:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":668,"modifierName":{"argumentTypes":null,"id":666,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"14174:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14174:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"name":"_scAddr","nodeType":"VariableDeclaration","scope":682,"src":"14000:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14000:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":654,"name":"_taskId","nodeType":"VariableDeclaration","scope":682,"src":"14025:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14025:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":656,"name":"_outputHash","nodeType":"VariableDeclaration","scope":682,"src":"14050:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14050:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":658,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":682,"src":"14079:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":657,"name":"uint64","nodeType":"ElementaryTypeName","src":"14079:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":660,"name":"_sig","nodeType":"VariableDeclaration","scope":682,"src":"14104:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":659,"name":"bytes","nodeType":"ElementaryTypeName","src":"14104:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13990:137:0"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[],"src":"14204:0:0"},"scope":829,"src":"13964:341:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":697,"nodeType":"Block","src":"14556:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":693,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"14597:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":694,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"14604:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":690,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"14566:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6003,"src":"14566:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14566:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"14566:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":698,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":687,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"14543:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":688,"modifierName":{"argumentTypes":null,"id":686,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"14531:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14531:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"name":"_taskId","nodeType":"VariableDeclaration","scope":698,"src":"14499:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14499:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14498:17:0"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"14556:0:0"},"scope":829,"src":"14472:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":720,"nodeType":"Block","src":"15079:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":714,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"15124:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":715,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"15131:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":716,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"15145:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":717,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"15152:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":711,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"15089:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3109_$","typeString":"type(library PrincipalImpl)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":2938,"src":"15089:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15089:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"15089:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":721,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":707,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"15063:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15063:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":709,"modifierName":{"argumentTypes":null,"id":706,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"15046:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"15046:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":721,"src":"14981:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint","nodeType":"ElementaryTypeName","src":"14981:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":702,"name":"_seed","nodeType":"VariableDeclaration","scope":721,"src":"15000:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":701,"name":"uint","nodeType":"ElementaryTypeName","src":"15000:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":704,"name":"_sig","nodeType":"VariableDeclaration","scope":721,"src":"15012:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":703,"name":"bytes","nodeType":"ElementaryTypeName","src":"15012:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14980:50:0"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"15079:0:0"},"scope":829,"src":"14955:209:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":738,"nodeType":"Block","src":"15400:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":734,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"15452:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":735,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"15459:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":732,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"15417:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3109_$","typeString":"type(library PrincipalImpl)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3108,"src":"15417:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2410_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15417:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":731,"id":737,"nodeType":"Return","src":"15410:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":739,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":739,"src":"15311:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint","nodeType":"ElementaryTypeName","src":"15311:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15310:19:0"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"name":"","nodeType":"VariableDeclaration","scope":739,"src":"15363:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"15363:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":726,"length":null,"nodeType":"ArrayTypeName","src":"15363:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":730,"name":"","nodeType":"VariableDeclaration","scope":739,"src":"15381:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":728,"name":"uint","nodeType":"ElementaryTypeName","src":"15381:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":729,"length":null,"nodeType":"ArrayTypeName","src":"15381:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15362:33:0"},"scope":829,"src":"15285:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":752,"nodeType":"Block","src":"15741:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":748,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"15794:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":749,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"15801:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":746,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"15758:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":8927,"src":"15758:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2410_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15758:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":745,"id":751,"nodeType":"Return","src":"15751:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":753,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":753,"src":"15683:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint","nodeType":"ElementaryTypeName","src":"15683:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15682:19:0"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"name":"","nodeType":"VariableDeclaration","scope":753,"src":"15735:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint","nodeType":"ElementaryTypeName","src":"15735:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15734:6:0"},"scope":829,"src":"15654:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":774,"nodeType":"Block","src":"16227:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":770,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"16276:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":771,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"16283:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":768,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"16244:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":8964,"src":"16244:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2410_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16244:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":767,"id":773,"nodeType":"Return","src":"16237:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":775,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":775,"src":"16130:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint","nodeType":"ElementaryTypeName","src":"16130:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16129:19:0"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16182:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint","nodeType":"ElementaryTypeName","src":"16182:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":760,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16188:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint","nodeType":"ElementaryTypeName","src":"16188:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":763,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16194:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"16194:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":762,"length":null,"nodeType":"ArrayTypeName","src":"16194:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":766,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16212:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":764,"name":"uint","nodeType":"ElementaryTypeName","src":"16212:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":765,"length":null,"nodeType":"ArrayTypeName","src":"16212:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16181:45:0"},"scope":829,"src":"16105:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":792,"nodeType":"Block","src":"16755:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":787,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"16803:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":788,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"16810:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":789,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"16824:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":785,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"16772:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9228,"src":"16772:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2410_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16772:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":784,"id":791,"nodeType":"Return","src":"16765:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":793,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":793,"src":"16664:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint","nodeType":"ElementaryTypeName","src":"16664:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":779,"name":"_scAddr","nodeType":"VariableDeclaration","scope":793,"src":"16683:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16683:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16663:36:0"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"name":"","nodeType":"VariableDeclaration","scope":793,"src":"16733:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"16733:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":782,"length":null,"nodeType":"ArrayTypeName","src":"16733:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16732:18:0"},"scope":829,"src":"16640:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":811,"nodeType":"Block","src":"17109:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":807,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"17152:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":808,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"17159:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":805,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"17126:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":8585,"src":"17126:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2410_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17126:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":804,"id":810,"nodeType":"Return","src":"17119:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":812,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":798,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"17057:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":799,"modifierName":{"argumentTypes":null,"id":797,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"17040:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"17040:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"name":"_custodian","nodeType":"VariableDeclaration","scope":812,"src":"16996:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"16996:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16995:20:0"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"name":"","nodeType":"VariableDeclaration","scope":812,"src":"17082:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"17082:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":803,"name":"","nodeType":"VariableDeclaration","scope":812,"src":"17091:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":802,"name":"bytes","nodeType":"ElementaryTypeName","src":"17091:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17081:23:0"},"scope":829,"src":"16977:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":827,"nodeType":"Block","src":"17492:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":823,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"17538:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":824,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"17545:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":821,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"17509:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":8611,"src":"17509:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17509:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":820,"id":826,"nodeType":"Return","src":"17502:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":828,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"name":"_data","nodeType":"VariableDeclaration","scope":828,"src":"17404:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":813,"name":"bytes","nodeType":"ElementaryTypeName","src":"17404:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":816,"name":"_signature","nodeType":"VariableDeclaration","scope":828,"src":"17424:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":815,"name":"bytes","nodeType":"ElementaryTypeName","src":"17424:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17403:45:0"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"name":"","nodeType":"VariableDeclaration","scope":828,"src":"17482:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint","nodeType":"ElementaryTypeName","src":"17482:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17481:6:0"},"scope":829,"src":"17382:181:0","stateMutability":"view","superFunction":null,"visibility":"public"}],"scope":830,"src":"767:16798:0"}],"src":"0:17566:0"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[829]},"id":830,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":830,"sourceUnit":12318,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":830,"sourceUnit":12190,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":5,"nodeType":"ImportDirective","scope":830,"sourceUnit":12109,"src":"184:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":7,"nodeType":"ImportDirective","scope":830,"sourceUnit":9282,"src":"220:53:0","symbolAliases":[{"foreign":6,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":9,"nodeType":"ImportDirective","scope":830,"sourceUnit":3110,"src":"274:57:0","symbolAliases":[{"foreign":8,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":11,"nodeType":"ImportDirective","scope":830,"sourceUnit":6005,"src":"332:47:0","symbolAliases":[{"foreign":10,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":13,"nodeType":"ImportDirective","scope":830,"sourceUnit":3748,"src":"380:67:0","symbolAliases":[{"foreign":12,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":15,"nodeType":"ImportDirective","scope":830,"sourceUnit":2226,"src":"448:55:0","symbolAliases":[{"foreign":14,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":17,"nodeType":"ImportDirective","scope":830,"sourceUnit":2412,"src":"504:53:0","symbolAliases":[{"foreign":16,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":19,"nodeType":"ImportDirective","scope":830,"sourceUnit":2365,"src":"558:55:0","symbolAliases":[{"foreign":18,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":21,"nodeType":"ImportDirective","scope":830,"sourceUnit":2420,"src":"614:57:0","symbolAliases":[{"foreign":20,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":23,"nodeType":"ImportDirective","scope":830,"sourceUnit":2585,"src":"672:45:0","symbolAliases":[{"foreign":22,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":25,"nodeType":"ImportDirective","scope":830,"sourceUnit":10267,"src":"718:47:0","symbolAliases":[{"foreign":24,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":26,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2419,"src":"786:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2419","typeString":"contract EnigmaStorage"}},"id":27,"nodeType":"InheritanceSpecifier","src":"786:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":28,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2364,"src":"801:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2364","typeString":"contract EnigmaEvents"}},"id":29,"nodeType":"InheritanceSpecifier","src":"801:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":30,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2584,"src":"815:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2584","typeString":"contract Getters"}},"id":31,"nodeType":"InheritanceSpecifier","src":"815:7:0"}],"contractDependencies":[2364,2419,2584],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":829,"linearizedBaseContracts":[829,2584,2364,2419],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":34,"libraryName":{"contractScope":null,"id":32,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":12317,"src":"835:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$12317","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"829:27:0","typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":37,"libraryName":{"contractScope":null,"id":35,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":12189,"src":"867:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$12189","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"861:24:0","typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":84,"nodeType":"Block","src":"1076:238:0","statements":[{"expression":{"argumentTypes":null,"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":46,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1086:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":48,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2373,"src":"1086:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10266","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":50,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1109:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10266,"src":"1103:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10266_$","typeString":"type(contract ERC20)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1103:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10266","typeString":"contract ERC20"}},"src":"1086:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10266","typeString":"contract ERC20"}},"id":53,"nodeType":"ExpressionStatement","src":"1086:37:0"},{"expression":{"argumentTypes":null,"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":54,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1133:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":56,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2375,"src":"1133:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":57,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"1151:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1133:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":59,"nodeType":"ExpressionStatement","src":"1133:28:0"},{"expression":{"argumentTypes":null,"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":60,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1171:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":62,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2377,"src":"1171:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"323030","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1195:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"1171:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65,"nodeType":"ExpressionStatement","src":"1171:27:0"},{"expression":{"argumentTypes":null,"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":66,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1208:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":68,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"1208:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":69,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1226:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1208:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":71,"nodeType":"ExpressionStatement","src":"1208:28:0"},{"expression":{"argumentTypes":null,"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":72,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1246:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"1246:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1271:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1246:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":77,"nodeType":"ExpressionStatement","src":"1246:26:0"},{"expression":{"argumentTypes":null,"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":78,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1282:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":80,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2409,"src":"1282:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1306:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1282:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":83,"nodeType":"ExpressionStatement","src":"1282:25:0"}]},"documentation":null,"id":85,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":85,"src":"1009:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":41,"name":"_principal","nodeType":"VariableDeclaration","scope":85,"src":"1032:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":43,"name":"_epochSize","nodeType":"VariableDeclaration","scope":85,"src":"1052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint","nodeType":"ElementaryTypeName","src":"1052:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1008:60:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"1076:0:0"},"scope":829,"src":"997:317:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":109,"nodeType":"Block","src":"1604:181:0","statements":[{"assignments":[92],"declarations":[{"constant":false,"id":92,"name":"worker","nodeType":"VariableDeclaration","scope":109,"src":"1614:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":91,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2132,"src":"1614:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":97,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":93,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1650:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":94,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"1650:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2132_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":96,"indexExpression":{"argumentTypes":null,"id":95,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"1664:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1650:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1614:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":99,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1688:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2124,"src":"1688:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":101,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"1705:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"1705:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2173_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1705:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1688:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1745:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"1680:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1680:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"1680:87:0"},{"id":108,"nodeType":"PlaceholderStatement","src":"1777:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":110,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"name":"_user","nodeType":"VariableDeclaration","scope":110,"src":"1589:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1588:15:0"},"src":"1563:222:0","visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"1968:178:0","statements":[{"assignments":[117],"declarations":[{"constant":false,"id":117,"name":"worker","nodeType":"VariableDeclaration","scope":134,"src":"1978:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":116,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2132,"src":"1978:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":122,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":118,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"2014:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"2014:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2132_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":121,"indexExpression":{"argumentTypes":null,"id":120,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2028:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2014:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1978:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":124,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2052:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2124,"src":"2052:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":126,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"2069:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"2069:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2173_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2069:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2052:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2105:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"2044:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2044:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"2044:84:0"},{"id":133,"nodeType":"PlaceholderStatement","src":"2138:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":135,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"name":"_user","nodeType":"VariableDeclaration","scope":135,"src":"1953:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"1953:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1952:15:0"},"src":"1929:217:0","visibility":"internal"},{"body":{"id":159,"nodeType":"Block","src":"2331:180:0","statements":[{"assignments":[142],"declarations":[{"constant":false,"id":142,"name":"worker","nodeType":"VariableDeclaration","scope":159,"src":"2341:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":141,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2132,"src":"2341:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":147,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":143,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"2377:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"2377:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2132_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":146,"indexExpression":{"argumentTypes":null,"id":145,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2391:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2377:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2341:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":149,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2415:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2124,"src":"2415:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":151,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"2432:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"2432:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2173_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2432:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2415:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2469:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"2407:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2407:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":157,"nodeType":"ExpressionStatement","src":"2407:86:0"},{"id":158,"nodeType":"PlaceholderStatement","src":"2503:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":160,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"name":"_user","nodeType":"VariableDeclaration","scope":160,"src":"2316:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2315:15:0"},"src":"2291:220:0","visibility":"internal"},{"body":{"id":203,"nodeType":"Block","src":"2660:395:0","statements":[{"assignments":[167],"declarations":[{"constant":false,"id":167,"name":"worker","nodeType":"VariableDeclaration","scope":203,"src":"2670:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":166,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2132,"src":"2670:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":172,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":168,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"2706:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"2706:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2132_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":171,"indexExpression":{"argumentTypes":null,"id":170,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2720:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2706:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2670:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":175,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12881,"src":"2764:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2764:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":174,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"2744:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2744:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2781:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2744:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2784:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"2736:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":182,"nodeType":"ExpressionStatement","src":"2736:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":184,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2844:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2124,"src":"2844:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":186,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"2861:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"2861:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2173_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2861:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2844:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2898:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"2836:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2836:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":192,"nodeType":"ExpressionStatement","src":"2836:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":194,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2958:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"2958:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":196,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"2976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"2976:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3000:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"2950:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2950:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"ExpressionStatement","src":"2950:87:0"},{"id":202,"nodeType":"PlaceholderStatement","src":"3047:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":204,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"name":"_user","nodeType":"VariableDeclaration","scope":204,"src":"2645:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"2645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2644:15:0"},"src":"2627:428:0","visibility":"internal"},{"body":{"id":260,"nodeType":"Block","src":"3213:580:0","statements":[{"assignments":[211],"declarations":[{"constant":false,"id":211,"name":"worker","nodeType":"VariableDeclaration","scope":260,"src":"3223:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":210,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2132,"src":"3223:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":216,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"3259:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"3259:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2132_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":215,"indexExpression":{"argumentTypes":null,"id":214,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"3273:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3259:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3223:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":218,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3297:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2124,"src":"3297:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":220,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"3314:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"3314:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2173_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3314:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2173","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3297:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3351:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"3289:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3289:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"ExpressionStatement","src":"3289:104:0"},{"assignments":[230],"declarations":[{"constant":false,"id":230,"name":"workerLog","nodeType":"VariableDeclaration","scope":260,"src":"3403:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2150_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":229,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2150,"src":"3403:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2150_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":237,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":233,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3480:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":234,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12881,"src":"3488:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3488:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2132_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":231,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"3445:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9280,"src":"3445:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2132_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2150_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3445:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2150_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3403:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2181","typeString":"enum EnigmaCommon.WorkerLogType"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3519:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2150_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2145,"src":"3519:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2181","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":241,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"3548:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2181,"src":"3548:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2181_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3548:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2181","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3519:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3595:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"3511:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3511:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"ExpressionStatement","src":"3511:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":250,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12881,"src":"3675:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3675:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":249,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3655:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3655:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":253,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3691:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2150_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2147,"src":"3691:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3655:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3726:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"3647:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3647:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":258,"nodeType":"ExpressionStatement","src":"3647:128:0"},{"id":259,"nodeType":"PlaceholderStatement","src":"3785:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":261,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"name":"_user","nodeType":"VariableDeclaration","scope":261,"src":"3198:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"3198:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3197:15:0"},"src":"3177:616:0","visibility":"internal"},{"body":{"id":279,"nodeType":"Block","src":"3960:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2176","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":266,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"3978:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2401,"src":"3978:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2162_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":269,"indexExpression":{"argumentTypes":null,"id":268,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3994:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3978:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2162_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2161,"src":"3978:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2176","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4013:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2176,"src":"4013:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2176_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4013:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2176","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"3978:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4058:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"3970:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"ExpressionStatement","src":"3970:123:0"},{"id":278,"nodeType":"PlaceholderStatement","src":"4103:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":280,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"name":"_scAddr","nodeType":"VariableDeclaration","scope":280,"src":"3943:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3943:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3942:17:0"},"src":"3916:195:0","visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"4273:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2176","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":285,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4291:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2401,"src":"4291:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2162_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":288,"indexExpression":{"argumentTypes":null,"id":287,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"4307:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4291:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2162_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2161,"src":"4291:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2176","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":290,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4326:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2176,"src":"4326:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2176_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4326:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2176","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4291:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4370:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"4283:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4283:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"ExpressionStatement","src":"4283:118:0"},{"id":297,"nodeType":"PlaceholderStatement","src":"4411:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":299,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"name":"_scAddr","nodeType":"VariableDeclaration","scope":299,"src":"4256:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4256:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4255:17:0"},"src":"4230:189:0","visibility":"internal"},{"body":{"id":317,"nodeType":"Block","src":"4584:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2169","typeString":"enum EnigmaCommon.TaskStatus"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":304,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4602:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2397,"src":"4602:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2120_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":307,"indexExpression":{"argumentTypes":null,"id":306,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"4614:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4602:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2120_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2117,"src":"4602:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2169","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":309,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4633:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2225_$","typeString":"type(library EnigmaCommon)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2169,"src":"4633:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2169_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4633:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2169","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4602:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"4594:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4594:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":315,"nodeType":"ExpressionStatement","src":"4594:100:0"},{"id":316,"nodeType":"PlaceholderStatement","src":"4704:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":318,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"name":"_taskId","nodeType":"VariableDeclaration","scope":318,"src":"4567:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4567:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4566:17:0"},"src":"4546:166:0","visibility":"internal"},{"body":{"id":351,"nodeType":"Block","src":"4874:202:0","statements":[{"body":{"id":348,"nodeType":"Block","src":"4940:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":335,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4962:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"4962:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2132_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":341,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":337,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2386,"src":"4976:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":340,"indexExpression":{"argumentTypes":null,"id":339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4998:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4976:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4962:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2132_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2122,"src":"4962:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":343,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"5012:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4962:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5021:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12894,12895],"referencedDeclaration":12895,"src":"4954:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4954:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"4954:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4901:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":327,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4905:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},"id":328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2386,"src":"4905:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4905:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4901:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":349,"initializationExpression":{"assignments":[323],"declarations":[{"constant":false,"id":323,"name":"i","nodeType":"VariableDeclaration","scope":349,"src":"4889:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint","nodeType":"ElementaryTypeName","src":"4889:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":325,"initialValue":{"argumentTypes":null,"hexValue":"30","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4898:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4889:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4935:3:0","subExpression":{"argumentTypes":null,"id":331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4935:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"nodeType":"ExpressionStatement","src":"4935:3:0"},"nodeType":"ForStatement","src":"4884:175:0"},{"id":350,"nodeType":"PlaceholderStatement","src":"5068:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":352,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"name":"_signer","nodeType":"VariableDeclaration","scope":352,"src":"4857:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"4857:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4856:17:0"},"src":"4829:247:0","visibility":"internal"},{"body":{"id":373,"nodeType":"Block","src":"5697:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":367,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"5732:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":368,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5739:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":369,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5748:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":370,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5757:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":364,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"5707:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":8548,"src":"5707:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5707:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"5707:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":374,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":361,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":362,"modifierName":{"argumentTypes":null,"id":360,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"5665:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"5665:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"name":"_signer","nodeType":"VariableDeclaration","scope":374,"src":"5586:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"5586:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":356,"name":"_report","nodeType":"VariableDeclaration","scope":374,"src":"5603:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":355,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":358,"name":"_signature","nodeType":"VariableDeclaration","scope":374,"src":"5625:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":357,"name":"bytes","nodeType":"ElementaryTypeName","src":"5625:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5585:64:0"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"5697:0:0"},"scope":829,"src":"5568:207:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":392,"nodeType":"Block","src":"6119:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":387,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6153:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":388,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6160:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":389,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"6172:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":384,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"6129:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":8754,"src":"6129:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6129:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"6129:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":393,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":381,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6103:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":382,"modifierName":{"argumentTypes":null,"id":380,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"6086:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6086:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"name":"_custodian","nodeType":"VariableDeclaration","scope":393,"src":"6037:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"6037:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":378,"name":"_amount","nodeType":"VariableDeclaration","scope":393,"src":"6057:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint","nodeType":"ElementaryTypeName","src":"6057:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6036:34:0"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"6119:0:0"},"scope":829,"src":"6020:167:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":409,"nodeType":"Block","src":"6460:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":405,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6495:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":406,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":402,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"6470:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":8807,"src":"6470:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6470:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"6470:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":410,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":398,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"6444:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6444:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":400,"modifierName":{"argumentTypes":null,"id":397,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6432:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6432:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"name":"_amount","nodeType":"VariableDeclaration","scope":410,"src":"6403:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint","nodeType":"ElementaryTypeName","src":"6403:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6402:14:0"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"6460:0:0"},"scope":829,"src":"6385:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":423,"nodeType":"Block","src":"6725:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":420,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6757:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":417,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"6735:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":8652,"src":"6735:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6735:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"6735:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":424,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"6713:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6713:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":415,"modifierName":{"argumentTypes":null,"id":412,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6704:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6704:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"6694:2:0"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"6725:0:0"},"scope":829,"src":"6680:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":437,"nodeType":"Block","src":"6899:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":434,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6932:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":431,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"6909:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":8693,"src":"6909:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6909:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"6909:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":438,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":427,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"6887:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6887:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":429,"modifierName":{"argumentTypes":null,"id":426,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"6872:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6872:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"6862:2:0"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"6899:0:0"},"scope":829,"src":"6847:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":466,"nodeType":"Block","src":"7477:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":459,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"7528:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":460,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7535:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":461,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"7544:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":462,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7555:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":463,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"7565:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":456,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"7487:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4201,"src":"7487:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7487:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"ExpressionStatement","src":"7487:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":467,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":449,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"7430:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7430:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":451,"modifierName":{"argumentTypes":null,"id":448,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"7415:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7415:26:0"},{"arguments":[{"argumentTypes":null,"id":453,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7464:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":454,"modifierName":{"argumentTypes":null,"id":452,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7446:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"7446:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"name":"_taskId","nodeType":"VariableDeclaration","scope":467,"src":"7299:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7299:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":442,"name":"_codeHash","nodeType":"VariableDeclaration","scope":467,"src":"7324:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7324:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":444,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":467,"src":"7351:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":443,"name":"uint64","nodeType":"ElementaryTypeName","src":"7351:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":446,"name":"_sig","nodeType":"VariableDeclaration","scope":467,"src":"7376:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":445,"name":"bytes","nodeType":"ElementaryTypeName","src":"7376:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"7289:110:0"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"7477:0:0"},"scope":829,"src":"7253:324:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":507,"nodeType":"Block","src":"8630:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":496,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"8674:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":497,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"8681:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":498,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"8690:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":499,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"8704:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":500,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"8715:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":501,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"8748:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":502,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"8771:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":503,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"8805:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":504,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"8815:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":493,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"8640:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4571,"src":"8640:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8640:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"ExpressionStatement","src":"8640:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":508,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":486,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"8583:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8583:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":488,"modifierName":{"argumentTypes":null,"id":485,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"8568:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8568:26:0"},{"arguments":[{"argumentTypes":null,"id":490,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"8617:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":491,"modifierName":{"argumentTypes":null,"id":489,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"8599:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8599:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"name":"_taskId","nodeType":"VariableDeclaration","scope":508,"src":"8291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8291:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":471,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":508,"src":"8316:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8316:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":473,"name":"_codeHash","nodeType":"VariableDeclaration","scope":508,"src":"8346:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8346:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":475,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":508,"src":"8373:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8373:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":477,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":508,"src":"8410:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":476,"name":"bytes","nodeType":"ElementaryTypeName","src":"8410:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":479,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":508,"src":"8454:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"8454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":481,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":508,"src":"8504:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":480,"name":"uint64","nodeType":"ElementaryTypeName","src":"8504:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":483,"name":"_sig","nodeType":"VariableDeclaration","scope":508,"src":"8529:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":482,"name":"bytes","nodeType":"ElementaryTypeName","src":"8529:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8281:271:0"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[],"src":"8630:0:0"},"scope":829,"src":"8252:575:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":518,"nodeType":"Block","src":"9029:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":515,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"9090:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":513,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"9046:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3747_$","typeString":"type(library SecretContractImpl)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"9046:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2410_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9046:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":512,"id":517,"nodeType":"Return","src":"9039:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":519,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"8983:2:0"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"name":"","nodeType":"VariableDeclaration","scope":519,"src":"9019:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint","nodeType":"ElementaryTypeName","src":"9019:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9018:6:0"},"scope":829,"src":"8954:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":536,"nodeType":"Block","src":"9432:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":531,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"9499:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":532,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9506:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":533,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"9514:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":529,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"9449:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3747_$","typeString":"type(library SecretContractImpl)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"9449:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2410_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9449:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":528,"id":535,"nodeType":"Return","src":"9442:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":537,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"name":"_start","nodeType":"VariableDeclaration","scope":537,"src":"9352:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint","nodeType":"ElementaryTypeName","src":"9352:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":523,"name":"_stop","nodeType":"VariableDeclaration","scope":537,"src":"9365:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint","nodeType":"ElementaryTypeName","src":"9365:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9351:25:0"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"name":"","nodeType":"VariableDeclaration","scope":537,"src":"9410:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9410:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":526,"length":null,"nodeType":"ArrayTypeName","src":"9410:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"9409:18:0"},"scope":829,"src":"9316:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"10564:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":553,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"10614:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":554,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"10621:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":555,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"10634:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":556,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"10645:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":557,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10653:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":558,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10672:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":550,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"10574:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4040,"src":"10574:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint256,uint256,uint256,uint256)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10574:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"ExpressionStatement","src":"10574:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":562,"implemented":true,"kind":"function","modifiers":[],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":562,"src":"10425:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10425:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":541,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":562,"src":"10454:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint","nodeType":"ElementaryTypeName","src":"10454:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":543,"name":"_gasPx","nodeType":"VariableDeclaration","scope":562,"src":"10478:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint","nodeType":"ElementaryTypeName","src":"10478:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":545,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":562,"src":"10499:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint","nodeType":"ElementaryTypeName","src":"10499:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":547,"name":"_nonce","nodeType":"VariableDeclaration","scope":562,"src":"10531:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint","nodeType":"ElementaryTypeName","src":"10531:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10415:133:0"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"10564:0:0"},"scope":829,"src":"10380:306:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":583,"nodeType":"Block","src":"11414:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":576,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"11454:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":577,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"11461:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":578,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"11474:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":579,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"11485:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":580,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"11493:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":573,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"11424:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4806,"src":"11424:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint256,uint256,uint256)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11424:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":582,"nodeType":"ExpressionStatement","src":"11424:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":584,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":584,"src":"11296:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11296:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":566,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":584,"src":"11325:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint","nodeType":"ElementaryTypeName","src":"11325:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":568,"name":"_gasPx","nodeType":"VariableDeclaration","scope":584,"src":"11349:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint","nodeType":"ElementaryTypeName","src":"11349:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":570,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":584,"src":"11370:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint","nodeType":"ElementaryTypeName","src":"11370:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11286:112:0"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"11414:0:0"},"scope":829,"src":"11261:257:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":608,"nodeType":"Block","src":"12314:109:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":601,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"12355:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":602,"name":"_inputsHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"12362:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"argumentTypes":null,"id":603,"name":"_gasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"12377:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"argumentTypes":null,"id":604,"name":"_gasPxs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"12389:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"argumentTypes":null,"id":605,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"12398:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":598,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"12324:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordsImpl","nodeType":"MemberAccess","referencedDeclaration":5644,"src":"12324:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32[] memory,uint256[] memory,uint256[] memory,uint256)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12324:92:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"12324:92:0"}]},"documentation":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\ntransferring task fee from sender to contract, generating the unique taskId, saving the block number\\nwhen the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimits ENG gas limit\\n@param _gasPxs ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":609,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecords","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"name":"_inputsHashes","nodeType":"VariableDeclaration","scope":609,"src":"12165:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12165:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":586,"length":null,"nodeType":"ArrayTypeName","src":"12165:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":590,"name":"_gasLimits","nodeType":"VariableDeclaration","scope":609,"src":"12205:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":588,"name":"uint","nodeType":"ElementaryTypeName","src":"12205:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":589,"length":null,"nodeType":"ArrayTypeName","src":"12205:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":593,"name":"_gasPxs","nodeType":"VariableDeclaration","scope":609,"src":"12239:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":591,"name":"uint","nodeType":"ElementaryTypeName","src":"12239:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":592,"length":null,"nodeType":"ArrayTypeName","src":"12239:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":595,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":609,"src":"12270:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint","nodeType":"ElementaryTypeName","src":"12270:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12155:143:0"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"12314:0:0"},"scope":829,"src":"12129:294:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":649,"nodeType":"Block","src":"13390:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":638,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"13427:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":639,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"13434:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":640,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"13443:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":641,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"13452:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":642,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"13469:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":643,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"13482:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":644,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"13517:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":645,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"13551:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":646,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"13561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":635,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"13400:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5446,"src":"13400:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13400:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"13400:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":650,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":628,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"13344:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13344:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":630,"modifierName":{"argumentTypes":null,"id":627,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"13329:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13329:26:0"},{"arguments":[{"argumentTypes":null,"id":632,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"13377:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":633,"modifierName":{"argumentTypes":null,"id":631,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"13360:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13360:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"name":"_scAddr","nodeType":"VariableDeclaration","scope":650,"src":"13059:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13059:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":613,"name":"_taskId","nodeType":"VariableDeclaration","scope":650,"src":"13084:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13084:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":615,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":650,"src":"13109:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13109:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":617,"name":"_outputHash","nodeType":"VariableDeclaration","scope":650,"src":"13142:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13142:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":619,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":650,"src":"13171:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":618,"name":"bytes","nodeType":"ElementaryTypeName","src":"13171:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":621,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":650,"src":"13215:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"13215:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":623,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":650,"src":"13265:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":622,"name":"uint64","nodeType":"ElementaryTypeName","src":"13265:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":625,"name":"_sig","nodeType":"VariableDeclaration","scope":650,"src":"13290:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":624,"name":"bytes","nodeType":"ElementaryTypeName","src":"13290:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13049:264:0"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[],"src":"13390:0:0"},"scope":829,"src":"13027:546:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":681,"nodeType":"Block","src":"14204:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":673,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"14245:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":674,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"14252:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":675,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"14261:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":676,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"14270:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":677,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"14283:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":678,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"14293:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":670,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"14214:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4989,"src":"14214:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14214:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":680,"nodeType":"ExpressionStatement","src":"14214:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":682,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"14158:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14158:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":665,"modifierName":{"argumentTypes":null,"id":662,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"14143:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14143:26:0"},{"arguments":[{"argumentTypes":null,"id":667,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"14191:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":668,"modifierName":{"argumentTypes":null,"id":666,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"14174:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14174:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"name":"_scAddr","nodeType":"VariableDeclaration","scope":682,"src":"14000:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14000:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":654,"name":"_taskId","nodeType":"VariableDeclaration","scope":682,"src":"14025:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14025:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":656,"name":"_outputHash","nodeType":"VariableDeclaration","scope":682,"src":"14050:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14050:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":658,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":682,"src":"14079:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":657,"name":"uint64","nodeType":"ElementaryTypeName","src":"14079:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":660,"name":"_sig","nodeType":"VariableDeclaration","scope":682,"src":"14104:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":659,"name":"bytes","nodeType":"ElementaryTypeName","src":"14104:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13990:137:0"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[],"src":"14204:0:0"},"scope":829,"src":"13964:341:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":697,"nodeType":"Block","src":"14556:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":693,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"14597:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":694,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"14604:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":690,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"14566:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6004_$","typeString":"type(library TaskImpl)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6003,"src":"14566:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14566:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"14566:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":698,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":687,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"14543:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":688,"modifierName":{"argumentTypes":null,"id":686,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"14531:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14531:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"name":"_taskId","nodeType":"VariableDeclaration","scope":698,"src":"14499:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14499:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14498:17:0"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"14556:0:0"},"scope":829,"src":"14472:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":720,"nodeType":"Block","src":"15079:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":714,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"15124:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":715,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"15131:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":716,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"15145:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":717,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"15152:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":711,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"15089:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3109_$","typeString":"type(library PrincipalImpl)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":2938,"src":"15089:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2410_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15089:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"15089:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":721,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":707,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12891,"src":"15063:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15063:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":709,"modifierName":{"argumentTypes":null,"id":706,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"15046:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"15046:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":721,"src":"14981:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint","nodeType":"ElementaryTypeName","src":"14981:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":702,"name":"_seed","nodeType":"VariableDeclaration","scope":721,"src":"15000:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":701,"name":"uint","nodeType":"ElementaryTypeName","src":"15000:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":704,"name":"_sig","nodeType":"VariableDeclaration","scope":721,"src":"15012:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":703,"name":"bytes","nodeType":"ElementaryTypeName","src":"15012:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14980:50:0"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"15079:0:0"},"scope":829,"src":"14955:209:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":738,"nodeType":"Block","src":"15400:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":734,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"15452:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":735,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"15459:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":732,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"15417:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3109_$","typeString":"type(library PrincipalImpl)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3108,"src":"15417:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2410_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15417:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":731,"id":737,"nodeType":"Return","src":"15410:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":739,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":739,"src":"15311:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint","nodeType":"ElementaryTypeName","src":"15311:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15310:19:0"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"name":"","nodeType":"VariableDeclaration","scope":739,"src":"15363:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"15363:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":726,"length":null,"nodeType":"ArrayTypeName","src":"15363:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":730,"name":"","nodeType":"VariableDeclaration","scope":739,"src":"15381:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":728,"name":"uint","nodeType":"ElementaryTypeName","src":"15381:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":729,"length":null,"nodeType":"ArrayTypeName","src":"15381:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15362:33:0"},"scope":829,"src":"15285:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":752,"nodeType":"Block","src":"15741:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":748,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"15794:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":749,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"15801:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":746,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"15758:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":8927,"src":"15758:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2410_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15758:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":745,"id":751,"nodeType":"Return","src":"15751:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":753,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":753,"src":"15683:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint","nodeType":"ElementaryTypeName","src":"15683:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15682:19:0"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"name":"","nodeType":"VariableDeclaration","scope":753,"src":"15735:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint","nodeType":"ElementaryTypeName","src":"15735:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15734:6:0"},"scope":829,"src":"15654:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":774,"nodeType":"Block","src":"16227:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":770,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"16276:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":771,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"16283:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":768,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"16244:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":8964,"src":"16244:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2410_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16244:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":767,"id":773,"nodeType":"Return","src":"16237:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":775,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":775,"src":"16130:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint","nodeType":"ElementaryTypeName","src":"16130:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16129:19:0"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16182:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint","nodeType":"ElementaryTypeName","src":"16182:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":760,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16188:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint","nodeType":"ElementaryTypeName","src":"16188:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":763,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16194:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"16194:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":762,"length":null,"nodeType":"ArrayTypeName","src":"16194:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":766,"name":"","nodeType":"VariableDeclaration","scope":775,"src":"16212:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":764,"name":"uint","nodeType":"ElementaryTypeName","src":"16212:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":765,"length":null,"nodeType":"ArrayTypeName","src":"16212:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16181:45:0"},"scope":829,"src":"16105:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":792,"nodeType":"Block","src":"16755:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":787,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"16803:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":788,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"16810:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":789,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"16824:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":785,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"16772:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9228,"src":"16772:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2410_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16772:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":784,"id":791,"nodeType":"Return","src":"16765:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":793,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":793,"src":"16664:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint","nodeType":"ElementaryTypeName","src":"16664:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":779,"name":"_scAddr","nodeType":"VariableDeclaration","scope":793,"src":"16683:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16683:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16663:36:0"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"name":"","nodeType":"VariableDeclaration","scope":793,"src":"16733:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"16733:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":782,"length":null,"nodeType":"ArrayTypeName","src":"16733:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16732:18:0"},"scope":829,"src":"16640:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":811,"nodeType":"Block","src":"17109:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":807,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"17152:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":808,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"17159:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2410_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":805,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"17126:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":8585,"src":"17126:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2410_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17126:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":804,"id":810,"nodeType":"Return","src":"17119:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":812,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":798,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"17057:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":799,"modifierName":{"argumentTypes":null,"id":797,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"17040:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"17040:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"name":"_custodian","nodeType":"VariableDeclaration","scope":812,"src":"16996:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"16996:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16995:20:0"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"name":"","nodeType":"VariableDeclaration","scope":812,"src":"17082:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"17082:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":803,"name":"","nodeType":"VariableDeclaration","scope":812,"src":"17091:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":802,"name":"bytes","nodeType":"ElementaryTypeName","src":"17091:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17081:23:0"},"scope":829,"src":"16977:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":827,"nodeType":"Block","src":"17492:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":823,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"17538:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":824,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"17545:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":821,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"17509:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9281_$","typeString":"type(library WorkersImpl)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":8611,"src":"17509:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17509:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":820,"id":826,"nodeType":"Return","src":"17502:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":828,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"name":"_data","nodeType":"VariableDeclaration","scope":828,"src":"17404:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":813,"name":"bytes","nodeType":"ElementaryTypeName","src":"17404:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":816,"name":"_signature","nodeType":"VariableDeclaration","scope":828,"src":"17424:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":815,"name":"bytes","nodeType":"ElementaryTypeName","src":"17424:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17403:45:0"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"name":"","nodeType":"VariableDeclaration","scope":828,"src":"17482:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint","nodeType":"ElementaryTypeName","src":"17482:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17481:6:0"},"scope":829,"src":"17382:181:0","stateMutability":"view","superFunction":null,"visibility":"public"}],"scope":830,"src":"767:16798:0"}],"src":"0:17566:0"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{},"links":{"WorkersImpl":"0x1894aE2b32b08173a7B5c36F37D4B549545D3a28","PrincipalImpl":"0xb61a8BB7944aabE848B8EcD330a2d59282f0E616","TaskImpl":"0x2709cC8c33E8E04193f19EA6B55F8d44bA2faeC3","SecretContractImpl":"0xdcD832FB33f80F889FceA4aA412De265BD67771B"},"address":"0xC8A12Da768490990E738a122123b78E4981ce4E9","transactionHash":"0x3644066511cb8683b5fc5fe8e8461bdd013da52bffad160ca5e60ee199f213ba"}},"schemaVersion":"3.0.10","updatedAt":"2019-09-16T14:50:27.596Z","devdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_optionalEthereumContractAddress":"Output state hash","_optionalEthereumData":"Output state hash","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_stateDeltaHash":"Input state delta hash","_taskId":"Unique taskId"}},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_taskId":"Unique taskId"}},"countSecretContracts()":{"return":"Number of deployed secret contracts"},"createDeploymentTaskRecord(bytes32,uint256,uint256,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash","_nonce":"Locally-computed nonce value for this deployment"}},"createTaskRecord(bytes32,uint256,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"createTaskRecords(bytes32[],uint256[],uint256[],uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimits":"ENG gas limit","_gasPxs":"ENG gas price in grains format (10 ** 8)","_inputsHashes":"Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_initStateDeltaHash":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumContractAddress":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumData":"Initial state delta hash as a result of the contract\'s constructor","_preCodeHash":"Predeployed bytecode hash","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deposit(address,uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit","_custodian":"The worker\'s ETH address"}},"getActiveWorkers(uint256)":{"params":{"_blockNumber":"Block number"}},"getAllSecretContractAddresses()":{"return":"Array of secret contract addresses"},"getEpochSize()":{"return":"Epoch size"},"getFirstBlockNumber(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Block number"},"getReport(address)":{"params":{"_custodian":"The worker\'s custodian address"}},"getSecretContract(bytes32)":{"params":{"_scAddr":"Secret contract address"},"return":"SecretContract struct"},"getSecretContractAddresses(uint256,uint256)":{"params":{"_start":"Start of range","_stop":"End of range"},"return":"Subset of deployed secret contract addresses"},"getSigningAddress()":{"return":"Signing address"},"getTaskRecord(bytes32)":{"params":{"_taskId":"Unique identifier for a given task"},"return":"TaskRecord struct"},"getUserTaskDeployments(address)":{"params":{"_sender":"Task sender\'s ethereum address"},"return":"Current number for task deployments for user"},"getWorker(address)":{"params":{"_worker":"Worker\'s ethereum address"},"return":"Worker struct"},"getWorkerFromSigningAddress(address)":{"params":{"_signer":"Worker\'s signing address"},"return":"Ethereum addressWorker struct"},"getWorkerGroup(uint256,bytes32)":{"params":{"_blockNumber":"Block number the task record was mined","_scAddr":"Secret contract address"},"return":"Selected workers\' addresses"},"getWorkerParams(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes"},"getWorkersParams()":{"return":"Array of WorkersParams structs"},"register(address,bytes,bytes)":{"params":{"_report":"The RLP encoded report returned by the IAS","_signature":"Signature","_signer":"The signer address, derived from the enclave public key"}},"returnFeesForTask(bytes32)":{"params":{"_taskId":"Unique taskId"}},"setWorkersParams(uint256,uint256,bytes)":{"params":{"_blockNumber":"Block number principal node is attempting to set worker params","_seed":"The random integer generated by the enclave","_sig":"Principal node\'s signature"}},"verifyReport(bytes,bytes)":{"params":{"_data":"The report itself","_signature":"The signature of the report"}},"withdraw(uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit"}}}},"userdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee."},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"notice":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure."},"countSecretContracts()":{"notice":"Check if secret contract has been deployed"},"createDeploymentTaskRecord(bytes32,uint256,uint256,uint256,uint256)":{"notice":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid."},"createTaskRecord(bytes32,uint256,uint256,uint256)":{"notice":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"createTaskRecords(bytes32[],uint256[],uint256[],uint256)":{"notice":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deposit(address,uint256)":{"notice":"Deposits ENG stake into contract from worker. Worker must be registered to do so."},"getActiveWorkers(uint256)":{"notice":"Get active workers before a certain block number"},"getAllSecretContractAddresses()":{"notice":"Get all secret contract addresses"},"getEpochSize()":{"notice":"Get the epoch block size"},"getFirstBlockNumber(uint256)":{"notice":"Get the first block number of an epoch that a given block number belongs to"},"getReport(address)":{"notice":"The RLP encoded report returned by the IAS server"},"getSecretContract(bytes32)":{"notice":"Get a SecretContract struct given a particular secret contract address"},"getSecretContractAddresses(uint256,uint256)":{"notice":"Get deployed secret contract addresses within a range"},"getSigningAddress()":{"notice":"Get signing address of calling worker"},"getTaskRecord(bytes32)":{"notice":"Get a TaskRecord struct given a particular task\'s ID"},"getUserTaskDeployments(address)":{"notice":"Get the current number/index (used as unique nonce value) of task deployments for a given user user"},"getWorker(address)":{"notice":"Get Worker struct from a given worker\'s ethereum address"},"getWorkerFromSigningAddress(address)":{"notice":"Get Worker struct from a given worker\'s signing address"},"getWorkerGroup(uint256,bytes32)":{"notice":"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address."},"getWorkerParams(uint256)":{"notice":"Get worker params for an epoch given a particular block number"},"getWorkersParams()":{"notice":"Get epoch-based history of worker params information"},"login()":{"notice":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process."},"logout()":{"notice":"Logout worker. Worker must be logged in to do so."},"register(address,bytes,bytes)":{"notice":"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks."},"returnFeesForTask(bytes32)":{"notice":"Return the task fee to the task creator when too many blocks have elapsed without task resolution."},"setWorkersParams(uint256,uint256,bytes)":{"notice":"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node"},"verifyReport(bytes,bytes)":{"notice":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate."},"withdraw(uint256)":{"notice":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so."}}}}')},function(e){e.exports=JSON.parse('{"contractName":"EnigmaToken","abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"INITIAL_SUPPLY","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.0+commit.1d4f565a\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_from\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"INITIAL_SUPPLY\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"details\\":\\"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. \\",\\"methods\\":{\\"approve(address,uint256)\\":{\\"details\\":\\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\",\\"params\\":{\\"_spender\\":\\"The address which will spend the funds.\\",\\"_value\\":\\"The amount of tokens to be spent.\\"}},\\"balanceOf(address)\\":{\\"details\\":\\"Gets the balance of the specified address.\\",\\"params\\":{\\"owner\\":\\"The address to query the balance of.\\"},\\"return\\":\\"An uint256 representing the amount owned by the passed address.\\"},\\"constructor\\":{\\"details\\":\\"EnigmaToken Constructor Runs only on initial contract creation.\\"},\\"decimals()\\":{\\"return\\":\\"the number of decimals of the token.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"spender\\":\\"The address which will spend the funds.\\",\\"subtractedValue\\":\\"The amount of tokens to decrease the allowance by.\\"}},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"addedValue\\":\\"The amount of tokens to increase the allowance by.\\",\\"spender\\":\\"The address which will spend the funds.\\"}},\\"name()\\":{\\"return\\":\\"the name of the token.\\"},\\"symbol()\\":{\\"return\\":\\"the symbol of the token.\\"},\\"totalSupply()\\":{\\"details\\":\\"Total number of tokens in existence\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"Transfer token for a specified address when not paused\\",\\"params\\":{\\"_to\\":\\"The address to transfer to.\\",\\"_value\\":\\"The amount to be transferred.\\"}},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"Transfer tokens from one address to another when not paused\\",\\"params\\":{\\"_from\\":\\"address The address which you want to send tokens from\\",\\"_to\\":\\"address The address which you want to transfer to\\",\\"_value\\":\\"uint256 the amount of tokens to be transferred\\"}}},\\"title\\":\\"Enigma Token\\"},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":\\"EnigmaToken\\"},\\"evmVersion\\":\\"byzantium\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":{\\"keccak256\\":\\"0x1d072d408420008c3d39b1006b9adbbe472f55fc314a8eb80d9861edfeb54c73\\",\\"urls\\":[\\"bzzr://9ec40fae3d143258454c5d7c25811f7969f1ef64abbf88ab96d753d6322906a4\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\":{\\"keccak256\\":\\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\\",\\"urls\\":[\\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\":{\\"keccak256\\":\\"0xe195405e9993d575173cdb5dd408db7459a026b9a98085c1a3b676f020f46584\\",\\"urls\\":[\\"bzzr://4463a0d4f49767f59c02f2a987b90d48e0d31b3ed3424f3e743496f102f96044\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\":{\\"keccak256\\":\\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\\",\\"urls\\":[\\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b50604080518082018252600681527f456e69676d6100000000000000000000000000000000000000000000000000006020808301918252835180850190945260038085527f454e47000000000000000000000000000000000000000000000000000000000091850191909152825192939260089261008e92916101aa565b5081516100a29060049060208501906101aa565b506005805460ff191660ff92909216919091179055506100d490503366354a6ba7a180006401000000006100d9810204565b610245565b600160a060020a03821615156100ee57600080fd5b600254610108908264010000000061071b61019182021704565b600255600160a060020a03821660009081526020819052604090205461013b908264010000000061071b61019182021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156101a357600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101eb57805160ff1916838001178555610218565b82800160010185558215610218579182015b828111156102185782518255916020019190600101906101fd565b50610224929150610228565b5090565b61024291905b80821115610224576000815560010161022e565b90565b61087c806102546000396000f3fe6080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461019557806323b872dd146101bc5780632ff2e9dc146101ff578063313ce56714610214578063395093511461023f57806370a082311461027857806395d89b41146102ab578063a457c2d7146102c0578063a9059cbb146102f9578063dd62ed3e14610332575b600080fd5b3480156100ca57600080fd5b506100d361036d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b506101816004803603604081101561016b57600080fd5b50600160a060020a038135169060200135610403565b604080519115158252519081900360200190f35b3480156101a157600080fd5b506101aa610416565b60408051918252519081900360200190f35b3480156101c857600080fd5b50610181600480360360608110156101df57600080fd5b50600160a060020a0381358116916020810135909116906040013561041c565b34801561020b57600080fd5b506101aa610431565b34801561022057600080fd5b5061022961043c565b6040805160ff9092168252519081900360200190f35b34801561024b57600080fd5b506101816004803603604081101561026257600080fd5b50600160a060020a038135169060200135610445565b34801561028457600080fd5b506101aa6004803603602081101561029b57600080fd5b5035600160a060020a03166104f5565b3480156102b757600080fd5b506100d3610510565b3480156102cc57600080fd5b50610181600480360360408110156102e357600080fd5b50600160a060020a038135169060200135610571565b34801561030557600080fd5b506101816004803603604081101561031c57600080fd5b50600160a060020a0381351690602001356105bc565b34801561033e57600080fd5b506101aa6004803603604081101561035557600080fd5b50600160a060020a03813581169160200135166105c8565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b600061040f83836105d4565b9392505050565b60025490565b6000610429848484610652565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b6000600160a060020a038316151561045c57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61071b16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b6000600160a060020a038316151561058857600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61072d16565b600061040f8383610742565b600061040f8383610758565b6000600160a060020a03831615156105eb57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600160a060020a0383166000908152600160209081526040808320338452909152812054610686908363ffffffff61072d16565b600160a060020a03851660009081526001602090815260408083203384529091529020556106b5848484610783565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561040f57600080fd5b60008282111561073c57600080fd5b50900390565b600061074f338484610783565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a038216151561079857600080fd5b600160a060020a0383166000908152602081905260409020546107c1908263ffffffff61072d16565b600160a060020a0380851660009081526020819052604080822093909355908416815220546107f6908263ffffffff61071b16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a723058202756d9a404d0e1e7e8b18a0d3d035998919ea3f4f578e6ae8a9d853e1d4a350a0029","deployedBytecode":"0x6080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461019557806323b872dd146101bc5780632ff2e9dc146101ff578063313ce56714610214578063395093511461023f57806370a082311461027857806395d89b41146102ab578063a457c2d7146102c0578063a9059cbb146102f9578063dd62ed3e14610332575b600080fd5b3480156100ca57600080fd5b506100d361036d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b506101816004803603604081101561016b57600080fd5b50600160a060020a038135169060200135610403565b604080519115158252519081900360200190f35b3480156101a157600080fd5b506101aa610416565b60408051918252519081900360200190f35b3480156101c857600080fd5b50610181600480360360608110156101df57600080fd5b50600160a060020a0381358116916020810135909116906040013561041c565b34801561020b57600080fd5b506101aa610431565b34801561022057600080fd5b5061022961043c565b6040805160ff9092168252519081900360200190f35b34801561024b57600080fd5b506101816004803603604081101561026257600080fd5b50600160a060020a038135169060200135610445565b34801561028457600080fd5b506101aa6004803603602081101561029b57600080fd5b5035600160a060020a03166104f5565b3480156102b757600080fd5b506100d3610510565b3480156102cc57600080fd5b50610181600480360360408110156102e357600080fd5b50600160a060020a038135169060200135610571565b34801561030557600080fd5b506101816004803603604081101561031c57600080fd5b50600160a060020a0381351690602001356105bc565b34801561033e57600080fd5b506101aa6004803603604081101561035557600080fd5b50600160a060020a03813581169160200135166105c8565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b600061040f83836105d4565b9392505050565b60025490565b6000610429848484610652565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b6000600160a060020a038316151561045c57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61071b16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b6000600160a060020a038316151561058857600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61072d16565b600061040f8383610742565b600061040f8383610758565b6000600160a060020a03831615156105eb57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600160a060020a0383166000908152600160209081526040808320338452909152812054610686908363ffffffff61072d16565b600160a060020a03851660009081526001602090815260408083203384529091529020556106b5848484610783565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561040f57600080fd5b60008282111561073c57600080fd5b50900390565b600061074f338484610783565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a038216151561079857600080fd5b600160a060020a0383166000908152602081905260409020546107c1908263ffffffff61072d16565b600160a060020a0380851660009081526020819052604080822093909355908416815220546107f6908263ffffffff61071b16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a723058202756d9a404d0e1e7e8b18a0d3d035998919ea3f4f578e6ae8a9d853e1d4a350a0029","sourceMap":"660:1642:2:-;;;913:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;405:163:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:12;;405:163;;;965:1:2;;493:12:28;;405:163;493:12;:::i;:::-;-1:-1:-1;515:16:28;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:28;:20;;-1:-1:-1;;541:20:28;;;;;;;;;;;;-1:-1:-1;978:33:2;;-1:-1:-1;984:10:2;753:17;978:5;;;;:33;:::i;:::-;660:1642;;6198:263:27;-1:-1:-1;;;;;6272:21:27;;;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:16;;;;;;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:27;;:9;:18;;;;;;;;;;;:29;;6397:5;6374:22;;;;;;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:27;;:9;:18;;;;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;:9;;6418:36;;;;;;;;;;6198:263;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:26:o;660:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;660:1642:2;;;-1:-1:-1;660:1642:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","deployedSourceMap":"660:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;628:81:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:128:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2026:128:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2026:128:2;;;;;;;;;;;;;;;;;;;;;;;;;;;936:89:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;936:89:27;;;;;;;;;;;;;;;;;;;;1620:150:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1620:150:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1620:150:2;;;;;;;;;;;;;;;;;;712:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;712:58:2;;;;930:81:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:81:28;;;;;;;;;;;;;;;;;;;;;;;4233:317:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4233:317:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:27;;;;;;;;;1234:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1234:104:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:27;-1:-1:-1;;;;;1234:104:27;;;771:85:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;771:85:28;;;;5058:327:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5058:327:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:27;;;;;;;;;1200:120:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1200:120:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1200:120:2;;;;;;;;;2160:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2160:139:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2160:139:2;;;;;;;;;;;628:81:28;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2026:128:2:-;2093:4;2116:31;2130:8;2140:6;2116:13;:31::i;:::-;2109:38;2026:128;-1:-1:-1;;;2026:128:2:o;936:89:27:-;1006:12;;936:89;:::o;1620:150:2:-;1702:4;1725:38;1744:5;1751:3;1756:6;1725:18;:38::i;:::-;1718:45;1620:150;-1:-1:-1;;;;1620:150:2:o;712:58::-;753:17;712:58;:::o;930:81:28:-;995:9;;;;930:81;:::o;4233:317:27:-;4313:4;-1:-1:-1;;;;;4337:21:27;;;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:27;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:27;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;4462:60;;;;;;;;;;;-1:-1:-1;4539:4:27;4233:317;;;;:::o;1234:104::-;-1:-1:-1;;;;;1315:16:27;1289:7;1315:16;;;;;;;;;;;;1234:104::o;771:85:28:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;5058:327:27;5143:4;-1:-1:-1;;;;;5167:21:27;;;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:27;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1200:120:2:-;1263:4;1286:27;1301:3;1306:6;1286:14;:27::i;2160:139::-;2234:7;2260:32;2276:6;2283:8;2260:15;:32::i;2735:238:27:-;2800:4;-1:-1:-1;;;;;2824:21:27;;;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:27;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;2909:36;;;;;;;;;;;-1:-1:-1;2962:4:27;2735:238;;;;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:27;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:27;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:27;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;;;;;;;;;;;;-1:-1:-1;3719:4:27;3436:294;;;;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;1205:145;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:26;;;1205:145::o;1962:137:27:-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;:::-;-1:-1:-1;2088:4:27;1962:137;;;;:::o;1669:129::-;-1:-1:-1;;;;;1767:15:27;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;5599:256::-;-1:-1:-1;;;;;5686:16:27;;;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:27;;:9;:15;;;;;;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:27;;;:9;:15;;;;;;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:27;;;:9;:13;;;;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o","source":"pragma solidity ^0.5.0;\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\";\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\";\\n\\n/**\\n * @title Enigma Token\\n * @dev ERC20 Enigma Token (ENG)\\n *\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\n * units referred to as \'Grains\'.\\n *\\n * ENG are displayed using 8 decimal places of precision.\\n *\\n * 1 ENG is equivalent to:\\n *   100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n *\\n * 150 million ENG (total supply) is equivalent to:\\n *   15000000000000000 == 150000000 * 10**8 == 1e17\\n *\\n * All initial ENG Grains are assigned to the creator of\\n * this contract.\\n *\\n */\\ncontract EnigmaToken is ERC20, ERC20Detailed {\\n\\n    uint256 public constant INITIAL_SUPPLY = 150000000 * 10**8;  // 150 million ENG specified in Grains\\n\\n    /**\\n    * @dev EnigmaToken Constructor\\n    * Runs only on initial contract creation.\\n    */\\n    constructor() public ERC20Detailed(\\"Enigma\\", \\"ENG\\", 8) {\\n        _mint(msg.sender, INITIAL_SUPPLY);\\n    }\\n\\n    /**\\n    * @dev Transfer token for a specified address when not paused\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\n        return super.transfer(_to, _value);\\n    }\\n\\n    /**\\n    * @dev Transfer tokens from one address to another when not paused\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint256 the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\n        return super.transferFrom(_from, _to, _value);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint256 _value) public returns (bool) {\\n        return super.approve(_spender, _value);\\n    }\\n\\n    function allowance(address _owner, address _spender) public view returns (uint256) {\\n        return super.allowance(_owner,_spender);\\n    }\\n\\n}","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1835]},"id":1836,"nodeType":"SourceUnit","nodes":[{"id":1739,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1740,"nodeType":"ImportDirective","scope":1836,"sourceUnit":13349,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1741,"nodeType":"ImportDirective","scope":1836,"sourceUnit":13407,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1742,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":13348,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$13348","typeString":"contract ERC20"}},"id":1743,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1744,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":13406,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$13406","typeString":"contract ERC20Detailed"}},"id":1745,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[13348,13406,13475],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1835,"linearizedBaseContracts":[1835,13406,13348,13475],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1752,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1835,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1766,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13490,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1763,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1760,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13263,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1767,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1758,"modifierName":{"argumentTypes":null,"id":1754,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13406,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$13406_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1835,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1782,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1778,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1779,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1776,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12992,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1775,"id":1781,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"name":"_to","nodeType":"VariableDeclaration","scope":1783,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1771,"name":"_value","nodeType":"VariableDeclaration","scope":1783,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"name":"","nodeType":"VariableDeclaration","scope":1783,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1773,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1835,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12992,"visibility":"public"},{"body":{"id":1801,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1796,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1797,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1798,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1794,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":13077,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1793,"id":1800,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"name":"_from","nodeType":"VariableDeclaration","scope":1802,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1784,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1787,"name":"_to","nodeType":"VariableDeclaration","scope":1802,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1786,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1789,"name":"_value","nodeType":"VariableDeclaration","scope":1802,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"name":"","nodeType":"VariableDeclaration","scope":1802,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1791,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1835,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":13077,"visibility":"public"},{"body":{"id":1817,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1813,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1814,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1811,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":13028,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1810,"id":1816,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"name":"_spender","nodeType":"VariableDeclaration","scope":1818,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1806,"name":"_value","nodeType":"VariableDeclaration","scope":1818,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"name":"","nodeType":"VariableDeclaration","scope":1818,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1808,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1835,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":13028,"visibility":"public"},{"body":{"id":1833,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1829,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1830,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1827,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12973,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1826,"id":1832,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"name":"_owner","nodeType":"VariableDeclaration","scope":1834,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1819,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1822,"name":"_spender","nodeType":"VariableDeclaration","scope":1834,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"name":"","nodeType":"VariableDeclaration","scope":1834,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1835,"src":"2160:139:2","stateMutability":"view","superFunction":12973,"visibility":"public"}],"scope":1836,"src":"660:1642:2"}],"src":"0:2302:2"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1835]},"id":1836,"nodeType":"SourceUnit","nodes":[{"id":1739,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1740,"nodeType":"ImportDirective","scope":1836,"sourceUnit":13349,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1741,"nodeType":"ImportDirective","scope":1836,"sourceUnit":13407,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1742,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":13348,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$13348","typeString":"contract ERC20"}},"id":1743,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1744,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":13406,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$13406","typeString":"contract ERC20Detailed"}},"id":1745,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[13348,13406,13475],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1835,"linearizedBaseContracts":[1835,13406,13348,13475],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1752,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1835,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1766,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13490,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1763,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1760,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13263,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1767,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1758,"modifierName":{"argumentTypes":null,"id":1754,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13406,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$13406_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1835,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1782,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1778,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1779,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1776,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12992,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1775,"id":1781,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"name":"_to","nodeType":"VariableDeclaration","scope":1783,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1771,"name":"_value","nodeType":"VariableDeclaration","scope":1783,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"name":"","nodeType":"VariableDeclaration","scope":1783,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1773,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1835,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12992,"visibility":"public"},{"body":{"id":1801,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1796,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1797,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1798,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1794,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":13077,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1793,"id":1800,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"name":"_from","nodeType":"VariableDeclaration","scope":1802,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1784,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1787,"name":"_to","nodeType":"VariableDeclaration","scope":1802,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1786,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1789,"name":"_value","nodeType":"VariableDeclaration","scope":1802,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"name":"","nodeType":"VariableDeclaration","scope":1802,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1791,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1835,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":13077,"visibility":"public"},{"body":{"id":1817,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1813,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1814,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1811,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":13028,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1810,"id":1816,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"name":"_spender","nodeType":"VariableDeclaration","scope":1818,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1806,"name":"_value","nodeType":"VariableDeclaration","scope":1818,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"name":"","nodeType":"VariableDeclaration","scope":1818,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1808,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1835,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":13028,"visibility":"public"},{"body":{"id":1833,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1829,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1830,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1827,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12973,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1826,"id":1832,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"name":"_owner","nodeType":"VariableDeclaration","scope":1834,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1819,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1822,"name":"_spender","nodeType":"VariableDeclaration","scope":1834,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"name":"","nodeType":"VariableDeclaration","scope":1834,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1835,"src":"2160:139:2","stateMutability":"view","superFunction":12973,"visibility":"public"}],"scope":1836,"src":"660:1642:2"}],"src":"0:2302:2"},"compiler":{"name":"solc","version":"0.5.0+commit.1d4f565a.Emscripten.clang"},"networks":{"4447":{"events":{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}},"links":{},"address":"0x63DF4b7CF83157813C3a556E82D0a9BB7C089c27","transactionHash":"0x2fb4bfe82d5e4dc89fcca7a750f4ee18943d5f5323b4a5f297a13e95727abd81"}},"schemaVersion":"3.0.10","updatedAt":"2019-09-16T14:50:27.530Z","devdoc":{"details":"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. ","methods":{"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.","params":{"_spender":"The address which will spend the funds.","_value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"Gets the balance of the specified address.","params":{"owner":"The address to query the balance of."},"return":"An uint256 representing the amount owned by the passed address."},"constructor":{"details":"EnigmaToken Constructor Runs only on initial contract creation."},"decimals()":{"return":"the number of decimals of the token."},"decreaseAllowance(address,uint256)":{"details":"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"spender":"The address which will spend the funds.","subtractedValue":"The amount of tokens to decrease the allowance by."}},"increaseAllowance(address,uint256)":{"details":"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"addedValue":"The amount of tokens to increase the allowance by.","spender":"The address which will spend the funds."}},"name()":{"return":"the name of the token."},"symbol()":{"return":"the symbol of the token."},"totalSupply()":{"details":"Total number of tokens in existence"},"transfer(address,uint256)":{"details":"Transfer token for a specified address when not paused","params":{"_to":"The address to transfer to.","_value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another when not paused","params":{"_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}}},"title":"Enigma Token"},"userdoc":{"methods":{}}}')},function(e,t){e.exports=require("jayson/lib/client/browser")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("ethereumjs-abi")},function(e,t,n){e.exports=n(16)},function(e,t){e.exports=require("core-js/stable")},function(e,t){e.exports=require("regenerator-runtime/runtime")},function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"ERROR",function(){return h}),n.d(r,"DEPOSIT_TRANSACTION_HASH",function(){return v}),n.d(r,"DEPOSIT_CONFIRMATION",function(){return C}),n.d(r,"DEPOSIT_RECEIPT",function(){return E}),n.d(r,"WITHDRAW_TRANSACTION_HASH",function(){return V}),n.d(r,"WITHDRAW_CONFIRMATION",function(){return x}),n.d(r,"WITHDRAW_RECEIPT",function(){return L}),n.d(r,"LOGIN_TRANSACTION_HASH",function(){return N}),n.d(r,"LOGIN_CONFIRMATION",function(){return P}),n.d(r,"LOGIN_RECEIPT",function(){return R}),n.d(r,"LOGOUT_TRANSACTION_HASH",function(){return w}),n.d(r,"LOGOUT_CONFIRMATION",function(){return A}),n.d(r,"LOGOUT_RECEIPT",function(){return W}),n.d(r,"DEPLOY_SC_ADDR_RESULT",function(){return q}),n.d(r,"DEPLOY_SC_ETH_TRANSACTION_HASH",function(){return M}),n.d(r,"DEPLOY_SC_ETH_CONFIRMATION",function(){return F}),n.d(r,"DEPLOY_SC_ETH_RECEIPT",function(){return H}),n.d(r,"DEPLOY_SC_ENG_RECEIPT",function(){return B}),n.d(r,"CREATE_TASK",function(){return U}),n.d(r,"CREATE_TASK_INPUT",function(){return G}),n.d(r,"CREATE_TASK_RECORD_TRANSACTION_HASH",function(){return O}),n.d(r,"CREATE_TASK_RECORD_CONFIRMATION",function(){return z}),n.d(r,"CREATE_TASK_RECORD_RECEIPT",function(){return K}),n.d(r,"CREATE_TASK_RECORD",function(){return j}),n.d(r,"CREATE_TASK_RECORDS_TRANSACTION_HASH",function(){return Y}),n.d(r,"CREATE_TASK_RECORDS_CONFIRMATION",function(){return J}),n.d(r,"CREATE_TASK_RECORDS_RECEIPT",function(){return Z}),n.d(r,"CREATE_TASK_RECORDS",function(){return X}),n.d(r,"SEND_TASK_INPUT_RESULT",function(){return Q}),n.d(r,"POLL_TASK_STATUS_RESULT",function(){return ee}),n.d(r,"GET_TASK_RESULT_RESULT",function(){return te}),n.d(r,"DEPLOY_SECRET_CONTRACT_RESULT",function(){return ne}),n.d(r,"POLL_TASK_ETH_RESULT",function(){return re}),n.d(r,"RPC_SEND_TASK_INPUT",function(){return ae}),n.d(r,"RPC_DEPLOY_SECRET_CONTRACT",function(){return ie}),n.d(r,"RPC_GET_TASK_RESULT",function(){return se}),n.d(r,"RPC_GET_TASK_STATUS",function(){return oe}),n.d(r,"GET_TASK_RESULT_SUCCESS",function(){return de}),n.d(r,"GET_TASK_RESULT_FAILED",function(){return pe}),n.d(r,"GET_TASK_RESULT_UNVERIFIED",function(){return le}),n.d(r,"GET_TASK_RESULT_INPROGRESS",function(){return ce}),n.d(r,"ETH_STATUS_UNDEFINED",function(){return ye}),n.d(r,"ETH_STATUS_CREATED",function(){return ue}),n.d(r,"ETH_STATUS_VERIFIED",function(){return me}),n.d(r,"ETH_STATUS_FAILED",function(){return fe}),n.d(r,"ETH_STATUS_FAILED_ETH",function(){return _e}),n.d(r,"ETH_STATUS_FAILED_RETURN",function(){return be});n(14),n(15);var a=n(2),i=n.n(a),s=n(3),o=n.n(s),d=n(0),p=n.n(d),l=n(7),c=n.n(l),y=n(4),u=n(5),m=n.n(u);p.a.options.usePureJavaScript=!0;var f=c.a.ec;function _(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;d=g(d),e+=i.a.BigInt(d.length/2).toString(16).padStart(16,"0")+d}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function b(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;e=_(e+=i.a.BigInt(d.length).toString(16).padStart(16,"0"),d)}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function g(e){return"0x"==e.substring(0,2)?e.substring(2):e}var T={test:function(){return"hello2"},generateScAddr:function(e,t){return o.a.soliditySha3({t:"bytes",v:e},{t:"uint",v:t})},hash:function(e){var t=_("",e);return o.a.soliditySha3({t:"bytes",v:t})},principalHash:function(e,t,n,r){var a="";return a=b(a=_(a,[e,t]),[n,r]),o.a.soliditySha3({t:"bytes",v:a})},commitReceiptsHash:function(e,t,n,r,a,i,s,d,p){var l="";return l=_(l,[e]),l=_(l=b(l,[t]),[n]),l=_(l=b(l,[r,a,i]),[s,d,p]),o.a.soliditySha3({t:"bytes",v:l})},getDerivedKey:function(e,t){var n=new f("secp256k1");128==e.length&&(e="04"+e);var r=n.keyFromPrivate(t,"hex"),a=n.keyFromPublic(e,"hex").getPublic().mul(r.getPrivate()),i=2|(a.getY().isOdd()?1:0),s=a.getX(),o=y.Buffer.from([i]),d=s.toArrayLike(y.Buffer,"be",32),l=p.a.md.sha256.create();return l.update(o.toString("binary")),l.update(d.toString("binary")),l.digest().toHex()},encryptMessage:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:p.a.random.getBytesSync(12),r=p.a.util.hexToBytes(e),a=p.a.cipher.createCipher("AES-GCM",r);return a.start({iv:n}),a.update(p.a.util.createBuffer(t)),a.finish(),a.output.putBuffer(a.mode.tag).putBytes(n).toHex()},decryptMessage:function(e,t){var n=p.a.util.hexToBytes(e),r=y.Buffer.from(t,"hex"),a=p.a.util.createBuffer(r.slice(-12)),i=p.a.util.createBuffer(r.slice(-28,-12)),s=p.a.cipher.createDecipher("AES-GCM",n);if(s.start({iv:a,tag:i}),s.update(p.a.util.createBuffer(r.slice(0,-28))),s.finish())return s.output.toHex();throw new Error("decipher did not finish")},toGrains:function(e){return e*Math.pow(10,8)}};T.remove0x=g,T.hexToAscii=function(e){if("number"!=typeof e&&"string"!=typeof e)return"";e=e.toString().replace(/\s+/gi,"");for(var t=[],n=0;n<e.length;n+=2){var r=parseInt(e.substr(n,2),16);isNaN(r)||0===r||t.push(String.fromCharCode(r))}return t.join("")},T.sleep=function(e){return new Promise(function(t){return setTimeout(t,e)})},T.gzip=function(e){return new Promise(function(t,n){m.a.gzip(e,function(e,r){e?n(e):t(r)})})},T.gunzip=function(e){return new Promise(function(t,n){m.a.gunzip(e,function(e,r){e?n(e):t(r)})})};var D=T,S=n(8),I=n(9),k=n(1),$=n.n(k),h="error",v="depositTransactionHash",C="depositConfirmation",E="depositReceipt",V="withdrawTransactionHash",x="withdrawConfirmation",L="withdrawReceipt",N="loginTransactionHash",P="loginConfirmation",R="loginReceipt",w="logoutTransactionHash",A="logoutConfirmation",W="logoutReceipt",q="deploySCAddrResult",M="deploySCEthTransactionHash",F="deploySCEthConfirmation",H="deploySCEthReceipt",B="deploySCEngReceipt",U="createTask",G="createTaskInput",O="createTaskRecordTransactionHash",z="createTaskRecordConfirmation",K="createTaskRecordReceipt",j="createTaskRecord",Y="createTaskRecordsTransactionHash",J="createTaskRecordsConfirmation",Z="createTaskRecordsReceipt",X="createTaskRecords",Q="sendTaskInputResult",ee="pollTaskStatusResult",te="getTaskResultResult",ne="deploySecretContractResult",re="pollTaskETHResult",ae="sendTaskInput",ie="deploySecretContract",se="getTaskResult",oe="getTaskStatus",de="SUCCESS",pe="FAILED",le="UNVERIFIED",ce="INPROGRESS",ye=0,ue=1,me=2,fe=3,_e=4,be=5;function ge(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function Te(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){ge(i,r,a,s,o,"next",e)}function o(e){ge(i,r,a,s,o,"throw",e)}s(void 0)})}}function De(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Se=function(){function e(t,n,r,a,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.enigmaContract=n,this.tokenContract=r,this.txDefaults=a,this.enigma=i}var t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_;return t=e,(n=[{key:"findBySigningAddress",value:(_=Te(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorkerFromSigningAddress(t).call();case 2:return n=e.sent,e.abrupt("return",{account:n[0],status:parseInt(n[1][1]),report:n[1][2],balance:parseInt(n[1][3]),logs:n[1][4]});case 4:case"end":return e.stop()}},e,this)})),function(e){return _.apply(this,arguments)})},{key:"getWorkerStatus",value:(f=Te(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return n=e.sent,e.abrupt("return",parseInt(n.status));case 4:case"end":return e.stop()}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"isDeployed",value:(m=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getSecretContract(t).call();case 3:return e.t1=e.sent.status,e.t2=(0,e.t0)(e.t1),e.abrupt("return",1===e.t2);case 6:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"countSecretContracts",value:(u=Te(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.countSecretContracts().call();case 3:return e.t1=e.sent,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(){return u.apply(this,arguments)})},{key:"getSecretContractAddresses",value:(y=Te(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContractAddresses(t,n).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e,t){return y.apply(this,arguments)})},{key:"getAllSecretContractAddresses",value:(c=Te(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getAllSecretContractAddresses().call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(){return c.apply(this,arguments)})},{key:"getCodeHash",value:(l=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.codeHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"countStateDeltas",value:(p=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.stateDeltaHashes.length);case 3:case"end":return e.stop()}},e,this)})),function(e){return p.apply(this,arguments)})},{key:"getStateDeltaHash",value:(d=Te(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes[e.t0]);case 4:case"end":return e.stop()}},e,this)})),function(e,t){return d.apply(this,arguments)})},{key:"getStateDeltaHashes",value:(o=Te(regeneratorRuntime.mark(function e(t,n,r){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.t1=r,e.abrupt("return",e.sent.stateDeltaHashes.slice(e.t0,e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e,t,n){return o.apply(this,arguments)})},{key:"isValidDeltaHash",value:(s=Te(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes.includes(e.t0));case 4:case"end":return e.stop()}},e,this)})),function(e,t){return s.apply(this,arguments)})},{key:"login",value:function(e){var t=this,n=new $.a;return Te(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.login().send({from:e}).on("transactionHash",function(e){n.emit(N,e)}).on("confirmation",function(e,t){n.emit(P,e,t)}).on("receipt",function(e){n.emit(R,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(h,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"logout",value:function(e){var t=this,n=new $.a;return Te(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.logout().send({from:e}).on("transactionHash",function(e){n.emit(w,e)}).on("confirmation",function(e,t){n.emit(A,e,t)}).on("receipt",function(e){n.emit(W,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(h,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"deposit",value:function(e,t){var n=this,r=new $.a;return Te(regeneratorRuntime.mark(function a(){var i;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,n.tokenContract.methods.balanceOf(e).call();case 2:if(!(a.sent<t)){a.next=7;break}return"Not enough tokens in wallet",r.emit("error",{name:"NotEnoughTokens",message:"Not enough tokens in wallet"}),a.abrupt("return");case 7:return a.next=9,n.tokenContract.methods.approve(n.enigmaContract.options.address,t).send({from:e});case 9:return a.prev=9,a.next=12,n.enigmaContract.methods.deposit(e,t).send({from:e}).on("transactionHash",function(e){r.emit(v,e)}).on("confirmation",function(e,t){r.emit(C,e,t)});case 12:i=a.sent,r.emit(E,i),a.next=19;break;case 16:a.prev=16,a.t0=a.catch(9),r.emit(h,a.t0.message);case 19:case"end":return a.stop()}},a,null,[[9,16]])}))(),r}},{key:"withdraw",value:function(e,t){var n=this,r=new $.a;return Te(regeneratorRuntime.mark(function a(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,n.enigmaContract.methods.withdraw(t).send({from:e}).on("transactionHash",function(e){r.emit(V,e)}).on("confirmation",function(e,t){r.emit(x,e,t)}).on("receipt",function(e){r.emit(L,e)});case 3:a.next=8;break;case 5:a.prev=5,a.t0=a.catch(0),r.emit(h,a.t0.message);case 8:case"end":return a.stop()}},a,null,[[0,5]])}))(),r}},{key:"getBalance",value:(i=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getWorker(t).call();case 3:return e.t1=e.sent.balance,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e){return i.apply(this,arguments)})},{key:"getWorkerSignerAddr",value:(a=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return e.abrupt("return",e.sent.signer);case 3:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})}])&&De(t.prototype,n),r&&De(t,r),e}();var Ie=function e(t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.inputsHash=D.hash([n,r,_?f:t,o]),this.scAddr=t,this.encryptedFn=n,this.encryptedAbiEncodedArgs=r,this.gasLimit=a,this.gasPx=i,this.msgId=s,this.userPubKey=o,this.firstBlockNumber=d,this.workerAddress=p,this.workerEncryptionKey=l,this.sender=c,this.userTaskSig=y,this.nonce=u,this.preCode=m,this.preCodeHash=f,this.isContractDeploymentTask=_,this.transactionHash="",this.taskId="",this.receipt="",this.ethStatus=0,this.proof="",this.creationBlockNumber=-1,this.encryptedAbiEncodedOutputs="",this.delta="",this.usedGas="",this.ethereumPayload="",this.ethereumAddress="",this.workerTaskSig="",this.engStatus="null",this.decryptedOutput=""},ke=n(10),$e=n.n(ke),he=n(11),ve=n.n(he),Ce=n(12),Ee=n(6),Ve=n.n(Ee);function xe(e){return(xe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Le(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function Ne(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){Le(i,r,a,s,o,"next",e)}function o(e){Le(i,r,a,s,o,"throw",e)}s(void 0)})}}function Pe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Re=function(){function e(t,n,r,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.txDefaults=i;this.client=$e()(function(e,t){ve.a.post(a,JSON.parse(e),{headers:{"Content-Type":"application/json",credentials:"include"}}).then(function(e){if(h in e.data)t(e.data.error,null);else{var n=JSON.stringify(e.data.result);t(null,n)}}).catch(function(e){t({code:-32e3,message:e.message},null)})},{}),this.workerParamsCache={},this.selectedWorkerGroupCache={},this.taskKeyLocalStorage={},this.createContracts(n,r)}var t,n,r,a,s,d,l,c,y,u,m;return t=e,n=[{key:"admin",value:function(){this.admin=new Se(this.web3,this.enigmaContract,this.tokenContract,this.txDefaults,this)}},{key:"createContracts",value:function(e,t){this.enigmaContract=new this.web3.eth.Contract(S.abi,e,this.txDefaults),this.tokenContract=new this.web3.eth.Contract(I.abi,t,this.txDefaults)}},{key:"createTask",value:function(e,t,n,r,a,i,s){var o=this,d=new $.a;return Ne(regeneratorRuntime.mark(function p(){var l,c,y,u,m,f,_,b,g,T,S,I,k,$,v,C,E,V,x,L,N,P,R,w,A,W,q,M;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:return p.t0=parseInt,p.next=3,o.enigmaContract.methods.getUserTaskDeployments(a).call();case 3:if(p.t1=p.sent,l=(0,p.t0)(p.t1),c=s?D.generateScAddr(a,l):i,!s){p.next=17;break}if(!Buffer.isBuffer(i)){p.next=14;break}return y=i,p.next=11,D.gzip(y);case 11:u=p.sent,p.next=15;break;case 14:throw Error("PreCode expected to be a Buffer, instead got "+xe(i));case 15:p.next=19;break;case 17:y="",u="";case 19:for(m=s?o.web3.utils.soliditySha3({t:"bytes",value:y.toString("hex")}):"",f=void 0===t||0===t.length?[[],[]]:t[0].map(function(e,n){return t.map(function(e){return e[n]})}),_=D.remove0x(o.web3.eth.abi.encodeParameters(f[1],f[0])),b=[],g=0;g<_.length;g+=2)b.push(parseInt(_.substr(g,2),16));return p.next=26,o.web3.eth.getBlockNumber();case 26:return T=p.sent,p.next=29,o.getWorkerParams(T);case 29:return S=p.sent,I=S.firstBlockNumber,p.next=33,o.selectWorkerGroup(c,S,1)[0];case 33:return k=(k=p.sent).toLowerCase().slice(-40),$=o.obtainTaskKeyPair(),v=$.publicKey,C=$.privateKey,p.prev=36,p.next=39,new Promise(function(e,t){o.client.request("getWorkerEncryptionKey",{workerAddress:k,userPubKey:v},function(n,r){n?t(n):e(r)})});case 39:if(E=p.sent,V=E.result,x=E.id,L=V.workerEncryptionKey,N=V.workerSig,P="0x0000000000000013456e69676d612055736572204d6573736167650000000000000040"+L,R=(R=Ve.a.recover("0x"+N,o.web3.utils.soliditySha3({t:"bytes",value:P}))).toLowerCase().slice(-40),k===R){p.next=50;break}console.error("Worker address",k,"!= recovered address",R),d.emit(h,{name:"InvalidWorker",message:"Invalid worker encryption key + signature combo ".concat(k," != ").concat(R)}),p.next=58;break;case 50:return w=D.getDerivedKey(L,C),A=D.encryptMessage(w,e),W=D.encryptMessage(w,Buffer.from(b)),q=o.web3.utils.soliditySha3({t:"bytes",v:A},{t:"bytes",v:W}),p.next=56,o.web3.eth.sign(q,a);case 56:M=p.sent,d.emit(U,new Ie(c,A,W,n,r,x,v,I,k,L,a,M,l,u.toString("base64"),m,s));case 58:p.next=63;break;case 60:p.prev=60,p.t2=p.catch(36),d.emit(h,p.t2);case 63:case"end":return p.stop()}},p,null,[[36,60]])}))(),d}},{key:"createTaskRecord",value:function(e){var t=this,n=new $.a;return Ne(regeneratorRuntime.mark(function r(){var a;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.tokenContract.methods.balanceOf(e.sender).call();case 2:if(!(r.sent<e.gasLimit*e.gasPx)){r.next=6;break}return n.emit(h,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 6:return r.next=8,t.tokenContract.methods.approve(t.enigmaContract.options.address,e.gasLimit*e.gasPx).send({from:e.sender});case 8:if(r.prev=8,!e.isContractDeploymentTask){r.next=15;break}return r.next=12,t.enigmaContract.methods.createDeploymentTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber,e.nonce).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(O,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 12:r.t0=r.sent,r.next=18;break;case 15:return r.next=17,t.enigmaContract.methods.createTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(O,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 17:r.t0=r.sent;case 18:a=r.t0,e.taskId=a.events.TaskRecordCreated.returnValues.taskId,e.receipt=a,e.ethStatus=1,e.creationBlockNumber=a.blockNumber,n.emit(K,a),n.emit(j,e),r.next=30;break;case 27:r.prev=27,r.t1=r.catch(8),n.emit(h,r.t1.message);case 30:case"end":return r.stop()}},r,null,[[8,27]])}))(),n}},{key:"createTaskRecords",value:function(e){var t=this,n=new $.a;return Ne(regeneratorRuntime.mark(function r(){var a,i,s,o,d,p;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return a=e.map(function(e){return e.inputsHash}),i=e.map(function(e){return e.gasLimit}),s=e.map(function(e){return e.gasPx}),o=e.map(function(e){return e.gasLimit*e.gasPx}),r.next=6,t.tokenContract.methods.balanceOf(e[0].sender).call();case 6:if(d=r.sent,p=o.reduce(function(e,t){return e+t},0),!(d<p)){r.next=11;break}return n.emit(h,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 11:return r.next=13,t.tokenContract.methods.approve(t.enigmaContract.options.address,p).send({from:e[0].sender});case 13:return r.next=15,t.enigmaContract.methods.createTaskRecords(a,i,s,e[0].firstBlockNumber).send({from:e[0].sender}).on("transactionHash",function(t){for(var r=0;r<e.length;r++)e[r].transactionHash=t;n.emit(Y,t)}).on("confirmation",function(e,t){n.emit(J,e,t)}).then(function(t){for(var r=t.events.TaskRecordsCreated.returnValues.taskIds,a=0;a<e.length;a++)e[a].taskId=r[a],e[a].receipt=t,e[a].ethStatus=1,e[a].creationBlockNumber=t.blockNumber;n.emit(Z,t),n.emit(X,e)});case 15:case"end":return r.stop()}},r)}))(),n}},{key:"getTaskRecordStatus",value:(m=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return n=e.sent,t.ethStatus=parseInt(n.status),t.proof=n.proof,e.abrupt("return",t);case 6:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"getTaskOutputHash",value:(u=Ne(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return e.abrupt("return",e.sent.outputHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return u.apply(this,arguments)})},{key:"getReport",value:(y=Ne(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getReport(t).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e){return y.apply(this,arguments)})},{key:"getWorkerParams",value:(c=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(0===Object.keys(this.workerParamsCache).length||t-this.workerParamsCache.firstBlockNumber>=this.epochSize)){e.next=8;break}return e.next=3,this.enigmaContract.methods.getEpochSize().call();case 3:return this.epochSize=e.sent,e.next=6,this.enigmaContract.methods.getWorkerParams(t).call();case 6:n=e.sent,this.workerParamsCache={firstBlockNumber:parseInt(n[0]),seed:i.a.BigInt(n[1]),workers:n[2],stakes:n[3].map(function(e){return i.a.BigInt(e)})};case 8:return e.abrupt("return",this.workerParamsCache);case 9:case"end":return e.stop()}},e,this)})),function(e){return c.apply(this,arguments)})},{key:"selectWorkerGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5,r=t.stakes.reduce(function(e,t){return i.a.add(e,t)},i.a.BigInt(0)),a=0,s=[];do{for(var d=Ce.rawEncode(["uint256","bytes32","uint256"],[t.seed.toString(10),e,a]),p=o.a.keccak256(d),l=i.a.remainder(i.a.BigInt(p),r),c=t.workers[t.workers.length-1],y=0;y<t.workers.length;y++)if((l=i.a.subtract(l,t.stakes[y]))<=0){c=t.workers[y];break}s.includes(c)||s.push(c),a++}while(s.length<n);return s}},{key:"sendTaskInput",value:function(t){var n=this,r=new $.a;return Ne(regeneratorRuntime.mark(function a(){var i,s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return i=ae,s=Q,t.isContractDeploymentTask&&(i=ie,s=ne),a.prev=3,a.next=6,new Promise(function(r,a){n.client.request(i,e.serializeTask(t),function(e,t){e?a(e):r(t)})});case 6:r.emit(s,t),a.next=12;break;case 9:a.prev=9,a.t0=a.catch(3),r.emit(h,a.t0);case 12:case"end":return a.stop()}},a,null,[[3,9]])}))(),r}},{key:"getTaskResult",value:function(e){var t=this,n=new $.a;return Ne(regeneratorRuntime.mark(function r(){var a;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,new Promise(function(n,r){t.client.request(se,{taskId:D.remove0x(e.taskId)},function(e,t){e?r(e):n(t)})});case 3:if(!(a=r.sent).result){r.next=20;break}r.t0=a.result.status,r.next=r.t0===de?8:r.t0===pe?12:r.t0===le?15:r.t0===ce?15:17;break;case 8:e.delta=a.result.delta,e.ethereumPayload=a.result.ethereumPayload,e.ethereumAddress=a.result.ethereumAddress,e.preCodeHash=a.result.preCodeHash;case 12:e.encryptedAbiEncodedOutputs=a.result.output,e.usedGas=a.result.usedGas,e.workerTaskSig=a.result.signature;case 15:return e.engStatus=a.result.status,r.abrupt("break",18);case 17:throw new Error("Invalid task result status").message;case 18:r.next=21;break;case 20:e.engStatus=null;case 21:n.emit(te,e),r.next=27;break;case 24:r.prev=24,r.t1=r.catch(0),n.emit(h,r.t1);case 27:case"end":return r.stop()}},r,null,[[0,24]])}))(),n}},{key:"decryptTaskResult",value:(l=Ne(regeneratorRuntime.mark(function e(t){var n,r,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=this.obtainTaskKeyPair(),r=n.privateKey,a=D.getDerivedKey(t.workerEncryptionKey,r),t.decryptedOutput=D.decryptMessage(a,t.encryptedAbiEncodedOutputs),e.abrupt("return",t);case 4:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"verifyTaskOutput",value:(d=Ne(regeneratorRuntime.mark(function e(t){var n,r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getTaskOutputHash(t);case 2:return n=e.sent,r=this.web3.utils.soliditySha3({t:"bytes",value:t.encryptedAbiEncodedOutputs.toString("hex")}),e.abrupt("return",n===r);case 5:case"end":return e.stop()}},e,this)})),function(e){return d.apply(this,arguments)})},{key:"verifyTaskStatus",value:(s=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getTaskRecordStatus(t);case 2:n=e.sent.ethStatus,e.t0=t.engStatus,e.next=e.t0===de?6:e.t0===pe?8:e.t0===le?10:e.t0===ce?10:12;break;case 6:return e.abrupt("return",n===me);case 8:return e.abrupt("return",n===fe);case 10:return e.abrupt("return",n===ue);case 12:return e.abrupt("return",n===ye);case 13:case"end":return e.stop()}},e,this)})),function(e){return s.apply(this,arguments)})},{key:"pollTaskStatusGen",value:regeneratorRuntime.mark(function e(t,n){var r=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,new Promise(function(e,a){r.client.request(oe,{taskId:D.remove0x(t.taskId),workerAddress:t.workerAddress,withResult:n},function(r,i){r?a(r):(t.engStatus=i.result.status,n&&(t.encryptedAbiEncodedOutputs=i.result.output),e(t))})});case 3:e.next=0;break;case 5:case"end":return e.stop()}},e)})},{key:"innerPollTaskStatus",value:function(e,t,n){var r=this;t.next().value.then(function(a){n.emit(ee,a),"SUCCESS"!==a.engStatus&&"FAILED"!==a.engStatus&&r.innerPollTaskStatus(e,t,n)}).catch(function(e){n.emit(h,e)})}},{key:"pollTaskStatus",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=new $.a,r=this.pollTaskStatusGen(e,t);return this.innerPollTaskStatus(e,r,n),n}},{key:"pollTaskETH",value:(a=Ne(regeneratorRuntime.mark(function e(t){var n,r=arguments;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=r.length>1&&void 0!==r[1]?r[1]:1e3;case 1:if(t.ethStatus!==ue){e.next=9;break}return e.next=4,this.getTaskRecordStatus(t);case 4:return t=e.sent,e.next=7,D.sleep(n);case 7:e.next=1;break;case 9:return e.abrupt("return",t);case 10:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})},{key:"obtainTaskKeyPair",value:function(){var e,t="undefined"!=typeof window,n=t?window.localStorage.getItem("encodedPrivateKey"):this.taskKeyLocalStorage.encodedPrivateKey;if(null==n){var r=p.a.random.createInstance();r.seedFileSync=function(e){return p.a.util.fillString("cupcake",e)},e=p.a.util.bytesToHex(r.getBytes(32)),t?window.localStorage.setItem("encodedPrivateKey",btoa(e)):this.taskKeyLocalStorage.encodedPrivateKey=Buffer.from(e,"binary").toString("base64")}else e=t?atob(n):Buffer.from(n,"base64").toString("binary");return{publicKey:Ve.a.publicKeyByPrivateKey(e),privateKey:e}}},{key:"deploySecretContract",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return Ne(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!0).on(U,function(e){return o(e)}).on(h,function(e){return d(e)})});case 2:return p=o.sent,d.emit(U,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(h,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(ne,function(t){return e(t)}).on(h,function(e){return t(e)})});case 10:return d.emit(ne,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(h,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}},{key:"computeTask",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return Ne(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!1).on(U,function(e){return o(e)}).on(h,function(e){return d(e)})});case 2:return p=o.sent,d.emit(U,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(h,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(Q,function(t){return e(t)}).on(h,function(e){return t(e)})});case 10:return d.emit(Q,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(h,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}}],r=[{key:"serializeTask",value:function(e){return e.isContractDeploymentTask?{preCode:e.preCode,encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),encryptedFn:D.remove0x(e.encryptedFn),userDHKey:D.remove0x(e.userPubKey),contractAddress:D.remove0x(e.scAddr),workerAddress:e.workerAddress}:{taskId:D.remove0x(e.taskId),workerAddress:e.workerAddress,encryptedFn:D.remove0x(e.encryptedFn),encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),contractAddress:D.remove0x(e.scAddr),userDHKey:D.remove0x(e.userPubKey)}}},{key:"version",value:function(){return"0.0.1"}}],n&&Pe(t.prototype,n),r&&Pe(t,r),e}();n.d(t,"Enigma",function(){return Re}),n.d(t,"utils",function(){return D}),n.d(t,"eeConstants",function(){return r})}])});
//# sourceMappingURL=enigma-js.node.min.js.map