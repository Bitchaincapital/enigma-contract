!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("enigma-js",[],t):"object"==typeof exports?exports["enigma-js"]=t():e["enigma-js"]=t()}(global,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=14)}([function(e,t){e.exports=require("node-forge")},function(e,t){e.exports=require("eventemitter3")},function(e,t){e.exports=require("jsbi")},function(e,t){e.exports=require("web3-utils")},function(e,t){e.exports=require("buffer")},function(e,t){e.exports=require("zlib")},function(e,t){e.exports=require("eth-crypto")},function(e,t){e.exports=require("elliptic")},function(e){e.exports=JSON.parse('{"contractName":"Enigma","abi":[{"constant":true,"inputs":[],"name":"getAllSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getTaskTimeoutSize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getWorkersParams","outputs":[{"components":[{"name":"firstBlockNumber","type":"uint256"},{"name":"workers","type":"address[]"},{"name":"stakes","type":"uint256[]"},{"name":"seed","type":"uint256"}],"name":"","type":"tuple[5]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_scAddr","type":"bytes32"}],"name":"getSecretContract","outputs":[{"components":[{"name":"owner","type":"address"},{"name":"preCodeHash","type":"bytes32"},{"name":"codeHash","type":"bytes32"},{"name":"stateDeltaHashes","type":"bytes32[]"},{"name":"status","type":"uint8"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"getTaskRecord","outputs":[{"components":[{"name":"sender","type":"address"},{"name":"inputsHash","type":"bytes32"},{"name":"outputHash","type":"bytes32"},{"name":"gasLimit","type":"uint64"},{"name":"gasPx","type":"uint64"},{"name":"blockNumber","type":"uint256"},{"name":"status","type":"uint8"},{"name":"proof","type":"bytes"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_signer","type":"address"}],"name":"getWorkerFromSigningAddress","outputs":[{"name":"","type":"address"},{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getUpdatedEnigmaContractAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_worker","type":"address"}],"name":"getWorker","outputs":[{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSigningAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEpochSize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_sender","type":"address"}],"name":"getUserTaskDeployments","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_tokenAddress","type":"address"},{"name":"_principal","type":"address"},{"name":"_epochSize","type":"uint256"},{"name":"_timeoutThreshold","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"}],"name":"SecretContractDeployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"workerAddress","type":"address"}],"name":"LoggedIn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"workerAddress","type":"address"}],"name":"LoggedOut","type":"event"},{"constant":false,"inputs":[{"name":"_signer","type":"address"},{"name":"_report","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_custodian","type":"address"},{"name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"login","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"logout","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContractFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_preCodeHash","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_initStateDeltaHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"countSecretContracts","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_start","type":"uint256"},{"name":"_stop","type":"uint256"}],"name":"getSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint64"},{"name":"_gasPx","type":"uint64"},{"name":"_firstBlockNumber","type":"uint256"},{"name":"_nonce","type":"uint256"}],"name":"createDeploymentTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint64"},{"name":"_gasPx","type":"uint64"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_stateDeltaHash","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitReceipt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitTaskFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"returnFeesForTask","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_seed","type":"uint256"},{"name":"_sig","type":"bytes"}],"name":"setWorkersParams","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getActiveWorkers","outputs":[{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getFirstBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getWorkerParams","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_scAddr","type":"bytes32"}],"name":"getWorkerGroup","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_custodian","type":"address"}],"name":"getReport","outputs":[{"name":"","type":"address"},{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_data","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"verifyReport","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_updatedEnigmaContractAddress","type":"address"}],"name":"upgradeEnigmaContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_workerAddress","type":"address"},{"name":"_sig","type":"bytes"}],"name":"transferWorkerStakePostUpgrade","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getActiveWorkers\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getWorkerGroup\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"logout\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitReceipt\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"deposit\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_initStateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_seed\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setWorkersParams\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getAllSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getTaskTimeoutSize\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getWorkersParams\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple[5]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"countSecretContracts\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getSecretContract\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"register\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_workerAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"transferWorkerStakePostUpgrade\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_start\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_stop\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getTaskRecord\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"proof\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"isOwner\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getWorkerParams\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorkerFromSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContractFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"login\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_data\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"verifyReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getUpdatedEnigmaContractAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_worker\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorker\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createDeploymentTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitTaskFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getFirstBlockNumber\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getEpochSize\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"returnFeesForTask\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_updatedEnigmaContractAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"upgradeEnigmaContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_sender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getUserTaskDeployments\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"name\\":\\"_tokenAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_principal\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_epochSize\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_timeoutThreshold\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"custodian\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"Registered\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"inclusionBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"indexed\\":false,\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WorkersParameterized\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"deltaHashIndex\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailedETH\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"TaskFeeReturned\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"DepositSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WithdrawSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"initStateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"SecretContractDeployed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"LoggedIn\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"LoggedOut\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_optionalEthereumContractAddress\\":\\"Output state hash\\",\\"_optionalEthereumData\\":\\"Output state hash\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_stateDeltaHash\\":\\"Input state delta hash\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"countSecretContracts()\\":{\\"return\\":\\"Number of deployed secret contracts\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\",\\"_nonce\\":\\"Locally-computed nonce value for this deployment\\"}},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_initStateDeltaHash\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumContractAddress\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumData\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_preCodeHash\\":\\"Predeployed bytecode hash\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deposit(address,uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\",\\"_custodian\\":\\"The worker\'s ETH address\\"}},\\"getActiveWorkers(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"}},\\"getAllSecretContractAddresses()\\":{\\"return\\":\\"Array of secret contract addresses\\"},\\"getEpochSize()\\":{\\"return\\":\\"Epoch size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Block number\\"},\\"getReport(address)\\":{\\"params\\":{\\"_custodian\\":\\"The worker\'s custodian address\\"}},\\"getSecretContract(bytes32)\\":{\\"params\\":{\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"SecretContract struct\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"params\\":{\\"_start\\":\\"Start of range\\",\\"_stop\\":\\"End of range\\"},\\"return\\":\\"Subset of deployed secret contract addresses\\"},\\"getSigningAddress()\\":{\\"return\\":\\"Signing address\\"},\\"getTaskRecord(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique identifier for a given task\\"},\\"return\\":\\"TaskRecord struct\\"},\\"getTaskTimeoutSize()\\":{\\"return\\":\\"task timeout\\"},\\"getUpdatedEnigmaContractAddress()\\":{\\"return\\":\\"Updated Enigma contract address\\"},\\"getUserTaskDeployments(address)\\":{\\"params\\":{\\"_sender\\":\\"Task sender\'s ethereum address\\"},\\"return\\":\\"Current number for task deployments for user\\"},\\"getWorker(address)\\":{\\"params\\":{\\"_worker\\":\\"Worker\'s ethereum address\\"},\\"return\\":\\"Worker struct\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"params\\":{\\"_signer\\":\\"Worker\'s signing address\\"},\\"return\\":\\"Ethereum addressWorker struct\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number the task record was mined\\",\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"Selected workers\' addresses\\"},\\"getWorkerParams(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes\\"},\\"getWorkersParams()\\":{\\"return\\":\\"Array of WorkersParams structs\\"},\\"isOwner()\\":{\\"return\\":\\"true if `msg.sender` is the owner of the contract.\\"},\\"owner()\\":{\\"return\\":\\"the address of the owner.\\"},\\"register(address,bytes,bytes)\\":{\\"params\\":{\\"_report\\":\\"The RLP encoded report returned by the IAS\\",\\"_signature\\":\\"Signature\\",\\"_signer\\":\\"The signer address, derived from the enclave public key\\"}},\\"renounceOwnership()\\":{\\"details\\":\\"Allows the current owner to relinquish control of the contract.\\"},\\"returnFeesForTask(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique taskId\\"}},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number principal node is attempting to set worker params\\",\\"_seed\\":\\"The random integer generated by the enclave\\",\\"_sig\\":\\"Principal node\'s signature\\"}},\\"transferOwnership(address)\\":{\\"details\\":\\"Allows the current owner to transfer control of the contract to a newOwner.\\",\\"params\\":{\\"newOwner\\":\\"The address to transfer ownership to.\\"}},\\"transferWorkerStakePostUpgrade(address,bytes)\\":{\\"params\\":{\\"_sig\\":\\"Signature\\",\\"_workerAddress\\":\\"Newly-registered worker address\\"}},\\"upgradeEnigmaContract(address)\\":{\\"params\\":{\\"_updatedEnigmaContractAddress\\":\\"Updated newly-deployed Enigma contract address\\"}},\\"verifyReport(bytes,bytes)\\":{\\"params\\":{\\"_data\\":\\"The report itself\\",\\"_signature\\":\\"The signature of the report\\"}},\\"withdraw(uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\"}}}},\\"userdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee.\\"},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure.\\"},\\"countSecretContracts()\\":{\\"notice\\":\\"Check if secret contract has been deployed\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"notice\\":\\"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid.\\"},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"notice\\":\\"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deposit(address,uint256)\\":{\\"notice\\":\\"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\"},\\"getActiveWorkers(uint256)\\":{\\"notice\\":\\"Get active workers before a certain block number\\"},\\"getAllSecretContractAddresses()\\":{\\"notice\\":\\"Get all secret contract addresses\\"},\\"getEpochSize()\\":{\\"notice\\":\\"Get the epoch block size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"notice\\":\\"Get the first block number of an epoch that a given block number belongs to\\"},\\"getReport(address)\\":{\\"notice\\":\\"The RLP encoded report returned by the IAS server\\"},\\"getSecretContract(bytes32)\\":{\\"notice\\":\\"Get a SecretContract struct given a particular secret contract address\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"notice\\":\\"Get deployed secret contract addresses within a range\\"},\\"getSigningAddress()\\":{\\"notice\\":\\"Get signing address of calling worker\\"},\\"getTaskRecord(bytes32)\\":{\\"notice\\":\\"Get a TaskRecord struct given a particular task\'s ID\\"},\\"getTaskTimeoutSize()\\":{\\"notice\\":\\"Get the task timeout size\\"},\\"getUpdatedEnigmaContractAddress()\\":{\\"notice\\":\\"Get updated Enigma contract address\\"},\\"getUserTaskDeployments(address)\\":{\\"notice\\":\\"Get the current number/index (used as unique nonce value) of task deployments for a given user user\\"},\\"getWorker(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s ethereum address\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s signing address\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"notice\\":\\"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address.\\"},\\"getWorkerParams(uint256)\\":{\\"notice\\":\\"Get worker params for an epoch given a particular block number\\"},\\"getWorkersParams()\\":{\\"notice\\":\\"Get epoch-based history of worker params information\\"},\\"login()\\":{\\"notice\\":\\"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process.\\"},\\"logout()\\":{\\"notice\\":\\"Logout worker. Worker must be logged in to do so.\\"},\\"register(address,bytes,bytes)\\":{\\"notice\\":\\"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks.\\"},\\"renounceOwnership()\\":{\\"notice\\":\\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\\"},\\"returnFeesForTask(bytes32)\\":{\\"notice\\":\\"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\"},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"notice\\":\\"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node\\"},\\"transferWorkerStakePostUpgrade(address,bytes)\\":{\\"notice\\":\\"Transfer worker stake from old contract to new contract upon registration\\"},\\"upgradeEnigmaContract(address)\\":{\\"notice\\":\\"Upgrade Enigma Contract\\"},\\"verifyReport(bytes,bytes)\\":{\\"notice\\":\\"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\"},\\"withdraw(uint256)\\":{\\"notice\\":\\"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\"}}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":\\"Enigma\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":{\\"keccak256\\":\\"0x10b5ea048c5362ca61d5bbb9aee310df8f449d12e45077bd566f089ae7643647\\",\\"urls\\":[\\"bzzr://21ddb3894b89e7e9b3e008e62d7e009438c7e04eb1847ecf804409ffac52b2be\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol\\":{\\"keccak256\\":\\"0x7e473f6fd52b1afa0d6d80daf7a4a1a890b3c9c37d2254ca7b3ae270ee430009\\",\\"urls\\":[\\"bzzr://19cabf02c2590b337926e61fb0a95cb34e02727100072a83e5b1ced6d34d9420\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol\\":{\\"keccak256\\":\\"0x59095146f4874654d6f432167305c66841f8db797e258338133dc1741c3b8f2a\\",\\"urls\\":[\\"bzzr://38eb98b8347bf7281803d79a19b8ca2f01a24f0f867996543e1bf4e1624ce806\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol\\":{\\"keccak256\\":\\"0xb60ae3a36e5955a9a2ea5d6025984206bc503d546861ccc4b14629c22caafca7\\",\\"urls\\":[\\"bzzr://6d6c88518a482f959ab708aad0b3ae73cdd01eab9a8c418a87c297dadf482485\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol\\":{\\"keccak256\\":\\"0xaba87ac6cd834c8a356a454c9eeca6373a159c772e70c2d444facb024907f087\\",\\"urls\\":[\\"bzzr://e8c6d14b96f76d84c547c841b61e0df7a87fdb3f099621cafbe70f45c79cbf05\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol\\":{\\"keccak256\\":\\"0x9c1534110585b4b0709bf01e9f24ab9f63439cc3f8eeca85a34456631cad7ee9\\",\\"urls\\":[\\"bzzr://48403c87ef8c9bc15ca79a647d5f9774c76d0f0f3063bebfd683a79287446d10\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol\\":{\\"keccak256\\":\\"0x77c56f8628edc546bae87ffa43edc72eb0c2e5a80f0a1408d8d1f2e5d113427d\\",\\"urls\\":[\\"bzzr://a0b25de45ba2e96fbc2d9964cef803c98427eedcaf6b3c6de4b7ddac91fa6a6a\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol\\":{\\"keccak256\\":\\"0x4e00d7b1cd34e5f91b51a6d6cff4af44221cda6b193ce91e76f71a838fa889f1\\",\\"urls\\":[\\"bzzr://215fe7b649e59d98e2bb8c94efe38336b3364ea428f69fb2871b5896f65432be\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol\\":{\\"keccak256\\":\\"0x4add669b083c12407a847f16ff4817357378fd291e2c46ee191c0f365fd17729\\",\\"urls\\":[\\"bzzr://43a1f75290f135f01a63475376b159f3bf3a4a8ba54ed060f2ef26677ff11d6c\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol\\":{\\"keccak256\\":\\"0x22de43dd998191a35ebf28539e1ffd42eadf3b92b4a3819222813f38a4befcc7\\",\\"urls\\":[\\"bzzr://94ca4f3375dc7b985ecadb40d7ad5b46d9c367cec7bd52c3932e4ab4ee19199c\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol\\":{\\"keccak256\\":\\"0x91712e3ba38a87437beede35c06d030a3a32c0e87d6cd7d2cf834cf5c1384d25\\",\\"urls\\":[\\"bzzr://7dc42547974846e386aab9878cf85aca5ec9dfe1612bc1ca6e28ed8cdba1e031\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol\\":{\\"keccak256\\":\\"0xe21e3ce303a61dc1fe7e5ee8c77c94b0a96eaa9015f8abe6eb1fbce2d903b8ee\\",\\"urls\\":[\\"bzzr://ff90e3a82eb6fb10497c419d71bf240f43c544d0071b74b251204200dc08bba1\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Base64.sol\\":{\\"keccak256\\":\\"0x6b6fca483b4fd19ab6f282b45b24f02277ad2b0e2e65269c1f1f9b0672bf8ef3\\",\\"urls\\":[\\"bzzr://227cecb0afb5c808a338d0c757cedf9c085786a8f74fece5d9b14fac332f1301\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Bytes.sol\\":{\\"keccak256\\":\\"0xa9504cd72371444aaec522d40e02f930e9017fc59059c80b4d0b60afe6d3f151\\",\\"urls\\":[\\"bzzr://09e35d59d1fd6c478388e098f8f586d0eb3004af0e8402e5dc0c003b3d555e56\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Memory.sol\\":{\\"keccak256\\":\\"0xbb69933fc38ebf561a60fc4496c8d48f4aef12b5cef49bb9dd2957d8c6478ce0\\",\\"urls\\":[\\"bzzr://a4b1117bcf978aebba7df92a10df9e866cf854033bc2f4d8e426e360ba78d1fa\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol\\":{\\"keccak256\\":\\"0x171f88dc2ce91d601aa659bf84a240a2e7565d26d1a3ef1a0f98ec8181573498\\",\\"urls\\":[\\"bzzr://3830487ad541d0a7df9b761dee0a835cf065e369c6f1b2ac5f8409413f1777b6\\"]},\\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\":{\\"keccak256\\":\\"0xb48974d92a87053dc1d6c5389f3d1b2ad522dec23afcb508eaa935d98dfdc0b6\\",\\"urls\\":[\\"bzzr://e665a84309432c27a26e622665dd97ff29d4d6ad7ad655d6e2c50226a5e99b56\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]},\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\":{\\"keccak256\\":\\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\\",\\"urls\\":[\\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\\"]}},\\"version\\":1}","bytecode":"","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106102325760003560e01c80638f32d59b11610130578063c011b1c3116100b8578063df4da4611161007c578063df4da461146104eb578063ee6dcef9146104f3578063f2fde38b14610506578063f74e6e1d14610519578063f9a9b7ae1461052c57610232565b8063c011b1c31461048a578063c652b919146104aa578063ca2af5f2146104bd578063cbbc061d146104d0578063d855a579146104e357610232565b8063a3bdae3e116100ff578063a3bdae3e14610433578063b34e97e814610454578063b5c149921461045c578063b9758c951461046f578063ba2526881461047757610232565b80638f32d59b146103c75780639836ca31146103dc578063a0c39982146103ff578063a153ec601461042057610232565b80635f25f850116101be578063786cd4d711610182578063786cd4d7146103595780637c438de91461036c5780638da5cb5b1461037f5780638e055b8b146103945780638ed05737146103a757610232565b80635f25f850146102ff57806370266a4714610314578063715018a61461032957806375bbf75b146103315780637624281e1461033957610232565b8063365a2cb311610205578063365a2cb31461029e57806347e7ef24146102b157806348cc3761146102c457806350946a9f146102d7578063550baa2f146102ea57610232565b806316f9a2a4146102375780631d40ff0b146102615780631f3c99c3146102815780632e1a7d4d1461028b575b600080fd5b61024a6102453660046135e3565b61053f565b6040516102589291906143d0565b60405180910390f35b61027461026f366004613911565b6105d9565b60405161025891906143bf565b610289610678565b005b6102896102993660046135e3565b6108d1565b6102896102ac366004613601565b610c18565b6102896102bf3660046134ee565b610ef1565b6102896102d2366004613601565b61113f565b6102896102e53660046139b3565b6113da565b6102f2611661565b60405161025891906143f5565b6103076116bc565b6040516102589190614883565b61031c6116c2565b6040516102589190614406565b6102896117dc565b610307611837565b61034c6103473660046135e3565b6118c9565b604051610258919061451a565b610289610367366004613473565b611990565b61030761037a3660046133db565b611a81565b610387611b40565b6040516102589190614371565b6102f26103a2366004613911565b611b4f565b6103ba6103b53660046135e3565b611be5565b6040516102589190614841565b6103cf611d25565b6040516102589190614417565b6103ef6103ea3660046135e3565b611d36565b6040516102589493929190614891565b61041261040d3660046133b5565b611dd9565b60405161025892919061439f565b61028961042e36600461376b565b61201c565b6104466104413660046133b5565b6122e8565b60405161025892919061437f565b61028961256a565b61030761046a3660046138a0565b6127d6565b610387612815565b6102896104853660046137e3565b612824565b61049d6104983660046133b5565b612894565b6040516102589190614852565b6102896104b8366004613838565b612a45565b6102896104cb3660046136df565b612ab7565b6103076104de3660046135e3565b612d86565b610387612e15565b610307612e31565b6102896105013660046135e3565b612e37565b6102896105143660046133b5565b612eb8565b6102896105273660046133b5565b612ed5565b61030761053a3660046133b5565b612f83565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b815260040161057c9291906145fb565b60006040518083038186803b15801561059457600080fd5b505af41580156105a8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105d09190810190613552565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a9061061b90600090879087906004016147ec565b60006040518083038186803b15801561063357600080fd5b505af4158015610647573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261066f919081019061351e565b90505b92915050565b3361068161300c565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156106c957fe5b60028111156106d457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107715780601f1061074657610100808354040283529160200191610771565b820191906000526020600020905b81548152906001019060200180831161075457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561081c57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156107ea57fe5b60038111156107f557fe5b815260200160018201548152602001600282015481525050815260200190600101906107a9565b505050915250909150600190508160200151600281111561083957fe5b1461086257604051600160e51b62461bcd028152600401610859906144ca565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f499061089d9060009060040161452b565b60006040518083038186803b1580156108b557600080fd5b505af41580156108c9573d6000803e3d6000fd5b505050505050565b336108da61300c565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561092257fe5b600281111561092d57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109ca5780601f1061099f576101008083540402835291602001916109ca565b820191906000526020600020905b8154815290600101906020018083116109ad57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610a7557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610a4357fe5b6003811115610a4e57fe5b81526020016001820154815260200160028201548152505081526020019060010190610a02565b5050509152509091506002905081602001516002811115610a9257fe5b14610ab257604051600160e51b62461bcd0281526004016108599061450a565b610aba61303c565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610af69085904390600401614863565b60606040518083038186803b158015610b0e57600080fd5b505af4158015610b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b4691908101906138d5565b9050600281516003811115610b5757fe5b14610b7757604051600160e51b62461bcd0281526004016108599061446a565b8060200151610b8543612d86565b11610ba557604051600160e51b62461bcd028152600401610859906144ba565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df46490610be29060009088906004016145fb565b60006040518083038186803b158015610bfa57600080fd5b505af4158015610c0e573d6000803e3d6000fd5b5050505050505050565b6004546001600160a01b03163014610c4557604051600160e51b62461bcd0281526004016108599061448a565b33610c4e61300c565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610c9657fe5b6002811115610ca157fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d3e5780601f10610d1357610100808354040283529160200191610d3e565b820191906000526020600020905b815481529060010190602001808311610d2157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610de957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610db757fe5b6003811115610dc257fe5b81526020016001820154815260200160028201548152505081526020019060010190610d76565b5050509152509091506001905081602001516002811115610e0657fe5b14610e2657604051600160e51b62461bcd028152600401610859906144ca565b8960016000828152601f602052604090206004015460ff166001811115610e4957fe5b14610e6957604051600160e51b62461bcd0281526004016108599061447a565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610eb4906000908f908f908f908f908f908f908f908f90600401614616565b60006040518083038186803b158015610ecc57600080fd5b505af4158015610ee0573d6000803e3d6000fd5b505050505050505050505050505050565b6004546001600160a01b03163014610f1e57604051600160e51b62461bcd0281526004016108599061448a565b81610f2761300c565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610f6f57fe5b6002811115610f7a57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110175780601f10610fec57610100808354040283529160200191611017565b820191906000526020600020905b815481529060010190602001808311610ffa57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110c257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561109057fe5b600381111561109b57fe5b8152602001600182015481526020016002820154815250508152602001906001019061104f565b50505091525090915060009050816020015160028111156110df57fe5b141561110057604051600160e51b62461bcd028152600401610859906144da565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610be290600090889088906004016145d3565b6004546001600160a01b0316301461116c57604051600160e51b62461bcd0281526004016108599061448a565b3361117561300c565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156111bd57fe5b60028111156111c857fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112655780601f1061123a57610100808354040283529160200191611265565b820191906000526020600020905b81548152906001019060200180831161124857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561131057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156112de57fe5b60038111156112e957fe5b8152602001600182015481526020016002820154815250508152602001906001019061129d565b505050915250909150600190508160200151600281111561132d57fe5b1461134d57604051600160e51b62461bcd028152600401610859906144ca565b89600080828152601f602052604090206004015460ff16600181111561136f57fe5b1461138f57604051600160e51b62461bcd028152600401610859906144ea565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610eb4906000908f908f908f908f908f908f908f908f90600401614616565b6004546001600160a01b0316301461140757604051600160e51b62461bcd0281526004016108599061448a565b3361141061300c565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561145857fe5b600281111561146357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115005780601f106114d557610100808354040283529160200191611500565b820191906000526020600020905b8154815290600101906020018083116114e357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156115ab57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561157957fe5b600381111561158457fe5b81526020016001820154815260200160028201548152505081526020019060010190611538565b50505091525090915060009050816020015160028111156115c857fe5b14156115e957604051600160e51b62461bcd028152600401610859906144da565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b189061162a90600090899089908990600401614807565b60006040518083038186803b15801561164257600080fd5b505af4158015611656573d6000803e3d6000fd5b505050505050505050565b60606000601b018054806020026020016040519081016040528092919081815260200182805480156116b257602002820191906000526020600020905b81548152602001906001019080831161169e575b5050505050905090565b60025490565b6116ca61305e565b6040805160a08101909152600660056000835b828210156117d357838260040201604051806080016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561175957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161173b575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156117b157602002820191906000526020600020905b81548152602001906001019080831161179d575b50505050508152602001600382015481525050815260200190600101906116dd565b50505050905090565b6117e4611d25565b6117ed57600080fd5b6023546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3602380546001600160a01b0319169055565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a33869061187490849060040161452b565b60206040518083038186803b15801561188c57600080fd5b505af41580156118a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118c491908101906138f3565b905090565b6118d161308c565b6000828152601f6020908152604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561195957602002820191906000526020600020905b815481526020019060010190808311611945575b5050509183525050600482015460209091019060ff16600181111561197a57fe5b600181111561198557fe5b90525090505b919050565b6004546001600160a01b031630146119bd57604051600160e51b62461bcd0281526004016108599061448a565b8260005b601a54811015611a3f57816001600160a01b03166000601c01600080601a0184815481106119eb57fe5b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902054161415611a3757604051600160e51b62461bcd0281526004016108599061445a565b6001016119c1565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e2090610be290600090889088908890600401614588565b6004546000906001600160a01b03163314611ab157604051600160e51b62461bcd028152600401610859906144fa565b604051600160e01b63d3c0af8702815273__UpgradeImpl___________________________9063d3c0af8790611af0906000908790879060040161455b565b60206040518083038186803b158015611b0857600080fd5b505af4158015611b1c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061066f91908101906138f3565b6023546001600160a01b031690565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a2600990611b9190600090879087906004016147ec565b60006040518083038186803b158015611ba957600080fd5b505af4158015611bbd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261066f91908101906135af565b611bed6130b7565b6000828152601d602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff90911690811115611c7c57fe5b6005811115611c8757fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611d155780601f10611cea57610100808354040283529160200191611d15565b820191906000526020600020905b815481529060010190602001808311611cf857829003601f168201915b5050505050815250509050919050565b6023546001600160a01b0316331490565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611d769291906145fb565b60006040518083038186803b158015611d8e57600080fd5b505af4158015611da2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611dca9190810190613930565b93509350935093509193509193565b6000611de361300c565b6000611ded61300c565b60005b601a5481101561201157601a8054601c9160009184908110611e0e57fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611e6457fe5b6002811115611e6f57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f0c5780601f10611ee157610100808354040283529160200191611f0c565b820191906000526020600020905b815481529060010190602001808311611eef57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611fb757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611f8557fe5b6003811115611f9057fe5b81526020016001820154815260200160028201548152505081526020019060010190611f44565b50505050815250509150856001600160a01b031682600001516001600160a01b0316141561200957601a805482908110611fed57fe5b6000918252602090912001546001600160a01b03169250612011565b600101611df0565b509092509050915091565b6004546001600160a01b0316301461204957604051600160e51b62461bcd0281526004016108599061448a565b3361205261300c565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561209a57fe5b60028111156120a557fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121425780601f1061211757610100808354040283529160200191612142565b820191906000526020600020905b81548152906001019060200180831161212557829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156121ed57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156121bb57fe5b60038111156121c657fe5b8152602001600182015481526020016002820154815250508152602001906001019061217a565b505050915250909150600190508160200151600281111561220a57fe5b1461222a57604051600160e51b62461bcd028152600401610859906144ca565b85600080828152601f602052604090206004015460ff16600181111561224c57fe5b1461226c57604051600160e51b62461bcd028152600401610859906144ea565b604051600160e21b6301c7aeeb02815273__TaskImpl______________________________9063071ebbac906122af906000908b908b908b908b90600401614709565b60006040518083038186803b1580156122c757600080fd5b505af41580156122db573d6000803e3d6000fd5b5050505050505050505050565b60006060826122f561300c565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561233d57fe5b600281111561234857fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123e55780601f106123ba576101008083540402835291602001916123e5565b820191906000526020600020905b8154815290600101906020018083116123c857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561249057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561245e57fe5b600381111561246957fe5b8152602001600182015481526020016002820154815250508152602001906001019061241d565b50505091525090915060009050816020015160028111156124ad57fe5b14156124ce57604051600160e51b62461bcd028152600401610859906144da565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f0319061250b906000908990600401614539565b60006040518083038186803b15801561252357600080fd5b505af4158015612537573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261255f919081019061342c565b935093505050915091565b3361257361300c565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156125bb57fe5b60028111156125c657fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126635780601f1061263857610100808354040283529160200191612663565b820191906000526020600020905b81548152906001019060200180831161264657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561270e57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156126dc57fe5b60038111156126e757fe5b8152602001600182015481526020016002820154815250508152602001906001019061269b565b5050505081525050905061272143612d86565b61274057604051600160e51b62461bcd028152600401610859906144aa565b60028160200151600281111561275257fe5b1461277257604051600160e51b62461bcd0281526004016108599061450a565b6021546060820151101561279b57604051600160e51b62461bcd0281526004016108599061444a565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e29061089d9060009060040161452b565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________90639646236890611af09086908690600401614425565b6004546001600160a01b031690565b6004546001600160a01b0316301461285157604051600160e51b62461bcd0281526004016108599061448a565b604051600160e01b638c91056d02815273__TaskImpl______________________________90638c91056d90610be290600090889088908890889060040161475b565b61289c61300c565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156128e457fe5b60028111156128ef57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561298c5780601f106129615761010080835404028352916020019161298c565b820191906000526020600020905b81548152906001019060200180831161296f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612a3757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612a0557fe5b6003811115612a1057fe5b815260200160018201548152602001600282015481525050815260200190600101906129c4565b505050915250909392505050565b6004546001600160a01b03163014612a7257604051600160e51b62461bcd0281526004016108599061448a565b604051600160e01b6366e13f4302815273__TaskImpl______________________________906366e13f439061162a906000908990899089908990899060040161479d565b6004546001600160a01b03163014612ae457604051600160e51b62461bcd0281526004016108599061448a565b33612aed61300c565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115612b3557fe5b6002811115612b4057fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612bdd5780601f10612bb257610100808354040283529160200191612bdd565b820191906000526020600020905b815481529060010190602001808311612bc057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612c8857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612c5657fe5b6003811115612c6157fe5b81526020016001820154815260200160028201548152505081526020019060010190612c15565b5050509152509091506001905081602001516002811115612ca557fe5b14612cc557604051600160e51b62461bcd028152600401610859906144ca565b8660016000828152601f602052604090206004015460ff166001811115612ce857fe5b14612d0857604051600160e51b62461bcd0281526004016108599061447a565b604051600160e61b6289b28102815273__TaskImpl______________________________9063226ca04090612d4c906000908c908c908c908c908c906004016146a9565b60006040518083038186803b158015612d6457600080fd5b505af4158015612d78573d6000803e3d6000fd5b505050505050505050505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612dc590849086906004016145fb565b60206040518083038186803b158015612ddd57600080fd5b505af4158015612df1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061067291908101906138f3565b336000908152601c60205260409020546001600160a01b031690565b60015490565b8060016000828152601d6020526040902060059081015460ff1690811115612e5b57fe5b14612e7b57604051600160e51b62461bcd0281526004016108599061449a565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b9061089d9060009086906004016145fb565b612ec0611d25565b612ec957600080fd5b612ed281612f9d565b50565b612edd611d25565b612ee657600080fd5b6004546001600160a01b03163014612f1357604051600160e51b62461bcd0281526004016108599061448a565b604051600160e01b6368fac41b02815273__UpgradeImpl___________________________906368fac41b90612f50906000908590600401614539565b60006040518083038186803b158015612f6857600080fd5b505af4158015612f7c573d6000803e3d6000fd5b5050505050565b6001600160a01b0316600090815260208052604090205490565b6001600160a01b038116612fb057600080fd5b6023546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3602380546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b6130766130fc565b81526020019060019003908161306e5790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b803561067281614a41565b805161067281614a41565b600082601f83011261314b57600080fd5b815161315e613159826148f8565b6148d2565b9150818183526020840193506020810190508385602084028201111561318357600080fd5b60005b838110156131af5781613199888261312f565b8452506020928301929190910190600101613186565b5050505092915050565b600082601f8301126131ca57600080fd5b81516131d8613159826148f8565b915081818352602084019350602081019050838560208402820111156131fd57600080fd5b60005b838110156131af578161321388826132a4565b8452506020928301929190910190600101613200565b600082601f83011261323a57600080fd5b8151613248613159826148f8565b9150818183526020840193506020810190508385602084028201111561326d57600080fd5b60005b838110156131af578161328388826132a4565b8452506020928301929190910190600101613270565b803561067281614a55565b805161067281614a55565b600082601f8301126132c057600080fd5b81356132ce61315982614918565b915080825260208301602083018583830111156132ea57600080fd5b6132f58382846149d7565b50505092915050565b600082601f83011261330f57600080fd5b815161331d61315982614918565b9150808252602083016020830185838301111561333957600080fd5b6132f58382846149e3565b805161067281614a5e565b60006060828403121561336157600080fd5b61336b60606148d2565b905060006133798484613344565b825250602061338a848483016132a4565b602083015250604061339e848285016132a4565b60408301525092915050565b803561067281614a6b565b6000602082840312156133c757600080fd5b60006133d38484613124565b949350505050565b600080604083850312156133ee57600080fd5b60006133fa8585613124565b92505060208301356001600160401b0381111561341657600080fd5b613422858286016132af565b9150509250929050565b6000806040838503121561343f57600080fd5b600061344b858561312f565b92505060208301516001600160401b0381111561346757600080fd5b613422858286016132fe565b60008060006060848603121561348857600080fd5b60006134948686613124565b93505060208401356001600160401b038111156134b057600080fd5b6134bc868287016132af565b92505060408401356001600160401b038111156134d857600080fd5b6134e4868287016132af565b9150509250925092565b6000806040838503121561350157600080fd5b600061350d8585613124565b925050602061342285828601613299565b60006020828403121561353057600080fd5b81516001600160401b0381111561354657600080fd5b6133d38482850161313a565b6000806040838503121561356557600080fd5b82516001600160401b0381111561357b57600080fd5b6135878582860161313a565b92505060208301516001600160401b038111156135a357600080fd5b61342285828601613229565b6000602082840312156135c157600080fd5b81516001600160401b038111156135d757600080fd5b6133d3848285016131b9565b6000602082840312156135f557600080fd5b60006133d38484613299565b600080600080600080600080610100898b03121561361e57600080fd5b600061362a8b8b613299565b985050602061363b8b828c01613299565b975050604061364c8b828c01613299565b965050606061365d8b828c01613299565b95505060808901356001600160401b0381111561367957600080fd5b6136858b828c016132af565b94505060a06136968b828c01613124565b93505060c06136a78b828c016133aa565b92505060e08901356001600160401b038111156136c357600080fd5b6136cf8b828c016132af565b9150509295985092959890939650565b600080600080600060a086880312156136f757600080fd5b60006137038888613299565b955050602061371488828901613299565b945050604061372588828901613299565b9350506060613736888289016133aa565b92505060808601356001600160401b0381111561375257600080fd5b61375e888289016132af565b9150509295509295909350565b6000806000806080858703121561378157600080fd5b600061378d8787613299565b945050602061379e87828801613299565b93505060406137af878288016133aa565b92505060608501356001600160401b038111156137cb57600080fd5b6137d7878288016132af565b91505092959194509250565b600080600080608085870312156137f957600080fd5b60006138058787613299565b9450506020613816878288016133aa565b9350506040613827878288016133aa565b92505060606137d787828801613299565b600080600080600060a0868803121561385057600080fd5b600061385c8888613299565b955050602061386d888289016133aa565b945050604061387e888289016133aa565b935050606061388f88828901613299565b925050608061375e88828901613299565b600080604083850312156138b357600080fd5b82356001600160401b038111156138c957600080fd5b6133fa858286016132af565b6000606082840312156138e757600080fd5b60006133d3848461334f565b60006020828403121561390557600080fd5b60006133d384846132a4565b6000806040838503121561392457600080fd5b600061350d8585613299565b6000806000806080858703121561394657600080fd5b600061395287876132a4565b9450506020613963878288016132a4565b93505060408501516001600160401b0381111561397f57600080fd5b61398b8782880161313a565b92505060608501516001600160401b038111156139a757600080fd5b6137d787828801613229565b6000806000606084860312156139c857600080fd5b60006139d48686613299565b93505060206134bc86828701613299565b60006139f18383613a25565b505060200190565b60006139f18383613d26565b6000613a1183836141f8565b505060600190565b600061066f838361430d565b613a2e8161495b565b82525050565b6000613a3f82614948565b613a498185614952565b9350613a548361493f565b8060005b83811015613a82578151613a6c88826139e5565b9750613a778361493f565b925050600101613a58565b509495945050505050565b6000613a9882614948565b613aa28185614952565b9350613aad8361493f565b8060005b83811015613a82578151613ac588826139e5565b9750613ad08361493f565b925050600101613ab1565b6000613ae682614948565b613af08185614952565b9350613afb8361493f565b8060005b83811015613a82578151613b1388826139f9565b9750613b1e8361493f565b925050600101613aff565b6000613b3482614948565b613b3e8185614952565b9350613b498361493f565b8060005b83811015613a82578151613b6188826139f9565b9750613b6c8361493f565b925050600101613b4d565b6000613b8282614948565b613b8c8185614952565b9350613b978361493f565b8060005b83811015613a82578151613baf8882613a05565b9750613bba8361493f565b925050600101613b9b565b6000613bd082614948565b613bda8185614952565b9350613be58361493f565b8060005b83811015613a82578151613bfd8882613a05565b9750613c088361493f565b925050600101613be9565b6000613c1e8261494c565b613c28818561198b565b935083602082028501613c3a85614945565b8060005b85811015613c745784840389528151613c578582613a19565b9450613c628361493f565b60209a909a0199925050600101613c3e565b5091979650505050505050565b6000613c8c82614948565b613c968185614952565b9350613ca18361493f565b8060005b83811015613a82578151613cb988826139f9565b9750613cc48361493f565b925050600101613ca5565b6000613cda82614948565b613ce48185614952565b9350613cef8361493f565b8060005b83811015613a82578151613d0788826139f9565b9750613d128361493f565b925050600101613cf3565b613a2e81614966565b613a2e81614945565b6000613d3a82614948565b613d448185614952565b9350613d548185602086016149e3565b613d5d81614a0f565b9093019392505050565b613a2e816149ab565b613a2e816149b6565b613a2e816149c1565b613a2e816149cc565b6000613d98602283614952565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b6000613ddf601883614952565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b6000613e18602783614952565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000613e64601c83614952565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000613e9d601b83614952565b7f4e6f74207570646174656420456e69676d6120636f6e74726163740000000000815260200192915050565b6000613ed6601383614952565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b6000613f0f602783614952565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b6000613f5b602e83614952565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b6000613fba601483614952565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b6000613ff3601383614952565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b600061402c602083614952565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000614065602083614952565b7f4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374815260200192915050565b600061409e602783614952565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a08401906140f18582613a25565b5060208301516141046020860182613d26565b5060408301516141176040860182613d26565b506060830151848203606086015261412f8282613b29565b91505060808301516141446080860182613d67565b509392505050565b9052565b80516000906101008401906141658582613a25565b5060208301516141786020860182613d26565b50604083015161418b6040860182613d26565b50606083015161419e6060860182614368565b5060808301516141b16080860182614368565b5060a08301516141c460a0860182613d26565b5060c08301516141d760c0860182613d70565b5060e083015184820360e08601526141ef8282613d2f565b95945050505050565b805160608301906142098482613d79565b50602082015161421c6020850182613d26565b50604082015161422f6040850182613d26565b50505050565b805160009060a08401906142498582613a25565b50602083015161425c6020860182613d82565b50604083015184820360408601526142748282613d2f565b91505060608301516142896060860182613d26565b50608083015184820360808601526141ef8282613b77565b805160009060a08401906142b58582613a25565b5060208301516142c86020860182613d82565b50604083015184820360408601526142e08282613d2f565b91505060608301516142f56060860182613d26565b50608083015184820360808601526141ef8282613bc5565b805160009060808401906143218582613d26565b50602083015184820360208601526143398282613a8d565b915050604083015184820360408601526143538282613ccf565b91505060608301516141446060860182613d26565b613a2e8161499f565b602081016106728284613a25565b6040810161438d8285613a25565b81810360208301526133d38184613d2f565b604081016143ad8285613a25565b81810360208301526133d38184614235565b6020808252810161066f8184613a34565b604080825281016143e18185613a34565b905081810360208301526133d38184613c81565b6020808252810161066f8184613adb565b6020808252810161066f8184613c13565b602081016106728284613d1d565b604080825281016144368185613d2f565b905081810360208301526133d38184613d2f565b6020808252810161067281613d8b565b6020808252810161067281613dd2565b6020808252810161067281613e0b565b6020808252810161067281613e57565b6020808252810161067281613e90565b6020808252810161067281613ec9565b6020808252810161067281613f02565b6020808252810161067281613f4e565b6020808252810161067281613fad565b6020808252810161067281613fe6565b602080825281016106728161401f565b6020808252810161067281614058565b6020808252810161067281614091565b6020808252810161066f81846140dd565b60208101610672828461414c565b60408101614547828561414c565b6145546020830184613a25565b9392505050565b60608101614569828661414c565b6145766020830185613a25565b81810360408301526141ef8184613d2f565b60808101614596828761414c565b6145a36020830186613a25565b81810360408301526145b58185613d2f565b905081810360608301526145c98184613d2f565b9695505050505050565b606081016145e1828661414c565b6145ee6020830185613a25565b6133d36040830184613d26565b60408101614609828561414c565b6145546020830184613d26565b6101208101614625828c61414c565b614632602083018b613d26565b61463f604083018a613d26565b61464c6060830189613d26565b6146596080830188613d26565b81810360a083015261466b8187613d2f565b905061467a60c0830186613a25565b61468760e0830185614368565b81810361010083015261469a8184613d2f565b9b9a5050505050505050505050565b60c081016146b7828961414c565b6146c46020830188613d26565b6146d16040830187613d26565b6146de6060830186613d26565b6146eb6080830185614368565b81810360a08301526146fd8184613d2f565b98975050505050505050565b60a08101614717828861414c565b6147246020830187613d26565b6147316040830186613d26565b61473e6060830185614368565b81810360808301526147508184613d2f565b979650505050505050565b60a08101614769828861414c565b6147766020830187613d26565b6147836040830186614368565b6147906060830185614368565b6145c96080830184613d26565b60c081016147ab828961414c565b6147b86020830188613d26565b6147c56040830187614368565b6147d26060830186614368565b6147df6080830185613d26565b61475060a0830184613d26565b606081016147fa828661414c565b6145ee6020830185613d26565b60808101614815828761414c565b6148226020830186613d26565b61482f6040830185613d26565b81810360608301526145c98184613d2f565b6020808252810161066f8184614150565b6020808252810161066f8184614235565b6040808252810161487481856142a1565b90506145546020830184613d26565b602081016106728284613d26565b6080810161489f8287613d26565b6148ac6020830186613d26565b81810360408301526148be8185613a34565b905081810360608301526145c98184613c81565b6040518181016001600160401b03811182821017156148f057600080fd5b604052919050565b60006001600160401b0382111561490e57600080fd5b5060209081020190565b60006001600160401b0382111561492e57600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b600061067282614993565b151590565b8061198b81614a19565b8061198b81614a23565b8061198b81614a2d565b8061198b81614a37565b6001600160a01b031690565b6001600160401b031690565b60006106728261496b565b600061067282614975565b60006106728261497f565b600061067282614989565b82818337506000910152565b60005b838110156149fe5781810151838201526020016149e6565b8381111561422f5750506000910152565b601f01601f191690565b60028110612ed257fe5b60068110612ed257fe5b60048110612ed257fe5b60038110612ed257fe5b614a4a8161495b565b8114612ed257600080fd5b614a4a81614945565b60048110612ed257600080fd5b614a4a8161499f56fea265627a7a723058207dbe78d67cffa038c3a106700100eed3aca4346537bedab274f321533cedef4b6c6578706572696d656e74616cf50037","sourceMap":"885:17579:0:-;;;1124:433;8:9:-1;5:2;;;30:1;27;20:12;5:2;1124:433:0;;;;;;;;;;;;;;;;;;;;;;515:6:36;:19;;-1:-1:-1;;;;;;515:19:36;524:10;515:19;;;;;549:40;;-1:-1:-1;;;;;582:6:36;;;;;515;;549:40;;515:6;;549:40;1237:5:0;:37;;-1:-1:-1;;;;;1237:37:0;;;-1:-1:-1;;;;;;1237:37:0;;;;;;;;1284:28;;;1346:35;;;;1322:21;:59;1391:15;:28;;;;;;;;;;;;;;;;1429:34;:50;;;;;1474:4;1429:50;;;;1489:22;:26;;;1525:21;:25;885:17579;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:134;224:13;;242:33;224:13;242:33;;287:672;;;;;453:3;441:9;432:7;428:23;424:33;421:2;;;470:1;467;460:12;421:2;505:1;522:64;578:7;558:9;522:64;;;512:74;;484:108;623:2;641:64;697:7;688:6;677:9;673:22;641:64;;;631:74;;602:109;742:2;760:64;816:7;807:6;796:9;792:22;760:64;;;750:74;;721:109;861:2;879:64;935:7;926:6;915:9;911:22;879:64;;;869:74;;840:109;415:544;;;;;;;;966:91;;-1:-1;;;;;1126:54;;1028:24;1109:76;1192:72;1254:5;1237:27;1271:117;1340:24;1358:5;1340:24;;;1333:5;1330:35;1320:2;;1379:1;1376;1369:12;1320:2;1314:74;;1395:117;1464:24;1482:5;1464:24;;1438:74;885:17579:0;;;;;;","deployedSourceMap":"885:17579:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;885:17579:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15379:194;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16734:199;;;;;;;;;:::i;:::-;;;;;;;;7642:98;;;:::i;:::-;;7180:132;;;;;;;;;:::i;13037:574::-;;;;;;;;;:::i;6787:195::-;;;;;;;;;:::i;9075:603::-;;;;;;;;;:::i;15021:237::-;;;;;;;;;:::i;3257:121:10:-;;;:::i;:::-;;;;;;;;2133:102;;;:::i;:::-;;;;;;;;3011:130;;;:::i;:::-;;;;;;;;1347:137:36;;;:::i;9805:149:0:-;;;:::i;2731::10:-;;;;;;;;;:::i;:::-;;;;;;;;6309:235:0;;;;;;;;;:::i;18213:249::-;;;;;;;;;:::i;659:77:36:-;;;:::i;:::-;;;;;;;;10167:211:0;;;;;;;;;:::i;2409:137:10:-;;;;;;;;;:::i;:::-;;;;;;;;979:90:36;;;:::i;:::-;;;;;;;;16199:198:0;;;;;;;;;:::i;:::-;;;;;;;;;;;1004:492:10;;;;;;;;;:::i;:::-;;;;;;;;;8048:352:0;;;;;;;;;:::i;17071:200::-;;;;;;;;;:::i;:::-;;;;;;;;;7475:90;;;:::i;17476:181::-;;;;;;;;;:::i;3493:131:10:-;;;:::i;12144:289:0:-;;;;;;;;;:::i;679:131:10:-;;;;;;;;;:::i;:::-;;;;;;;;11231:338:0;;;;;;;;;:::i;14002:369::-;;;;;;;;;:::i;15748:167::-;;;;;;;;;:::i;399:115:10:-;;;:::i;1957:90::-;;;:::i;14538:147:0:-;;;;;;;;;:::i;1655:107:36:-;;;;;;;;;:::i;17798:226:0:-;;;;;;;;;:::i;1740:134:10:-;;;;;;;;;:::i;15379:194:0:-;15457:16;15475:13;15511;:34;15546:5;15553:12;15511:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15511:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15511:55:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15511:55:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15511:55:0;;;;;;;;;15504:62;;;;15379:194;;;:::o;16734:199::-;16866:60;;-1:-1:-1;;;;;16866:60:0;;16827:16;;16866:11;;:30;;:60;;16897:5;;16904:12;;16918:7;;16866:60;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16866:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16866:60:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16866:60:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16866:60:0;;;;;;;;;16859:67;;16734:199;;;;;:::o;7642:98::-;7682:10;2221:33;;:::i;:::-;-1:-1:-1;;;;;2257:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2221:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;-1:-1:-1;2221:56:0;;-1:-1:-1;2312:34:0;;-1:-1:-1;2295:6:0;:13;;;:51;;;;;;;;;2287:84;;;;-1:-1:-1;;;;;2287:84:0;;;;;;;;;;;;;;;;;7704:29;;-1:-1:-1;;;;;7704:29:0;;:11;;:22;;:29;;7727:5;;7704:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7704:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7704:29:0;;;;7642:98;;:::o;7180:132::-;7239:10;3466:33;;:::i;:::-;-1:-1:-1;;;;;3502:20:0;;;:5;:20;;;:13;:20;;;;;;;;;3466:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3466:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3466:56:0;;-1:-1:-1;3466:56:0;;-1:-1:-1;3557:35:0;;-1:-1:-1;3540:6:0;:13;;;:52;;;;;;;;;3532:104;;;;-1:-1:-1;;;;;3532:104:0;;;;;;;;;3646:39;;:::i;:::-;3688:56;;-1:-1:-1;;;;;3688:56:0;;:11;;:34;;:56;;3723:6;;3731:12;;3688:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3688:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3688:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3688:56:0;;;;;;;;;3646:98;-1:-1:-1;3791:33:0;3762:25;;:62;;;;;;;;;3754:126;;;;-1:-1:-1;;;;;3754:126:0;;;;;;;;;3934:9;:21;;;3898:33;3918:12;3898:19;:33::i;:::-;:57;3890:128;;;;-1:-1:-1;;;;;3890:128:0;;;;;;;;;7265:40;;-1:-1:-1;;;;;7265:40:0;;:11;;:24;;:40;;7290:5;;7297:7;;7265:40;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7265:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7265:40:0;;;;7180:132;;;;:::o;13037:574::-;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;13382:10;2221:33;;:::i;:::-;-1:-1:-1;;;;;2257:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2221:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;-1:-1:-1;2221:56:0;;-1:-1:-1;2312:34:0;;-1:-1:-1;2295:6:0;:13;;;:51;;;;;;;;;2287:84;;;;-1:-1:-1;;;;;2287:84:0;;;;;;;;;13415:7;4569:42;4534:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4526:118;;;;-1:-1:-1;;;;;4526:118:0;;;;;;;;;13438:166;;-1:-1:-1;;;;;13438:166:0;;:8;;:26;;:166;;13465:5;;13472:7;;13481;;13490:15;;13507:11;;13520:21;;13555:32;;13589:8;;13599:4;;13438:166;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13438:166:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13438:166:0;;;;2381:1;5557;;13037:574;;;;;;;;:::o;6787:195::-;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;6898:10;1857:33;;:::i;:::-;-1:-1:-1;;;;;1893:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1857:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1857:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1857:56:0;;-1:-1:-1;1857:56:0;;-1:-1:-1;1948:38:0;;-1:-1:-1;1931:6:0;:13;;;:55;;;;;;;;;;1923:87;;;;-1:-1:-1;;;;;1923:87:0;;;;;;;;;6924:51;;-1:-1:-1;;;;;6924:51:0;;:11;;:23;;:51;;6948:5;;6955:10;;6967:7;;6924:51;;;;9075:603;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;9434:10;2221:33;;:::i;:::-;-1:-1:-1;;;;;2257:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2221:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;-1:-1:-1;2221:56:0;;-1:-1:-1;2312:34:0;;-1:-1:-1;2295:6:0;:13;;;:51;;;;;;;;;2287:84;;;;-1:-1:-1;;;;;2287:84:0;;;;;;;;;9468:7;4256:43;4221:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;4213:123;;;;-1:-1:-1;;;;;4213:123:0;;;;;;;;;9491:180;;-1:-1:-1;;;;;9491:180:0;;:8;;:33;;:180;;9525:5;;9532:7;;9541:12;;9555:9;;9566:19;;9599:21;;9622:32;;9656:8;;9666:4;;9491:180;;;;15021:237;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;15157:10;1857:33;;:::i;:::-;-1:-1:-1;;;;;1893:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1857:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1857:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1857:56:0;;-1:-1:-1;1857:56:0;;-1:-1:-1;1948:38:0;;-1:-1:-1;1931:6:0;:13;;;:55;;;;;;;;;;1923:87;;;;-1:-1:-1;;;;;1923:87:0;;;;;;;;;15183:68;;-1:-1:-1;;;;;15183:68:0;;:13;;:34;;:68;;15218:5;;15225:12;;15239:5;;15246:4;;15183:68;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15183:68:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15183:68:0;;;;5557:1;;15021:237;;;:::o;3257:121:10:-;3319:16;3354:5;:17;;3347:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3257:121;:::o;2133:102::-;2207:21;;2133:102;:::o;3011:130::-;3060:36;;:::i;:::-;3108:26;;;;;;;;;3115:19;3108:26;3115:5;3108:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3108:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:130;:::o;1347:137:36:-;863:9;:7;:9::i;:::-;855:18;;;;;;1429:6;;1408:40;;1445:1;;-1:-1:-1;;;;;1429:6:36;;1408:40;;1445:1;;1408:40;1458:6;:19;;-1:-1:-1;;;;;;1458:19:36;;;1347:137::o;9805:149:0:-;9897:50;;-1:-1:-1;;;;;9897:50:0;;9870:4;;9897:18;;:43;;:50;;9870:4;;9897:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9897:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9897:50:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9897:50:0;;;;;;;;;9890:57;;9805:149;:::o;2731::10:-;2796:34;;:::i;:::-;2849:5;:24;;;:15;:24;;;;;;;;;2842:31;;;;;;;;;-1:-1:-1;;;;;2842:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:24;;2842:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2842:31:10;;;-1:-1:-1;;2842:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2842:31:10;-1:-1:-1;2731:149:10;;;;:::o;6309:235:0:-;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;6453:7;5132:6;5127:175;5148:21;:28;5144:32;;5127:175;;;5255:7;-1:-1:-1;;;;;5205:57:0;:5;:13;;:39;5219:5;:21;;5241:1;5219:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5219:24:0;;;5205:39;;;;;;;;;;;;;;;:46;;:57;;5197:94;;;;-1:-1:-1;;;;;5197:94:0;;;;;;;;;5178:3;;5127:175;;;-1:-1:-1;6476:61:0;;-1:-1:-1;;;;;6476:61:0;;:11;;:24;;:61;;6501:5;;6508:7;;6517;;6526:10;;6476:61;;;;18213:249;5728:34;;18350:7;;-1:-1:-1;;;;;5728:34:0;5714:10;:48;5706:93;;;;-1:-1:-1;;;;;5706:93:0;;;;;;;;;18380:75;;-1:-1:-1;;;;;18380:75:0;;:11;;:46;;:75;;18427:5;;18434:14;;18450:4;;18380:75;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18380:75:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18380:75:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18380:75:0;;;;;;;;659:77:36;723:6;;-1:-1:-1;;;;;723:6:36;659:77;:::o;10167:211:0:-;10300:71;;-1:-1:-1;;;;;10300:71:0;;10261:16;;10300:18;;:49;;:71;;10350:5;;10357:6;;10365:5;;10300:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10300:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10300:71:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;10300:71:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;10300:71:0;;;;;;;;2409:137:10;2470:30;;:::i;:::-;2519:5;:20;;;:11;:20;;;;;;;;;2512:27;;;;;;;;;-1:-1:-1;;;;;2512:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2512:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2519:20;2512:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2512:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2409:137;;;:::o;979:90:36:-;1056:6;;-1:-1:-1;;;;;1056:6:36;1042:10;:20;;979:90::o;16199:198:0:-;16276:4;16282;16288:16;16306:13;16338:11;:31;16370:5;16377:12;16338:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16338:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16338:52:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16338:52:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16338:52:0;;;;;;;;;16331:59;;;;;;;;16199:198;;;;;:::o;1004:492:10:-;1079:7;1088:26;;:::i;:::-;1126:15;1151:33;;:::i;:::-;1199:6;1194:262;1215:21;:28;1211:32;;1194:262;;;1287:21;:24;;1273:13;;:5;;1309:1;;1287:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1287:24:10;;;1273:39;;;;;;;;;;;;;;;;1264:48;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1264:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:7;-1:-1:-1;;;;;1330:24:10;:6;:13;;;-1:-1:-1;;;;;1330:24:10;;1326:120;;;1384:21;:24;;1406:1;;1384:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1384:24:10;;-1:-1:-1;1426:5:10;;1326:120;1245:3;;1194:262;;;-1:-1:-1;1473:7:10;;-1:-1:-1;1482:6:10;-1:-1:-1;1004:492:10;;;:::o;8048:352:0:-;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;8253:10;2221:33;;:::i;:::-;-1:-1:-1;;;;;2257:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2221:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;-1:-1:-1;2221:56:0;;-1:-1:-1;2312:34:0;;-1:-1:-1;2295:6:0;:13;;;:51;;;;;;;;;2287:84;;;;-1:-1:-1;;;;;2287:84:0;;;;;;;;;8287:7;4256:43;4221:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;4213:123;;;;-1:-1:-1;;;;;4213:123:0;;;;;;;;;8310:83;;-1:-1:-1;;;;;8310:83:0;;:8;;:40;;:83;;8351:5;;8358:7;;8367:9;;8378:8;;8388:4;;8310:83;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8310:83:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8310:83:0;;;;2381:1;5557;;8048:352;;;;:::o;17071:200::-;17176:7;17185:12;17151:10;1857:33;;:::i;:::-;-1:-1:-1;;;;;1893:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1857:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1857:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1857:56:0;;-1:-1:-1;1857:56:0;;-1:-1:-1;1948:38:0;;-1:-1:-1;1931:6:0;:13;;;:55;;;;;;;;;;1923:87;;;;-1:-1:-1;;;;;1923:87:0;;;;;;;;;17220:44;;-1:-1:-1;;;;;17220:44:0;;:11;;:25;;:44;;17246:5;;17253:10;;17220:44;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17220:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17220:44:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;17220:44:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;17220:44:0;;;;;;;;;17213:51;;;;17071:200;;;;;:::o;7475:90::-;7508:10;2913:33;;:::i;:::-;-1:-1:-1;;;;;2949:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2913:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2913:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2987:33;3007:12;2987:19;:33::i;:::-;2979:90;;;;-1:-1:-1;;;;;2979:90:0;;;;;;;;;3104:35;3087:6;:13;;;:52;;;;;;;;;3079:104;;;;-1:-1:-1;;;;;3079:104:0;;;;;;;;;3219:22;;3201:14;;;;:40;;3193:87;;;;-1:-1:-1;;;;;3193:87:0;;;;;;;;;7530:28;;-1:-1:-1;;;;;7530:28:0;;:11;;:21;;:28;;7552:5;;7530:28;;;;17476:181;17603:47;;-1:-1:-1;;;;;17603:47:0;;17576:4;;17603:11;;:28;;:47;;17632:5;;17639:10;;17603:47;;;;3493:131:10;3583:34;;-1:-1:-1;;;;;3583:34:10;3493:131;:::o;12144:289:0:-;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;12339:87;;-1:-1:-1;;;;;12339:87:0;;:8;;:29;;:87;;12369:5;;12376:11;;12389:9;;12400:6;;12408:17;;12339:87;;;;679:131:10;736:26;;:::i;:::-;-1:-1:-1;;;;;781:22:10;;;:5;:22;;;:13;:22;;;;;;;;;774:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;-1:-1:-1;774:29:10;;679:131;-1:-1:-1;;;679:131:10:o;11231:338:0:-;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;11457:105;;-1:-1:-1;;;;;11457:105:0;;:8;;:39;;:105;;11497:5;;11504:11;;11517:9;;11528:6;;11536:17;;11555:6;;11457:105;;;;14002:369;5481:34;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;14224:10;2221:33;;:::i;:::-;-1:-1:-1;;;;;2257:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2221:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2221:56:0;;-1:-1:-1;2221:56:0;;-1:-1:-1;2312:34:0;;-1:-1:-1;2295:6:0;:13;;;:51;;;;;;;;;2287:84;;;;-1:-1:-1;;;;;2287:84:0;;;;;;;;;14257:7;4569:42;4534:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4526:118;;;;-1:-1:-1;;;;;4526:118:0;;;;;;;;;14280:84;;-1:-1:-1;;;;;14280:84:0;;:8;;:30;;:84;;14311:5;;14318:7;;14327;;14336:11;;14349:8;;14359:4;;14280:84;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14280:84:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14280:84:0;;;;2381:1;5557;;14002:369;;;;;:::o;15748:167::-;15852:56;;-1:-1:-1;;;;;15852:56:0;;15829:4;;15852:11;;:35;;:56;;15829:4;;15895:12;;15852:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15852:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15852:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15852:56:0;;;;;;;;399:115:10;489:10;449:7;475:25;;;:13;:25;;;;;:32;-1:-1:-1;;;;;475:32:10;399:115;:::o;1957:90::-;2025:15;;1957:90;:::o;14538:147:0:-;14609:7;4876:37;4845:5;:20;;;:11;:20;;;;;:27;;;;;;;;:68;;;;;;;;4837:100;;;;-1:-1:-1;;;;;4837:100:0;;;;;;;;;14632:46;;-1:-1:-1;;;;;14632:46:0;;:8;;:30;;:46;;14663:5;;14670:7;;14632:46;;;;1655:107:36;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;17798:226:0:-;863:9:36;:7;:9::i;:::-;855:18;;;;;;5481:34:0;;-1:-1:-1;;;;;5481:34:0;5472:4;5464:51;5456:91;;;;-1:-1:-1;;;;;5456:91:0;;;;;;;;;17942:75;;-1:-1:-1;;;;;17942:75:0;;:11;;:37;;:75;;17980:5;;17987:29;;17942:75;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17942:75:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17942:75:0;;;;17798:226;:::o;1740:134:10:-;-1:-1:-1;;;;;1833:34:10;1810:4;1833:34;;;:25;:34;;;;;;;1740:134::o;1906:183:36:-;-1:-1:-1;;;;;1979:22:36;;1971:31;;;;;;2038:6;;2017:38;;-1:-1:-1;;;;;2017:38:36;;;;2038:6;;2017:38;;2038:6;;2017:38;2065:6;:17;;-1:-1:-1;;;;;;2065:17:36;-1:-1:-1;;;;;2065:17:36;;;;;;;;;;1906:183::o;885:17579:0:-;;;;;;;;;;-1:-1:-1;885:17579:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;885:17579:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;885:17579:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;885:17579:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:722;;429:3;422:4;414:6;410:17;406:27;396:2;;447:1;444;437:12;396:2;477:6;471:13;499:80;514:64;571:6;514:64;;;499:80;;;490:89;;596:5;621:6;614:5;607:21;651:4;643:6;639:17;629:27;;673:4;668:3;664:14;657:21;;726:6;773:3;765:4;757:6;753:17;748:3;744:27;741:36;738:2;;;790:1;787;780:12;738:2;815:1;800:217;825:6;822:1;819:13;800:217;;;883:3;905:48;949:3;937:10;905:48;;;893:61;;-1:-1;977:4;968:14;;;;996;;;;;847:1;840:9;800:217;;;804:14;389:634;;;;;;;;1049:722;;1177:3;1170:4;1162:6;1158:17;1154:27;1144:2;;1195:1;1192;1185:12;1144:2;1225:6;1219:13;1247:80;1262:64;1319:6;1262:64;;1247:80;1238:89;;1344:5;1369:6;1362:5;1355:21;1399:4;1391:6;1387:17;1377:27;;1421:4;1416:3;1412:14;1405:21;;1474:6;1521:3;1513:4;1505:6;1501:17;1496:3;1492:27;1489:36;1486:2;;;1538:1;1535;1528:12;1486:2;1563:1;1548:217;1573:6;1570:1;1567:13;1548:217;;;1631:3;1653:48;1697:3;1685:10;1653:48;;;1641:61;;-1:-1;1725:4;1716:14;;;;1744;;;;;1595:1;1588:9;1548:217;;1797:722;;1925:3;1918:4;1910:6;1906:17;1902:27;1892:2;;1943:1;1940;1933:12;1892:2;1973:6;1967:13;1995:80;2010:64;2067:6;2010:64;;1995:80;1986:89;;2092:5;2117:6;2110:5;2103:21;2147:4;2139:6;2135:17;2125:27;;2169:4;2164:3;2160:14;2153:21;;2222:6;2269:3;2261:4;2253:6;2249:17;2244:3;2240:27;2237:36;2234:2;;;2286:1;2283;2276:12;2234:2;2311:1;2296:217;2321:6;2318:1;2315:13;2296:217;;;2379:3;2401:48;2445:3;2433:10;2401:48;;;2389:61;;-1:-1;2473:4;2464:14;;;;2492;;;;;2343:1;2336:9;2296:217;;2527:130;2594:20;;2619:33;2594:20;2619:33;;2664:134;2742:13;;2760:33;2742:13;2760:33;;2806:440;;2907:3;2900:4;2892:6;2888:17;2884:27;2874:2;;2925:1;2922;2915:12;2874:2;2962:6;2949:20;2984:64;2999:48;3040:6;2999:48;;2984:64;2975:73;;3068:6;3061:5;3054:21;3104:4;3096:6;3092:17;3137:4;3130:5;3126:16;3172:3;3163:6;3158:3;3154:16;3151:25;3148:2;;;3189:1;3186;3179:12;3148:2;3199:41;3233:6;3228:3;3223;3199:41;;;2867:379;;;;;;;;3255:442;;3367:3;3360:4;3352:6;3348:17;3344:27;3334:2;;3385:1;3382;3375:12;3334:2;3415:6;3409:13;3437:64;3452:48;3493:6;3452:48;;3437:64;3428:73;;3521:6;3514:5;3507:21;3557:4;3549:6;3545:17;3590:4;3583:5;3579:16;3625:3;3616:6;3611:3;3607:16;3604:25;3601:2;;;3642:1;3639;3632:12;3601:2;3652:39;3684:6;3679:3;3674;3652:39;;3705:170;3801:13;;3819:51;3801:13;3819:51;;3918:695;;4045:4;4033:9;4028:3;4024:19;4020:30;4017:2;;;4063:1;4060;4053:12;4017:2;4081:20;4096:4;4081:20;;;4072:29;-1:-1;4162:1;4193:78;4267:3;4247:9;4193:78;;;4169:103;;-1:-1;4340:2;4373:60;4429:3;4405:22;;;4373:60;;;4366:4;4359:5;4355:16;4348:86;4293:152;4498:2;4531:60;4587:3;4578:6;4567:9;4563:22;4531:60;;;4524:4;4517:5;4513:16;4506:86;4455:148;4011:602;;;;;4898:128;4964:20;;4989:32;4964:20;4989:32;;5033:241;;5137:2;5125:9;5116:7;5112:23;5108:32;5105:2;;;5153:1;5150;5143:12;5105:2;5188:1;5205:53;5250:7;5230:9;5205:53;;;5195:63;5099:175;-1:-1;;;;5099:175;5281:470;;;5411:2;5399:9;5390:7;5386:23;5382:32;5379:2;;;5427:1;5424;5417:12;5379:2;5462:1;5479:53;5524:7;5504:9;5479:53;;;5469:63;;5441:97;5597:2;5586:9;5582:18;5569:32;-1:-1;;;;;5613:6;5610:30;5607:2;;;5653:1;5650;5643:12;5607:2;5673:62;5727:7;5718:6;5707:9;5703:22;5673:62;;;5663:72;;5548:193;5373:378;;;;;;5758:496;;;5899:2;5887:9;5878:7;5874:23;5870:32;5867:2;;;5915:1;5912;5905:12;5867:2;5950:1;5967:64;6023:7;6003:9;5967:64;;;5957:74;;5929:108;6089:2;6078:9;6074:18;6068:25;-1:-1;;;;;6105:6;6102:30;6099:2;;;6145:1;6142;6135:12;6099:2;6165:73;6230:7;6221:6;6210:9;6206:22;6165:73;;6261:699;;;;6417:2;6405:9;6396:7;6392:23;6388:32;6385:2;;;6433:1;6430;6423:12;6385:2;6468:1;6485:53;6530:7;6510:9;6485:53;;;6475:63;;6447:97;6603:2;6592:9;6588:18;6575:32;-1:-1;;;;;6619:6;6616:30;6613:2;;;6659:1;6656;6649:12;6613:2;6679:62;6733:7;6724:6;6713:9;6709:22;6679:62;;;6669:72;;6554:193;6806:2;6795:9;6791:18;6778:32;-1:-1;;;;;6822:6;6819:30;6816:2;;;6862:1;6859;6852:12;6816:2;6882:62;6936:7;6927:6;6916:9;6912:22;6882:62;;;6872:72;;6757:193;6379:581;;;;;;6967:366;;;7088:2;7076:9;7067:7;7063:23;7059:32;7056:2;;;7104:1;7101;7094:12;7056:2;7139:1;7156:53;7201:7;7181:9;7156:53;;;7146:63;;7118:97;7246:2;7264:53;7309:7;7300:6;7289:9;7285:22;7264:53;;7340:392;;7480:2;7468:9;7459:7;7455:23;7451:32;7448:2;;;7496:1;7493;7486:12;7448:2;7531:24;;-1:-1;;;;;7564:30;;7561:2;;;7607:1;7604;7597:12;7561:2;7627:89;7708:7;7699:6;7688:9;7684:22;7627:89;;7739:657;;;7921:2;7909:9;7900:7;7896:23;7892:32;7889:2;;;7937:1;7934;7927:12;7889:2;7972:24;;-1:-1;;;;;8005:30;;8002:2;;;8048:1;8045;8038:12;8002:2;8068:89;8149:7;8140:6;8129:9;8125:22;8068:89;;;8058:99;;7951:212;8215:2;8204:9;8200:18;8194:25;-1:-1;;;;;8231:6;8228:30;8225:2;;;8271:1;8268;8261:12;8225:2;8291:89;8372:7;8363:6;8352:9;8348:22;8291:89;;8403:392;;8543:2;8531:9;8522:7;8518:23;8514:32;8511:2;;;8559:1;8556;8549:12;8511:2;8594:24;;-1:-1;;;;;8627:30;;8624:2;;;8670:1;8667;8660:12;8624:2;8690:89;8771:7;8762:6;8751:9;8747:22;8690:89;;8802:241;;8906:2;8894:9;8885:7;8881:23;8877:32;8874:2;;;8922:1;8919;8912:12;8874:2;8957:1;8974:53;9019:7;8999:9;8974:53;;9050:1327;;;;;;;;;9290:3;9278:9;9269:7;9265:23;9261:33;9258:2;;;9307:1;9304;9297:12;9258:2;9342:1;9359:53;9404:7;9384:9;9359:53;;;9349:63;;9321:97;9449:2;9467:53;9512:7;9503:6;9492:9;9488:22;9467:53;;;9457:63;;9428:98;9557:2;9575:53;9620:7;9611:6;9600:9;9596:22;9575:53;;;9565:63;;9536:98;9665:2;9683:53;9728:7;9719:6;9708:9;9704:22;9683:53;;;9673:63;;9644:98;9801:3;9790:9;9786:19;9773:33;-1:-1;;;;;9818:6;9815:30;9812:2;;;9858:1;9855;9848:12;9812:2;9878:62;9932:7;9923:6;9912:9;9908:22;9878:62;;;9868:72;;9752:194;9977:3;9996:53;10041:7;10032:6;10021:9;10017:22;9996:53;;;9986:63;;9956:99;10086:3;10105:52;10149:7;10140:6;10129:9;10125:22;10105:52;;;10095:62;;10065:98;10222:3;10211:9;10207:19;10194:33;-1:-1;;;;;10239:6;10236:30;10233:2;;;10279:1;10276;10269:12;10233:2;10299:62;10353:7;10344:6;10333:9;10329:22;10299:62;;;10289:72;;10173:194;9252:1125;;;;;;;;;;;;10384:845;;;;;;10564:3;10552:9;10543:7;10539:23;10535:33;10532:2;;;10581:1;10578;10571:12;10532:2;10616:1;10633:53;10678:7;10658:9;10633:53;;;10623:63;;10595:97;10723:2;10741:53;10786:7;10777:6;10766:9;10762:22;10741:53;;;10731:63;;10702:98;10831:2;10849:53;10894:7;10885:6;10874:9;10870:22;10849:53;;;10839:63;;10810:98;10939:2;10957:52;11001:7;10992:6;10981:9;10977:22;10957:52;;;10947:62;;10918:97;11074:3;11063:9;11059:19;11046:33;-1:-1;;;;;11091:6;11088:30;11085:2;;;11131:1;11128;11121:12;11085:2;11151:62;11205:7;11196:6;11185:9;11181:22;11151:62;;;11141:72;;11025:194;10526:703;;;;;;;;;11236:719;;;;;11399:3;11387:9;11378:7;11374:23;11370:33;11367:2;;;11416:1;11413;11406:12;11367:2;11451:1;11468:53;11513:7;11493:9;11468:53;;;11458:63;;11430:97;11558:2;11576:53;11621:7;11612:6;11601:9;11597:22;11576:53;;;11566:63;;11537:98;11666:2;11684:52;11728:7;11719:6;11708:9;11704:22;11684:52;;;11674:62;;11645:97;11801:2;11790:9;11786:18;11773:32;-1:-1;;;;;11817:6;11814:30;11811:2;;;11857:1;11854;11847:12;11811:2;11877:62;11931:7;11922:6;11911:9;11907:22;11877:62;;;11867:72;;11752:193;11361:594;;;;;;;;11962:613;;;;;12115:3;12103:9;12094:7;12090:23;12086:33;12083:2;;;12132:1;12129;12122:12;12083:2;12167:1;12184:53;12229:7;12209:9;12184:53;;;12174:63;;12146:97;12274:2;12292:52;12336:7;12327:6;12316:9;12312:22;12292:52;;;12282:62;;12253:97;12381:2;12399:52;12443:7;12434:6;12423:9;12419:22;12399:52;;;12389:62;;12360:97;12488:2;12506:53;12551:7;12542:6;12531:9;12527:22;12506:53;;12582:739;;;;;;12752:3;12740:9;12731:7;12727:23;12723:33;12720:2;;;12769:1;12766;12759:12;12720:2;12804:1;12821:53;12866:7;12846:9;12821:53;;;12811:63;;12783:97;12911:2;12929:52;12973:7;12964:6;12953:9;12949:22;12929:52;;;12919:62;;12890:97;13018:2;13036:52;13080:7;13071:6;13060:9;13056:22;13036:52;;;13026:62;;12997:97;13125:2;13143:53;13188:7;13179:6;13168:9;13164:22;13143:53;;;13133:63;;13104:98;13233:3;13252:53;13297:7;13288:6;13277:9;13273:22;13252:53;;13328:574;;;13467:2;13455:9;13446:7;13442:23;13438:32;13435:2;;;13483:1;13480;13473:12;13435:2;13518:31;;-1:-1;;;;;13558:30;;13555:2;;;13601:1;13598;13591:12;13555:2;13621:62;13675:7;13666:6;13655:9;13651:22;13621:62;;13909:317;;14051:2;14039:9;14030:7;14026:23;14022:32;14019:2;;;14067:1;14064;14057:12;14019:2;14102:1;14119:91;14202:7;14182:9;14119:91;;14481:263;;14596:2;14584:9;14575:7;14571:23;14567:32;14564:2;;;14612:1;14609;14602:12;14564:2;14647:1;14664:64;14720:7;14700:9;14664:64;;14751:366;;;14872:2;14860:9;14851:7;14847:23;14843:32;14840:2;;;14888:1;14885;14878:12;14840:2;14923:1;14940:53;14985:7;14965:9;14940:53;;15497:930;;;;;15713:3;15701:9;15692:7;15688:23;15684:33;15681:2;;;15730:1;15727;15720:12;15681:2;15765:1;15782:64;15838:7;15818:9;15782:64;;;15772:74;;15744:108;15883:2;15901:64;15957:7;15948:6;15937:9;15933:22;15901:64;;;15891:74;;15862:109;16023:2;16012:9;16008:18;16002:25;-1:-1;;;;;16039:6;16036:30;16033:2;;;16079:1;16076;16069:12;16033:2;16099:89;16180:7;16171:6;16160:9;16156:22;16099:89;;;16089:99;;15981:213;16246:2;16235:9;16231:18;16225:25;-1:-1;;;;;16262:6;16259:30;16256:2;;;16302:1;16299;16292:12;16256:2;16322:89;16403:7;16394:6;16383:9;16379:22;16322:89;;16434:595;;;;16581:2;16569:9;16560:7;16556:23;16552:32;16549:2;;;16597:1;16594;16587:12;16549:2;16632:1;16649:53;16694:7;16674:9;16649:53;;;16639:63;;16611:97;16739:2;16757:53;16802:7;16793:6;16782:9;16778:22;16757:53;;17037:173;;17124:46;17166:3;17158:6;17124:46;;;-1:-1;;17199:4;17190:14;;17117:93;17219:173;;17306:46;17348:3;17340:6;17306:46;;17401:269;;17534:96;17626:3;17618:6;17534:96;;;-1:-1;;17659:4;17650:14;;17527:143;17973:265;;18128:104;18228:3;18220:6;18128:104;;18428:103;18501:24;18519:5;18501:24;;;18496:3;18489:37;18483:48;;;18935:690;;19080:54;19128:5;19080:54;;;19147:86;19226:6;19221:3;19147:86;;;19140:93;;19254:56;19304:5;19254:56;;;19330:7;19358:1;19343:260;19368:6;19365:1;19362:13;19343:260;;;19435:6;19429:13;19456:63;19515:3;19500:13;19456:63;;;19449:70;;19536:60;19589:6;19536:60;;;19526:70;-1:-1;;19390:1;19383:9;19343:260;;;-1:-1;19616:3;;19059:566;-1:-1;;;;;19059:566;19664:654;;19795:50;19839:5;19795:50;;;19858:76;19927:6;19922:3;19858:76;;;19851:83;;19955:52;20001:5;19955:52;;;20027:7;20055:1;20040:256;20065:6;20062:1;20059:13;20040:256;;;20132:6;20126:13;20153:63;20212:3;20197:13;20153:63;;;20146:70;;20233:56;20282:6;20233:56;;;20223:66;-1:-1;;20087:1;20080:9;20040:256;;20357:690;;20502:54;20550:5;20502:54;;;20569:86;20648:6;20643:3;20569:86;;;20562:93;;20676:56;20726:5;20676:56;;;20752:7;20780:1;20765:260;20790:6;20787:1;20784:13;20765:260;;;20857:6;20851:13;20878:63;20937:3;20922:13;20878:63;;;20871:70;;20958:60;21011:6;20958:60;;;20948:70;-1:-1;;20812:1;20805:9;20765:260;;21086:654;;21217:50;21261:5;21217:50;;;21280:76;21349:6;21344:3;21280:76;;;21273:83;;21377:52;21423:5;21377:52;;;21449:7;21477:1;21462:256;21487:6;21484:1;21481:13;21462:256;;;21554:6;21548:13;21575:63;21634:3;21619:13;21575:63;;;21568:70;;21655:56;21704:6;21655:56;;;21645:66;-1:-1;;21509:1;21502:9;21462:256;;21823:838;;22000:73;22067:5;22000:73;;;22086:99;22178:6;22173:3;22086:99;;;22079:106;;22206:75;22275:5;22206:75;;;22301:7;22329:1;22314:325;22339:6;22336:1;22333:13;22314:325;;;22406:6;22400:13;22427:109;22532:3;22517:13;22427:109;;;22420:116;;22553:79;22625:6;22553:79;;;22543:89;-1:-1;;22361:1;22354:9;22314:325;;22744:862;;22929:73;22996:5;22929:73;;;23015:107;23115:6;23110:3;23015:107;;;23008:114;;23143:75;23212:5;23143:75;;;23238:7;23266:1;23251:333;23276:6;23273:1;23270:13;23251:333;;;23343:6;23337:13;23364:117;23477:3;23462:13;23364:117;;;23357:124;;23498:79;23570:6;23498:79;;;23488:89;-1:-1;;23298:1;23291:9;23251:333;;23699:1052;;23894:79;23967:5;23894:79;;;23986:111;24090:6;24085:3;23986:111;;;23979:118;;24120:3;24162:4;24154:6;24150:17;24145:3;24141:27;24189:81;24264:5;24189:81;;;24290:7;24318:1;24303:409;24328:6;24325:1;24322:13;24303:409;;;24390:9;24384:4;24380:20;24375:3;24368:33;24435:6;24429:13;24457:118;24570:4;24555:13;24457:118;;;24449:126;;24592:85;24670:6;24592:85;;;24700:4;24691:14;;;;;24582:95;-1:-1;;24350:1;24343:9;24303:409;;;-1:-1;24725:4;;23873:878;-1:-1;;;;;;;23873:878;24790:690;;24935:54;24983:5;24935:54;;;25002:86;25081:6;25076:3;25002:86;;;24995:93;;25109:56;25159:5;25109:56;;;25185:7;25213:1;25198:260;25223:6;25220:1;25217:13;25198:260;;;25290:6;25284:13;25311:63;25370:3;25355:13;25311:63;;;25304:70;;25391:60;25444:6;25391:60;;;25381:70;-1:-1;;25245:1;25238:9;25198:260;;25519:654;;25650:50;25694:5;25650:50;;;25713:76;25782:6;25777:3;25713:76;;;25706:83;;25810:52;25856:5;25810:52;;;25882:7;25910:1;25895:256;25920:6;25917:1;25914:13;25895:256;;;25987:6;25981:13;26008:63;26067:3;26052:13;26008:63;;;26001:70;;26088:56;26137:6;26088:56;;;26078:66;-1:-1;;25942:1;25935:9;25895:256;;26181:104;26258:21;26273:5;26258:21;;26292:103;26365:24;26383:5;26365:24;;26530:343;;26640:38;26672:5;26640:38;;;26690:70;26753:6;26748:3;26690:70;;;26683:77;;26765:52;26810:6;26805:3;26798:4;26791:5;26787:16;26765:52;;;26838:29;26860:6;26838:29;;;26829:39;;;;26620:253;-1:-1;;;26620:253;27906:162;28002:60;28056:5;28002:60;;28075:142;28161:50;28205:5;28161:50;;28224:148;28313:53;28360:5;28313:53;;28542:146;28630:52;28676:5;28630:52;;28857:465;;29017:67;29081:2;29076:3;29017:67;;;29117:66;29097:87;;-1:-1;;;;;29213:2;29204:12;;29197:88;29313:2;29304:12;;29003:319;-1:-1;;29003:319;29331:364;;29491:67;29555:2;29550:3;29491:67;;;29591:66;29571:87;;29686:2;29677:12;;29477:218;-1:-1;;29477:218;29704:465;;29864:67;29928:2;29923:3;29864:67;;;29964:66;29944:87;;-1:-1;;;;;30060:2;30051:12;;30044:88;30160:2;30151:12;;29850:319;-1:-1;;29850:319;30178:364;;30338:67;30402:2;30397:3;30338:67;;;30438:66;30418:87;;30533:2;30524:12;;30324:218;-1:-1;;30324:218;30551:364;;30711:67;30775:2;30770:3;30711:67;;;30811:66;30791:87;;30906:2;30897:12;;30697:218;-1:-1;;30697:218;30924:364;;31084:67;31148:2;31143:3;31084:67;;;31184:66;31164:87;;31279:2;31270:12;;31070:218;-1:-1;;31070:218;31297:465;;31457:67;31521:2;31516:3;31457:67;;;31557:66;31537:87;;-1:-1;;;;;31653:2;31644:12;;31637:88;31753:2;31744:12;;31443:319;-1:-1;;31443:319;31771:465;;31931:67;31995:2;31990:3;31931:67;;;32031:66;32011:87;;32132:66;32127:2;32118:12;;32111:88;32227:2;32218:12;;31917:319;-1:-1;;31917:319;32245:364;;32405:67;32469:2;32464:3;32405:67;;;32505:66;32485:87;;32600:2;32591:12;;32391:218;-1:-1;;32391:218;32618:364;;32778:67;32842:2;32837:3;32778:67;;;32878:66;32858:87;;32973:2;32964:12;;32764:218;-1:-1;;32764:218;32991:364;;33151:67;33215:2;33210:3;33151:67;;;33251:66;33231:87;;33346:2;33337:12;;33137:218;-1:-1;;33137:218;33364:364;;33524:67;33588:2;33583:3;33524:67;;;33624:66;33604:87;;33719:2;33710:12;;33510:218;-1:-1;;33510:218;33737:465;;33897:67;33961:2;33956:3;33897:67;;;33997:66;33977:87;;-1:-1;;;;;34093:2;34084:12;;34077:88;34193:2;34184:12;;33883:319;-1:-1;;33883:319;34289:1120;34521:22;;34289:1120;;34454:4;34445:14;;;34549:62;34449:3;34521:22;34549:62;;;34474:143;34697:4;34690:5;34686:16;34680:23;34709:63;34766:4;34761:3;34757:14;34743:12;34709:63;;;34627:151;34855:4;34848:5;34844:16;34838:23;34867:63;34924:4;34919:3;34915:14;34901:12;34867:63;;;34788:148;35021:4;35014:5;35010:16;35004:23;35073:3;35067:4;35063:14;35056:4;35051:3;35047:14;35040:38;35093:99;35187:4;35173:12;35093:99;;;35085:107;;34946:258;35279:4;35272:5;35268:16;35262:23;35291:86;35371:4;35366:3;35362:14;35348:12;35291:86;;;-1:-1;35400:4;34427:982;-1:-1;;;34427:982;35416:122;35515:18;;35509:29;35616:1532;35842:22;;35616:1532;;35773:5;35764:15;;;35870:62;35768:3;35842:22;35870:62;;;35794:144;36017:4;36010:5;36006:16;36000:23;36029:63;36086:4;36081:3;36077:14;36063:12;36029:63;;;35948:150;36177:4;36170:5;36166:16;36160:23;36189:63;36246:4;36241:3;36237:14;36223:12;36189:63;;;36108:150;36335:4;36328:5;36324:16;36318:23;36347:61;36402:4;36397:3;36393:14;36379:12;36347:61;;;36268:146;36488:4;36481:5;36477:16;36471:23;36500:61;36555:4;36550:3;36546:14;36532:12;36500:61;;;36424:143;36647:4;36640:5;36636:16;36630:23;36659:63;36716:4;36711:3;36707:14;36693:12;36659:63;;;36577:151;36803:4;36796:5;36792:16;36786:23;36815:76;36885:4;36880:3;36876:14;36862:12;36815:76;;;36738:159;36971:4;36964:5;36960:16;36954:23;37023:3;37017:4;37013:14;37006:4;37001:3;36997:14;36990:38;37043:67;37105:4;37091:12;37043:67;;;37035:75;35746:1402;-1:-1;;;;;35746:1402;37224:655;37434:22;;37357:4;37348:14;;;37462:78;37352:3;37434:22;37462:78;;;37377:169;37626:4;37619:5;37615:16;37609:23;37638:63;37695:4;37690:3;37686:14;37672:12;37638:63;;;37556:151;37783:4;37776:5;37772:16;37766:23;37795:63;37852:4;37847:3;37843:14;37829:12;37795:63;;;37717:147;37330:549;;;;38712:1201;38929:22;;38712:1201;;38861:4;38852:14;;;38957:62;38856:3;38929:22;38957:62;;;38881:144;39100:4;39093:5;39089:16;39083:23;39112:78;39184:4;39179:3;39175:14;39161:12;39112:78;;;39035:161;39271:4;39264:5;39260:16;39254:23;39323:3;39317:4;39313:14;39306:4;39301:3;39297:14;39290:38;39343:67;39405:4;39391:12;39343:67;;;39335:75;;39206:216;39498:4;39491:5;39487:16;39481:23;39510:63;39567:4;39562:3;39558:14;39544:12;39510:63;;;39432:147;39658:4;39651:5;39647:16;39641:23;39710:3;39704:4;39700:14;39693:4;39688:3;39684:14;39677:38;39730:145;39870:4;39856:12;39730:145;;39983:1249;40208:22;;39983:1249;;40140:4;40131:14;;;40236:70;40135:3;40208:22;40236:70;;;40160:152;40387:4;40380:5;40376:16;40370:23;40399:86;40479:4;40474:3;40470:14;40456:12;40399:86;;;40322:169;40566:4;40559:5;40555:16;40549:23;40618:3;40612:4;40608:14;40601:4;40596:3;40592:14;40585:38;40638:75;40708:4;40694:12;40638:75;;;40630:83;;40501:224;40801:4;40794:5;40790:16;40784:23;40813:71;40878:4;40873:3;40869:14;40855:12;40813:71;;;40735:155;40969:4;40962:5;40958:16;40952:23;41021:3;41015:4;41011:14;41004:4;40999:3;40995:14;40988:38;41041:153;41189:4;41175:12;41041:153;;41316:1020;41543:22;;41316:1020;;41465:4;41456:14;;;41571:62;41460:3;41543:22;41571:62;;;41485:154;41715:4;41708:5;41704:16;41698:23;41767:3;41761:4;41757:14;41750:4;41745:3;41741:14;41734:38;41787:99;41881:4;41867:12;41787:99;;;41779:107;;41649:249;41973:4;41966:5;41962:16;41956:23;42025:3;42019:4;42015:14;42008:4;42003:3;41999:14;41992:38;42045:99;42139:4;42125:12;42045:99;;;42037:107;;41908:248;42229:4;42222:5;42218:16;42212:23;42241:63;42298:4;42293:3;42289:14;42275:12;42241:63;;42819:100;42890:23;42907:5;42890:23;;43051:213;43169:2;43154:18;;43183:71;43158:9;43227:6;43183:71;;43271:408;43435:2;43420:18;;43449:71;43424:9;43493:6;43449:71;;;43568:9;43562:4;43558:20;43553:2;43542:9;43538:18;43531:48;43593:76;43664:4;43655:6;43593:76;;43686:468;43880:2;43865:18;;43894:71;43869:9;43938:6;43894:71;;;44013:9;44007:4;44003:20;43998:2;43987:9;43983:18;43976:48;44038:106;44139:4;44130:6;44038:106;;44161:361;44329:2;44343:47;;;44314:18;;44404:108;44314:18;44498:6;44404:108;;44529:620;44775:2;44789:47;;;44760:18;;44850:108;44760:18;44944:6;44850:108;;;44842:116;;45006:9;45000:4;44996:20;44991:2;44980:9;44976:18;44969:48;45031:108;45134:4;45125:6;45031:108;;45156:361;45324:2;45338:47;;;45309:18;;45399:108;45309:18;45493:6;45399:108;;45524:461;45742:2;45756:47;;;45727:18;;45817:158;45727:18;45961:6;45817:158;;45992:201;46104:2;46089:18;;46118:65;46093:9;46156:6;46118:65;;46200:516;46390:2;46404:47;;;46375:18;;46465:84;46375:18;46535:6;46465:84;;;46457:92;;46597:9;46591:4;46587:20;46582:2;46571:9;46567:18;46560:48;46622:84;46701:4;46692:6;46622:84;;46723:407;46914:2;46928:47;;;46899:18;;46989:131;46899:18;46989:131;;47137:407;47328:2;47342:47;;;47313:18;;47403:131;47313:18;47403:131;;47551:407;47742:2;47756:47;;;47727:18;;47817:131;47727:18;47817:131;;47965:407;48156:2;48170:47;;;48141:18;;48231:131;48141:18;48231:131;;48379:407;48570:2;48584:47;;;48555:18;;48645:131;48555:18;48645:131;;48793:407;48984:2;48998:47;;;48969:18;;49059:131;48969:18;49059:131;;49207:407;49398:2;49412:47;;;49383:18;;49473:131;49383:18;49473:131;;49621:407;49812:2;49826:47;;;49797:18;;49887:131;49797:18;49887:131;;50035:407;50226:2;50240:47;;;50211:18;;50301:131;50211:18;50301:131;;50449:407;50640:2;50654:47;;;50625:18;;50715:131;50625:18;50715:131;;50863:407;51054:2;51068:47;;;51039:18;;51129:131;51039:18;51129:131;;51277:407;51468:2;51482:47;;;51453:18;;51543:131;51453:18;51543:131;;51691:407;51882:2;51896:47;;;51867:18;;51957:131;51867:18;51957:131;;52105:389;52287:2;52301:47;;;52272:18;;52362:122;52272:18;52470:6;52362:122;;52501:269;52647:2;52632:18;;52661:99;52636:9;52733:6;52661:99;;52777:388;52951:2;52936:18;;52965:99;52940:9;53037:6;52965:99;;;53075:80;53151:2;53140:9;53136:18;53127:6;53075:80;;;52922:243;;;;;;53172:591;53392:2;53377:18;;53406:99;53381:9;53478:6;53406:99;;;53516:80;53592:2;53581:9;53577:18;53568:6;53516:80;;;53644:9;53638:4;53634:20;53629:2;53618:9;53614:18;53607:48;53669:84;53748:4;53739:6;53669:84;;53770:795;54036:3;54021:19;;54051:99;54025:9;54123:6;54051:99;;;54161:80;54237:2;54226:9;54222:18;54213:6;54161:80;;;54289:9;54283:4;54279:20;54274:2;54263:9;54259:18;54252:48;54314:84;54393:4;54384:6;54314:84;;;54306:92;;54446:9;54440:4;54436:20;54431:2;54420:9;54416:18;54409:48;54471:84;54550:4;54541:6;54471:84;;;54463:92;54007:558;-1:-1;;;;;;54007:558;54572:507;54774:2;54759:18;;54788:99;54763:9;54860:6;54788:99;;;54898:80;54974:2;54963:9;54959:18;54950:6;54898:80;;;54989;55065:2;55054:9;55050:18;55041:6;54989:80;;55086:388;55260:2;55245:18;;55274:99;55249:9;55346:6;55274:99;;;55384:80;55460:2;55449:9;55445:18;55436:6;55384:80;;55481:1391;55885:3;55870:19;;55900:99;55874:9;55972:6;55900:99;;;56010:80;56086:2;56075:9;56071:18;56062:6;56010:80;;;56101;56177:2;56166:9;56162:18;56153:6;56101:80;;;56192;56268:2;56257:9;56253:18;56244:6;56192:80;;;56283:81;56359:3;56348:9;56344:19;56335:6;56283:81;;;56413:9;56407:4;56403:20;56397:3;56386:9;56382:19;56375:49;56438:84;56517:4;56508:6;56438:84;;;56430:92;;56533:81;56609:3;56598:9;56594:19;56585:6;56533:81;;;56625:79;56699:3;56688:9;56684:19;56675:6;56625:79;;;56753:9;56747:4;56743:20;56737:3;56726:9;56722:19;56715:49;56778:84;56857:4;56848:6;56778:84;;;56770:92;55856:1016;-1:-1;;;;;;;;;;;55856:1016;56879:947;57181:3;57166:19;;57196:99;57170:9;57268:6;57196:99;;;57306:80;57382:2;57371:9;57367:18;57358:6;57306:80;;;57397;57473:2;57462:9;57458:18;57449:6;57397:80;;;57488;57564:2;57553:9;57549:18;57540:6;57488:80;;;57579:79;57653:3;57642:9;57638:19;57629:6;57579:79;;;57707:9;57701:4;57697:20;57691:3;57680:9;57676:19;57669:49;57732:84;57811:4;57802:6;57732:84;;;57724:92;57152:674;-1:-1;;;;;;;;57152:674;57833:827;58107:3;58092:19;;58122:99;58096:9;58194:6;58122:99;;;58232:80;58308:2;58297:9;58293:18;58284:6;58232:80;;;58323;58399:2;58388:9;58384:18;58375:6;58323:80;;;58414:78;58488:2;58477:9;58473:18;58464:6;58414:78;;;58541:9;58535:4;58531:20;58525:3;58514:9;58510:19;58503:49;58566:84;58645:4;58636:6;58566:84;;;58558:92;58078:582;-1:-1;;;;;;;58078:582;58667:739;58921:3;58906:19;;58936:99;58910:9;59008:6;58936:99;;;59046:80;59122:2;59111:9;59107:18;59098:6;59046:80;;;59137:78;59211:2;59200:9;59196:18;59187:6;59137:78;;;59226;59300:2;59289:9;59285:18;59276:6;59226:78;;;59315:81;59391:3;59380:9;59376:19;59367:6;59315:81;;59413:859;59695:3;59680:19;;59710:99;59684:9;59782:6;59710:99;;;59820:80;59896:2;59885:9;59881:18;59872:6;59820:80;;;59911:78;59985:2;59974:9;59970:18;59961:6;59911:78;;;60000;60074:2;60063:9;60059:18;60050:6;60000:78;;;60089:81;60165:3;60154:9;60150:19;60141:6;60089:81;;;60181;60257:3;60246:9;60242:19;60233:6;60181:81;;60674:507;60876:2;60861:18;;60890:99;60865:9;60962:6;60890:99;;;61000:80;61076:2;61065:9;61061:18;61052:6;61000:80;;61702:711;61950:3;61935:19;;61965:99;61939:9;62037:6;61965:99;;;62075:80;62151:2;62140:9;62136:18;62127:6;62075:80;;;62166;62242:2;62231:9;62227:18;62218:6;62166:80;;;62294:9;62288:4;62284:20;62279:2;62268:9;62264:18;62257:48;62319:84;62398:4;62389:6;62319:84;;62420:373;62594:2;62608:47;;;62579:18;;62669:114;62579:18;62769:6;62669:114;;62800:357;62966:2;62980:47;;;62951:18;;63041:106;62951:18;63133:6;63041:106;;63164:492;63366:2;63380:47;;;63351:18;;63441:114;63351:18;63541:6;63441:114;;;63433:122;;63566:80;63642:2;63631:9;63627:18;63618:6;63566:80;;63663:213;63781:2;63766:18;;63795:71;63770:9;63839:6;63795:71;;63883:843;64185:3;64170:19;;64200:71;64174:9;64244:6;64200:71;;;64282:72;64350:2;64339:9;64335:18;64326:6;64282:72;;;64402:9;64396:4;64392:20;64387:2;64376:9;64372:18;64365:48;64427:108;64530:4;64521:6;64427:108;;;64419:116;;64583:9;64577:4;64573:20;64568:2;64557:9;64553:18;64546:48;64608:108;64711:4;64702:6;64608:108;;64733:256;64795:2;64789:9;64821:17;;;-1:-1;;;;;64881:34;;64917:22;;;64878:62;64875:2;;;64953:1;64950;64943:12;64875:2;64969;64962:22;64773:216;;-1:-1;64773:216;64996:258;;-1:-1;;;;;65147:6;65144:30;65141:2;;;65187:1;65184;65177:12;65141:2;-1:-1;65216:4;65204:17;;;65234:15;;65078:176;65791:258;;-1:-1;;;;;65926:6;65923:30;65920:2;;;65966:1;65963;65956:12;65920:2;-1:-1;66039:4;66010;65987:17;;;;-1:-1;;65983:33;66029:15;;65857:192;66059:119;66165:4;66153:17;;66133:45;66750:137;66873:6;66853:34;67165:103;67251:12;;67235:33;67746:123;-1:-1;67861:3;;67845:24;69405:168;69513:19;;;69562:4;69553:14;;69506:67;71932:91;;71994:24;72012:5;71994:24;;72030:85;72096:13;72089:21;;72072:43;72201:156;72288:5;72294:58;72288:5;72294:58;;72364:136;72441:5;72447:48;72441:5;72447:48;;72507:142;72587:5;72593:51;72587:5;72593:51;;72656:140;72735:5;72741:50;72735:5;72741:50;;72803:121;-1:-1;;;;;72865:54;;72848:76;73010:96;-1:-1;;;;;73071:30;;73054:52;73113:156;;73215:49;73258:5;73215:49;;73276:136;;73368:39;73401:5;73368:39;;73419:142;;73514:42;73550:5;73514:42;;73568:140;;73662:41;73697:5;73662:41;;73716:145;73797:6;73792:3;73787;73774:30;-1:-1;73853:1;73835:16;;73828:27;73767:94;73870:268;73935:1;73942:101;73956:6;73953:1;73950:13;73942:101;;;74023:11;;;74017:18;74004:11;;;73997:39;73978:2;73971:10;73942:101;;;74058:6;74055:1;74052:13;74049:2;;;-1:-1;;74123:1;74105:16;;74098:27;73919:219;74146:97;74234:2;74214:14;-1:-1;;74210:28;;74194:49;74251:116;74345:1;74338:5;74335:12;74325:2;;74351:9;74374:106;74458:1;74451:5;74448:12;74438:2;;74464:9;74487:109;74574:1;74567:5;74564:12;74554:2;;74580:9;74603:108;74689:1;74682:5;74679:12;74669:2;;74695:9;74718:117;74787:24;74805:5;74787:24;;;74780:5;74777:35;74767:2;;74826:1;74823;74816:12;74842:117;74911:24;74929:5;74911:24;;74966:112;75053:1;75046:5;75043:12;75033:2;;75069:1;75066;75059:12;75209:115;75277:23;75294:5;75277:23;","source":"pragma solidity ^0.5.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\"openzeppelin-solidity/contracts/math/SafeMath.sol\\";\\nimport \\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\";\\nimport \\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\";\\nimport \\"./utils/SolRsaVerify.sol\\";\\n\\nimport { WorkersImpl } from \\"./impl/WorkersImpl.sol\\";\\nimport { PrincipalImpl } from \\"./impl/PrincipalImpl.sol\\";\\nimport { TaskImpl } from \\"./impl/TaskImpl.sol\\";\\nimport { UpgradeImpl } from \\"./impl/UpgradeImpl.sol\\";\\nimport { SecretContractImpl } from \\"./impl/SecretContractImpl.sol\\";\\nimport { EnigmaCommon } from \\"./impl/EnigmaCommon.sol\\";\\nimport { EnigmaState } from \\"./impl/EnigmaState.sol\\";\\nimport { EnigmaEvents } from \\"./impl/EnigmaEvents.sol\\";\\nimport { EnigmaStorage } from \\"./impl/EnigmaStorage.sol\\";\\nimport { Getters } from \\"./impl/Getters.sol\\";\\nimport { ERC20 } from \\"./interfaces/ERC20.sol\\";\\n\\ncontract Enigma is EnigmaStorage, EnigmaEvents, Getters, Ownable {\\n    using SafeMath for uint256;\\n    using ECDSA for bytes32;\\n\\n    // ========================================== Constructor ==========================================\\n\\n    constructor(address _tokenAddress, address _principal, uint _epochSize, uint _timeoutThreshold) public {\\n        state.engToken = ERC20(_tokenAddress);\\n        state.epochSize = _epochSize;\\n        state.taskTimeoutSize = _timeoutThreshold * state.epochSize;\\n        state.principal = _principal;\\n        state.updatedEnigmaContractAddress = address(this);\\n        state.stakingThreshold = 1;\\n        state.workerGroupSize = 1;\\n    }\\n\\n    // ========================================== Modifiers ==========================================\\n\\n    /**\\n    * Checks if the custodian wallet is registered as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerRegistered(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status != EnigmaCommon.WorkerStatus.Unregistered, \\"Unregistered worker\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged in as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedIn, \\"Worker not logged in\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged out as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedOut(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not logged out\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if worker can log in\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canLogIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(getFirstBlockNumber(block.number) != 0, \\"Principal node has not been initialized\\");\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        require(worker.balance >= state.stakingThreshold, \\"Worker\'s balance is not sufficient\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the worker can withdraw\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canWithdraw(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        EnigmaCommon.WorkerLog memory workerLog = WorkersImpl.getLatestWorkerLogImpl(worker, block.number);\\n        require(workerLog.workerEventType == EnigmaCommon.WorkerLogType.LogOut,\\n            \\"Worker\'s last log is not of LogOut type\\");\\n        require(getFirstBlockNumber(block.number) > workerLog.blockNumber,\\n            \\"Cannot withdraw in same epoch as log out event\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has not been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractUndefined(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Undefined, \\"Secret contract already deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractDeployed(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Deployed, \\"Secret contract not deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks task record has been created and is still pending receipt\\n    *\\n    * @param _taskId Task ID\\n    */\\n    modifier taskWaiting(bytes32 _taskId) {\\n        require(state.tasks[_taskId].status == EnigmaCommon.TaskStatus.RecordCreated, \\"Task is not waiting\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure signing key used for registration is unique\\n    *\\n    * @param _signer Signing key\\n    */\\n    modifier isUniqueSigningKey(address _signer) {\\n        for (uint i = 0; i < state.workerAddresses.length; i++) {\\n            require(state.workers[state.workerAddresses[i]].signer != _signer, \\"Not a unique signing key\\");\\n        }\\n        _;\\n    }\\n\\n    /**\\n    * Ensure that the contract\'s context is the updated contract\\n    *\\n    */\\n    modifier isUpdatedEnigmaContract() {\\n        require(address(this) == state.updatedEnigmaContractAddress, \\"Not updated Enigma contract\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure the sender of the recent call is the updated contract\\n    *\\n    */\\n    modifier fromUpdatedEnigmaContract() {\\n        require(msg.sender == state.updatedEnigmaContractAddress, \\"Not from updated Enigma contract\\");\\n        _;\\n    }\\n\\n    // ========================================== Functions ==========================================\\n\\n    /**\\n    * Registers a new worker or change the signer parameters of an existing\\n    * worker. This should be called by every worker (and the principal)\\n    * node in order to receive tasks.\\n    *\\n    * @param _signer The signer address, derived from the enclave public key\\n    * @param _report The RLP encoded report returned by the IAS\\n    * @param _signature Signature\\n    */\\n    function register(address _signer, bytes memory _report, bytes memory _signature)\\n    public\\n    isUpdatedEnigmaContract\\n    isUniqueSigningKey(_signer)\\n    {\\n        WorkersImpl.registerImpl(state, _signer, _report, _signature);\\n    }\\n\\n    /**\\n    * Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    *\\n    * @param _custodian The worker\'s ETH address\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function deposit(address _custodian, uint _amount)\\n    public\\n    isUpdatedEnigmaContract\\n    workerRegistered(_custodian)\\n    {\\n        WorkersImpl.depositImpl(state, _custodian, _amount);\\n    }\\n\\n    /**\\n    * Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    *\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function withdraw(uint _amount)\\n    public\\n    canWithdraw(msg.sender)\\n    {\\n        WorkersImpl.withdrawImpl(state, _amount);\\n    }\\n\\n    /**\\n    * Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\n    * selection process.\\n    */\\n    function login() public canLogIn(msg.sender) {\\n        WorkersImpl.loginImpl(state);\\n    }\\n\\n    /**\\n    * Logout worker. Worker must be logged in to do so.\\n    */\\n    function logout() public workerLoggedIn(msg.sender) {\\n        WorkersImpl.logoutImpl(state);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContractFailure(\\n        bytes32 _taskId,\\n        bytes32 _codeHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractFailureImpl(state, _taskId, _codeHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _preCodeHash Predeployed bytecode hash\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContract(\\n        bytes32 _taskId,\\n        bytes32 _preCodeHash,\\n        bytes32 _codeHash,\\n        bytes32 _initStateDeltaHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractImpl(state, _taskId, _preCodeHash, _codeHash, _initStateDeltaHash,\\n            _optionalEthereumData, _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Check if secret contract has been deployed\\n    *\\n    * @return  Number of deployed secret contracts\\n    */\\n    function countSecretContracts()\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return SecretContractImpl.countSecretContractsImpl(state);\\n    }\\n\\n    /**\\n    * Get deployed secret contract addresses within a range\\n    *\\n    * @param _start Start of range\\n    * @param _stop End of range\\n    * @return Subset of deployed secret contract addresses\\n    */\\n    function getSecretContractAddresses(uint _start, uint _stop)\\n    public\\n    view\\n    returns (bytes32[] memory)\\n    {\\n        return SecretContractImpl.getSecretContractAddressesImpl(state, _start, _stop);\\n    }\\n\\n    /**\\n    * Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\n    * generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\n    * task deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\n    * the on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\n    * invalid.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    * @param _nonce Locally-computed nonce value for this deployment\\n    */\\n    function createDeploymentTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber,\\n        uint _nonce\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createDeploymentTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber, _nonce);\\n    }\\n\\n    /**\\n    * Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\n    * contract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\n    * the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\n    * The task record is finalized and the worker is credited with the task fee.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _stateDeltaHash Input state delta hash\\n    * @param _outputHash Output state hash\\n    * @param _optionalEthereumData Output state hash\\n    * @param _optionalEthereumContractAddress Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitReceipt(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _stateDeltaHash,\\n        bytes32 _outputHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitReceiptImpl(state, _scAddr, _taskId, _stateDeltaHash, _outputHash, _optionalEthereumData,\\n            _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\n    * updated to indicate task failure.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _outputHash Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitTaskFailure(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _outputHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitTaskFailureImpl(state, _scAddr, _taskId, _outputHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    *\\n    * @param _taskId Unique taskId\\n    */\\n    function returnFeesForTask(bytes32 _taskId)\\n    public\\n    taskWaiting(_taskId)\\n    {\\n        TaskImpl.returnFeesForTaskImpl(state, _taskId);\\n    }\\n\\n    /**\\n    * Reparameterizing workers with a new seed\\n    * This should be called for each epoch by the Principal node\\n    *\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n    * @param _seed The random integer generated by the enclave\\n    * @param _sig Principal node\'s signature\\n    */\\n    function setWorkersParams(uint _blockNumber, uint _seed, bytes memory _sig)\\n    public\\n    isUpdatedEnigmaContract\\n    workerRegistered(msg.sender)\\n    {\\n        PrincipalImpl.setWorkersParamsImpl(state, _blockNumber, _seed, _sig);\\n    }\\n\\n    /**\\n    * Get active workers before a certain block number\\n    *\\n    * @param _blockNumber Block number\\n    */\\n    function getActiveWorkers(uint _blockNumber)\\n    public\\n    view\\n    returns (address[] memory, uint[] memory)\\n    {\\n        return PrincipalImpl.getActiveWorkersImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get the first block number of an epoch that a given block number belongs to\\n    *\\n    * @param _blockNumber Block number\\n    * @return Block number\\n    */\\n    function getFirstBlockNumber(uint _blockNumber)\\n    public\\n    view\\n    returns (uint) {\\n        return WorkersImpl.getFirstBlockNumberImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get worker params for an epoch given a particular block number\\n    *\\n    * @param _blockNumber Block number\\n    * @return Epoch\'s first block number\\n    * @return Seed\\n    * @return Array of worker\'s signing addresses\\n    * @return Array of worker\'s stakes\\n    */\\n    function getWorkerParams(uint _blockNumber)\\n    public\\n    view\\n    returns (uint, uint, address[] memory, uint[] memory) {\\n        return WorkersImpl.getWorkerParamsImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\n    * and the secret contract address.\\n    *\\n    * @param _blockNumber Block number the task record was mined\\n    * @param _scAddr Secret contract address\\n    * @return Selected workers\' addresses\\n    */\\n    function getWorkerGroup(uint _blockNumber, bytes32 _scAddr)\\n    public\\n    view\\n    returns (address[] memory)\\n    {\\n        return WorkersImpl.getWorkerGroupImpl(state, _blockNumber, _scAddr);\\n    }\\n\\n    /**\\n    * The RLP encoded report returned by the IAS server\\n    *\\n    * @param _custodian The worker\'s custodian address\\n    */\\n    function getReport(address _custodian)\\n    public\\n    view\\n    workerRegistered(_custodian)\\n    returns (address, bytes memory)\\n    {\\n        return WorkersImpl.getReportImpl(state, _custodian);\\n    }\\n\\n    /**\\n    * This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n    * @param _data The report itself\\n    * @param _signature The signature of the report\\n    */\\n    function verifyReport(bytes memory _data, bytes memory _signature)\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return WorkersImpl.verifyReportImpl(_data, _signature);\\n    }\\n\\n    /**\\n    * Upgrade Enigma Contract\\n    * @param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address\\n    */\\n    function upgradeEnigmaContract(address _updatedEnigmaContractAddress)\\n    public\\n    onlyOwner\\n    isUpdatedEnigmaContract\\n    {\\n        return UpgradeImpl.upgradeEnigmaContractImpl(state, _updatedEnigmaContractAddress);\\n    }\\n\\n    /**\\n    * Transfer worker stake from old contract to new contract upon registration\\n    * @param _workerAddress Newly-registered worker address\\n    * @param _sig Signature\\n    */\\n    function transferWorkerStakePostUpgrade(address _workerAddress, bytes memory _sig)\\n    public\\n    fromUpdatedEnigmaContract\\n    returns (uint256)\\n    {\\n        return UpgradeImpl.transferWorkerStakePostUpgradeImpl(state, _workerAddress, _sig);\\n    }\\n}\\n","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[902]},"id":903,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":903,"sourceUnit":22084,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":903,"sourceUnit":21956,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"openzeppelin-solidity/contracts/ownership/Ownable.sol","id":5,"nodeType":"ImportDirective","scope":903,"sourceUnit":22193,"src":"184:63:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":6,"nodeType":"ImportDirective","scope":903,"sourceUnit":21875,"src":"248:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":8,"nodeType":"ImportDirective","scope":903,"sourceUnit":9482,"src":"284:53:0","symbolAliases":[{"foreign":7,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":10,"nodeType":"ImportDirective","scope":903,"sourceUnit":3314,"src":"338:57:0","symbolAliases":[{"foreign":9,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":12,"nodeType":"ImportDirective","scope":903,"sourceUnit":6109,"src":"396:47:0","symbolAliases":[{"foreign":11,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol","file":"./impl/UpgradeImpl.sol","id":14,"nodeType":"ImportDirective","scope":903,"sourceUnit":8444,"src":"444:53:0","symbolAliases":[{"foreign":13,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":16,"nodeType":"ImportDirective","scope":903,"sourceUnit":3954,"src":"498:67:0","symbolAliases":[{"foreign":15,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":18,"nodeType":"ImportDirective","scope":903,"sourceUnit":2416,"src":"566:55:0","symbolAliases":[{"foreign":17,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":20,"nodeType":"ImportDirective","scope":903,"sourceUnit":2596,"src":"622:53:0","symbolAliases":[{"foreign":19,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":22,"nodeType":"ImportDirective","scope":903,"sourceUnit":2542,"src":"676:55:0","symbolAliases":[{"foreign":21,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":24,"nodeType":"ImportDirective","scope":903,"sourceUnit":2604,"src":"732:57:0","symbolAliases":[{"foreign":23,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":26,"nodeType":"ImportDirective","scope":903,"sourceUnit":2787,"src":"790:45:0","symbolAliases":[{"foreign":25,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":28,"nodeType":"ImportDirective","scope":903,"sourceUnit":10485,"src":"836:47:0","symbolAliases":[{"foreign":27,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":29,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2603,"src":"904:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2603","typeString":"contract EnigmaStorage"}},"id":30,"nodeType":"InheritanceSpecifier","src":"904:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":31,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2541,"src":"919:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2541","typeString":"contract EnigmaEvents"}},"id":32,"nodeType":"InheritanceSpecifier","src":"919:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":33,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2786,"src":"933:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2786","typeString":"contract Getters"}},"id":34,"nodeType":"InheritanceSpecifier","src":"933:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":35,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":22192,"src":"942:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$22192","typeString":"contract Ownable"}},"id":36,"nodeType":"InheritanceSpecifier","src":"942:7:0"}],"contractDependencies":[2541,2603,2786,22192],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":902,"linearizedBaseContracts":[902,22192,2786,2541,2603],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":39,"libraryName":{"contractScope":null,"id":37,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":22083,"src":"962:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$22083","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"956:27:0","typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":42,"libraryName":{"contractScope":null,"id":40,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":21955,"src":"994:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$21955","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"988:24:0","typeName":{"id":41,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1004:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":102,"nodeType":"Block","src":"1227:330:0","statements":[{"expression":{"argumentTypes":null,"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":53,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1237:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":55,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2550,"src":"1237:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10484","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":57,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1260:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":56,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10484,"src":"1254:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10484_$","typeString":"type(contract ERC20)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1254:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10484","typeString":"contract ERC20"}},"src":"1237:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10484","typeString":"contract ERC20"}},"id":60,"nodeType":"ExpressionStatement","src":"1237:37:0"},{"expression":{"argumentTypes":null,"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":61,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1284:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":63,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2552,"src":"1284:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":64,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1302:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1284:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":66,"nodeType":"ExpressionStatement","src":"1284:28:0"},{"expression":{"argumentTypes":null,"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":67,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1322:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":69,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2554,"src":"1322:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":70,"name":"_timeoutThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1346:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":71,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1366:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":72,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2552,"src":"1366:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1346:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1322:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":75,"nodeType":"ExpressionStatement","src":"1322:59:0"},{"expression":{"argumentTypes":null,"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":76,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1391:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":78,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2556,"src":"1391:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":79,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1409:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1391:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":81,"nodeType":"ExpressionStatement","src":"1391:28:0"},{"expression":{"argumentTypes":null,"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":82,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1429:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":84,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2558,"src":"1429:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":86,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22816,"src":"1474:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$902","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$902","typeString":"contract Enigma"}],"id":85,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1466:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1466:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1429:50:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":89,"nodeType":"ExpressionStatement","src":"1429:50:0"},{"expression":{"argumentTypes":null,"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":90,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1489:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":92,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2591,"src":"1489:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1514:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1489:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":95,"nodeType":"ExpressionStatement","src":"1489:26:0"},{"expression":{"argumentTypes":null,"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":96,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1525:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":98,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2593,"src":"1525:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1549:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1525:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":101,"nodeType":"ExpressionStatement","src":"1525:25:0"}]},"documentation":null,"id":103,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":103,"src":"1136:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":46,"name":"_principal","nodeType":"VariableDeclaration","scope":103,"src":"1159:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":48,"name":"_epochSize","nodeType":"VariableDeclaration","scope":103,"src":"1179:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint","nodeType":"ElementaryTypeName","src":"1179:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":50,"name":"_timeoutThreshold","nodeType":"VariableDeclaration","scope":103,"src":"1196:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint","nodeType":"ElementaryTypeName","src":"1196:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1135:84:0"},"returnParameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1227:0:0"},"scope":902,"src":"1124:433:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":127,"nodeType":"Block","src":"1847:181:0","statements":[{"assignments":[110],"declarations":[{"constant":false,"id":110,"name":"worker","nodeType":"VariableDeclaration","scope":127,"src":"1857:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":109,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2282,"src":"1857:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":115,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":111,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1893:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"1893:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2282_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":114,"indexExpression":{"argumentTypes":null,"id":113,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"1907:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1893:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1857:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":117,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"1931:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2274,"src":"1931:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":119,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"1948:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2323,"src":"1948:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2323_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1948:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1931:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1988:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"1923:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1923:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":125,"nodeType":"ExpressionStatement","src":"1923:87:0"},{"id":126,"nodeType":"PlaceholderStatement","src":"2020:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":128,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"name":"_user","nodeType":"VariableDeclaration","scope":128,"src":"1832:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"1832:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1831:15:0"},"src":"1806:222:0","visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"2211:178:0","statements":[{"assignments":[135],"declarations":[{"constant":false,"id":135,"name":"worker","nodeType":"VariableDeclaration","scope":152,"src":"2221:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":134,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2282,"src":"2221:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":140,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":136,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"2257:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"2257:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2282_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":139,"indexExpression":{"argumentTypes":null,"id":138,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2271:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2257:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2221:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":142,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2295:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2274,"src":"2295:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":144,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"2312:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2323,"src":"2312:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2323_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2312:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2295:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2348:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2287:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":150,"nodeType":"ExpressionStatement","src":"2287:84:0"},{"id":151,"nodeType":"PlaceholderStatement","src":"2381:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":153,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"name":"_user","nodeType":"VariableDeclaration","scope":153,"src":"2196:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"2196:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2195:15:0"},"src":"2172:217:0","visibility":"internal"},{"body":{"id":177,"nodeType":"Block","src":"2574:180:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"name":"worker","nodeType":"VariableDeclaration","scope":177,"src":"2584:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":159,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2282,"src":"2584:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":165,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":161,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"2620:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"2620:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2282_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":164,"indexExpression":{"argumentTypes":null,"id":163,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2634:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2620:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2584:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":167,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"2658:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2274,"src":"2658:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":169,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"2675:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2323,"src":"2675:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2323_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2675:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2658:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2712:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"2650:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":175,"nodeType":"ExpressionStatement","src":"2650:86:0"},{"id":176,"nodeType":"PlaceholderStatement","src":"2746:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":178,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"name":"_user","nodeType":"VariableDeclaration","scope":178,"src":"2559:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2558:15:0"},"src":"2534:220:0","visibility":"internal"},{"body":{"id":221,"nodeType":"Block","src":"2903:395:0","statements":[{"assignments":[185],"declarations":[{"constant":false,"id":185,"name":"worker","nodeType":"VariableDeclaration","scope":221,"src":"2913:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":184,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2282,"src":"2913:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":190,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":186,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"2949:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"2949:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2282_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":189,"indexExpression":{"argumentTypes":null,"id":188,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"2963:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2949:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2913:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":193,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22756,"src":"3007:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3007:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":192,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2987:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2987:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3024:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2987:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3027:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":191,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"2979:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2979:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":200,"nodeType":"ExpressionStatement","src":"2979:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":202,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3087:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2274,"src":"3087:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":204,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"3104:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2323,"src":"3104:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2323_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3104:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3087:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3141:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"3079:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3079:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":210,"nodeType":"ExpressionStatement","src":"3079:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3201:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2278,"src":"3201:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":214,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"3219:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2591,"src":"3219:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3201:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3243:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"3193:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3193:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":219,"nodeType":"ExpressionStatement","src":"3193:87:0"},{"id":220,"nodeType":"PlaceholderStatement","src":"3290:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":222,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"name":"_user","nodeType":"VariableDeclaration","scope":222,"src":"2888:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"2888:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2887:15:0"},"src":"2870:428:0","visibility":"internal"},{"body":{"id":278,"nodeType":"Block","src":"3456:580:0","statements":[{"assignments":[229],"declarations":[{"constant":false,"id":229,"name":"worker","nodeType":"VariableDeclaration","scope":278,"src":"3466:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":228,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2282,"src":"3466:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":234,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":230,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"3502:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"3502:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2282_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":233,"indexExpression":{"argumentTypes":null,"id":232,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"3516:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3502:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3466:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":236,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"3540:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2274,"src":"3540:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":238,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"3557:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2323,"src":"3557:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2323_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3557:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3540:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3594:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"3532:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3532:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":244,"nodeType":"ExpressionStatement","src":"3532:104:0"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"name":"workerLog","nodeType":"VariableDeclaration","scope":278,"src":"3646:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2300_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":247,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2300,"src":"3646:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2300_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":255,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":251,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"3723:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":252,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22756,"src":"3731:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3731:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":249,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"3688:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9480,"src":"3688:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2282_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2300_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3688:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2300_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3646:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2331","typeString":"enum EnigmaCommon.WorkerLogType"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":257,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3762:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2300_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2295,"src":"3762:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2331","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":259,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"3791:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"3791:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2331_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3791:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2331","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3762:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3838:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"3754:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3754:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":265,"nodeType":"ExpressionStatement","src":"3754:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":268,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22756,"src":"3918:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3918:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":267,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"3898:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3898:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3934:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2300_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2297,"src":"3934:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3898:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3969:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"3890:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3890:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":276,"nodeType":"ExpressionStatement","src":"3890:128:0"},{"id":277,"nodeType":"PlaceholderStatement","src":"4028:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":279,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"name":"_user","nodeType":"VariableDeclaration","scope":279,"src":"3441:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"3441:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3440:15:0"},"src":"3420:616:0","visibility":"internal"},{"body":{"id":297,"nodeType":"Block","src":"4203:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2326","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":284,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"4221:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2585,"src":"4221:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2312_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":287,"indexExpression":{"argumentTypes":null,"id":286,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4237:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4221:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2312_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"4221:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2326","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":289,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4256:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"4256:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2326_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4256:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2326","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4221:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4301:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"4213:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4213:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":295,"nodeType":"ExpressionStatement","src":"4213:123:0"},{"id":296,"nodeType":"PlaceholderStatement","src":"4346:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":298,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"name":"_scAddr","nodeType":"VariableDeclaration","scope":298,"src":"4186:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4186:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4185:17:0"},"src":"4159:195:0","visibility":"internal"},{"body":{"id":316,"nodeType":"Block","src":"4516:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2326","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":303,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"4534:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2585,"src":"4534:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2312_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":306,"indexExpression":{"argumentTypes":null,"id":305,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4550:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4534:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2312_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"4534:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2326","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":308,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4569:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"4569:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2326_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4569:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2326","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4534:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4613:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4526:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"ExpressionStatement","src":"4526:118:0"},{"id":315,"nodeType":"PlaceholderStatement","src":"4654:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":317,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"name":"_scAddr","nodeType":"VariableDeclaration","scope":317,"src":"4499:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4499:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4498:17:0"},"src":"4473:189:0","visibility":"internal"},{"body":{"id":335,"nodeType":"Block","src":"4827:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2319","typeString":"enum EnigmaCommon.TaskStatus"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":322,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"4845:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2578,"src":"4845:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2270_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":325,"indexExpression":{"argumentTypes":null,"id":324,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"4857:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2270_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2267,"src":"4845:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2319","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":327,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4876:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2319,"src":"4876:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2319_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4876:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2319","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4845:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4915:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"4837:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4837:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"4837:100:0"},{"id":334,"nodeType":"PlaceholderStatement","src":"4947:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":336,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"name":"_taskId","nodeType":"VariableDeclaration","scope":336,"src":"4810:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4810:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4809:17:0"},"src":"4789:166:0","visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"5117:202:0","statements":[{"body":{"id":366,"nodeType":"Block","src":"5183:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":353,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5205:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"5205:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2282_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":359,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":355,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5219:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":356,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2567,"src":"5219:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":358,"indexExpression":{"argumentTypes":null,"id":357,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5241:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5219:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5205:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2272,"src":"5205:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":361,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"5255:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5205:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5264:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"5197:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5197:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":365,"nodeType":"ExpressionStatement","src":"5197:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5144:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":345,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5148:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2567,"src":"5148:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5148:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5144:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":367,"initializationExpression":{"assignments":[341],"declarations":[{"constant":false,"id":341,"name":"i","nodeType":"VariableDeclaration","scope":367,"src":"5132:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint","nodeType":"ElementaryTypeName","src":"5132:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":343,"initialValue":{"argumentTypes":null,"hexValue":"30","id":342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5141:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5132:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5178:3:0","subExpression":{"argumentTypes":null,"id":349,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5178:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":351,"nodeType":"ExpressionStatement","src":"5178:3:0"},"nodeType":"ForStatement","src":"5127:175:0"},{"id":368,"nodeType":"PlaceholderStatement","src":"5311:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":370,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"name":"_signer","nodeType":"VariableDeclaration","scope":370,"src":"5100:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"5100:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5099:17:0"},"src":"5072:247:0","visibility":"internal"},{"body":{"id":383,"nodeType":"Block","src":"5446:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":374,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22816,"src":"5472:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$902","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$902","typeString":"contract Enigma"}],"id":373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5464:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5464:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":376,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5481:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2558,"src":"5481:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5464:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74207570646174656420456e69676d6120636f6e7472616374","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5517:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""},"value":"Not updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""}],"id":372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"5456:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5456:91:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"5456:91:0"},{"id":382,"nodeType":"PlaceholderStatement","src":"5557:1:0"}]},"documentation":"Ensure that the contract\'s context is the updated contract\\n    ","id":384,"name":"isUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[],"src":"5443:2:0"},"src":"5411:154:0","visibility":"internal"},{"body":{"id":396,"nodeType":"Block","src":"5696:121:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":387,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"5714:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5714:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":389,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5728:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2558,"src":"5728:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5714:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5764:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""},"value":"Not from updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""}],"id":386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"5706:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5706:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":394,"nodeType":"ExpressionStatement","src":"5706:93:0"},{"id":395,"nodeType":"PlaceholderStatement","src":"5809:1:0"}]},"documentation":"Ensure the sender of the recent call is the updated contract\\n    ","id":397,"name":"fromUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[],"src":"5693:2:0"},"src":"5659:158:0","visibility":"internal"},{"body":{"id":420,"nodeType":"Block","src":"6466:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":414,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"6501:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":415,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"6508:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":416,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"6517:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":417,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6526:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":411,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"6476:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":8738,"src":"6476:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6476:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":419,"nodeType":"ExpressionStatement","src":"6476:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":421,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":406,"modifierName":{"argumentTypes":null,"id":405,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6406:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6406:23:0"},{"arguments":[{"argumentTypes":null,"id":408,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"6453:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":409,"modifierName":{"argumentTypes":null,"id":407,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6434:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6434:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"name":"_signer","nodeType":"VariableDeclaration","scope":421,"src":"6327:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"6327:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":401,"name":"_report","nodeType":"VariableDeclaration","scope":421,"src":"6344:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":400,"name":"bytes","nodeType":"ElementaryTypeName","src":"6344:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":403,"name":"_signature","nodeType":"VariableDeclaration","scope":421,"src":"6366:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":402,"name":"bytes","nodeType":"ElementaryTypeName","src":"6366:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6326:64:0"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"6466:0:0"},"scope":902,"src":"6309:235:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":441,"nodeType":"Block","src":"6914:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":436,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"6948:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":437,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6955:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":438,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6967:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":433,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"6924:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":8954,"src":"6924:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6924:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":440,"nodeType":"ExpressionStatement","src":"6924:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":442,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":428,"modifierName":{"argumentTypes":null,"id":427,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6853:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6853:23:0"},{"arguments":[{"argumentTypes":null,"id":430,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6898:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":431,"modifierName":{"argumentTypes":null,"id":429,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"6881:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6881:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"name":"_custodian","nodeType":"VariableDeclaration","scope":442,"src":"6804:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"6804:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":425,"name":"_amount","nodeType":"VariableDeclaration","scope":442,"src":"6824:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint","nodeType":"ElementaryTypeName","src":"6824:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6803:34:0"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"6914:0:0"},"scope":902,"src":"6787:195:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":458,"nodeType":"Block","src":"7255:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":454,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"7290:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":455,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7297:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":451,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"7265:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":9007,"src":"7265:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"7265:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":459,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"7239:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7239:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":449,"modifierName":{"argumentTypes":null,"id":446,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"7227:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7227:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"name":"_amount","nodeType":"VariableDeclaration","scope":459,"src":"7198:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint","nodeType":"ElementaryTypeName","src":"7198:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7197:14:0"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"7255:0:0"},"scope":902,"src":"7180:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":472,"nodeType":"Block","src":"7520:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":469,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"7552:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":466,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"7530:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":8847,"src":"7530:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7530:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"7530:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":473,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":462,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"7508:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7508:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":464,"modifierName":{"argumentTypes":null,"id":461,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"7499:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7499:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"7489:2:0"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7520:0:0"},"scope":902,"src":"7475:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":486,"nodeType":"Block","src":"7694:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":483,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"7727:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":480,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"7704:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":8893,"src":"7704:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7704:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"7704:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":487,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":476,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"7682:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7682:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":478,"modifierName":{"argumentTypes":null,"id":475,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"7667:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7667:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"7657:2:0"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[],"src":"7694:0:0"},"scope":902,"src":"7642:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":517,"nodeType":"Block","src":"8300:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":510,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"8351:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":511,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8358:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":512,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"8367:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":513,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"8378:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":514,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"8388:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":507,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"8310:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6108_$","typeString":"type(library TaskImpl)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4420,"src":"8310:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8310:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":516,"nodeType":"ExpressionStatement","src":"8310:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":518,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":498,"modifierName":{"argumentTypes":null,"id":497,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"8210:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8210:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":500,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"8253:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8253:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":502,"modifierName":{"argumentTypes":null,"id":499,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"8238:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8238:26:0"},{"arguments":[{"argumentTypes":null,"id":504,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":505,"modifierName":{"argumentTypes":null,"id":503,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"8269:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8269:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"name":"_taskId","nodeType":"VariableDeclaration","scope":518,"src":"8094:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8094:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":491,"name":"_codeHash","nodeType":"VariableDeclaration","scope":518,"src":"8119:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8119:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":493,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":518,"src":"8146:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":492,"name":"uint64","nodeType":"ElementaryTypeName","src":"8146:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":495,"name":"_sig","nodeType":"VariableDeclaration","scope":518,"src":"8171:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":494,"name":"bytes","nodeType":"ElementaryTypeName","src":"8171:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8084:110:0"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"8300:0:0"},"scope":902,"src":"8048:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":560,"nodeType":"Block","src":"9481:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":549,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"9525:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":550,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9532:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":551,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"9541:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":552,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"9555:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":553,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"9566:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":554,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"9599:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":555,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"9622:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":556,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"9656:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":557,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"9666:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":546,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"9491:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6108_$","typeString":"type(library TaskImpl)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4821,"src":"9491:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9491:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"9491:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":561,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":537,"modifierName":{"argumentTypes":null,"id":536,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"9391:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9391:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":539,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"9434:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9434:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":541,"modifierName":{"argumentTypes":null,"id":538,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"9419:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"9419:26:0"},{"arguments":[{"argumentTypes":null,"id":543,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9468:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":544,"modifierName":{"argumentTypes":null,"id":542,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9450:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"9450:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"name":"_taskId","nodeType":"VariableDeclaration","scope":561,"src":"9114:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9114:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":522,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":561,"src":"9139:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9139:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":524,"name":"_codeHash","nodeType":"VariableDeclaration","scope":561,"src":"9169:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9169:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":526,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":561,"src":"9196:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":528,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":561,"src":"9233:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":527,"name":"bytes","nodeType":"ElementaryTypeName","src":"9233:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":530,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":561,"src":"9277:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"9277:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":532,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":561,"src":"9327:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":531,"name":"uint64","nodeType":"ElementaryTypeName","src":"9327:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":534,"name":"_sig","nodeType":"VariableDeclaration","scope":561,"src":"9352:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":533,"name":"bytes","nodeType":"ElementaryTypeName","src":"9352:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"9104:271:0"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[],"src":"9481:0:0"},"scope":902,"src":"9075:603:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":571,"nodeType":"Block","src":"9880:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":568,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"9941:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":566,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"9897:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3953_$","typeString":"type(library SecretContractImpl)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3885,"src":"9897:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2594_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9897:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":565,"id":570,"nodeType":"Return","src":"9890:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":572,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[],"src":"9834:2:0"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"name":"","nodeType":"VariableDeclaration","scope":572,"src":"9870:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint","nodeType":"ElementaryTypeName","src":"9870:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9869:6:0"},"scope":902,"src":"9805:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":589,"nodeType":"Block","src":"10283:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":584,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"10350:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":585,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"10357:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":586,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"10365:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":582,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"10300:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3953_$","typeString":"type(library SecretContractImpl)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3952,"src":"10300:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2594_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10300:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":581,"id":588,"nodeType":"Return","src":"10293:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":590,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"name":"_start","nodeType":"VariableDeclaration","scope":590,"src":"10203:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint","nodeType":"ElementaryTypeName","src":"10203:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":576,"name":"_stop","nodeType":"VariableDeclaration","scope":590,"src":"10216:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint","nodeType":"ElementaryTypeName","src":"10216:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10202:25:0"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"name":"","nodeType":"VariableDeclaration","scope":590,"src":"10261:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10261:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":579,"length":null,"nodeType":"ArrayTypeName","src":"10261:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"10260:18:0"},"scope":902,"src":"10167:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":616,"nodeType":"Block","src":"11447:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":608,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"11497:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":609,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"11504:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":610,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11517:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":611,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"11528:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":612,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"11536:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":613,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"11555:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":605,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"11457:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6108_$","typeString":"type(library TaskImpl)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4244,"src":"11457:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11457:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":615,"nodeType":"ExpressionStatement","src":"11457:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":617,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":603,"modifierName":{"argumentTypes":null,"id":602,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"11419:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11419:23:0"}],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":617,"src":"11276:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11276:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":594,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":617,"src":"11305:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":593,"name":"uint64","nodeType":"ElementaryTypeName","src":"11305:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":596,"name":"_gasPx","nodeType":"VariableDeclaration","scope":617,"src":"11331:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":595,"name":"uint64","nodeType":"ElementaryTypeName","src":"11331:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":598,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":617,"src":"11354:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint","nodeType":"ElementaryTypeName","src":"11354:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":600,"name":"_nonce","nodeType":"VariableDeclaration","scope":617,"src":"11386:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint","nodeType":"ElementaryTypeName","src":"11386:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11266:137:0"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"11447:0:0"},"scope":902,"src":"11231:338:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":640,"nodeType":"Block","src":"12329:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":633,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"12369:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":634,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"12376:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":635,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"12389:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":636,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"12400:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":637,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"12408:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":630,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"12339:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6108_$","typeString":"type(library TaskImpl)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"12339:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12339:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"ExpressionStatement","src":"12339:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":641,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":628,"modifierName":{"argumentTypes":null,"id":627,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"12301:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12301:23:0"}],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":641,"src":"12179:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12179:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":621,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":641,"src":"12208:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":620,"name":"uint64","nodeType":"ElementaryTypeName","src":"12208:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":623,"name":"_gasPx","nodeType":"VariableDeclaration","scope":641,"src":"12234:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":622,"name":"uint64","nodeType":"ElementaryTypeName","src":"12234:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":625,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":641,"src":"12257:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint","nodeType":"ElementaryTypeName","src":"12257:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12169:116:0"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[],"src":"12329:0:0"},"scope":902,"src":"12144:289:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":683,"nodeType":"Block","src":"13428:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":672,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"13465:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":673,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"13472:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":674,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"13481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":675,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"13490:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":676,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"13507:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":677,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"13520:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":678,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"13555:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":679,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"13589:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":680,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"13599:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":669,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"13438:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6108_$","typeString":"type(library TaskImpl)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5744,"src":"13438:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13438:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":682,"nodeType":"ExpressionStatement","src":"13438:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":684,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":660,"modifierName":{"argumentTypes":null,"id":659,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"13339:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13339:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":662,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"13382:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13382:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":664,"modifierName":{"argumentTypes":null,"id":661,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"13367:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13367:26:0"},{"arguments":[{"argumentTypes":null,"id":666,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"13415:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":667,"modifierName":{"argumentTypes":null,"id":665,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"13398:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13398:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"name":"_scAddr","nodeType":"VariableDeclaration","scope":684,"src":"13069:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":645,"name":"_taskId","nodeType":"VariableDeclaration","scope":684,"src":"13094:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13094:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":647,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":684,"src":"13119:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13119:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":649,"name":"_outputHash","nodeType":"VariableDeclaration","scope":684,"src":"13152:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13152:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":651,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":684,"src":"13181:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":650,"name":"bytes","nodeType":"ElementaryTypeName","src":"13181:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":653,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":684,"src":"13225:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"13225:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":655,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":684,"src":"13275:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":654,"name":"uint64","nodeType":"ElementaryTypeName","src":"13275:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":657,"name":"_sig","nodeType":"VariableDeclaration","scope":684,"src":"13300:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":656,"name":"bytes","nodeType":"ElementaryTypeName","src":"13300:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13059:264:0"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"13428:0:0"},"scope":902,"src":"13037:574:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":717,"nodeType":"Block","src":"14270:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":709,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"14311:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":710,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"14318:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":711,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"14327:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":712,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"14336:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":713,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"14349:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":714,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"14359:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":706,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"14280:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6108_$","typeString":"type(library TaskImpl)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5262,"src":"14280:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14280:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"ExpressionStatement","src":"14280:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":718,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":697,"modifierName":{"argumentTypes":null,"id":696,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"14181:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14181:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":699,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"14224:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14224:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":701,"modifierName":{"argumentTypes":null,"id":698,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"14209:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14209:26:0"},{"arguments":[{"argumentTypes":null,"id":703,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"14257:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":704,"modifierName":{"argumentTypes":null,"id":702,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"14240:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14240:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"name":"_scAddr","nodeType":"VariableDeclaration","scope":718,"src":"14038:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":688,"name":"_taskId","nodeType":"VariableDeclaration","scope":718,"src":"14063:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14063:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":690,"name":"_outputHash","nodeType":"VariableDeclaration","scope":718,"src":"14088:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14088:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":692,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":718,"src":"14117:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":691,"name":"uint64","nodeType":"ElementaryTypeName","src":"14117:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":694,"name":"_sig","nodeType":"VariableDeclaration","scope":718,"src":"14142:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":693,"name":"bytes","nodeType":"ElementaryTypeName","src":"14142:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14028:137:0"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[],"src":"14270:0:0"},"scope":902,"src":"14002:369:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":733,"nodeType":"Block","src":"14622:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":729,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"14663:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":730,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"14670:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":726,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"14632:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6108_$","typeString":"type(library TaskImpl)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6107,"src":"14632:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14632:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":732,"nodeType":"ExpressionStatement","src":"14632:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":734,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":723,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"14609:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":724,"modifierName":{"argumentTypes":null,"id":722,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"14597:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14597:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"name":"_taskId","nodeType":"VariableDeclaration","scope":734,"src":"14565:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14565:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14564:17:0"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[],"src":"14622:0:0"},"scope":902,"src":"14538:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":758,"nodeType":"Block","src":"15173:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":752,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"15218:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":753,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"15225:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":754,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"15239:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":755,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"15246:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":749,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"15183:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3313_$","typeString":"type(library PrincipalImpl)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3142,"src":"15183:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15183:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":757,"nodeType":"ExpressionStatement","src":"15183:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":759,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":743,"modifierName":{"argumentTypes":null,"id":742,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"15112:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15112:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":745,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"15157:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15157:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":747,"modifierName":{"argumentTypes":null,"id":744,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"15140:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"15140:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":759,"src":"15047:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":735,"name":"uint","nodeType":"ElementaryTypeName","src":"15047:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":738,"name":"_seed","nodeType":"VariableDeclaration","scope":759,"src":"15066:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint","nodeType":"ElementaryTypeName","src":"15066:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":740,"name":"_sig","nodeType":"VariableDeclaration","scope":759,"src":"15078:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":739,"name":"bytes","nodeType":"ElementaryTypeName","src":"15078:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"15046:50:0"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[],"src":"15173:0:0"},"scope":902,"src":"15021:237:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":776,"nodeType":"Block","src":"15494:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":772,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"15546:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":773,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"15553:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":770,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"15511:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3313_$","typeString":"type(library PrincipalImpl)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3312,"src":"15511:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2594_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15511:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":769,"id":775,"nodeType":"Return","src":"15504:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":777,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":777,"src":"15405:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint","nodeType":"ElementaryTypeName","src":"15405:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15404:19:0"},"returnParameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"name":"","nodeType":"VariableDeclaration","scope":777,"src":"15457:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"15457:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":764,"length":null,"nodeType":"ArrayTypeName","src":"15457:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":768,"name":"","nodeType":"VariableDeclaration","scope":777,"src":"15475:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":766,"name":"uint","nodeType":"ElementaryTypeName","src":"15475:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":767,"length":null,"nodeType":"ArrayTypeName","src":"15475:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15456:33:0"},"scope":902,"src":"15379:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":790,"nodeType":"Block","src":"15835:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":786,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"15888:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":787,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"15895:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":784,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"15852:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":9127,"src":"15852:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2594_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15852:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":783,"id":789,"nodeType":"Return","src":"15845:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":791,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":791,"src":"15777:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint","nodeType":"ElementaryTypeName","src":"15777:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15776:19:0"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"name":"","nodeType":"VariableDeclaration","scope":791,"src":"15829:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint","nodeType":"ElementaryTypeName","src":"15829:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15828:6:0"},"scope":902,"src":"15748:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":812,"nodeType":"Block","src":"16321:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":808,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"16370:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":809,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"16377:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":806,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"16338:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":9164,"src":"16338:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2594_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16338:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":805,"id":811,"nodeType":"Return","src":"16331:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":813,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":813,"src":"16224:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint","nodeType":"ElementaryTypeName","src":"16224:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16223:19:0"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"name":"","nodeType":"VariableDeclaration","scope":813,"src":"16276:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint","nodeType":"ElementaryTypeName","src":"16276:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":798,"name":"","nodeType":"VariableDeclaration","scope":813,"src":"16282:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint","nodeType":"ElementaryTypeName","src":"16282:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":801,"name":"","nodeType":"VariableDeclaration","scope":813,"src":"16288:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"16288:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":800,"length":null,"nodeType":"ArrayTypeName","src":"16288:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":804,"name":"","nodeType":"VariableDeclaration","scope":813,"src":"16306:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":802,"name":"uint","nodeType":"ElementaryTypeName","src":"16306:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":803,"length":null,"nodeType":"ArrayTypeName","src":"16306:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16275:45:0"},"scope":902,"src":"16199:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":830,"nodeType":"Block","src":"16849:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":825,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"16897:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":826,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"16904:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":827,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"16918:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":823,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"16866:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9428,"src":"16866:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2594_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16866:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":822,"id":829,"nodeType":"Return","src":"16859:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":831,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":831,"src":"16758:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint","nodeType":"ElementaryTypeName","src":"16758:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":817,"name":"_scAddr","nodeType":"VariableDeclaration","scope":831,"src":"16777:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16777:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16757:36:0"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"name":"","nodeType":"VariableDeclaration","scope":831,"src":"16827:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"16827:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":820,"length":null,"nodeType":"ArrayTypeName","src":"16827:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16826:18:0"},"scope":902,"src":"16734:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":849,"nodeType":"Block","src":"17203:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":845,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"17246:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":846,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"17253:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":843,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"17220:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":8775,"src":"17220:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2594_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17220:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":842,"id":848,"nodeType":"Return","src":"17213:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":850,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":836,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"17151:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":837,"modifierName":{"argumentTypes":null,"id":835,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"17134:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"17134:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"name":"_custodian","nodeType":"VariableDeclaration","scope":850,"src":"17090:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"17090:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17089:20:0"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"name":"","nodeType":"VariableDeclaration","scope":850,"src":"17176:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"17176:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":841,"name":"","nodeType":"VariableDeclaration","scope":850,"src":"17185:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":840,"name":"bytes","nodeType":"ElementaryTypeName","src":"17185:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17175:23:0"},"scope":902,"src":"17071:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":865,"nodeType":"Block","src":"17586:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":861,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"17632:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":862,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"17639:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":859,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"17603:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":8801,"src":"17603:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17603:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":858,"id":864,"nodeType":"Return","src":"17596:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":866,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"name":"_data","nodeType":"VariableDeclaration","scope":866,"src":"17498:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":851,"name":"bytes","nodeType":"ElementaryTypeName","src":"17498:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":854,"name":"_signature","nodeType":"VariableDeclaration","scope":866,"src":"17518:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":853,"name":"bytes","nodeType":"ElementaryTypeName","src":"17518:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17497:45:0"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"name":"","nodeType":"VariableDeclaration","scope":866,"src":"17576:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint","nodeType":"ElementaryTypeName","src":"17576:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17575:6:0"},"scope":902,"src":"17476:181:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":881,"nodeType":"Block","src":"17925:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":877,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"17980:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":878,"name":"_updatedEnigmaContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"17987:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":875,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8443,"src":"17942:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8443_$","typeString":"type(library UpgradeImpl)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeEnigmaContractImpl","nodeType":"MemberAccess","referencedDeclaration":8364,"src":"17942:37:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17942:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":874,"id":880,"nodeType":"Return","src":"17935:82:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address","id":882,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":871,"modifierName":{"argumentTypes":null,"id":870,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22126,"src":"17883:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17883:9:0"},{"arguments":null,"id":873,"modifierName":{"argumentTypes":null,"id":872,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"17897:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17897:23:0"}],"name":"upgradeEnigmaContract","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"name":"_updatedEnigmaContractAddress","nodeType":"VariableDeclaration","scope":882,"src":"17829:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"17829:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17828:39:0"},"returnParameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"17925:0:0"},"scope":902,"src":"17798:226:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":900,"nodeType":"Block","src":"18363:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":895,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"18427:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":896,"name":"_workerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"18434:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":897,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"18450:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":893,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8443,"src":"18380:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8443_$","typeString":"type(library UpgradeImpl)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferWorkerStakePostUpgradeImpl","nodeType":"MemberAccess","referencedDeclaration":8442,"src":"18380:46:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory) returns (uint256)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18380:75:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":892,"id":899,"nodeType":"Return","src":"18373:82:0"}]},"documentation":"Transfer worker stake from old contract to new contract upon registration\\n@param _workerAddress Newly-registered worker address\\n@param _sig Signature","id":901,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":889,"modifierName":{"argumentTypes":null,"id":888,"name":"fromUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"18311:25:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18311:25:0"}],"name":"transferWorkerStakePostUpgrade","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"name":"_workerAddress","nodeType":"VariableDeclaration","scope":901,"src":"18253:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"18253:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":886,"name":"_sig","nodeType":"VariableDeclaration","scope":901,"src":"18277:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":885,"name":"bytes","nodeType":"ElementaryTypeName","src":"18277:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18252:43:0"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"name":"","nodeType":"VariableDeclaration","scope":901,"src":"18350:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"18350:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18349:9:0"},"scope":902,"src":"18213:249:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":903,"src":"885:17579:0"}],"src":"0:18465:0"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[902]},"id":903,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":903,"sourceUnit":22084,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":903,"sourceUnit":21956,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"openzeppelin-solidity/contracts/ownership/Ownable.sol","id":5,"nodeType":"ImportDirective","scope":903,"sourceUnit":22193,"src":"184:63:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":6,"nodeType":"ImportDirective","scope":903,"sourceUnit":21875,"src":"248:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":8,"nodeType":"ImportDirective","scope":903,"sourceUnit":9482,"src":"284:53:0","symbolAliases":[{"foreign":7,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":10,"nodeType":"ImportDirective","scope":903,"sourceUnit":3314,"src":"338:57:0","symbolAliases":[{"foreign":9,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":12,"nodeType":"ImportDirective","scope":903,"sourceUnit":6109,"src":"396:47:0","symbolAliases":[{"foreign":11,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol","file":"./impl/UpgradeImpl.sol","id":14,"nodeType":"ImportDirective","scope":903,"sourceUnit":8444,"src":"444:53:0","symbolAliases":[{"foreign":13,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":16,"nodeType":"ImportDirective","scope":903,"sourceUnit":3954,"src":"498:67:0","symbolAliases":[{"foreign":15,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":18,"nodeType":"ImportDirective","scope":903,"sourceUnit":2416,"src":"566:55:0","symbolAliases":[{"foreign":17,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":20,"nodeType":"ImportDirective","scope":903,"sourceUnit":2596,"src":"622:53:0","symbolAliases":[{"foreign":19,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":22,"nodeType":"ImportDirective","scope":903,"sourceUnit":2542,"src":"676:55:0","symbolAliases":[{"foreign":21,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":24,"nodeType":"ImportDirective","scope":903,"sourceUnit":2604,"src":"732:57:0","symbolAliases":[{"foreign":23,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":26,"nodeType":"ImportDirective","scope":903,"sourceUnit":2787,"src":"790:45:0","symbolAliases":[{"foreign":25,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":28,"nodeType":"ImportDirective","scope":903,"sourceUnit":10485,"src":"836:47:0","symbolAliases":[{"foreign":27,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":29,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2603,"src":"904:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2603","typeString":"contract EnigmaStorage"}},"id":30,"nodeType":"InheritanceSpecifier","src":"904:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":31,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2541,"src":"919:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2541","typeString":"contract EnigmaEvents"}},"id":32,"nodeType":"InheritanceSpecifier","src":"919:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":33,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2786,"src":"933:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2786","typeString":"contract Getters"}},"id":34,"nodeType":"InheritanceSpecifier","src":"933:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":35,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":22192,"src":"942:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$22192","typeString":"contract Ownable"}},"id":36,"nodeType":"InheritanceSpecifier","src":"942:7:0"}],"contractDependencies":[2541,2603,2786,22192],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":902,"linearizedBaseContracts":[902,22192,2786,2541,2603],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":39,"libraryName":{"contractScope":null,"id":37,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":22083,"src":"962:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$22083","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"956:27:0","typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":42,"libraryName":{"contractScope":null,"id":40,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":21955,"src":"994:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$21955","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"988:24:0","typeName":{"id":41,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1004:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":102,"nodeType":"Block","src":"1227:330:0","statements":[{"expression":{"argumentTypes":null,"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":53,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1237:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":55,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2550,"src":"1237:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10484","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":57,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1260:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":56,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10484,"src":"1254:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10484_$","typeString":"type(contract ERC20)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1254:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10484","typeString":"contract ERC20"}},"src":"1237:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10484","typeString":"contract ERC20"}},"id":60,"nodeType":"ExpressionStatement","src":"1237:37:0"},{"expression":{"argumentTypes":null,"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":61,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1284:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":63,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2552,"src":"1284:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":64,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1302:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1284:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":66,"nodeType":"ExpressionStatement","src":"1284:28:0"},{"expression":{"argumentTypes":null,"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":67,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1322:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":69,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2554,"src":"1322:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":70,"name":"_timeoutThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1346:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":71,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1366:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":72,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2552,"src":"1366:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1346:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1322:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":75,"nodeType":"ExpressionStatement","src":"1322:59:0"},{"expression":{"argumentTypes":null,"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":76,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1391:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":78,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2556,"src":"1391:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":79,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1409:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1391:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":81,"nodeType":"ExpressionStatement","src":"1391:28:0"},{"expression":{"argumentTypes":null,"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":82,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1429:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":84,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2558,"src":"1429:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":86,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22816,"src":"1474:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$902","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$902","typeString":"contract Enigma"}],"id":85,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1466:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1466:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1429:50:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":89,"nodeType":"ExpressionStatement","src":"1429:50:0"},{"expression":{"argumentTypes":null,"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":90,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1489:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":92,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2591,"src":"1489:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1514:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1489:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":95,"nodeType":"ExpressionStatement","src":"1489:26:0"},{"expression":{"argumentTypes":null,"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":96,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1525:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":98,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2593,"src":"1525:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1549:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1525:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":101,"nodeType":"ExpressionStatement","src":"1525:25:0"}]},"documentation":null,"id":103,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":103,"src":"1136:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":46,"name":"_principal","nodeType":"VariableDeclaration","scope":103,"src":"1159:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":48,"name":"_epochSize","nodeType":"VariableDeclaration","scope":103,"src":"1179:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint","nodeType":"ElementaryTypeName","src":"1179:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":50,"name":"_timeoutThreshold","nodeType":"VariableDeclaration","scope":103,"src":"1196:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint","nodeType":"ElementaryTypeName","src":"1196:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1135:84:0"},"returnParameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1227:0:0"},"scope":902,"src":"1124:433:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":127,"nodeType":"Block","src":"1847:181:0","statements":[{"assignments":[110],"declarations":[{"constant":false,"id":110,"name":"worker","nodeType":"VariableDeclaration","scope":127,"src":"1857:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":109,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2282,"src":"1857:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":115,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":111,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"1893:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"1893:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2282_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":114,"indexExpression":{"argumentTypes":null,"id":113,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"1907:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1893:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1857:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":117,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"1931:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2274,"src":"1931:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":119,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"1948:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2323,"src":"1948:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2323_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1948:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1931:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1988:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"1923:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1923:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":125,"nodeType":"ExpressionStatement","src":"1923:87:0"},{"id":126,"nodeType":"PlaceholderStatement","src":"2020:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":128,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"name":"_user","nodeType":"VariableDeclaration","scope":128,"src":"1832:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"1832:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1831:15:0"},"src":"1806:222:0","visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"2211:178:0","statements":[{"assignments":[135],"declarations":[{"constant":false,"id":135,"name":"worker","nodeType":"VariableDeclaration","scope":152,"src":"2221:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":134,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2282,"src":"2221:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":140,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":136,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"2257:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"2257:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2282_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":139,"indexExpression":{"argumentTypes":null,"id":138,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2271:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2257:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2221:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":142,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2295:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2274,"src":"2295:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":144,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"2312:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2323,"src":"2312:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2323_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2312:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2295:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2348:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2287:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":150,"nodeType":"ExpressionStatement","src":"2287:84:0"},{"id":151,"nodeType":"PlaceholderStatement","src":"2381:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":153,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"name":"_user","nodeType":"VariableDeclaration","scope":153,"src":"2196:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"2196:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2195:15:0"},"src":"2172:217:0","visibility":"internal"},{"body":{"id":177,"nodeType":"Block","src":"2574:180:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"name":"worker","nodeType":"VariableDeclaration","scope":177,"src":"2584:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":159,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2282,"src":"2584:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":165,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":161,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"2620:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"2620:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2282_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":164,"indexExpression":{"argumentTypes":null,"id":163,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2634:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2620:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2584:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":167,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"2658:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2274,"src":"2658:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":169,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"2675:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2323,"src":"2675:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2323_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2675:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2658:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2712:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"2650:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":175,"nodeType":"ExpressionStatement","src":"2650:86:0"},{"id":176,"nodeType":"PlaceholderStatement","src":"2746:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":178,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"name":"_user","nodeType":"VariableDeclaration","scope":178,"src":"2559:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2558:15:0"},"src":"2534:220:0","visibility":"internal"},{"body":{"id":221,"nodeType":"Block","src":"2903:395:0","statements":[{"assignments":[185],"declarations":[{"constant":false,"id":185,"name":"worker","nodeType":"VariableDeclaration","scope":221,"src":"2913:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":184,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2282,"src":"2913:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":190,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":186,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"2949:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"2949:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2282_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":189,"indexExpression":{"argumentTypes":null,"id":188,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"2963:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2949:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2913:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":193,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22756,"src":"3007:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3007:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":192,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2987:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2987:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3024:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2987:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3027:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":191,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"2979:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2979:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":200,"nodeType":"ExpressionStatement","src":"2979:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":202,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3087:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2274,"src":"3087:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":204,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"3104:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2323,"src":"3104:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2323_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3104:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3087:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3141:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"3079:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3079:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":210,"nodeType":"ExpressionStatement","src":"3079:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3201:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2278,"src":"3201:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":214,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"3219:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2591,"src":"3219:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3201:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3243:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"3193:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3193:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":219,"nodeType":"ExpressionStatement","src":"3193:87:0"},{"id":220,"nodeType":"PlaceholderStatement","src":"3290:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":222,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"name":"_user","nodeType":"VariableDeclaration","scope":222,"src":"2888:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"2888:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2887:15:0"},"src":"2870:428:0","visibility":"internal"},{"body":{"id":278,"nodeType":"Block","src":"3456:580:0","statements":[{"assignments":[229],"declarations":[{"constant":false,"id":229,"name":"worker","nodeType":"VariableDeclaration","scope":278,"src":"3466:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":228,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2282,"src":"3466:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":234,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":230,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"3502:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"3502:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2282_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":233,"indexExpression":{"argumentTypes":null,"id":232,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"3516:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3502:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3466:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":236,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"3540:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2274,"src":"3540:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":238,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"3557:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2323,"src":"3557:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2323_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3557:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2323","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3540:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3594:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"3532:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3532:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":244,"nodeType":"ExpressionStatement","src":"3532:104:0"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"name":"workerLog","nodeType":"VariableDeclaration","scope":278,"src":"3646:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2300_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":247,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2300,"src":"3646:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2300_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":255,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":251,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"3723:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":252,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22756,"src":"3731:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3731:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2282_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":249,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"3688:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9480,"src":"3688:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2282_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2300_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3688:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2300_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3646:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2331","typeString":"enum EnigmaCommon.WorkerLogType"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":257,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3762:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2300_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2295,"src":"3762:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2331","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":259,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"3791:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"3791:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2331_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3791:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2331","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3762:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3838:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"3754:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3754:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":265,"nodeType":"ExpressionStatement","src":"3754:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":268,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22756,"src":"3918:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3918:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":267,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"3898:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3898:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3934:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2300_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2297,"src":"3934:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3898:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3969:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"3890:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3890:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":276,"nodeType":"ExpressionStatement","src":"3890:128:0"},{"id":277,"nodeType":"PlaceholderStatement","src":"4028:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":279,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"name":"_user","nodeType":"VariableDeclaration","scope":279,"src":"3441:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"3441:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3440:15:0"},"src":"3420:616:0","visibility":"internal"},{"body":{"id":297,"nodeType":"Block","src":"4203:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2326","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":284,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"4221:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2585,"src":"4221:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2312_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":287,"indexExpression":{"argumentTypes":null,"id":286,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4237:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4221:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2312_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"4221:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2326","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":289,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4256:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"4256:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2326_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4256:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2326","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4221:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4301:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"4213:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4213:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":295,"nodeType":"ExpressionStatement","src":"4213:123:0"},{"id":296,"nodeType":"PlaceholderStatement","src":"4346:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":298,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"name":"_scAddr","nodeType":"VariableDeclaration","scope":298,"src":"4186:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4186:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4185:17:0"},"src":"4159:195:0","visibility":"internal"},{"body":{"id":316,"nodeType":"Block","src":"4516:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2326","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":303,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"4534:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2585,"src":"4534:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2312_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":306,"indexExpression":{"argumentTypes":null,"id":305,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4550:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4534:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2312_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"4534:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2326","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":308,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4569:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"4569:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2326_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4569:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2326","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4534:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4613:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4526:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"ExpressionStatement","src":"4526:118:0"},{"id":315,"nodeType":"PlaceholderStatement","src":"4654:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":317,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"name":"_scAddr","nodeType":"VariableDeclaration","scope":317,"src":"4499:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4499:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4498:17:0"},"src":"4473:189:0","visibility":"internal"},{"body":{"id":335,"nodeType":"Block","src":"4827:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2319","typeString":"enum EnigmaCommon.TaskStatus"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":322,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"4845:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2578,"src":"4845:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2270_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":325,"indexExpression":{"argumentTypes":null,"id":324,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"4857:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2270_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2267,"src":"4845:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2319","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":327,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4876:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2415_$","typeString":"type(library EnigmaCommon)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2319,"src":"4876:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2319_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4876:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2319","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4845:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4915:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"4837:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4837:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"4837:100:0"},{"id":334,"nodeType":"PlaceholderStatement","src":"4947:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":336,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"name":"_taskId","nodeType":"VariableDeclaration","scope":336,"src":"4810:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4810:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4809:17:0"},"src":"4789:166:0","visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"5117:202:0","statements":[{"body":{"id":366,"nodeType":"Block","src":"5183:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":353,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5205:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2574,"src":"5205:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2282_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":359,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":355,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5219:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":356,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2567,"src":"5219:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":358,"indexExpression":{"argumentTypes":null,"id":357,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5241:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5219:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5205:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2282_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2272,"src":"5205:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":361,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"5255:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5205:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5264:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"5197:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5197:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":365,"nodeType":"ExpressionStatement","src":"5197:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5144:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":345,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5148:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2567,"src":"5148:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5148:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5144:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":367,"initializationExpression":{"assignments":[341],"declarations":[{"constant":false,"id":341,"name":"i","nodeType":"VariableDeclaration","scope":367,"src":"5132:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint","nodeType":"ElementaryTypeName","src":"5132:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":343,"initialValue":{"argumentTypes":null,"hexValue":"30","id":342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5141:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5132:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5178:3:0","subExpression":{"argumentTypes":null,"id":349,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5178:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":351,"nodeType":"ExpressionStatement","src":"5178:3:0"},"nodeType":"ForStatement","src":"5127:175:0"},{"id":368,"nodeType":"PlaceholderStatement","src":"5311:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":370,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"name":"_signer","nodeType":"VariableDeclaration","scope":370,"src":"5100:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"5100:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5099:17:0"},"src":"5072:247:0","visibility":"internal"},{"body":{"id":383,"nodeType":"Block","src":"5446:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":374,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22816,"src":"5472:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$902","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$902","typeString":"contract Enigma"}],"id":373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5464:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5464:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":376,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5481:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2558,"src":"5481:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5464:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74207570646174656420456e69676d6120636f6e7472616374","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5517:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""},"value":"Not updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""}],"id":372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"5456:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5456:91:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"5456:91:0"},{"id":382,"nodeType":"PlaceholderStatement","src":"5557:1:0"}]},"documentation":"Ensure that the contract\'s context is the updated contract\\n    ","id":384,"name":"isUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[],"src":"5443:2:0"},"src":"5411:154:0","visibility":"internal"},{"body":{"id":396,"nodeType":"Block","src":"5696:121:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":387,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"5714:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5714:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":389,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5728:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},"id":390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2558,"src":"5728:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5714:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5764:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""},"value":"Not from updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""}],"id":386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[22769,22770],"referencedDeclaration":22770,"src":"5706:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5706:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":394,"nodeType":"ExpressionStatement","src":"5706:93:0"},{"id":395,"nodeType":"PlaceholderStatement","src":"5809:1:0"}]},"documentation":"Ensure the sender of the recent call is the updated contract\\n    ","id":397,"name":"fromUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[],"src":"5693:2:0"},"src":"5659:158:0","visibility":"internal"},{"body":{"id":420,"nodeType":"Block","src":"6466:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":414,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"6501:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":415,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"6508:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":416,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"6517:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":417,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6526:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":411,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"6476:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":8738,"src":"6476:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6476:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":419,"nodeType":"ExpressionStatement","src":"6476:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":421,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":406,"modifierName":{"argumentTypes":null,"id":405,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6406:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6406:23:0"},{"arguments":[{"argumentTypes":null,"id":408,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"6453:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":409,"modifierName":{"argumentTypes":null,"id":407,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6434:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6434:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"name":"_signer","nodeType":"VariableDeclaration","scope":421,"src":"6327:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"6327:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":401,"name":"_report","nodeType":"VariableDeclaration","scope":421,"src":"6344:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":400,"name":"bytes","nodeType":"ElementaryTypeName","src":"6344:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":403,"name":"_signature","nodeType":"VariableDeclaration","scope":421,"src":"6366:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":402,"name":"bytes","nodeType":"ElementaryTypeName","src":"6366:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6326:64:0"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"6466:0:0"},"scope":902,"src":"6309:235:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":441,"nodeType":"Block","src":"6914:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":436,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"6948:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":437,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6955:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":438,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6967:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":433,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"6924:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":8954,"src":"6924:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6924:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":440,"nodeType":"ExpressionStatement","src":"6924:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":442,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":428,"modifierName":{"argumentTypes":null,"id":427,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6853:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6853:23:0"},{"arguments":[{"argumentTypes":null,"id":430,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6898:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":431,"modifierName":{"argumentTypes":null,"id":429,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"6881:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6881:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"name":"_custodian","nodeType":"VariableDeclaration","scope":442,"src":"6804:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"6804:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":425,"name":"_amount","nodeType":"VariableDeclaration","scope":442,"src":"6824:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint","nodeType":"ElementaryTypeName","src":"6824:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6803:34:0"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"6914:0:0"},"scope":902,"src":"6787:195:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":458,"nodeType":"Block","src":"7255:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":454,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"7290:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":455,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7297:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":451,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"7265:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":9007,"src":"7265:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"7265:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":459,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"7239:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7239:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":449,"modifierName":{"argumentTypes":null,"id":446,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"7227:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7227:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"name":"_amount","nodeType":"VariableDeclaration","scope":459,"src":"7198:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint","nodeType":"ElementaryTypeName","src":"7198:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7197:14:0"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"7255:0:0"},"scope":902,"src":"7180:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":472,"nodeType":"Block","src":"7520:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":469,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"7552:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":466,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"7530:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":8847,"src":"7530:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7530:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"7530:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":473,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":462,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"7508:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7508:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":464,"modifierName":{"argumentTypes":null,"id":461,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"7499:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7499:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"7489:2:0"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7520:0:0"},"scope":902,"src":"7475:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":486,"nodeType":"Block","src":"7694:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":483,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"7727:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":480,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"7704:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":8893,"src":"7704:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7704:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"7704:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":487,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":476,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"7682:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7682:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":478,"modifierName":{"argumentTypes":null,"id":475,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"7667:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7667:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"7657:2:0"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[],"src":"7694:0:0"},"scope":902,"src":"7642:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":517,"nodeType":"Block","src":"8300:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":510,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"8351:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":511,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8358:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":512,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"8367:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":513,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"8378:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":514,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"8388:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":507,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"8310:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6108_$","typeString":"type(library TaskImpl)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4420,"src":"8310:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8310:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":516,"nodeType":"ExpressionStatement","src":"8310:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":518,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":498,"modifierName":{"argumentTypes":null,"id":497,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"8210:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8210:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":500,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"8253:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8253:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":502,"modifierName":{"argumentTypes":null,"id":499,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"8238:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8238:26:0"},{"arguments":[{"argumentTypes":null,"id":504,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":505,"modifierName":{"argumentTypes":null,"id":503,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"8269:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8269:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"name":"_taskId","nodeType":"VariableDeclaration","scope":518,"src":"8094:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8094:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":491,"name":"_codeHash","nodeType":"VariableDeclaration","scope":518,"src":"8119:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8119:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":493,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":518,"src":"8146:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":492,"name":"uint64","nodeType":"ElementaryTypeName","src":"8146:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":495,"name":"_sig","nodeType":"VariableDeclaration","scope":518,"src":"8171:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":494,"name":"bytes","nodeType":"ElementaryTypeName","src":"8171:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8084:110:0"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"8300:0:0"},"scope":902,"src":"8048:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":560,"nodeType":"Block","src":"9481:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":549,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"9525:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":550,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9532:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":551,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"9541:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":552,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"9555:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":553,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"9566:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":554,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"9599:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":555,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"9622:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":556,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"9656:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":557,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"9666:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":546,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"9491:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6108_$","typeString":"type(library TaskImpl)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4821,"src":"9491:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9491:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"9491:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":561,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":537,"modifierName":{"argumentTypes":null,"id":536,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"9391:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9391:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":539,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"9434:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9434:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":541,"modifierName":{"argumentTypes":null,"id":538,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"9419:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"9419:26:0"},{"arguments":[{"argumentTypes":null,"id":543,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9468:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":544,"modifierName":{"argumentTypes":null,"id":542,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9450:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"9450:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"name":"_taskId","nodeType":"VariableDeclaration","scope":561,"src":"9114:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9114:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":522,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":561,"src":"9139:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9139:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":524,"name":"_codeHash","nodeType":"VariableDeclaration","scope":561,"src":"9169:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9169:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":526,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":561,"src":"9196:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":528,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":561,"src":"9233:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":527,"name":"bytes","nodeType":"ElementaryTypeName","src":"9233:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":530,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":561,"src":"9277:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"9277:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":532,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":561,"src":"9327:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":531,"name":"uint64","nodeType":"ElementaryTypeName","src":"9327:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":534,"name":"_sig","nodeType":"VariableDeclaration","scope":561,"src":"9352:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":533,"name":"bytes","nodeType":"ElementaryTypeName","src":"9352:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"9104:271:0"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[],"src":"9481:0:0"},"scope":902,"src":"9075:603:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":571,"nodeType":"Block","src":"9880:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":568,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"9941:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":566,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"9897:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3953_$","typeString":"type(library SecretContractImpl)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3885,"src":"9897:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2594_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9897:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":565,"id":570,"nodeType":"Return","src":"9890:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":572,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[],"src":"9834:2:0"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"name":"","nodeType":"VariableDeclaration","scope":572,"src":"9870:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint","nodeType":"ElementaryTypeName","src":"9870:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9869:6:0"},"scope":902,"src":"9805:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":589,"nodeType":"Block","src":"10283:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":584,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"10350:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":585,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"10357:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":586,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"10365:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":582,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"10300:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3953_$","typeString":"type(library SecretContractImpl)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3952,"src":"10300:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2594_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10300:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":581,"id":588,"nodeType":"Return","src":"10293:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":590,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"name":"_start","nodeType":"VariableDeclaration","scope":590,"src":"10203:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint","nodeType":"ElementaryTypeName","src":"10203:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":576,"name":"_stop","nodeType":"VariableDeclaration","scope":590,"src":"10216:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint","nodeType":"ElementaryTypeName","src":"10216:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10202:25:0"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"name":"","nodeType":"VariableDeclaration","scope":590,"src":"10261:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10261:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":579,"length":null,"nodeType":"ArrayTypeName","src":"10261:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"10260:18:0"},"scope":902,"src":"10167:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":616,"nodeType":"Block","src":"11447:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":608,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"11497:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":609,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"11504:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":610,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11517:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":611,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"11528:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":612,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"11536:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":613,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"11555:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":605,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"11457:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6108_$","typeString":"type(library TaskImpl)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4244,"src":"11457:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11457:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":615,"nodeType":"ExpressionStatement","src":"11457:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":617,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":603,"modifierName":{"argumentTypes":null,"id":602,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"11419:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11419:23:0"}],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":617,"src":"11276:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11276:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":594,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":617,"src":"11305:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":593,"name":"uint64","nodeType":"ElementaryTypeName","src":"11305:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":596,"name":"_gasPx","nodeType":"VariableDeclaration","scope":617,"src":"11331:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":595,"name":"uint64","nodeType":"ElementaryTypeName","src":"11331:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":598,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":617,"src":"11354:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint","nodeType":"ElementaryTypeName","src":"11354:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":600,"name":"_nonce","nodeType":"VariableDeclaration","scope":617,"src":"11386:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint","nodeType":"ElementaryTypeName","src":"11386:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11266:137:0"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"11447:0:0"},"scope":902,"src":"11231:338:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":640,"nodeType":"Block","src":"12329:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":633,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"12369:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":634,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"12376:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":635,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"12389:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":636,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"12400:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":637,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"12408:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":630,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"12339:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6108_$","typeString":"type(library TaskImpl)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"12339:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12339:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"ExpressionStatement","src":"12339:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":641,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":628,"modifierName":{"argumentTypes":null,"id":627,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"12301:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12301:23:0"}],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":641,"src":"12179:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12179:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":621,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":641,"src":"12208:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":620,"name":"uint64","nodeType":"ElementaryTypeName","src":"12208:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":623,"name":"_gasPx","nodeType":"VariableDeclaration","scope":641,"src":"12234:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":622,"name":"uint64","nodeType":"ElementaryTypeName","src":"12234:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":625,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":641,"src":"12257:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint","nodeType":"ElementaryTypeName","src":"12257:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12169:116:0"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[],"src":"12329:0:0"},"scope":902,"src":"12144:289:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":683,"nodeType":"Block","src":"13428:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":672,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"13465:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":673,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"13472:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":674,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"13481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":675,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"13490:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":676,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"13507:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":677,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"13520:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":678,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"13555:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":679,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"13589:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":680,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"13599:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":669,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"13438:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6108_$","typeString":"type(library TaskImpl)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5744,"src":"13438:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13438:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":682,"nodeType":"ExpressionStatement","src":"13438:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":684,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":660,"modifierName":{"argumentTypes":null,"id":659,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"13339:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13339:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":662,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"13382:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13382:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":664,"modifierName":{"argumentTypes":null,"id":661,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"13367:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13367:26:0"},{"arguments":[{"argumentTypes":null,"id":666,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"13415:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":667,"modifierName":{"argumentTypes":null,"id":665,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"13398:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13398:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"name":"_scAddr","nodeType":"VariableDeclaration","scope":684,"src":"13069:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":645,"name":"_taskId","nodeType":"VariableDeclaration","scope":684,"src":"13094:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13094:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":647,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":684,"src":"13119:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13119:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":649,"name":"_outputHash","nodeType":"VariableDeclaration","scope":684,"src":"13152:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13152:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":651,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":684,"src":"13181:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":650,"name":"bytes","nodeType":"ElementaryTypeName","src":"13181:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":653,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":684,"src":"13225:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"13225:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":655,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":684,"src":"13275:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":654,"name":"uint64","nodeType":"ElementaryTypeName","src":"13275:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":657,"name":"_sig","nodeType":"VariableDeclaration","scope":684,"src":"13300:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":656,"name":"bytes","nodeType":"ElementaryTypeName","src":"13300:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13059:264:0"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"13428:0:0"},"scope":902,"src":"13037:574:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":717,"nodeType":"Block","src":"14270:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":709,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"14311:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":710,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"14318:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":711,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"14327:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":712,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"14336:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":713,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"14349:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":714,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"14359:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":706,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"14280:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6108_$","typeString":"type(library TaskImpl)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5262,"src":"14280:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14280:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"ExpressionStatement","src":"14280:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":718,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":697,"modifierName":{"argumentTypes":null,"id":696,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"14181:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14181:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":699,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"14224:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14224:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":701,"modifierName":{"argumentTypes":null,"id":698,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"14209:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14209:26:0"},{"arguments":[{"argumentTypes":null,"id":703,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"14257:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":704,"modifierName":{"argumentTypes":null,"id":702,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"14240:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14240:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"name":"_scAddr","nodeType":"VariableDeclaration","scope":718,"src":"14038:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":688,"name":"_taskId","nodeType":"VariableDeclaration","scope":718,"src":"14063:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14063:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":690,"name":"_outputHash","nodeType":"VariableDeclaration","scope":718,"src":"14088:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14088:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":692,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":718,"src":"14117:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":691,"name":"uint64","nodeType":"ElementaryTypeName","src":"14117:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":694,"name":"_sig","nodeType":"VariableDeclaration","scope":718,"src":"14142:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":693,"name":"bytes","nodeType":"ElementaryTypeName","src":"14142:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14028:137:0"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[],"src":"14270:0:0"},"scope":902,"src":"14002:369:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":733,"nodeType":"Block","src":"14622:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":729,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"14663:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":730,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"14670:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":726,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"14632:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6108_$","typeString":"type(library TaskImpl)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6107,"src":"14632:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14632:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":732,"nodeType":"ExpressionStatement","src":"14632:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":734,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":723,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"14609:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":724,"modifierName":{"argumentTypes":null,"id":722,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"14597:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14597:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"name":"_taskId","nodeType":"VariableDeclaration","scope":734,"src":"14565:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14565:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14564:17:0"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[],"src":"14622:0:0"},"scope":902,"src":"14538:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":758,"nodeType":"Block","src":"15173:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":752,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"15218:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":753,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"15225:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":754,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"15239:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":755,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"15246:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":749,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"15183:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3313_$","typeString":"type(library PrincipalImpl)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3142,"src":"15183:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15183:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":757,"nodeType":"ExpressionStatement","src":"15183:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":759,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":743,"modifierName":{"argumentTypes":null,"id":742,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"15112:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15112:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":745,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22766,"src":"15157:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15157:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":747,"modifierName":{"argumentTypes":null,"id":744,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"15140:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"15140:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":759,"src":"15047:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":735,"name":"uint","nodeType":"ElementaryTypeName","src":"15047:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":738,"name":"_seed","nodeType":"VariableDeclaration","scope":759,"src":"15066:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint","nodeType":"ElementaryTypeName","src":"15066:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":740,"name":"_sig","nodeType":"VariableDeclaration","scope":759,"src":"15078:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":739,"name":"bytes","nodeType":"ElementaryTypeName","src":"15078:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"15046:50:0"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[],"src":"15173:0:0"},"scope":902,"src":"15021:237:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":776,"nodeType":"Block","src":"15494:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":772,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"15546:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":773,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"15553:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":770,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"15511:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3313_$","typeString":"type(library PrincipalImpl)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3312,"src":"15511:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2594_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15511:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":769,"id":775,"nodeType":"Return","src":"15504:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":777,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":777,"src":"15405:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint","nodeType":"ElementaryTypeName","src":"15405:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15404:19:0"},"returnParameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"name":"","nodeType":"VariableDeclaration","scope":777,"src":"15457:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"15457:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":764,"length":null,"nodeType":"ArrayTypeName","src":"15457:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":768,"name":"","nodeType":"VariableDeclaration","scope":777,"src":"15475:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":766,"name":"uint","nodeType":"ElementaryTypeName","src":"15475:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":767,"length":null,"nodeType":"ArrayTypeName","src":"15475:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15456:33:0"},"scope":902,"src":"15379:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":790,"nodeType":"Block","src":"15835:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":786,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"15888:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":787,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"15895:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":784,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"15852:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":9127,"src":"15852:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2594_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15852:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":783,"id":789,"nodeType":"Return","src":"15845:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":791,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":791,"src":"15777:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint","nodeType":"ElementaryTypeName","src":"15777:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15776:19:0"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"name":"","nodeType":"VariableDeclaration","scope":791,"src":"15829:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint","nodeType":"ElementaryTypeName","src":"15829:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15828:6:0"},"scope":902,"src":"15748:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":812,"nodeType":"Block","src":"16321:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":808,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"16370:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":809,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"16377:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":806,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"16338:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":9164,"src":"16338:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2594_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16338:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":805,"id":811,"nodeType":"Return","src":"16331:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":813,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":813,"src":"16224:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint","nodeType":"ElementaryTypeName","src":"16224:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16223:19:0"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"name":"","nodeType":"VariableDeclaration","scope":813,"src":"16276:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint","nodeType":"ElementaryTypeName","src":"16276:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":798,"name":"","nodeType":"VariableDeclaration","scope":813,"src":"16282:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint","nodeType":"ElementaryTypeName","src":"16282:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":801,"name":"","nodeType":"VariableDeclaration","scope":813,"src":"16288:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"16288:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":800,"length":null,"nodeType":"ArrayTypeName","src":"16288:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":804,"name":"","nodeType":"VariableDeclaration","scope":813,"src":"16306:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":802,"name":"uint","nodeType":"ElementaryTypeName","src":"16306:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":803,"length":null,"nodeType":"ArrayTypeName","src":"16306:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16275:45:0"},"scope":902,"src":"16199:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":830,"nodeType":"Block","src":"16849:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":825,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"16897:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":826,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"16904:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":827,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"16918:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":823,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"16866:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9428,"src":"16866:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2594_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16866:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":822,"id":829,"nodeType":"Return","src":"16859:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":831,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":831,"src":"16758:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint","nodeType":"ElementaryTypeName","src":"16758:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":817,"name":"_scAddr","nodeType":"VariableDeclaration","scope":831,"src":"16777:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16777:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16757:36:0"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"name":"","nodeType":"VariableDeclaration","scope":831,"src":"16827:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"16827:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":820,"length":null,"nodeType":"ArrayTypeName","src":"16827:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16826:18:0"},"scope":902,"src":"16734:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":849,"nodeType":"Block","src":"17203:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":845,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"17246:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":846,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"17253:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":843,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"17220:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":8775,"src":"17220:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2594_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17220:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":842,"id":848,"nodeType":"Return","src":"17213:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":850,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":836,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"17151:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":837,"modifierName":{"argumentTypes":null,"id":835,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"17134:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"17134:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"name":"_custodian","nodeType":"VariableDeclaration","scope":850,"src":"17090:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"17090:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17089:20:0"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"name":"","nodeType":"VariableDeclaration","scope":850,"src":"17176:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"17176:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":841,"name":"","nodeType":"VariableDeclaration","scope":850,"src":"17185:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":840,"name":"bytes","nodeType":"ElementaryTypeName","src":"17185:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17175:23:0"},"scope":902,"src":"17071:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":865,"nodeType":"Block","src":"17586:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":861,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"17632:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":862,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"17639:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":859,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"17603:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9481_$","typeString":"type(library WorkersImpl)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":8801,"src":"17603:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17603:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":858,"id":864,"nodeType":"Return","src":"17596:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":866,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"name":"_data","nodeType":"VariableDeclaration","scope":866,"src":"17498:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":851,"name":"bytes","nodeType":"ElementaryTypeName","src":"17498:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":854,"name":"_signature","nodeType":"VariableDeclaration","scope":866,"src":"17518:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":853,"name":"bytes","nodeType":"ElementaryTypeName","src":"17518:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17497:45:0"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"name":"","nodeType":"VariableDeclaration","scope":866,"src":"17576:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint","nodeType":"ElementaryTypeName","src":"17576:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17575:6:0"},"scope":902,"src":"17476:181:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":881,"nodeType":"Block","src":"17925:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":877,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"17980:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":878,"name":"_updatedEnigmaContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"17987:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":875,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8443,"src":"17942:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8443_$","typeString":"type(library UpgradeImpl)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeEnigmaContractImpl","nodeType":"MemberAccess","referencedDeclaration":8364,"src":"17942:37:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17942:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":874,"id":880,"nodeType":"Return","src":"17935:82:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address","id":882,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":871,"modifierName":{"argumentTypes":null,"id":870,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22126,"src":"17883:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17883:9:0"},{"arguments":null,"id":873,"modifierName":{"argumentTypes":null,"id":872,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"17897:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17897:23:0"}],"name":"upgradeEnigmaContract","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"name":"_updatedEnigmaContractAddress","nodeType":"VariableDeclaration","scope":882,"src":"17829:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"17829:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17828:39:0"},"returnParameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"17925:0:0"},"scope":902,"src":"17798:226:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":900,"nodeType":"Block","src":"18363:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":895,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"18427:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":896,"name":"_workerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"18434:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":897,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"18450:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2594_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":893,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8443,"src":"18380:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8443_$","typeString":"type(library UpgradeImpl)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferWorkerStakePostUpgradeImpl","nodeType":"MemberAccess","referencedDeclaration":8442,"src":"18380:46:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2594_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory) returns (uint256)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18380:75:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":892,"id":899,"nodeType":"Return","src":"18373:82:0"}]},"documentation":"Transfer worker stake from old contract to new contract upon registration\\n@param _workerAddress Newly-registered worker address\\n@param _sig Signature","id":901,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":889,"modifierName":{"argumentTypes":null,"id":888,"name":"fromUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"18311:25:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18311:25:0"}],"name":"transferWorkerStakePostUpgrade","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"name":"_workerAddress","nodeType":"VariableDeclaration","scope":901,"src":"18253:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"18253:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":886,"name":"_sig","nodeType":"VariableDeclaration","scope":901,"src":"18277:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":885,"name":"bytes","nodeType":"ElementaryTypeName","src":"18277:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18252:43:0"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"name":"","nodeType":"VariableDeclaration","scope":901,"src":"18350:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"18350:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18349:9:0"},"scope":902,"src":"18213:249:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":903,"src":"885:17579:0"}],"src":"0:18465:0"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event","signature":"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"},"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55":{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event","signature":"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55"},"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb":{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event","signature":"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb"},"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd":{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event","signature":"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd"},"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7"},"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7"},"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142"},"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event","signature":"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f"},"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454"},"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f"},"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event","signature":"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f"},"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5":{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event","signature":"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5"},"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9":{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event","signature":"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9"},"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158":{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event","signature":"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158"},"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d"},"0x5b00db39a072b9c10ede0c598bf9c262cd8e40a7057c19e3691a7d38dfa2c84e":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint64[]"},{"indexed":false,"name":"gasPxs","type":"uint64[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0x5b00db39a072b9c10ede0c598bf9c262cd8e40a7057c19e3691a7d38dfa2c84e"},"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9"},"0x46216b692e6c99daacda2844a09844fd9b83f5834ff1f4ff211b6130c5f288f0":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0x46216b692e6c99daacda2844a09844fd9b83f5834ff1f4ff211b6130c5f288f0"},"0x5276ddb3c2a81eacb68d0bdd1839b6267aa48e4df5af1577c171a2835eff2efc":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0x5276ddb3c2a81eacb68d0bdd1839b6267aa48e4df5af1577c171a2835eff2efc"},"0x7e25a7adbf43ddcdccd3a828e161b439a8060dac6d08cf42e42666b8160a0cb0":{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"}],"name":"SecretContractDeployed","type":"event","signature":"0x7e25a7adbf43ddcdccd3a828e161b439a8060dac6d08cf42e42666b8160a0cb0"},"0x0a581ae4192c44a0074ccc9c655d264ea6a838e99ca8dfc8ca439aee62cb5183":{"anonymous":false,"inputs":[{"indexed":false,"name":"workerAddress","type":"address"}],"name":"LoggedIn","type":"event","signature":"0x0a581ae4192c44a0074ccc9c655d264ea6a838e99ca8dfc8ca439aee62cb5183"},"0x8d11ef6404d9eeb0a13d346ad9b49adf23be5a095f5efb8741c3eec74e43ee9c":{"anonymous":false,"inputs":[{"indexed":false,"name":"workerAddress","type":"address"}],"name":"LoggedOut","type":"event","signature":"0x8d11ef6404d9eeb0a13d346ad9b49adf23be5a095f5efb8741c3eec74e43ee9c"}},"links":{"WorkersImpl":"0xACd92c2E33f4Ebe192f6BBC2E61fB3fBAd58B229","PrincipalImpl":"0xF9D37F87Be28920A84be75d0a19f1B73Dd8f7D89","TaskImpl":"0xe9AC6523cdD532CE9765ba4Ecb5A02AfB42Fd376","SecretContractImpl":"0x1aEDE4Bf3c39a8bBa2e357c273ba7CCaE3BcE55c","UpgradeImpl":"0x07ffD4320AFbAfd631937Ee221b6fc44F3429d4C"},"address":"0x1d8C74bc6bE551e0D70b624a5f4BA9E9bFcFa738","transactionHash":"0x53a646ce853f2d3223e8938e7257c7c5d26b3a172e6fbf9b9d3bd94641b0067b"}},"schemaVersion":"3.0.10","updatedAt":"2019-10-31T18:27:02.341Z","devdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_optionalEthereumContractAddress":"Output state hash","_optionalEthereumData":"Output state hash","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_stateDeltaHash":"Input state delta hash","_taskId":"Unique taskId"}},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_taskId":"Unique taskId"}},"countSecretContracts()":{"return":"Number of deployed secret contracts"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash","_nonce":"Locally-computed nonce value for this deployment"}},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_initStateDeltaHash":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumContractAddress":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumData":"Initial state delta hash as a result of the contract\'s constructor","_preCodeHash":"Predeployed bytecode hash","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deposit(address,uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit","_custodian":"The worker\'s ETH address"}},"getActiveWorkers(uint256)":{"params":{"_blockNumber":"Block number"}},"getAllSecretContractAddresses()":{"return":"Array of secret contract addresses"},"getEpochSize()":{"return":"Epoch size"},"getFirstBlockNumber(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Block number"},"getReport(address)":{"params":{"_custodian":"The worker\'s custodian address"}},"getSecretContract(bytes32)":{"params":{"_scAddr":"Secret contract address"},"return":"SecretContract struct"},"getSecretContractAddresses(uint256,uint256)":{"params":{"_start":"Start of range","_stop":"End of range"},"return":"Subset of deployed secret contract addresses"},"getSigningAddress()":{"return":"Signing address"},"getTaskRecord(bytes32)":{"params":{"_taskId":"Unique identifier for a given task"},"return":"TaskRecord struct"},"getTaskTimeoutSize()":{"return":"task timeout"},"getUpdatedEnigmaContractAddress()":{"return":"Updated Enigma contract address"},"getUserTaskDeployments(address)":{"params":{"_sender":"Task sender\'s ethereum address"},"return":"Current number for task deployments for user"},"getWorker(address)":{"params":{"_worker":"Worker\'s ethereum address"},"return":"Worker struct"},"getWorkerFromSigningAddress(address)":{"params":{"_signer":"Worker\'s signing address"},"return":"Ethereum addressWorker struct"},"getWorkerGroup(uint256,bytes32)":{"params":{"_blockNumber":"Block number the task record was mined","_scAddr":"Secret contract address"},"return":"Selected workers\' addresses"},"getWorkerParams(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes"},"getWorkersParams()":{"return":"Array of WorkersParams structs"},"isOwner()":{"return":"true if `msg.sender` is the owner of the contract."},"owner()":{"return":"the address of the owner."},"register(address,bytes,bytes)":{"params":{"_report":"The RLP encoded report returned by the IAS","_signature":"Signature","_signer":"The signer address, derived from the enclave public key"}},"renounceOwnership()":{"details":"Allows the current owner to relinquish control of the contract."},"returnFeesForTask(bytes32)":{"params":{"_taskId":"Unique taskId"}},"setWorkersParams(uint256,uint256,bytes)":{"params":{"_blockNumber":"Block number principal node is attempting to set worker params","_seed":"The random integer generated by the enclave","_sig":"Principal node\'s signature"}},"transferOwnership(address)":{"details":"Allows the current owner to transfer control of the contract to a newOwner.","params":{"newOwner":"The address to transfer ownership to."}},"transferWorkerStakePostUpgrade(address,bytes)":{"params":{"_sig":"Signature","_workerAddress":"Newly-registered worker address"}},"upgradeEnigmaContract(address)":{"params":{"_updatedEnigmaContractAddress":"Updated newly-deployed Enigma contract address"}},"verifyReport(bytes,bytes)":{"params":{"_data":"The report itself","_signature":"The signature of the report"}},"withdraw(uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit"}}}},"userdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee."},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"notice":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure."},"countSecretContracts()":{"notice":"Check if secret contract has been deployed"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"notice":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid."},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"notice":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deposit(address,uint256)":{"notice":"Deposits ENG stake into contract from worker. Worker must be registered to do so."},"getActiveWorkers(uint256)":{"notice":"Get active workers before a certain block number"},"getAllSecretContractAddresses()":{"notice":"Get all secret contract addresses"},"getEpochSize()":{"notice":"Get the epoch block size"},"getFirstBlockNumber(uint256)":{"notice":"Get the first block number of an epoch that a given block number belongs to"},"getReport(address)":{"notice":"The RLP encoded report returned by the IAS server"},"getSecretContract(bytes32)":{"notice":"Get a SecretContract struct given a particular secret contract address"},"getSecretContractAddresses(uint256,uint256)":{"notice":"Get deployed secret contract addresses within a range"},"getSigningAddress()":{"notice":"Get signing address of calling worker"},"getTaskRecord(bytes32)":{"notice":"Get a TaskRecord struct given a particular task\'s ID"},"getTaskTimeoutSize()":{"notice":"Get the task timeout size"},"getUpdatedEnigmaContractAddress()":{"notice":"Get updated Enigma contract address"},"getUserTaskDeployments(address)":{"notice":"Get the current number/index (used as unique nonce value) of task deployments for a given user user"},"getWorker(address)":{"notice":"Get Worker struct from a given worker\'s ethereum address"},"getWorkerFromSigningAddress(address)":{"notice":"Get Worker struct from a given worker\'s signing address"},"getWorkerGroup(uint256,bytes32)":{"notice":"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address."},"getWorkerParams(uint256)":{"notice":"Get worker params for an epoch given a particular block number"},"getWorkersParams()":{"notice":"Get epoch-based history of worker params information"},"login()":{"notice":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process."},"logout()":{"notice":"Logout worker. Worker must be logged in to do so."},"register(address,bytes,bytes)":{"notice":"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks."},"renounceOwnership()":{"notice":"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."},"returnFeesForTask(bytes32)":{"notice":"Return the task fee to the task creator when too many blocks have elapsed without task resolution."},"setWorkersParams(uint256,uint256,bytes)":{"notice":"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node"},"transferWorkerStakePostUpgrade(address,bytes)":{"notice":"Transfer worker stake from old contract to new contract upon registration"},"upgradeEnigmaContract(address)":{"notice":"Upgrade Enigma Contract"},"verifyReport(bytes,bytes)":{"notice":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate."},"withdraw(uint256)":{"notice":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so."}}}}')},function(e){e.exports=JSON.parse('{"contractName":"EnigmaToken","abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"INITIAL_SUPPLY","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_from\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"INITIAL_SUPPLY\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"details\\":\\"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. \\",\\"methods\\":{\\"approve(address,uint256)\\":{\\"details\\":\\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\",\\"params\\":{\\"_spender\\":\\"The address which will spend the funds.\\",\\"_value\\":\\"The amount of tokens to be spent.\\"}},\\"balanceOf(address)\\":{\\"details\\":\\"Gets the balance of the specified address.\\",\\"params\\":{\\"owner\\":\\"The address to query the balance of.\\"},\\"return\\":\\"An uint256 representing the amount owned by the passed address.\\"},\\"constructor\\":{\\"details\\":\\"EnigmaToken Constructor Runs only on initial contract creation.\\"},\\"decimals()\\":{\\"return\\":\\"the number of decimals of the token.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"spender\\":\\"The address which will spend the funds.\\",\\"subtractedValue\\":\\"The amount of tokens to decrease the allowance by.\\"}},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"addedValue\\":\\"The amount of tokens to increase the allowance by.\\",\\"spender\\":\\"The address which will spend the funds.\\"}},\\"name()\\":{\\"return\\":\\"the name of the token.\\"},\\"symbol()\\":{\\"return\\":\\"the symbol of the token.\\"},\\"totalSupply()\\":{\\"details\\":\\"Total number of tokens in existence\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"Transfer token for a specified address when not paused\\",\\"params\\":{\\"_to\\":\\"The address to transfer to.\\",\\"_value\\":\\"The amount to be transferred.\\"}},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"Transfer tokens from one address to another when not paused\\",\\"params\\":{\\"_from\\":\\"address The address which you want to send tokens from\\",\\"_to\\":\\"address The address which you want to transfer to\\",\\"_value\\":\\"uint256 the amount of tokens to be transferred\\"}}},\\"title\\":\\"Enigma Token\\"},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":\\"EnigmaToken\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":{\\"keccak256\\":\\"0x1d072d408420008c3d39b1006b9adbbe472f55fc314a8eb80d9861edfeb54c73\\",\\"urls\\":[\\"bzzr://9ec40fae3d143258454c5d7c25811f7969f1ef64abbf88ab96d753d6322906a4\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\":{\\"keccak256\\":\\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\\",\\"urls\\":[\\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\":{\\"keccak256\\":\\"0xe195405e9993d575173cdb5dd408db7459a026b9a98085c1a3b676f020f46584\\",\\"urls\\":[\\"bzzr://4463a0d4f49767f59c02f2a987b90d48e0d31b3ed3424f3e743496f102f96044\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\":{\\"keccak256\\":\\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\\",\\"urls\\":[\\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b506040518060400160405280600681526020017f456e69676d6100000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f454e470000000000000000000000000000000000000000000000000000000000815250600882600390805190602001906100959291906101a9565b5081516100a99060049060208501906101a9565b506005805460ff191660ff92909216919091179055506100d990503366354a6ba7a180006100de602090811b901c565b610244565b6001600160a01b0382166100f157600080fd5b61010a8160025461019060201b6106741790919060201c565b6002556001600160a01b0382166000908152602081815260409091205461013a918390610674610190821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156101a257600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101ea57805160ff1916838001178555610217565b82800160010185558215610217579182015b828111156102175782518255916020019190600101906101fc565b50610223929150610227565b5090565b61024191905b80821115610223576000815560010161022d565b90565b6107d3806102536000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610452565b6100c161046d565b6101626004803603604081101561025c57600080fd5b506001600160a01b0381351690602001356104ce565b6101626004803603604081101561028857600080fd5b506001600160a01b038135169060200135610517565b61017e600480360360408110156102b457600080fd5b506001600160a01b0381358116916020013516610523565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e838361052f565b9392505050565b60025490565b60006103888484846105ab565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006001600160a01b0383166103b957600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61067416565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006001600160a01b0383166104e357600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61068616565b600061036e838361069b565b600061036e83836106b1565b60006001600160a01b03831661054457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6001600160a01b03831660009081526001602090815260408083203384529091528120546105df908363ffffffff61068616565b6001600160a01b038516600090815260016020908152604080832033845290915290205561060e8484846106dc565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561036e57600080fd5b60008282111561069557600080fd5b50900390565b60006106a83384846106dc565b50600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166106ef57600080fd5b6001600160a01b038316600090815260208190526040902054610718908263ffffffff61068616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461074d908263ffffffff61067416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820cd0470b2dddcc56c882132081664f5106c4c77a70e625dbc86f5a15d248f86ec0029","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610452565b6100c161046d565b6101626004803603604081101561025c57600080fd5b506001600160a01b0381351690602001356104ce565b6101626004803603604081101561028857600080fd5b506001600160a01b038135169060200135610517565b61017e600480360360408110156102b457600080fd5b506001600160a01b0381358116916020013516610523565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e838361052f565b9392505050565b60025490565b60006103888484846105ab565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006001600160a01b0383166103b957600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61067416565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006001600160a01b0383166104e357600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61068616565b600061036e838361069b565b600061036e83836106b1565b60006001600160a01b03831661054457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6001600160a01b03831660009081526001602090815260408083203384529091528120546105df908363ffffffff61068616565b6001600160a01b038516600090815260016020908152604080832033845290915290205561060e8484846106dc565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561036e57600080fd5b60008282111561069557600080fd5b50900390565b60006106a83384846106dc565b50600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166106ef57600080fd5b6001600160a01b038316600090815260208190526040902054610718908263ffffffff61068616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461074d908263ffffffff61067416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820cd0470b2dddcc56c882132081664f5106c4c77a70e625dbc86f5a15d248f86ec0029","sourceMap":"660:1642:2:-;;;913:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;913:105:2;405:163:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:1:2;501:4:28;493:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;515:16:28;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:28;:20;;-1:-1:-1;;541:20:28;;;;;;;;;;;;-1:-1:-1;978:33:2;;-1:-1:-1;984:10:2;753:17;978:5;;;;;:33;;:::i;:::-;660:1642;;6198:263:27;-1:-1:-1;;;;;6272:21:27;;6264:30;;;;;;6320:23;6337:5;6320:12;;:16;;;;;;:23;;;;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:27;;:9;:18;;;;;;;;;;;;:29;;6397:5;;6374:22;;;;;:29;;:::i;:::-;-1:-1:-1;;;;;6353:18:27;;:9;:18;;;;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;:9;;6418:36;;;;;;;;;;6198:263;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:26:o;660:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;660:1642:2;;;-1:-1:-1;660:1642:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","deployedSourceMap":"660:1642:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:1642:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:128:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2026:128:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;936:89:27;;;:::i;:::-;;;;;;;;;;;;;;;;1620:150:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1620:150:2;;;;;;;;;;;;;;;;;:::i;712:58::-;;;:::i;930:81:28:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4233:317:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:27;;;;;;;;:::i;1234:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:27;-1:-1:-1;;;;;1234:104:27;;:::i;771:85:28:-;;;:::i;5058:327:27:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:27;;;;;;;;:::i;1200:120:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1200:120:2;;;;;;;;:::i;2160:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2160:139:2;;;;;;;;;;:::i;628:81:28:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2026:128:2:-;2093:4;2116:31;2130:8;2140:6;2116:13;:31::i;:::-;2109:38;2026:128;-1:-1:-1;;;2026:128:2:o;936:89:27:-;1006:12;;936:89;:::o;1620:150:2:-;1702:4;1725:38;1744:5;1751:3;1756:6;1725:18;:38::i;:::-;1718:45;1620:150;-1:-1:-1;;;;1620:150:2:o;712:58::-;753:17;712:58;:::o;930:81:28:-;995:9;;;;930:81;:::o;4233:317:27:-;4313:4;-1:-1:-1;;;;;4337:21:27;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:27;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:27;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;4462:60;;;;;;;;;;;-1:-1:-1;4539:4:27;4233:317;;;;:::o;1234:104::-;-1:-1:-1;;;;;1315:16:27;1289:7;1315:16;;;;;;;;;;;;1234:104::o;771:85:28:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;5058:327:27;5143:4;-1:-1:-1;;;;;5167:21:27;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:27;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1200:120:2:-;1263:4;1286:27;1301:3;1306:6;1286:14;:27::i;2160:139::-;2234:7;2260:32;2276:6;2283:8;2260:15;:32::i;2735:238:27:-;2800:4;-1:-1:-1;;;;;2824:21:27;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:27;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;2909:36;;;;;;;;;;;-1:-1:-1;2962:4:27;2735:238;;;;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:27;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:27;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:27;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;;;;;;;;;;;;-1:-1:-1;3719:4:27;3436:294;;;;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;1205:145;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:26;;;1205:145::o;1962:137:27:-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;:::-;-1:-1:-1;2088:4:27;1962:137;;;;:::o;1669:129::-;-1:-1:-1;;;;;1767:15:27;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;5599:256::-;-1:-1:-1;;;;;5686:16:27;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:27;;:9;:15;;;;;;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:27;;;:9;:15;;;;;;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:27;;;:9;:13;;;;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o","source":"pragma solidity ^0.5.0;\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\";\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\";\\n\\n/**\\n * @title Enigma Token\\n * @dev ERC20 Enigma Token (ENG)\\n *\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\n * units referred to as \'Grains\'.\\n *\\n * ENG are displayed using 8 decimal places of precision.\\n *\\n * 1 ENG is equivalent to:\\n *   100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n *\\n * 150 million ENG (total supply) is equivalent to:\\n *   15000000000000000 == 150000000 * 10**8 == 1e17\\n *\\n * All initial ENG Grains are assigned to the creator of\\n * this contract.\\n *\\n */\\ncontract EnigmaToken is ERC20, ERC20Detailed {\\n\\n    uint256 public constant INITIAL_SUPPLY = 150000000 * 10**8;  // 150 million ENG specified in Grains\\n\\n    /**\\n    * @dev EnigmaToken Constructor\\n    * Runs only on initial contract creation.\\n    */\\n    constructor() public ERC20Detailed(\\"Enigma\\", \\"ENG\\", 8) {\\n        _mint(msg.sender, INITIAL_SUPPLY);\\n    }\\n\\n    /**\\n    * @dev Transfer token for a specified address when not paused\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\n        return super.transfer(_to, _value);\\n    }\\n\\n    /**\\n    * @dev Transfer tokens from one address to another when not paused\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint256 the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\n        return super.transferFrom(_from, _to, _value);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint256 _value) public returns (bool) {\\n        return super.approve(_spender, _value);\\n    }\\n\\n    function allowance(address _owner, address _spender) public view returns (uint256) {\\n        return super.allowance(_owner,_spender);\\n    }\\n\\n}","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1745]},"id":1746,"nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1650,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12706,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1651,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12764,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1652,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":12705,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$12705","typeString":"contract ERC20"}},"id":1653,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1654,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":12763,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$12763","typeString":"contract ERC20Detailed"}},"id":1655,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[12705,12763,12832],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1745,"linearizedBaseContracts":[1745,12763,12705,12832],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1662,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1745,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1676,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12847,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1673,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1670,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12620,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1677,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1668,"modifierName":{"argumentTypes":null,"id":1664,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12763,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$12763_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1745,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1692,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1688,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1689,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1686,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12349,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1685,"id":1691,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"name":"_to","nodeType":"VariableDeclaration","scope":1693,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1681,"name":"_value","nodeType":"VariableDeclaration","scope":1693,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"name":"","nodeType":"VariableDeclaration","scope":1693,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1745,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12349,"visibility":"public"},{"body":{"id":1711,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1706,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1707,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1708,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1704,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":12434,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1703,"id":1710,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"name":"_from","nodeType":"VariableDeclaration","scope":1712,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1697,"name":"_to","nodeType":"VariableDeclaration","scope":1712,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1699,"name":"_value","nodeType":"VariableDeclaration","scope":1712,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"name":"","nodeType":"VariableDeclaration","scope":1712,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1745,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":12434,"visibility":"public"},{"body":{"id":1727,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1723,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1724,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1721,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":12385,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1720,"id":1726,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"name":"_spender","nodeType":"VariableDeclaration","scope":1728,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1716,"name":"_value","nodeType":"VariableDeclaration","scope":1728,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"name":"","nodeType":"VariableDeclaration","scope":1728,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1745,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":12385,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1739,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1740,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1737,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12330,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1742,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"name":"_owner","nodeType":"VariableDeclaration","scope":1744,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1732,"name":"_spender","nodeType":"VariableDeclaration","scope":1744,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"name":"","nodeType":"VariableDeclaration","scope":1744,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1745,"src":"2160:139:2","stateMutability":"view","superFunction":12330,"visibility":"public"}],"scope":1746,"src":"660:1642:2"}],"src":"0:2302:2"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1745]},"id":1746,"nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1650,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12706,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1651,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12764,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1652,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":12705,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$12705","typeString":"contract ERC20"}},"id":1653,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1654,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":12763,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$12763","typeString":"contract ERC20Detailed"}},"id":1655,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[12705,12763,12832],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1745,"linearizedBaseContracts":[1745,12763,12705,12832],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1662,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1745,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1676,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12847,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1673,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1670,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12620,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1677,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1668,"modifierName":{"argumentTypes":null,"id":1664,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12763,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$12763_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1745,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1692,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1688,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1689,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1686,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12349,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1685,"id":1691,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"name":"_to","nodeType":"VariableDeclaration","scope":1693,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1681,"name":"_value","nodeType":"VariableDeclaration","scope":1693,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"name":"","nodeType":"VariableDeclaration","scope":1693,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1745,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12349,"visibility":"public"},{"body":{"id":1711,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1706,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1707,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1708,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1704,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":12434,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1703,"id":1710,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"name":"_from","nodeType":"VariableDeclaration","scope":1712,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1697,"name":"_to","nodeType":"VariableDeclaration","scope":1712,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1699,"name":"_value","nodeType":"VariableDeclaration","scope":1712,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"name":"","nodeType":"VariableDeclaration","scope":1712,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1745,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":12434,"visibility":"public"},{"body":{"id":1727,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1723,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1724,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1721,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":12385,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1720,"id":1726,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"name":"_spender","nodeType":"VariableDeclaration","scope":1728,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1716,"name":"_value","nodeType":"VariableDeclaration","scope":1728,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"name":"","nodeType":"VariableDeclaration","scope":1728,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1745,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":12385,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1739,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1740,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1737,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12330,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1742,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"name":"_owner","nodeType":"VariableDeclaration","scope":1744,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1732,"name":"_spender","nodeType":"VariableDeclaration","scope":1744,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"name":"","nodeType":"VariableDeclaration","scope":1744,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1745,"src":"2160:139:2","stateMutability":"view","superFunction":12330,"visibility":"public"}],"scope":1746,"src":"660:1642:2"}],"src":"0:2302:2"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}},"links":{},"address":"0xF9B5b35202F06235429AcE92a9123399a81a2D31","transactionHash":"0x693898f0558f929f5109fb5533287a635894761842c7c25fb25cad9e31a9341e"}},"schemaVersion":"3.0.10","updatedAt":"2019-10-31T18:27:02.303Z","devdoc":{"details":"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. ","methods":{"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.","params":{"_spender":"The address which will spend the funds.","_value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"Gets the balance of the specified address.","params":{"owner":"The address to query the balance of."},"return":"An uint256 representing the amount owned by the passed address."},"constructor":{"details":"EnigmaToken Constructor Runs only on initial contract creation."},"decimals()":{"return":"the number of decimals of the token."},"decreaseAllowance(address,uint256)":{"details":"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"spender":"The address which will spend the funds.","subtractedValue":"The amount of tokens to decrease the allowance by."}},"increaseAllowance(address,uint256)":{"details":"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"addedValue":"The amount of tokens to increase the allowance by.","spender":"The address which will spend the funds."}},"name()":{"return":"the name of the token."},"symbol()":{"return":"the symbol of the token."},"totalSupply()":{"details":"Total number of tokens in existence"},"transfer(address,uint256)":{"details":"Transfer token for a specified address when not paused","params":{"_to":"The address to transfer to.","_value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another when not paused","params":{"_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}}},"title":"Enigma Token"},"userdoc":{"methods":{}}}')},function(e,t){e.exports=require("jayson/lib/client/browser")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("retry")},function(e,t){e.exports=require("ethereumjs-abi")},function(e,t,n){e.exports=n(17)},function(e,t){e.exports=require("core-js/stable")},function(e,t){e.exports=require("regenerator-runtime/runtime")},function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"ERROR",function(){return h}),n.d(r,"DEPOSIT_TRANSACTION_HASH",function(){return v}),n.d(r,"DEPOSIT_CONFIRMATION",function(){return E}),n.d(r,"DEPOSIT_RECEIPT",function(){return C}),n.d(r,"WITHDRAW_TRANSACTION_HASH",function(){return V}),n.d(r,"WITHDRAW_CONFIRMATION",function(){return x}),n.d(r,"WITHDRAW_RECEIPT",function(){return L}),n.d(r,"LOGIN_TRANSACTION_HASH",function(){return N}),n.d(r,"LOGIN_CONFIRMATION",function(){return w}),n.d(r,"LOGIN_RECEIPT",function(){return P}),n.d(r,"LOGOUT_TRANSACTION_HASH",function(){return R}),n.d(r,"LOGOUT_CONFIRMATION",function(){return A}),n.d(r,"LOGOUT_RECEIPT",function(){return W}),n.d(r,"DEPLOY_SC_ADDR_RESULT",function(){return q}),n.d(r,"DEPLOY_SC_ETH_TRANSACTION_HASH",function(){return M}),n.d(r,"DEPLOY_SC_ETH_CONFIRMATION",function(){return U}),n.d(r,"DEPLOY_SC_ETH_RECEIPT",function(){return F}),n.d(r,"DEPLOY_SC_ENG_RECEIPT",function(){return H}),n.d(r,"CREATE_TASK",function(){return B}),n.d(r,"CREATE_TASK_INPUT",function(){return O}),n.d(r,"CREATE_TASK_RECORD_TRANSACTION_HASH",function(){return G}),n.d(r,"CREATE_TASK_RECORD_CONFIRMATION",function(){return z}),n.d(r,"CREATE_TASK_RECORD_RECEIPT",function(){return K}),n.d(r,"CREATE_TASK_RECORD",function(){return j}),n.d(r,"SEND_TASK_INPUT_RESULT",function(){return Y}),n.d(r,"POLL_TASK_STATUS_RESULT",function(){return J}),n.d(r,"GET_TASK_RESULT_RESULT",function(){return Z}),n.d(r,"DEPLOY_SECRET_CONTRACT_RESULT",function(){return X}),n.d(r,"RETURN_FEES_FOR_TASK_RECEIPT",function(){return Q}),n.d(r,"RETURN_FEES_FOR_TASK",function(){return ee}),n.d(r,"POLL_TASK_ETH_RESULT",function(){return te}),n.d(r,"RPC_SEND_TASK_INPUT",function(){return ne}),n.d(r,"RPC_DEPLOY_SECRET_CONTRACT",function(){return re}),n.d(r,"RPC_GET_TASK_RESULT",function(){return ae}),n.d(r,"RPC_GET_TASK_STATUS",function(){return ie}),n.d(r,"GET_TASK_RESULT_SUCCESS",function(){return se}),n.d(r,"GET_TASK_RESULT_FAILED",function(){return oe}),n.d(r,"GET_TASK_RESULT_UNVERIFIED",function(){return de}),n.d(r,"GET_TASK_RESULT_INPROGRESS",function(){return pe}),n.d(r,"ETH_STATUS_UNDEFINED",function(){return le}),n.d(r,"ETH_STATUS_CREATED",function(){return ce}),n.d(r,"ETH_STATUS_VERIFIED",function(){return ye}),n.d(r,"ETH_STATUS_FAILED",function(){return ue}),n.d(r,"ETH_STATUS_FAILED_ETH",function(){return me}),n.d(r,"ETH_STATUS_FAILED_RETURN",function(){return fe});n(15),n(16);var a=n(2),i=n.n(a),s=n(3),o=n.n(s),d=n(0),p=n.n(d),l=n(7),c=n.n(l),y=n(4),u=n(5),m=n.n(u);p.a.options.usePureJavaScript=!0;var f=c.a.ec;function _(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2]?"00":"",r=!0,a=!1,s=void 0;try{for(var o,d=t[Symbol.iterator]();!(r=(o=d.next()).done);r=!0){var p=o.value;p=g(p),e+=n+i.a.BigInt(p.length/2).toString(16).padStart(16,"0")+p}}catch(e){a=!0,s=e}finally{try{r||null==d.return||d.return()}finally{if(a)throw s}}return e}function b(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;e=_(e+="01"+i.a.BigInt(d[0].length*(d[1]+9)).toString(16).padStart(16,"0"),d[0],!0)}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function g(e){return"0x"==e.substring(0,2)?e.substring(2):e}var T={test:function(){return"hello2"},generateScAddr:function(e,t){return o.a.soliditySha3({t:"bytes",v:e},{t:"uint",v:t})},hash:function(e){var t=_("",e);return o.a.soliditySha3({t:"bytes",v:t})},principalHash:function(e,t,n,r){var a="";return a=b(a=_(a,[e,t],!0),[[n,20],[r,32]]),o.a.soliditySha3({t:"bytes",v:a})},commitReceiptsHash:function(e,t,n,r,a,i,s,d,p){var l="";return l=_(l,[e]),l=_(l=b(l,[t]),[n]),l=_(l=b(l,[r,a,i]),[s,d,p]),o.a.soliditySha3({t:"bytes",v:l})},getDerivedKey:function(e,t){var n=new f("secp256k1");128==e.length&&(e="04"+e);var r=n.keyFromPrivate(t,"hex"),a=n.keyFromPublic(e,"hex").getPublic().mul(r.getPrivate()),i=2|(a.getY().isOdd()?1:0),s=a.getX(),o=y.Buffer.from([i]),d=s.toArrayLike(y.Buffer,"be",32),l=p.a.md.sha256.create();return l.update(o.toString("binary")),l.update(d.toString("binary")),l.digest().toHex()},encryptMessage:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:p.a.random.getBytesSync(12),r=p.a.util.hexToBytes(e),a=p.a.cipher.createCipher("AES-GCM",r);return a.start({iv:n}),a.update(p.a.util.createBuffer(t)),a.finish(),a.output.putBuffer(a.mode.tag).putBytes(n).toHex()},decryptMessage:function(e,t){var n=p.a.util.hexToBytes(e),r=y.Buffer.from(t,"hex"),a=p.a.util.createBuffer(r.slice(-12)),i=p.a.util.createBuffer(r.slice(-28,-12)),s=p.a.cipher.createDecipher("AES-GCM",n);if(s.start({iv:a,tag:i}),s.update(p.a.util.createBuffer(r.slice(0,-28))),s.finish())return s.output.toHex();throw new Error("decipher did not finish")},toGrains:function(e){return e*Math.pow(10,8)}};T.remove0x=g,T.hexToAscii=function(e){if("number"!=typeof e&&"string"!=typeof e)return"";e=e.toString().replace(/\s+/gi,"");for(var t=[],n=0;n<e.length;n+=2){var r=parseInt(e.substr(n,2),16);isNaN(r)||0===r||t.push(String.fromCharCode(r))}return t.join("")},T.sleep=function(e){return new Promise(function(t){return setTimeout(t,e)})},T.gzip=function(e){return new Promise(function(t,n){m.a.gzip(e,function(e,r){e?n(e):t(r)})})},T.gunzip=function(e){return new Promise(function(t,n){m.a.gunzip(e,function(e,r){e?n(e):t(r)})})};var D=T,S=n(8),I=n(9),k=n(1),$=n.n(k),h="error",v="depositTransactionHash",E="depositConfirmation",C="depositReceipt",V="withdrawTransactionHash",x="withdrawConfirmation",L="withdrawReceipt",N="loginTransactionHash",w="loginConfirmation",P="loginReceipt",R="logoutTransactionHash",A="logoutConfirmation",W="logoutReceipt",q="deploySCAddrResult",M="deploySCEthTransactionHash",U="deploySCEthConfirmation",F="deploySCEthReceipt",H="deploySCEngReceipt",B="createTask",O="createTaskInput",G="createTaskRecordTransactionHash",z="createTaskRecordConfirmation",K="createTaskRecordReceipt",j="createTaskRecord",Y="sendTaskInputResult",J="pollTaskStatusResult",Z="getTaskResultResult",X="deploySecretContractResult",Q="returnFeesForTaskReceipt",ee="returnFeesForTask",te="pollTaskETHResult",ne="sendTaskInput",re="deploySecretContract",ae="getTaskResult",ie="getTaskStatus",se="SUCCESS",oe="FAILED",de="UNVERIFIED",pe="INPROGRESS",le=0,ce=1,ye=2,ue=3,me=4,fe=5;function _e(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function be(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){_e(i,r,a,s,o,"next",e)}function o(e){_e(i,r,a,s,o,"throw",e)}s(void 0)})}}function ge(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Te=function(){function e(t,n,r,a,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.enigmaContract=n,this.tokenContract=r,this.txDefaults=a,this.enigma=i}var t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_;return t=e,(n=[{key:"findBySigningAddress",value:(_=be(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorkerFromSigningAddress(t).call();case 2:return n=e.sent,e.abrupt("return",{account:n[0],status:parseInt(n[1][1]),report:n[1][2],balance:parseInt(n[1][3]),logs:n[1][4]});case 4:case"end":return e.stop()}},e,this)})),function(e){return _.apply(this,arguments)})},{key:"getWorkerStatus",value:(f=be(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return n=e.sent,e.abrupt("return",parseInt(n.status));case 4:case"end":return e.stop()}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"isDeployed",value:(m=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getSecretContract(t).call();case 3:return e.t1=e.sent.status,e.t2=(0,e.t0)(e.t1),e.abrupt("return",1===e.t2);case 6:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"countSecretContracts",value:(u=be(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.countSecretContracts().call();case 3:return e.t1=e.sent,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(){return u.apply(this,arguments)})},{key:"getSecretContractAddresses",value:(y=be(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContractAddresses(t,n).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e,t){return y.apply(this,arguments)})},{key:"getAllSecretContractAddresses",value:(c=be(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getAllSecretContractAddresses().call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(){return c.apply(this,arguments)})},{key:"getCodeHash",value:(l=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.codeHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"countStateDeltas",value:(p=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.stateDeltaHashes.length);case 3:case"end":return e.stop()}},e,this)})),function(e){return p.apply(this,arguments)})},{key:"getStateDeltaHash",value:(d=be(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes[e.t0]);case 4:case"end":return e.stop()}},e,this)})),function(e,t){return d.apply(this,arguments)})},{key:"getStateDeltaHashes",value:(o=be(regeneratorRuntime.mark(function e(t,n,r){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.t1=r,e.abrupt("return",e.sent.stateDeltaHashes.slice(e.t0,e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e,t,n){return o.apply(this,arguments)})},{key:"isValidDeltaHash",value:(s=be(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes.includes(e.t0));case 4:case"end":return e.stop()}},e,this)})),function(e,t){return s.apply(this,arguments)})},{key:"login",value:function(e){var t=this,n=new $.a;return be(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.login().send({from:e}).on("transactionHash",function(e){n.emit(N,e)}).on("confirmation",function(e,t){n.emit(w,e,t)}).on("receipt",function(e){n.emit(P,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(h,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"logout",value:function(e){var t=this,n=new $.a;return be(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.logout().send({from:e}).on("transactionHash",function(e){n.emit(R,e)}).on("confirmation",function(e,t){n.emit(A,e,t)}).on("receipt",function(e){n.emit(W,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(h,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"deposit",value:function(e,t){var n=this,r=new $.a;return be(regeneratorRuntime.mark(function a(){var i;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,n.tokenContract.methods.balanceOf(e).call();case 2:if(!(a.sent<t)){a.next=7;break}return"Not enough tokens in wallet",r.emit("error",{name:"NotEnoughTokens",message:"Not enough tokens in wallet"}),a.abrupt("return");case 7:return a.next=9,n.tokenContract.methods.approve(n.enigmaContract.options.address,t).send({from:e});case 9:return a.prev=9,a.next=12,n.enigmaContract.methods.deposit(e,t).send({from:e}).on("transactionHash",function(e){r.emit(v,e)}).on("confirmation",function(e,t){r.emit(E,e,t)});case 12:i=a.sent,r.emit(C,i),a.next=19;break;case 16:a.prev=16,a.t0=a.catch(9),r.emit(h,a.t0.message);case 19:case"end":return a.stop()}},a,null,[[9,16]])}))(),r}},{key:"withdraw",value:function(e,t){var n=this,r=new $.a;return be(regeneratorRuntime.mark(function a(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,n.enigmaContract.methods.withdraw(t).send({from:e}).on("transactionHash",function(e){r.emit(V,e)}).on("confirmation",function(e,t){r.emit(x,e,t)}).on("receipt",function(e){r.emit(L,e)});case 3:a.next=8;break;case 5:a.prev=5,a.t0=a.catch(0),r.emit(h,a.t0.message);case 8:case"end":return a.stop()}},a,null,[[0,5]])}))(),r}},{key:"getBalance",value:(i=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getWorker(t).call();case 3:return e.t1=e.sent.balance,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e){return i.apply(this,arguments)})},{key:"getWorkerSignerAddr",value:(a=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return e.abrupt("return",e.sent.signer);case 3:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})}])&&ge(t.prototype,n),r&&ge(t,r),e}();var De=function e(t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.inputsHash=D.hash([n,r,_?f:t,o]),this.scAddr=t,this.encryptedFn=n,this.encryptedAbiEncodedArgs=r,this.gasLimit=a,this.gasPx=i,this.msgId=s,this.userPubKey=o,this.firstBlockNumber=d,this.workerAddress=p,this.workerEncryptionKey=l,this.sender=c,this.userTaskSig=y,this.nonce=u,this.preCode=m,this.preCodeHash=f,this.isContractDeploymentTask=_,this.transactionHash="",this.taskId="",this.receipt="",this.ethStatus=0,this.proof="",this.creationBlockNumber=-1,this.encryptedAbiEncodedOutputs="",this.delta="",this.usedGas="",this.ethereumPayload="",this.ethereumAddress="",this.workerTaskSig="",this.engStatus="null",this.decryptedOutput=""},Se=n(10),Ie=n.n(Se),ke=n(11),$e=n.n(ke),he=n(12),ve=n.n(he),Ee=n(13),Ce=n(6),Ve=n.n(Ce);function xe(e){return(xe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Le(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function Ne(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){Le(i,r,a,s,o,"next",e)}function o(e){Le(i,r,a,s,o,"throw",e)}s(void 0)})}}function we(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Pe=function(){function e(t,n,r,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.txDefaults=i,this.config={},this.config.retry={},this.config.retry.retries=s.retry&&null!=s.retry.retries?s.retry.retries:5,this.config.retry.factor=s.retry&&null!=s.retry.factor?s.retry.factor:2,this.config.retry.minTimeout=s.retry&&null!=s.retry.minTimeout?s.retry.minTimeout:2e3,this.config.retry.maxTimeout=s.retry&&null!=s.retry.maxTimeout?s.retry.maxTimeout:"Infinity",this.config.retry.randomize=!s.retry||(null==s.retry.randomize||s.retry.randomize);this.client=Ie()(function(e,t){$e.a.post(a,JSON.parse(e),{headers:{"Content-Type":"application/json",credentials:"include"}}).then(function(e){if(h in e.data)t(e.data.error,null);else{var n=JSON.stringify(e.data.result);t(null,n)}}).catch(function(e){t({code:-32e3,message:e.message},null)})},{}),this.workerParamsCache={},this.selectedWorkerGroupCache={},this.taskKeyLocalStorage={},this.createContracts(n,r)}var t,n,r,a,s,d,l,c,y,u,m,f;return t=e,n=[{key:"admin",value:function(){this.admin=new Te(this.web3,this.enigmaContract,this.tokenContract,this.txDefaults,this)}},{key:"createContracts",value:function(e,t){this.enigmaContract=new this.web3.eth.Contract(S.abi,e,this.txDefaults),this.tokenContract=new this.web3.eth.Contract(I.abi,t,this.txDefaults)}},{key:"createTask",value:function(e,t,n,r,a,i,s){var o=this,d=new $.a;return Ne(regeneratorRuntime.mark(function p(){var l,c,y,u,m,f,_,b,g,T,S,I,k,$,v,E,C,V,x,L,N,w,P,R,A,W,q,M;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:return p.t0=parseInt,p.next=3,o.enigmaContract.methods.getUserTaskDeployments(a).call();case 3:if(p.t1=p.sent,l=(0,p.t0)(p.t1),c=s?D.generateScAddr(a,l):i,!s){p.next=17;break}if(!Buffer.isBuffer(i)){p.next=14;break}return y=i,p.next=11,D.gzip(y);case 11:u=p.sent,p.next=15;break;case 14:throw Error("PreCode expected to be a Buffer, instead got "+xe(i));case 15:p.next=19;break;case 17:y="",u="";case 19:for(m=s?o.web3.utils.soliditySha3({t:"bytes",value:y.toString("hex")}):"",f=void 0===t||0===t.length?[[],[]]:t[0].map(function(e,n){return t.map(function(e){return e[n]})}),_=D.remove0x(o.web3.eth.abi.encodeParameters(f[1],f[0])),b=[],g=0;g<_.length;g+=2)b.push(parseInt(_.substr(g,2),16));return p.next=26,o.web3.eth.getBlockNumber();case 26:return T=p.sent,p.next=29,o.getWorkerParams(T);case 29:return S=p.sent,I=S.firstBlockNumber,p.next=33,o.selectWorkerGroup(c,S,1)[0];case 33:return k=(k=p.sent).toLowerCase().slice(-40),$=o.obtainTaskKeyPair(),v=$.publicKey,E=$.privateKey,p.prev=36,p.next=39,new Promise(function(e,t){o.client.request("getWorkerEncryptionKey",{workerAddress:k,userPubKey:v},function(n,r){n?t(n):e(r)})});case 39:if(C=p.sent,V=C.result,x=C.id,L=V.workerEncryptionKey,N=V.workerSig,w="0x0000000000000013456e69676d612055736572204d6573736167650000000000000040"+L,P=(P=Ve.a.recover("0x"+N,o.web3.utils.soliditySha3({t:"bytes",value:w}))).toLowerCase().slice(-40),k===P){p.next=50;break}console.error("Worker address",k,"!= recovered address",P),d.emit(h,{name:"InvalidWorker",message:"Invalid worker encryption key + signature combo ".concat(k," != ").concat(P)}),p.next=58;break;case 50:return R=D.getDerivedKey(L,E),A=D.encryptMessage(R,e),W=D.encryptMessage(R,Buffer.from(b)),q=o.web3.utils.soliditySha3({t:"bytes",v:A},{t:"bytes",v:W}),p.next=56,o.web3.eth.sign(q,a);case 56:M=p.sent,d.emit(B,new De(c,A,W,n,r,x,v,I,k,L,a,M,l,u.toString("base64"),m,s));case 58:p.next=63;break;case 60:p.prev=60,p.t2=p.catch(36),d.emit(h,p.t2);case 63:case"end":return p.stop()}},p,null,[[36,60]])}))(),d}},{key:"createTaskRecord",value:function(e){var t=this,n=new $.a;return Ne(regeneratorRuntime.mark(function r(){var a;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.tokenContract.methods.balanceOf(e.sender).call();case 2:if(!(r.sent<e.gasLimit*e.gasPx)){r.next=6;break}return n.emit(h,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 6:return r.next=8,t.tokenContract.methods.approve(t.enigmaContract.options.address,e.gasLimit*e.gasPx).send({from:e.sender});case 8:if(r.prev=8,!e.isContractDeploymentTask){r.next=15;break}return r.next=12,t.enigmaContract.methods.createDeploymentTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber,e.nonce).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(G,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 12:r.t0=r.sent,r.next=18;break;case 15:return r.next=17,t.enigmaContract.methods.createTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(G,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 17:r.t0=r.sent;case 18:a=r.t0,e.taskId=a.events.TaskRecordCreated.returnValues.taskId,e.receipt=a,e.ethStatus=1,e.creationBlockNumber=a.blockNumber,n.emit(K,a),n.emit(j,e),r.next=30;break;case 27:r.prev=27,r.t1=r.catch(8),n.emit(h,r.t1.message);case 30:case"end":return r.stop()}},r,null,[[8,27]])}))(),n}},{key:"getTaskRecordStatus",value:(f=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return n=e.sent,t.ethStatus=parseInt(n.status),t.proof=n.proof,e.abrupt("return",t);case 6:case"end":return e.stop()}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"getTaskRecordFromTaskId",value:(m=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t).call();case 2:return n=e.sent,e.abrupt("return",{sender:n.sender,inputsHash:n.inputsHash,outputHash:n.outputHash,gasLimit:parseInt(n.gasLimit),gasPx:parseInt(n.gasPx),blockNumber:parseInt(n.blockNumber),status:parseInt(n.status),proof:n.proof});case 4:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"getTaskOutputHash",value:(u=Ne(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return e.abrupt("return",e.sent.outputHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return u.apply(this,arguments)})},{key:"getReport",value:(y=Ne(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getReport(t).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e){return y.apply(this,arguments)})},{key:"getWorkerParams",value:(c=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(0===Object.keys(this.workerParamsCache).length||t-this.workerParamsCache.firstBlockNumber>=this.epochSize)){e.next=8;break}return e.next=3,this.enigmaContract.methods.getEpochSize().call();case 3:return this.epochSize=e.sent,e.next=6,this.enigmaContract.methods.getWorkerParams(t).call();case 6:n=e.sent,this.workerParamsCache={firstBlockNumber:parseInt(n[0]),seed:i.a.BigInt(n[1]),workers:n[2],stakes:n[3].map(function(e){return i.a.BigInt(e)})};case 8:return e.abrupt("return",this.workerParamsCache);case 9:case"end":return e.stop()}},e,this)})),function(e){return c.apply(this,arguments)})},{key:"selectWorkerGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5,r=t.stakes.reduce(function(e,t){return i.a.add(e,t)},i.a.BigInt(0)),a=0,s=[];do{for(var d=Ee.rawEncode(["uint256","bytes32","uint256"],[t.seed.toString(10),e,a]),p=o.a.keccak256(d),l=i.a.remainder(i.a.BigInt(p),r),c=t.workers[t.workers.length-1],y=0;y<t.workers.length;y++)if((l=i.a.subtract(l,t.stakes[y]))<=0){c=t.workers[y];break}s.includes(c)||s.push(c),a++}while(s.length<n);return s}},{key:"sendTaskInput",value:function(t){var n=this,r=new $.a;return Ne(regeneratorRuntime.mark(function a(){var i,s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return i=ne,s=Y,t.isContractDeploymentTask&&(i=re,s=X),a.prev=3,a.next=6,new Promise(function(r,a){n.client.request(i,e.serializeTask(t),function(e,t){e?a(e):r(t)})});case 6:r.emit(s,t),a.next=12;break;case 9:a.prev=9,a.t0=a.catch(3),r.emit(h,a.t0);case 12:case"end":return a.stop()}},a,null,[[3,9]])}))(),r}},{key:"getTaskResult",value:function(e){var t=this,n=new $.a,r=ve.a.operation(this.config.retry);return r.attempt(function(){var a=Ne(regeneratorRuntime.mark(function a(i){var s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,new Promise(function(n,r){t.client.request(ae,{taskId:D.remove0x(e.taskId)},function(e,t){e?r(e):n(t)})});case 3:if(!(s=a.sent).result){a.next=20;break}a.t0=s.result.status,a.next=a.t0===se?8:a.t0===oe?12:a.t0===de?15:a.t0===pe?15:17;break;case 8:e.delta=s.result.delta,e.ethereumPayload=s.result.ethereumPayload,e.ethereumAddress=s.result.ethereumAddress,e.preCodeHash=s.result.preCodeHash;case 12:e.encryptedAbiEncodedOutputs=s.result.output,e.usedGas=s.result.usedGas,e.workerTaskSig=s.result.signature;case 15:return e.engStatus=s.result.status,a.abrupt("break",18);case 17:throw new Error("Invalid task result status").message;case 18:a.next=26;break;case 20:if(!r.retry(!0)){a.next=25;break}return console.log("Warning: Got an empty TaskResult on attempt "+i+" of "+(t.config.retry.retries+1)+". Retrying..."),a.abrupt("return");case 25:e.engStatus=null;case 26:n.emit(Z,e),a.next=32;break;case 29:a.prev=29,a.t1=a.catch(0),n.emit(h,a.t1);case 32:case"end":return a.stop()}},a,null,[[0,29]])}));return function(e){return a.apply(this,arguments)}}()),n}},{key:"returnFeesForTask",value:function(e){var t=this,n=new $.a;return Ne(regeneratorRuntime.mark(function r(){var a,i;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.enigmaContract.methods.getTaskTimeoutSize().call();case 2:return a=r.sent,r.next=5,t.web3.eth.getBlockNumber();case 5:if(!(r.sent-e.creationBlockNumber<=a)){r.next=9;break}return n.emit(h,{name:"InvalidTaskReturn",message:"Not enough time has elapsed to return task funds"}),r.abrupt("return");case 9:return r.prev=9,r.next=12,t.enigmaContract.methods.returnFeesForTask(e.taskId).send({from:e.sender});case 12:i=r.sent,e.ethStatus=fe,n.emit(Q,i),n.emit(ee,e),r.next=21;break;case 18:r.prev=18,r.t0=r.catch(9),n.emit(h,r.t0.message);case 21:case"end":return r.stop()}},r,null,[[9,18]])}))(),n}},{key:"decryptTaskResult",value:(l=Ne(regeneratorRuntime.mark(function e(t){var n,r,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("task.encryptedAbiEncodedOutputs is "+t.encryptedAbiEncodedOutputs),t.encryptedAbiEncodedOutputs?(n=this.obtainTaskKeyPair(),r=n.privateKey,a=D.getDerivedKey(t.workerEncryptionKey,r),t.decryptedOutput=D.decryptMessage(a,t.encryptedAbiEncodedOutputs)):(console.log("Warning: task.encryptedAbiEncodedOutputs is empty, there is nothing to decrypt."),t.decryptedOutput=null),e.abrupt("return",t);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"verifyTaskOutput",value:(d=Ne(regeneratorRuntime.mark(function e(t){var n,r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getTaskOutputHash(t);case 2:return n=e.sent,r=this.web3.utils.soliditySha3({t:"bytes",value:t.encryptedAbiEncodedOutputs.toString("hex")}),e.abrupt("return",n===r);case 5:case"end":return e.stop()}},e,this)})),function(e){return d.apply(this,arguments)})},{key:"verifyTaskStatus",value:(s=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getTaskRecordStatus(t);case 2:n=e.sent.ethStatus,e.t0=t.engStatus,e.next=e.t0===se?6:e.t0===oe?8:e.t0===de?10:e.t0===pe?10:12;break;case 6:return e.abrupt("return",n===ye);case 8:return e.abrupt("return",n===ue);case 10:return e.abrupt("return",n===ce);case 12:return e.abrupt("return",n===le);case 13:case"end":return e.stop()}},e,this)})),function(e){return s.apply(this,arguments)})},{key:"pollTaskStatusGen",value:regeneratorRuntime.mark(function e(t,n){var r=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,new Promise(function(e,a){r.client.request(ie,{taskId:D.remove0x(t.taskId),workerAddress:t.workerAddress,withResult:n},function(r,i){r?a(r):(t.engStatus=i.result.status,n&&(t.encryptedAbiEncodedOutputs=i.result.output),e(t))})});case 3:e.next=0;break;case 5:case"end":return e.stop()}},e)})},{key:"innerPollTaskStatus",value:function(e,t,n){var r=this;t.next().value.then(function(a){n.emit(J,a),"SUCCESS"!==a.engStatus&&"FAILED"!==a.engStatus&&r.innerPollTaskStatus(e,t,n)}).catch(function(e){n.emit(h,e)})}},{key:"pollTaskStatus",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=new $.a,r=this.pollTaskStatusGen(e,t);return this.innerPollTaskStatus(e,r,n),n}},{key:"pollTaskETH",value:(a=Ne(regeneratorRuntime.mark(function e(t){var n,r=arguments;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=r.length>1&&void 0!==r[1]?r[1]:1e3;case 1:if(t.ethStatus!==ce){e.next=9;break}return e.next=4,this.getTaskRecordStatus(t);case 4:return t=e.sent,e.next=7,D.sleep(n);case 7:e.next=1;break;case 9:return e.abrupt("return",t);case 10:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})},{key:"obtainTaskKeyPair",value:function(){var e,t="undefined"!=typeof window,n=t?window.localStorage.getItem("encodedPrivateKey"):this.taskKeyLocalStorage.encodedPrivateKey;if(null==n)throw Error("Need to set task key pair first");return e=t?atob(n):Buffer.from(n,"base64").toString("binary"),{publicKey:Ve.a.publicKeyByPrivateKey(e),privateKey:e}}},{key:"setTaskKeyPair",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t="undefined"!=typeof window;if(""===e)for(var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",r=0;r<9;r++)e+=n.charAt(Math.floor(Math.random()*n.length));var a=p.a.random.createInstance();a.seedFileSync=function(t){return p.a.util.fillString(e,t)};var i=p.a.util.bytesToHex(a.getBytes(32));return t?window.localStorage.setItem("encodedPrivateKey",btoa(i)):this.taskKeyLocalStorage.encodedPrivateKey=Buffer.from(i,"binary").toString("base64"),e}},{key:"deploySecretContract",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return Ne(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!0).on(B,function(e){return o(e)}).on(h,function(e){return d(e)})});case 2:return p=o.sent,d.emit(B,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(h,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(X,function(t){return e(t)}).on(h,function(e){return t(e)})});case 10:return d.emit(X,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(h,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}},{key:"computeTask",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return Ne(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!1).on(B,function(e){return o(e)}).on(h,function(e){return d(e)})});case 2:return p=o.sent,d.emit(B,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(h,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(Y,function(t){return e(t)}).on(h,function(e){return t(e)})});case 10:return d.emit(Y,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(h,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}}],r=[{key:"serializeTask",value:function(e){return e.isContractDeploymentTask?{preCode:e.preCode,encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),encryptedFn:D.remove0x(e.encryptedFn),userDHKey:D.remove0x(e.userPubKey),contractAddress:D.remove0x(e.scAddr),workerAddress:e.workerAddress}:{taskId:D.remove0x(e.taskId),workerAddress:e.workerAddress,encryptedFn:D.remove0x(e.encryptedFn),encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),contractAddress:D.remove0x(e.scAddr),userDHKey:D.remove0x(e.userPubKey)}}},{key:"version",value:function(){return"0.0.1"}}],n&&we(t.prototype,n),r&&we(t,r),e}();n.d(t,"Enigma",function(){return Pe}),n.d(t,"utils",function(){return D}),n.d(t,"eeConstants",function(){return r})}])});
//# sourceMappingURL=enigma-js.node.min.js.map