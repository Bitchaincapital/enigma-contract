!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("enigma-js",[],t):"object"==typeof exports?exports["enigma-js"]=t():e["enigma-js"]=t()}(global,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=14)}([function(e,t){e.exports=require("node-forge")},function(e,t){e.exports=require("eventemitter3")},function(e,t){e.exports=require("jsbi")},function(e,t){e.exports=require("web3-utils")},function(e,t){e.exports=require("buffer")},function(e,t){e.exports=require("zlib")},function(e,t){e.exports=require("eth-crypto")},function(e,t){e.exports=require("elliptic")},function(e){e.exports=JSON.parse('{"contractName":"Enigma","abi":[{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"address","name":"_principal","type":"address"},{"internalType":"address","name":"_exchangeRate","type":"address"},{"internalType":"uint256","name":"_epochSize","type":"uint256"},{"internalType":"uint256","name":"_timeoutThreshold","type":"uint256"},{"internalType":"bytes","name":"_mrSigner","type":"bytes"},{"internalType":"bytes","name":"_isvSvn","type":"bytes"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"}],"name":"LoggedIn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"}],"name":"LoggedOut","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"scAddr","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"gasUsed","type":"uint256"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"scAddr","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"gasUsed","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasUsedTotal","type":"uint256"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"gasUsed","type":"uint64"},{"indexed":false,"internalType":"address","name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"internalType":"bytes32[4]","name":"bytes32s","type":"bytes32[4]"},{"indexed":false,"internalType":"uint256","name":"deltaHashIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasUsedTotal","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"optionalEthereumData","type":"bytes"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"custodian","type":"address"},{"indexed":false,"internalType":"address","name":"signer","type":"address"}],"name":"Registered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"gasUsed","type":"uint64"},{"indexed":false,"internalType":"address","name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"internalType":"bytes32[4]","name":"bytes32s","type":"bytes32[4]"},{"indexed":false,"internalType":"uint256","name":"gasUsedTotal","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"optionalEthereumData","type":"bytes"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"}],"name":"SecretContractDeployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"inputsHash","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"gasLimit","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"gasPx","type":"uint64"},{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"seed","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"firstBlockNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"internalType":"address[]","name":"workers","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"stakes","type":"uint256[]"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event"},{"constant":true,"inputs":[],"name":"getAllSecretContractAddresses","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEpochSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getIsvSvn","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getMrSigner","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_stakingAddress","type":"address"}],"name":"getOperatingAddressFromStakingAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_scAddr","type":"bytes32"}],"name":"getSecretContract","outputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32","name":"preCodeHash","type":"bytes32"},{"internalType":"bytes32","name":"codeHash","type":"bytes32"},{"internalType":"bytes32[]","name":"stateDeltaHashes","type":"bytes32[]"},{"internalType":"enum EnigmaCommon.SecretContractStatus","name":"status","type":"uint8"}],"internalType":"struct EnigmaCommon.SecretContract","name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSigningAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_taskId","type":"bytes32"}],"name":"getTaskRecord","outputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes32","name":"inputsHash","type":"bytes32"},{"internalType":"bytes32","name":"outputHash","type":"bytes32"},{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasPx","type":"uint64"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"enum EnigmaCommon.TaskStatus","name":"status","type":"uint8"},{"internalType":"bytes","name":"proof","type":"bytes"}],"internalType":"struct EnigmaCommon.TaskRecord","name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getTaskTimeoutSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getUpdatedEnigmaContractAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_sender","type":"address"}],"name":"getUserTaskDeployments","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_worker","type":"address"}],"name":"getWorker","outputs":[{"components":[{"internalType":"address","name":"stakingAddress","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"enum EnigmaCommon.WorkerStatus","name":"status","type":"uint8"},{"internalType":"bytes","name":"report","type":"bytes"},{"internalType":"uint256","name":"balance","type":"uint256"},{"components":[{"internalType":"enum EnigmaCommon.WorkerLogType","name":"workerEventType","type":"uint8"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"}],"internalType":"struct EnigmaCommon.WorkerLog[]","name":"workerLogs","type":"tuple[]"}],"internalType":"struct EnigmaCommon.Worker","name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_signer","type":"address"}],"name":"getWorkerFromSigningAddress","outputs":[{"internalType":"address","name":"","type":"address"},{"components":[{"internalType":"address","name":"stakingAddress","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"enum EnigmaCommon.WorkerStatus","name":"status","type":"uint8"},{"internalType":"bytes","name":"report","type":"bytes"},{"internalType":"uint256","name":"balance","type":"uint256"},{"components":[{"internalType":"enum EnigmaCommon.WorkerLogType","name":"workerEventType","type":"uint8"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"}],"internalType":"struct EnigmaCommon.WorkerLog[]","name":"workerLogs","type":"tuple[]"}],"internalType":"struct EnigmaCommon.Worker","name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getWorkersParams","outputs":[{"components":[{"internalType":"uint256","name":"firstBlockNumber","type":"uint256"},{"internalType":"address[]","name":"workers","type":"address[]"},{"internalType":"uint256[]","name":"stakes","type":"uint256[]"},{"internalType":"uint256","name":"seed","type":"uint256"}],"internalType":"struct EnigmaCommon.WorkersParams[5]","name":"","type":"tuple[5]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_stakingAddress","type":"address"},{"internalType":"address","name":"_signer","type":"address"},{"internalType":"bytes","name":"_report","type":"bytes"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"unregister","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_custodian","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"login","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"logout","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_taskId","type":"bytes32"},{"internalType":"bytes32","name":"_codeHash","type":"bytes32"},{"internalType":"uint64","name":"_gasUsed","type":"uint64"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"deploySecretContractFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint64","name":"_gasUsed","type":"uint64"},{"internalType":"address","name":"_optionalEthereumContractAddress","type":"address"},{"internalType":"bytes32[4]","name":"_bytes32s","type":"bytes32[4]"},{"internalType":"bytes","name":"_optionalEthereumData","type":"bytes"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"deploySecretContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"countSecretContracts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_start","type":"uint256"},{"internalType":"uint256","name":"_stop","type":"uint256"}],"name":"getSecretContractAddresses","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_inputsHash","type":"bytes32"},{"internalType":"uint64","name":"_gasLimit","type":"uint64"},{"internalType":"uint64","name":"_gasPx","type":"uint64"},{"internalType":"uint256","name":"_firstBlockNumber","type":"uint256"},{"internalType":"uint256","name":"_nonce","type":"uint256"}],"name":"createDeploymentTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_inputsHash","type":"bytes32"},{"internalType":"uint64","name":"_gasLimit","type":"uint64"},{"internalType":"uint64","name":"_gasPx","type":"uint64"},{"internalType":"uint256","name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint64","name":"_gasUsed","type":"uint64"},{"internalType":"address","name":"_optionalEthereumContractAddress","type":"address"},{"internalType":"bytes32[4]","name":"_bytes32s","type":"bytes32[4]"},{"internalType":"bytes","name":"_optionalEthereumData","type":"bytes"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"commitReceipt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_scAddr","type":"bytes32"},{"internalType":"bytes32","name":"_taskId","type":"bytes32"},{"internalType":"bytes32","name":"_outputHash","type":"bytes32"},{"internalType":"uint64","name":"_gasUsed","type":"uint64"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"commitTaskFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_taskId","type":"bytes32"}],"name":"returnFeesForTask","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"},{"internalType":"uint256","name":"_seed","type":"uint256"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"setWorkersParams","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"}],"name":"getActiveWorkers","outputs":[{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"}],"name":"getFirstBlockNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"}],"name":"getWorkerParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_blockNumber","type":"uint256"},{"internalType":"bytes32","name":"_scAddr","type":"bytes32"}],"name":"getWorkerGroup","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_custodian","type":"address"}],"name":"getReport","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"verifyReport","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_updatedEnigmaContractAddress","type":"address"}],"name":"upgradeEnigmaContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_operatingAddress","type":"address"},{"internalType":"address","name":"_stakingAddress","type":"address"},{"internalType":"bytes","name":"_sig","type":"bytes"}],"name":"transferWorkerStakePostUpgrade","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes","name":"_mrSigner","type":"bytes"}],"name":"setMrSigner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes","name":"_isvSvn","type":"bytes"}],"name":"setIsvSvn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_operatingAddress","type":"address"}],"name":"setOperatingAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.12+commit.7709ece9\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_tokenAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_principal\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_exchangeRate\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_epochSize\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_timeoutThreshold\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_mrSigner\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_isvSvn\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"DepositSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"LoggedIn\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"LoggedOut\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsedTotal\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailedETH\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32[4]\\",\\"name\\":\\"bytes32s\\",\\"type\\":\\"bytes32[4]\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"deltaHashIndex\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsedTotal\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"custodian\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"Registered\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32[4]\\",\\"name\\":\\"bytes32s\\",\\"type\\":\\"bytes32[4]\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasUsedTotal\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"SecretContractDeployed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"TaskFeeReturned\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WithdrawSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"inclusionBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"address[]\\",\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WorkersParameterized\\",\\"type\\":\\"event\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes32[4]\\",\\"name\\":\\"_bytes32s\\",\\"type\\":\\"bytes32[4]\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitReceipt\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitTaskFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"countSecretContracts\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createDeploymentTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes32[4]\\",\\"name\\":\\"_bytes32s\\",\\"type\\":\\"bytes32[4]\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContractFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"deposit\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getActiveWorkers\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getAllSecretContractAddresses\\",\\"outputs\\":[{\\"internalType\\":\\"bytes32[]\\",\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getEpochSize\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getFirstBlockNumber\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getIsvSvn\\",\\"outputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getMrSigner\\",\\"outputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_stakingAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getOperatingAddressFromStakingAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getReport\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getSecretContract\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32[]\\",\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"internalType\\":\\"enum EnigmaCommon.SecretContractStatus\\",\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"}],\\"internalType\\":\\"struct EnigmaCommon.SecretContract\\",\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_start\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_stop\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getSecretContractAddresses\\",\\"outputs\\":[{\\"internalType\\":\\"bytes32[]\\",\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getSigningAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getTaskRecord\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint64\\",\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"enum EnigmaCommon.TaskStatus\\",\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"proof\\",\\"type\\":\\"bytes\\"}],\\"internalType\\":\\"struct EnigmaCommon.TaskRecord\\",\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getTaskTimeoutSize\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getUpdatedEnigmaContractAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_sender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getUserTaskDeployments\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_worker\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorker\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"stakingAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"enum EnigmaCommon.WorkerStatus\\",\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"internalType\\":\\"enum EnigmaCommon.WorkerLogType\\",\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"internalType\\":\\"struct EnigmaCommon.WorkerLog[]\\",\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"internalType\\":\\"struct EnigmaCommon.Worker\\",\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorkerFromSigningAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"stakingAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"enum EnigmaCommon.WorkerStatus\\",\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"internalType\\":\\"enum EnigmaCommon.WorkerLogType\\",\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"internalType\\":\\"struct EnigmaCommon.WorkerLog[]\\",\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"internalType\\":\\"struct EnigmaCommon.Worker\\",\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getWorkerGroup\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getWorkerParams\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getWorkersParams\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address[]\\",\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"}],\\"internalType\\":\\"struct EnigmaCommon.WorkersParams[5]\\",\\"name\\":\\"\\",\\"type\\":\\"tuple[5]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"isOwner\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"login\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"logout\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_stakingAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_report\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"register\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"returnFeesForTask\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_isvSvn\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setIsvSvn\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_mrSigner\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setMrSigner\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_operatingAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"setOperatingAddress\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_seed\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setWorkersParams\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_operatingAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_stakingAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"transferWorkerStakePostUpgrade\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"unregister\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_updatedEnigmaContractAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"upgradeEnigmaContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_data\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"verifyReport\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"methods\\":{\\"commitReceipt(uint64,address,bytes32[4],bytes,bytes)\\":{\\"params\\":{\\"_bytes32s\\":\\"[scAddr, taskId, stateDeltaHash, outputHash]\\",\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_optionalEthereumContractAddress\\":\\"Output state hash\\",\\"_optionalEthereumData\\":\\"Output state hash\\",\\"_sig\\":\\"Worker\'s signature\\"}},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"countSecretContracts()\\":{\\"return\\":\\"Number of deployed secret contracts\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\",\\"_nonce\\":\\"Locally-computed nonce value for this deployment\\"}},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"deploySecretContract(uint64,address,bytes32[4],bytes,bytes)\\":{\\"params\\":{\\"_bytes32s\\":\\"[taskId, preCodeHash, codeHash, initStateDeltaHash]\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_optionalEthereumContractAddress\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumData\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_sig\\":\\"Worker\'s signature for deployment\\"}},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deposit(address,uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\",\\"_custodian\\":\\"The worker\'s ETH address\\"}},\\"getActiveWorkers(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"}},\\"getAllSecretContractAddresses()\\":{\\"return\\":\\"Array of secret contract addresses\\"},\\"getEpochSize()\\":{\\"return\\":\\"Epoch size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Block number\\"},\\"getIsvSvn()\\":{\\"return\\":\\"isvSvn\\"},\\"getMrSigner()\\":{\\"return\\":\\"mrSigner\\"},\\"getOperatingAddressFromStakingAddress(address)\\":{\\"params\\":{\\"_stakingAddress\\":\\"Worker\'s staking address\\"},\\"return\\":\\"Operating address\\"},\\"getReport(address)\\":{\\"params\\":{\\"_custodian\\":\\"The worker\'s custodian address\\"}},\\"getSecretContract(bytes32)\\":{\\"params\\":{\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"SecretContract struct\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"params\\":{\\"_start\\":\\"Start of range\\",\\"_stop\\":\\"End of range\\"},\\"return\\":\\"Subset of deployed secret contract addresses\\"},\\"getSigningAddress()\\":{\\"return\\":\\"Signing address\\"},\\"getTaskRecord(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique identifier for a given task\\"},\\"return\\":\\"TaskRecord struct\\"},\\"getTaskTimeoutSize()\\":{\\"return\\":\\"task timeout\\"},\\"getUpdatedEnigmaContractAddress()\\":{\\"return\\":\\"Updated Enigma contract address\\"},\\"getUserTaskDeployments(address)\\":{\\"params\\":{\\"_sender\\":\\"Task sender\'s ethereum address\\"},\\"return\\":\\"Current number for task deployments for user\\"},\\"getWorker(address)\\":{\\"params\\":{\\"_worker\\":\\"Worker\'s ethereum address\\"},\\"return\\":\\"Worker struct\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"params\\":{\\"_signer\\":\\"Worker\'s signing address\\"},\\"return\\":\\"Ethereum operating addressWorker struct\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number the task record was mined\\",\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"Selected workers\' addresses\\"},\\"getWorkerParams(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes\\"},\\"getWorkersParams()\\":{\\"return\\":\\"Array of WorkersParams structs\\"},\\"isOwner()\\":{\\"details\\":\\"Returns true if the caller is the current owner.\\"},\\"owner()\\":{\\"details\\":\\"Returns the address of the current owner.\\"},\\"register(address,address,bytes,bytes)\\":{\\"params\\":{\\"_report\\":\\"The RLP encoded report returned by the IAS\\",\\"_signature\\":\\"Signature\\",\\"_signer\\":\\"The signer address, derived from the enclave public key\\",\\"_stakingAddress\\":\\"The operating address\\"}},\\"renounceOwnership()\\":{\\"details\\":\\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\\"},\\"returnFeesForTask(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique taskId\\"}},\\"setIsvSvn(bytes)\\":{\\"params\\":{\\"_isvSvn\\":\\"mrSigner\\"}},\\"setMrSigner(bytes)\\":{\\"params\\":{\\"_mrSigner\\":\\"mrSigner\\"}},\\"setOperatingAddress(address)\\":{\\"params\\":{\\"_operatingAddress\\":\\"Operating Address\\"}},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number principal node is attempting to set worker params\\",\\"_seed\\":\\"The random integer generated by the enclave\\",\\"_sig\\":\\"Principal node\'s signature\\"}},\\"transferOwnership(address)\\":{\\"details\\":\\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\\"},\\"transferWorkerStakePostUpgrade(address,address,bytes)\\":{\\"params\\":{\\"_operatingAddress\\":\\"Operating Address\\",\\"_sig\\":\\"Signature\\",\\"_stakingAddress\\":\\"Newly-registered worker address\\"}},\\"upgradeEnigmaContract(address)\\":{\\"params\\":{\\"_updatedEnigmaContractAddress\\":\\"Updated newly-deployed Enigma contract address\\"}},\\"verifyReport(bytes,bytes)\\":{\\"params\\":{\\"_data\\":\\"The report itself\\",\\"_signature\\":\\"The signature of the report\\"}},\\"withdraw(uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\"}}}},\\"userdoc\\":{\\"methods\\":{\\"commitReceipt(uint64,address,bytes32[4],bytes,bytes)\\":{\\"notice\\":\\"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee.\\"},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure.\\"},\\"countSecretContracts()\\":{\\"notice\\":\\"Check if secret contract has been deployed\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"notice\\":\\"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid.\\"},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"notice\\":\\"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"deploySecretContract(uint64,address,bytes32[4],bytes,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deposit(address,uint256)\\":{\\"notice\\":\\"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\"},\\"getActiveWorkers(uint256)\\":{\\"notice\\":\\"Get active workers before a certain block number\\"},\\"getAllSecretContractAddresses()\\":{\\"notice\\":\\"Get all secret contract addresses\\"},\\"getEpochSize()\\":{\\"notice\\":\\"Get the epoch block size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"notice\\":\\"Get the first block number of an epoch that a given block number belongs to\\"},\\"getIsvSvn()\\":{\\"notice\\":\\"Get isvSvn\\"},\\"getMrSigner()\\":{\\"notice\\":\\"Get mrSigner\\"},\\"getOperatingAddressFromStakingAddress(address)\\":{\\"notice\\":\\"Get operating address from staking address\\"},\\"getReport(address)\\":{\\"notice\\":\\"The RLP encoded report returned by the IAS server\\"},\\"getSecretContract(bytes32)\\":{\\"notice\\":\\"Get a SecretContract struct given a particular secret contract address\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"notice\\":\\"Get deployed secret contract addresses within a range\\"},\\"getSigningAddress()\\":{\\"notice\\":\\"Get signing address of calling worker\\"},\\"getTaskRecord(bytes32)\\":{\\"notice\\":\\"Get a TaskRecord struct given a particular task\'s ID\\"},\\"getTaskTimeoutSize()\\":{\\"notice\\":\\"Get the task timeout size\\"},\\"getUpdatedEnigmaContractAddress()\\":{\\"notice\\":\\"Get updated Enigma contract address\\"},\\"getUserTaskDeployments(address)\\":{\\"notice\\":\\"Get the current number/index (used as unique nonce value) of task deployments for a given user user\\"},\\"getWorker(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s ethereum address\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s signing address\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"notice\\":\\"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address.\\"},\\"getWorkerParams(uint256)\\":{\\"notice\\":\\"Get worker params for an epoch given a particular block number\\"},\\"getWorkersParams()\\":{\\"notice\\":\\"Get epoch-based history of worker params information\\"},\\"login()\\":{\\"notice\\":\\"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process.\\"},\\"logout()\\":{\\"notice\\":\\"Logout worker. Worker must be logged in to do so.\\"},\\"register(address,address,bytes,bytes)\\":{\\"notice\\":\\"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks.\\"},\\"returnFeesForTask(bytes32)\\":{\\"notice\\":\\"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\"},\\"setIsvSvn(bytes)\\":{\\"notice\\":\\"Set isvSvn\\"},\\"setMrSigner(bytes)\\":{\\"notice\\":\\"Set mrSigner\\"},\\"setOperatingAddress(address)\\":{\\"notice\\":\\"Set operating address for a particular staking address\\"},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"notice\\":\\"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node\\"},\\"transferWorkerStakePostUpgrade(address,address,bytes)\\":{\\"notice\\":\\"Transfer worker stake from old contract to new contract upon registration\\"},\\"unregister()\\":{\\"notice\\":\\"Unregisters a staking address\' worker.    \\"},\\"upgradeEnigmaContract(address)\\":{\\"notice\\":\\"Upgrade Enigma Contract\\"},\\"verifyReport(bytes,bytes)\\":{\\"notice\\":\\"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\"},\\"withdraw(uint256)\\":{\\"notice\\":\\"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\"}}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":\\"Enigma\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":{\\"keccak256\\":\\"0x58ccecbbb1e99ed611ff1eb7947d1d8a64bc8205bc4b36c6c2233c1fa4e5afdb\\",\\"urls\\":[\\"bzz-raw://eb0668b7f99b95a07e8fcb936d8fdd2ad86fe1d2cb592181e1196bed38b6ad4d\\",\\"dweb:/ipfs/QmXNjHsDWX1bnXE5UMZ6PKHNxEV5E8LrFQnRJo4v9vvnHd\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol\\":{\\"keccak256\\":\\"0xd5ff063bef4e43e7a38458fff3360a8d02ada3ed61d2436597c9854fe895fd06\\",\\"urls\\":[\\"bzz-raw://acd77324acfc7305562da4a6a5d6b014c4e5e51903374b464bd18caaeda37d54\\",\\"dweb:/ipfs/QmWNBX31J65LtQqZuSacTH76ze1WrpJ5fQYpDtyVThSQ5T\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol\\":{\\"keccak256\\":\\"0xa03c7485b1181be87377003502e3674fd2fd877d0115698ad938b78bfe16d53c\\",\\"urls\\":[\\"bzz-raw://b9da4c37e63eb41320cd3b9844e0de963b635092b050773a742a2b50ab56ea1b\\",\\"dweb:/ipfs/QmfH9S53Y98xFJc2aoR2AvqpUvFmK1YuwBGAMHDF6ZnJvn\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol\\":{\\"keccak256\\":\\"0x6c8f4d745489646ac61d8a1b6489f4ef6d304963e088759e3310b09d70872af0\\",\\"urls\\":[\\"bzz-raw://0cd1330ae069352987794608bbfdf1e9840b27a2c5c228e0f03dda8846029099\\",\\"dweb:/ipfs/QmbDwvMhqm77v7XRP9yVQkXnqWJrEwsEXhBD6yorpSceHW\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol\\":{\\"keccak256\\":\\"0xd7ce9ab44bc7239498b55a8a9ac1d64c1b1fa7ad56aabe59585de77fb21e37db\\",\\"urls\\":[\\"bzz-raw://a1653dd4bbbfa0c2415338afba52aee0d32c3f0c395b252247cf669e2595ea4d\\",\\"dweb:/ipfs/QmcZJtNkMnrkzLdhXC6QE1hDiLx22N9m3Be8x2YbyHiTxd\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol\\":{\\"keccak256\\":\\"0x3094292bc7a49b349c127fb536e1608c3652e31ee12d6ee476c572e598daff4d\\",\\"urls\\":[\\"bzz-raw://161e2a003e9dff3c31fa4ff59ed57e63ac98caf4f85f2186a7be1049e03c484e\\",\\"dweb:/ipfs/QmPUfft9dziS2ESgW47Ze3tXLPMUt6iwDNyZLjPxtVmUdm\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol\\":{\\"keccak256\\":\\"0x7078232ff1accaee95643d9ccd6a97e02acd122f2cd8dd1a52a1451d60fb6f40\\",\\"urls\\":[\\"bzz-raw://0f4d07106f2a102b9ef4463e9d337eaef945cc8df3ff66294fc29d00dfb0ac77\\",\\"dweb:/ipfs/QmavmpdLAk2BMf7BoV5Pmi2Nvao5RRsiy6PCprYUyvn2E1\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol\\":{\\"keccak256\\":\\"0x6b77e8e0924ae55ad17e609e23d096f8e54f6f67ca88cc1e9b751d400b2cbe31\\",\\"urls\\":[\\"bzz-raw://cada7f8518df930e2cc3e6e0ae1fefdd6a1ba50dfa53be5bf6e238dae4c5f887\\",\\"dweb:/ipfs/QmexqtRPaFdXsbxdS6RAL83QNvxPZM4kuSgdezrfj5Gy2h\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol\\":{\\"keccak256\\":\\"0x87211c65eba30d613f1e2e5e7a29a1b48649c307f3ee896af0f34b3ce098c3d0\\",\\"urls\\":[\\"bzz-raw://ea34b9ba557ad32e0356015064a708b5490126bf530bdcfea5b384c01615c67c\\",\\"dweb:/ipfs/QmeukdfmEDmRtWhwPmcPHQmJEVMFiM1Sr2x9kgJ4D3aYKs\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol\\":{\\"keccak256\\":\\"0x33d43cb8a603ca37398930844f2d3085c470e7146cd32e8a14ad8d1c4c9f6890\\",\\"urls\\":[\\"bzz-raw://38453ac4decd2c060c31657c159d4e5454503dc4751fee37bc4a790147eba7d8\\",\\"dweb:/ipfs/QmPXTg7EGGTh3Yyzj19fye5r3dtf1kRx7CU9JSb9zVFatF\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol\\":{\\"keccak256\\":\\"0x83ba1734c23f81b556ae3450cfa1996d02a17ed6dffa93c3f3b493a8e51f8482\\",\\"urls\\":[\\"bzz-raw://f47f1509cd5032b626bba6a268813d4f60ae8d78cd7646ae1937055113155c42\\",\\"dweb:/ipfs/QmPzmCfyjic1c7iYU5qeTKM11VD79T8xa4g6P23XqUfSSa\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol\\":{\\"keccak256\\":\\"0x11b6c01cdb9e1ff4ba857a4718ce1171258d84110906ada1c33447c40dba8ad6\\",\\"urls\\":[\\"bzz-raw://33460d163c92ef5a8706dff534be88fcb8f2258f0705a50fb519f2f94cd60cd4\\",\\"dweb:/ipfs/QmSc8CnUbAgybSAPzwLoEhXZVZHapWVdfV8ScXuBBVyvR7\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/IExchangeRate.sol\\":{\\"keccak256\\":\\"0x72684d1da1c6ddaadf849beddac8011ff9269d8636c260588b71c326b4cdbf43\\",\\"urls\\":[\\"bzz-raw://de98a9ccd1c5223961221774ceb26e3c7558a430cb1ef9ae45e0aa74562d687b\\",\\"dweb:/ipfs/QmXgdoUC5GL4DpZZqXB7xNrAGh8vRpwbwhuK5DvbXabqEd\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Base64.sol\\":{\\"keccak256\\":\\"0xbfcd1367551dde54f9ffc9356abc09d046b7ff7844194cc0990ef7447cebb877\\",\\"urls\\":[\\"bzz-raw://f29e15a2635f2b49bb860869c30ae906e2682f3bae11e4d05dfe8f0e07195dfc\\",\\"dweb:/ipfs/Qmdj1PELeNPx5SRWmMofUCNHUrWDwynx7YXLNAUqgNzW6U\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Bytes.sol\\":{\\"keccak256\\":\\"0x84392879b363a868f71f3870633e82e7fe2af4e196eb60d997bbfcf2d0dc181f\\",\\"urls\\":[\\"bzz-raw://c8ecd1e882532601f67f36250da3e47b21e34bd3bad195a8612446f9ca608f36\\",\\"dweb:/ipfs/QmT3SrvDqVXn82X7je4mhTYZjfwPdvb9dXurgAbbVC7tAe\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Memory.sol\\":{\\"keccak256\\":\\"0xc1b5d2074bf8c427993f284502618a3db6c5adebb29162d5b72da26260855f62\\",\\"urls\\":[\\"bzz-raw://f01a3d6f19bde637ea68af0096c459409d3ab79424f3239e68698d395a165aff\\",\\"dweb:/ipfs/QmWGq9TmYyQCmSirs5R7AVpPXKh8Rr7mrk2xsoEMdC1TSp\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol\\":{\\"keccak256\\":\\"0x2a48149b76c46dde6b8161e0a990e82cd4632de8bb65b9ebabc9e85531f00870\\",\\"urls\\":[\\"bzz-raw://b43df5d21392467e152fab29af01a1d7a8142bdd9d035cd9f7d10dd73f6f5473\\",\\"dweb:/ipfs/QmPbZBMCs9Y7Uv5jDCiSANwnd5NKUFghYKuYUkeZoq6s6P\\"]},\\"openzeppelin-solidity/contracts/GSN/Context.sol\\":{\\"keccak256\\":\\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\\",\\"urls\\":[\\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\\",\\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\\"]},\\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\":{\\"keccak256\\":\\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\\",\\"urls\\":[\\"bzz-raw://b736ddad8143f8f1cd13c20809d4ebce5f5a8c7725081b0b703294078bd506d1\\",\\"dweb:/ipfs/QmdhTWCXFCuwG9JaPMjwnhkQoDj9su8R7KMPNvD5z9KeWD\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\\",\\"urls\\":[\\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\\",\\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\\"]},\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\":{\\"keccak256\\":\\"0xecd8ab29d9a5771c3964d0cd1788c4a5098a0081b20fb275da850a22b1c59806\\",\\"urls\\":[\\"bzz-raw://696a75bc2c55407ce8251ccc7d19ecb1b7b2be1796a160a6524312babcc7e3d4\\",\\"dweb:/ipfs/QmQViKEp3y99h9uhRssE29TmjBKRnFMaoz3eJZ4eggggg2\\"]}},\\"version\\":1}","bytecode":"0x60806040523480156200001157600080fd5b50604051620057b7380380620057b783398101604081905262000034916200024a565b620000476001600160e01b036200012716565b602780546001600160a01b0319166001600160a01b0392831617908190556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600080546001600160a01b03808a166001600160a01b0319928316179092556001868155858702600255600380548a85169084161790556004805493891693831693909317909255600580549091163017905560238190556024558151620001039060259060208501906200012c565b508051620001199060269060208401906200012c565b5050505050505050620003de565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200016f57805160ff19168380011785556200019f565b828001600101855582156200019f579182015b828111156200019f57825182559160200191906001019062000182565b50620001ad929150620001b1565b5090565b6200012991905b80821115620001ad5760008155600101620001b8565b8051620001db81620003b9565b92915050565b600082601f830112620001f357600080fd5b81516200020a62000204826200034c565b62000325565b915080825260208301602083018583830111156200022757600080fd5b6200023483828462000386565b50505092915050565b8051620001db81620003d3565b600080600080600080600060e0888a0312156200026657600080fd5b6000620002748a8a620001ce565b9750506020620002878a828b01620001ce565b96505060406200029a8a828b01620001ce565b9550506060620002ad8a828b016200023d565b9450506080620002c08a828b016200023d565b93505060a08801516001600160401b03811115620002dd57600080fd5b620002eb8a828b01620001e1565b92505060c08801516001600160401b038111156200030857600080fd5b620003168a828b01620001e1565b91505092959891949750929550565b6040518181016001600160401b03811182821017156200034457600080fd5b604052919050565b60006001600160401b038211156200036357600080fd5b506020601f91909101601f19160190565b60006001600160a01b038216620001db565b60005b83811015620003a357818101518382015260200162000389565b83811115620003b3576000848401525b50505050565b620003c48162000374565b8114620003d057600080fd5b50565b620003c48162000129565b6153c980620003ee6000396000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80638ed057371161015c578063c011b1c3116100ce578063df4da46111610087578063df4da461146105a1578063e79a198f146105a9578063ee6dcef9146105b1578063f2fde38b146105c4578063f74e6e1d146105d7578063f9a9b7ae146105ea5761027f565b8063c011b1c31461052d578063c25d94d21461054d578063c652b91914610560578063ca2af5f214610573578063cbbc061d14610586578063d855a579146105995761027f565b8063a153ec6011610120578063a153ec60146104c3578063a3bdae3e146104d6578063b34e97e8146104f7578063b5c14992146104ff578063b9758c9514610512578063ba2526881461051a5761027f565b80638ed05737146104375780638f32d59b1461045757806395419b281461046c5780639836ca311461047f578063a0c39982146104a25761027f565b8063696356a5116101f557806375bbf75b116101b957806375bbf75b146103ce5780637624281e146103d65780637a743832146103f65780638056b559146104095780638da5cb5b1461041c5780638e055b8b146104245761027f565b8063696356a514610376578063700dd4df1461039657806370266a471461039e578063715018a6146103b3578063716234e3146103bb5761027f565b80633a92d44c116102475780633a92d44c146102fe57806347e7ef241461031357806350946a9f146103265780635486aa7014610339578063550baa2f1461034c5780635f25f850146103615761027f565b806316f9a2a4146102845780631d40ff0b146102ae5780631f3c99c3146102ce5780632e1a7d4d146102d85780633480943b146102eb575b600080fd5b610297610292366004613c90565b6105fd565b6040516102a5929190614c76565b60405180910390f35b6102c16102bc366004613f08565b610697565b6040516102a59190614c65565b6102d6610733565b005b6102d66102e6366004613c90565b610835565b6102d66102f9366004613e3b565b610b72565b610306610bad565b6040516102a59190614ccb565b6102d6610321366004613b9b565b610c44565b6102d6610334366004613faa565b610ed6565b6102d6610347366004613fdc565b611151565b61035461140e565b6040516102a59190614c9b565b610369611468565b6040516102a59190615175565b610389610384366004613a31565b61146e565b6040516102a59190614c17565b61030661148f565b6103a66114f0565b6040516102a59190614cac565b6102d661160a565b6102d66103c9366004613a31565b611678565b610369611757565b6103e96103e4366004613c90565b6117e6565b6040516102a59190614e41565b6102d6610404366004613e3b565b6118ab565b610369610417366004613a57565b6118e2565b6103896119a7565b610354610432366004613f08565b6119b6565b61044a610445366004613c90565b611a49565b6040516102a59190615133565b61045f611b89565b6040516102a59190614cbd565b6102d661047a366004613abb565b611baf565b61049261048d366004613c90565b611edb565b6040516102a59493929190615183565b6104b56104b0366004613a31565b611f7e565b6040516102a5929190614c45565b6102d66104d1366004613d3a565b6121be565b6104e96104e4366004613a31565b612478565b6040516102a5929190614c25565b6102d66126f1565b61036961050d366004613e6f565b61297f565b610389612a0b565b6102d6610528366004613d7e565b612a1a565b61054061053b366004613a31565b612a84565b6040516102a59190615144565b6102d661055b366004613fdc565b612c32565b6102d661056e366004613dd3565b612eb8565b6102d6610581366004613cae565b612f48565b610369610594366004613c90565b6131cc565b610389613258565b610369613277565b6102d661327d565b6102d66105bf366004613c90565b6133b6565b6102d66105d2366004613a31565b613431565b6102d66105e5366004613a31565b613461565b6103696105f8366004613a31565b6134e9565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b815260040161063a929190614f40565b60006040518083038186803b15801561065257600080fd5b505af4158015610666573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261068e9190810190613bff565b91509150915091565b604051635deadfbd60e11b815260609073__WorkersImpl___________________________9063bbd5bf7a906106d69060009087908790600401615093565b60006040518083038186803b1580156106ee57600080fd5b505af4158015610702573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072a9190810190613bcb565b90505b92915050565b6001336000908152601d6020526040902060010154600160a01b900460ff16600281111561075d57fe5b14806107a657506001336000908152601e60209081526040808320546001600160a01b03168352601d909152902060010154600160a01b900460ff1660028111156107a457fe5b145b6107cb5760405162461bcd60e51b81526004016107c290614dc1565b60405180910390fd5b6040516349e44f4960e01b815273__WorkersImpl___________________________906349e44f499061080390600090600401614e52565b60006040518083038186803b15801561081b57600080fd5b505af415801561082f573d6000803e3d6000fd5b50505050565b61083d61358a565b336000908152601e60209081526040808320546001600160a01b039081168452601d835292819020815160c081018352815485168152600182015494851693810193909352919290830190600160a01b900460ff16600281111561089d57fe5b60028111156108a857fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156109345780601f1061090957610100808354040283529160200191610934565b820191906000526020600020905b81548152906001019060200180831161091757829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156109df57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156109ad57fe5b60038111156109b857fe5b8152602001600182015481526020016002820154815250508152602001906001019061096c565b50505091525090915060029050816040015160028111156109fc57fe5b14610a195760405162461bcd60e51b81526004016107c290614e31565b610a216135c0565b6040516328de336160e21b815273__WorkersImpl___________________________9063a378cd8490610a5a9085904390600401615155565b60606040518083038186803b158015610a7257600080fd5b505af4158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610aaa9190810190613ecc565b9050600281516003811115610abb57fe5b14610ad85760405162461bcd60e51b81526004016107c290614d31565b8060200151610ae6436131cc565b11610b035760405162461bcd60e51b81526004016107c290614da1565b604051632fdb7d1960e21b815273__WorkersImpl___________________________9063bf6df46490610b3d906000908790600401614f40565b60006040518083038186803b158015610b5557600080fd5b505af4158015610b69573d6000803e3d6000fd5b50505050505050565b610b7a611b89565b610b965760405162461bcd60e51b81526004016107c290614dd1565b8051610ba99060269060208401906135e2565b5050565b60268054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610c395780601f10610c0e57610100808354040283529160200191610c39565b820191906000526020600020905b815481529060010190602001808311610c1c57829003601f168201915b505050505090505b90565b6005546001600160a01b03163014610c6e5760405162461bcd60e51b81526004016107c290614d51565b6001600160a01b038083166000908152601e602052604090205416610c9161358a565b6001600160a01b038281166000908152601d6020908152604091829020825160c08101845281548516815260018201549485169281019290925290929091830190600160a01b900460ff166002811115610ce757fe5b6002811115610cf257fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015610d7e5780601f10610d5357610100808354040283529160200191610d7e565b820191906000526020600020905b815481529060010190602001808311610d6157829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610e2957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610df757fe5b6003811115610e0257fe5b81526020016001820154815260200160028201548152505081526020019060010190610db6565b5050509152509091506000905081604001516002811115610e4657fe5b1415610e645760405162461bcd60e51b81526004016107c290614de1565b604051630e80483160e21b815273__WorkersImpl___________________________90633a0120c490610ea09060009088908890600401614f18565b60006040518083038186803b158015610eb857600080fd5b505af4158015610ecc573d6000803e3d6000fd5b5050505050505050565b6005546001600160a01b03163014610f005760405162461bcd60e51b81526004016107c290614d51565b33610f0961358a565b6001600160a01b038281166000908152601d6020908152604091829020825160c08101845281548516815260018201549485169281019290925290929091830190600160a01b900460ff166002811115610f5f57fe5b6002811115610f6a57fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015610ff65780601f10610fcb57610100808354040283529160200191610ff6565b820191906000526020600020905b815481529060010190602001808311610fd957829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156110a157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561106f57fe5b600381111561107a57fe5b8152602001600182015481526020016002820154815250508152602001906001019061102e565b50505091525090915060009050816040015160028111156110be57fe5b14156110dc5760405162461bcd60e51b81526004016107c290614de1565b60405163184e876360e31b815273__PrincipalImpl_________________________9063c2743b189061111a906000908990899089906004016150ae565b60006040518083038186803b15801561113257600080fd5b505af4158015611146573d6000803e3d6000fd5b505050505050505050565b6005546001600160a01b0316301461117b5760405162461bcd60e51b81526004016107c290614d51565b61118361358a565b336000908152601d6020908152604091829020825160c08101845281546001600160a01b03908116825260018301549081169382019390935292909190830190600160a01b900460ff1660028111156111d857fe5b60028111156111e357fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f8101839004830285018301909152808452938101939083018282801561126f5780601f106112445761010080835404028352916020019161126f565b820191906000526020600020905b81548152906001019060200180831161125257829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561131a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156112e857fe5b60038111156112f357fe5b815260200160018201548152602001600282015481525050815260200190600101906112a7565b505050915250909150600190508160400151600281111561133757fe5b146113545760405162461bcd60e51b81526004016107c290614dc1565b835160008181526021602052604081206004015460ff16600181111561137657fe5b146113935760405162461bcd60e51b81526004016107c290614df1565b604051632dfb660d60e21b815273__TaskImpl______________________________9063b7ed9834906113d5906000908b908b908b908b908b906004016150d6565b60006040518083038186803b1580156113ed57600080fd5b505af4158015611401573d6000803e3d6000fd5b5050505050505050505050565b60606000601c01805480602002602001604051908101604052809291908181526020018280548015610c3957602002820191906000526020600020905b81548152602001906001019080831161144b575050505050905090565b60025490565b6001600160a01b038082166000908152601e6020526040902054165b919050565b60258054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610c395780601f10610c0e57610100808354040283529160200191610c39565b6114f8613660565b6040805160a08101909152600760056000835b8282101561160157838260040201604051806080016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561158757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611569575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156115df57602002820191906000526020600020905b8154815260200190600101908083116115cb575b505050505081526020016003820154815250508152602001906001019061150b565b50505050905090565b611612611b89565b61162e5760405162461bcd60e51b81526004016107c290614dd1565b6027546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3602780546001600160a01b0319169055565b336000908152601e602052604090205481906001600160a01b0316156116b05760405162461bcd60e51b81526004016107c290614db1565b6001600160a01b038181166000908152601d60205260409020541633146116e95760405162461bcd60e51b81526004016107c290614e11565b6040516355eea9db60e01b815273__WorkersImpl___________________________906355eea9db90611723906000908690600401614e60565b60006040518083038186803b15801561173b57600080fd5b505af415801561174f573d6000803e3d6000fd5b505050505050565b6040516302b519c360e11b815260009073__SecretContractImpl____________________9063056a338690611791908490600401614e52565b60206040518083038186803b1580156117a957600080fd5b505af41580156117bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117e19190810190613eea565b905090565b6117ee61368d565b600082815260216020908152604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561187657602002820191906000526020600020905b815481526020019060010190808311611862575b5050509183525050600482015460209091019060ff16600181111561189757fe5b60018111156118a257fe5b90525092915050565b6118b3611b89565b6118cf5760405162461bcd60e51b81526004016107c290614dd1565b8051610ba99060259060208401906135e2565b6005546000906001600160a01b0316331461190f5760405162461bcd60e51b81526004016107c290614e21565b604051632b1dfbd960e01b815273__UpgradeImpl___________________________90632b1dfbd99061194d90600090889088908890600401614e7b565b60206040518083038186803b15801561196557600080fd5b505af4158015611979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061199d9190810190613eea565b90505b9392505050565b6027546001600160a01b031690565b60405163e5a2600960e01b815260609073__SecretContractImpl____________________9063e5a26009906119f59060009087908790600401615093565b60006040518083038186803b158015611a0d57600080fd5b505af4158015611a21573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072a9190810190613c5c565b611a516136b8565b6000828152601f602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff90911690811115611ae057fe5b6005811115611aeb57fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611b795780601f10611b4e57610100808354040283529160200191611b79565b820191906000526020600020905b815481529060010190602001808311611b5c57829003601f168201915b5050505050815250509050919050565b6027546000906001600160a01b0316611ba0613504565b6001600160a01b031614905090565b6005546001600160a01b03163014611bd95760405162461bcd60e51b81526004016107c290614d51565b33611be261358a565b6001600160a01b038281166000908152601d6020908152604091829020825160c08101845281548516815260018201549485169281019290925290929091830190600160a01b900460ff166002811115611c3857fe5b6002811115611c4357fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015611ccf5780601f10611ca457610100808354040283529160200191611ccf565b820191906000526020600020905b815481529060010190602001808311611cb257829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611d7a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611d4857fe5b6003811115611d5357fe5b81526020016001820154815260200160028201548152505081526020019060010190611d07565b5050509152509091506000905081604001516002811115611d9757fe5b14611db45760405162461bcd60e51b81526004016107c290614e01565b8460005b601b54811015611e3657816001600160a01b03166000601d01600080601b018481548110611de257fe5b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902060010154161415611e2e5760405162461bcd60e51b81526004016107c290614d11565b600101611db8565b50866001600160a01b038116331415611e615760405162461bcd60e51b81526004016107c290614d71565b60405163664e04e560e01b815273__WorkersImpl___________________________9063664e04e590611ea1906000908c908c908c908c90600401614ebf565b60006040518083038186803b158015611eb957600080fd5b505af4158015611ecd573d6000803e3d6000fd5b505050505050505050505050565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611f1b929190614f40565b60006040518083038186803b158015611f3357600080fd5b505af4158015611f47573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611f6f9190810190613f27565b93509350935093509193509193565b6000611f8861358a565b6000611f9261358a565b60005b601b548110156121b357601b8054601d9160009184908110611fb357fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160c0810184528154851681526001820154948516928101929092529092909183019060ff600160a01b90910416600281111561201757fe5b600281111561202257fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156120ae5780601f10612083576101008083540402835291602001916120ae565b820191906000526020600020905b81548152906001019060200180831161209157829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561215957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561212757fe5b600381111561213257fe5b815260200160018201548152602001600282015481525050815260200190600101906120e6565b50505050815250509150856001600160a01b031682602001516001600160a01b031614156121ab57601b80548290811061218f57fe5b6000918252602090912001546001600160a01b031692506121b3565b600101611f95565b509092509050915091565b6005546001600160a01b031630146121e85760405162461bcd60e51b81526004016107c290614d51565b6121f061358a565b336000908152601d6020908152604091829020825160c08101845281546001600160a01b03908116825260018301549081169382019390935292909190830190600160a01b900460ff16600281111561224557fe5b600281111561225057fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156122dc5780601f106122b1576101008083540402835291602001916122dc565b820191906000526020600020905b8154815290600101906020018083116122bf57829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561238757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561235557fe5b600381111561236057fe5b81526020016001820154815260200160028201548152505081526020019060010190612314565b50505091525090915060019050816040015160028111156123a457fe5b146123c15760405162461bcd60e51b81526004016107c290614dc1565b846000808281526021602052604090206004015460ff1660018111156123e357fe5b146124005760405162461bcd60e51b81526004016107c290614df1565b6040516301c7aeeb60e21b815273__TaskImpl______________________________9063071ebbac90612440906000908a908a908a908a90600401614fbb565b60006040518083038186803b15801561245857600080fd5b505af415801561246c573d6000803e3d6000fd5b50505050505050505050565b600060608261248561358a565b6001600160a01b038281166000908152601d6020908152604091829020825160c08101845281548516815260018201549485169281019290925290929091830190600160a01b900460ff1660028111156124db57fe5b60028111156124e657fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156125725780601f1061254757610100808354040283529160200191612572565b820191906000526020600020905b81548152906001019060200180831161255557829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561261d57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156125eb57fe5b60038111156125f657fe5b815260200160018201548152602001600282015481525050815260200190600101906125aa565b505050915250909150600090508160400151600281111561263a57fe5b14156126585760405162461bcd60e51b81526004016107c290614de1565b604051632f68f03160e01b815273__WorkersImpl___________________________90632f68f03190612692906000908990600401614e60565b60006040518083038186803b1580156126aa57600080fd5b505af41580156126be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526126e69190810190613b4a565b935093505050915091565b6126f961358a565b336000908152601d6020908152604091829020825160c08101845281546001600160a01b03908116825260018301549081169382019390935292909190830190600160a01b900460ff16600281111561274e57fe5b600281111561275957fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156127e55780601f106127ba576101008083540402835291602001916127e5565b820191906000526020600020905b8154815290600101906020018083116127c857829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561289057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561285e57fe5b600381111561286957fe5b8152602001600182015481526020016002820154815250508152602001906001019061281d565b505050508152505090506128a3436131cc565b6128bf5760405162461bcd60e51b81526004016107c290614d91565b6002816040015160028111156128d157fe5b146128ee5760405162461bcd60e51b81526004016107c290614e31565b602354608082015110156129145760405162461bcd60e51b81526004016107c290614d01565b6040516318a8dc7160e11b815273__WorkersImpl___________________________90633151b8e29061294c90600090600401614e52565b60006040518083038186803b15801561296457600080fd5b505af4158015612978573d6000803e3d6000fd5b5050505050565b6040516312c8c46d60e31b815260009073__WorkersImpl___________________________906396462368906129bb9086908690600401614cdc565b60206040518083038186803b1580156129d357600080fd5b505af41580156129e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061072a9190810190613eea565b6005546001600160a01b031690565b6005546001600160a01b03163014612a445760405162461bcd60e51b81526004016107c290614d51565b604051638c91056d60e01b815273__TaskImpl______________________________90638c91056d90610ea0906000908890889088908890600401615002565b612a8c61358a565b6001600160a01b038281166000908152601d6020908152604091829020825160c08101845281548516815260018201549485169281019290925290929091830190600160a01b900460ff166002811115612ae257fe5b6002811115612aed57fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015612b795780601f10612b4e57610100808354040283529160200191612b79565b820191906000526020600020905b815481529060010190602001808311612b5c57829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015612c2457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612bf257fe5b6003811115612bfd57fe5b81526020016001820154815260200160028201548152505081526020019060010190612bb1565b505050915250909392505050565b6005546001600160a01b03163014612c5c5760405162461bcd60e51b81526004016107c290614d51565b612c6461358a565b336000908152601d6020908152604091829020825160c08101845281546001600160a01b03908116825260018301549081169382019390935292909190830190600160a01b900460ff166002811115612cb957fe5b6002811115612cc457fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015612d505780601f10612d2557610100808354040283529160200191612d50565b820191906000526020600020905b815481529060010190602001808311612d3357829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015612dfb57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612dc957fe5b6003811115612dd457fe5b81526020016001820154815260200160028201548152505081526020019060010190612d88565b5050509152509091506001905081604001516002811115612e1857fe5b14612e355760405162461bcd60e51b81526004016107c290614dc1565b835160008181526021602052604090206004015460019060ff1681811115612e5957fe5b14612e765760405162461bcd60e51b81526004016107c290614d41565b60405163b1c57e7b60e01b815273__TaskImpl______________________________9063b1c57e7b906113d5906000908b908b908b908b908b906004016150d6565b612ec0611b89565b612edc5760405162461bcd60e51b81526004016107c290614dd1565b6005546001600160a01b03163014612f065760405162461bcd60e51b81526004016107c290614d51565b6040516366e13f4360e01b815273__TaskImpl______________________________906366e13f439061111a9060009089908990899089908990600401615044565b6005546001600160a01b03163014612f725760405162461bcd60e51b81526004016107c290614d51565b612f7a61358a565b336000908152601d6020908152604091829020825160c08101845281546001600160a01b03908116825260018301549081169382019390935292909190830190600160a01b900460ff166002811115612fcf57fe5b6002811115612fda57fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156130665780601f1061303b57610100808354040283529160200191613066565b820191906000526020600020905b81548152906001019060200180831161304957829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561311157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156130df57fe5b60038111156130ea57fe5b8152602001600182015481526020016002820154815250508152602001906001019061309e565b505050915250909150600190508160400151600281111561312e57fe5b1461314b5760405162461bcd60e51b81526004016107c290614dc1565b85600160008281526021602052604090206004015460ff16600181111561316e57fe5b1461318b5760405162461bcd60e51b81526004016107c290614d41565b6040516289b28160e61b815273__TaskImpl______________________________9063226ca040906113d5906000908b908b908b908b908b90600401614f5b565b6040516304d5c11360e31b815260009073__WorkersImpl___________________________906326ae0898906132089084908690600401614f40565b60206040518083038186803b15801561322057600080fd5b505af4158015613234573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061072d9190810190613eea565b336000908152601d60205260409020600101546001600160a01b031690565b60015490565b6005546001600160a01b031630146132a75760405162461bcd60e51b81526004016107c290614d51565b6000336000908152601d6020526040902060010154600160a01b900460ff1660028111156132d157fe5b14158061331c57506000336000908152601e60209081526040808320546001600160a01b03168352601d909152902060010154600160a01b900460ff16600281111561331957fe5b14155b6133385760405162461bcd60e51b81526004016107c290614de1565b336000908152601e60209081526040808320546001600160a01b03168352601d9091529020600301541561337e5760405162461bcd60e51b81526004016107c290614d61565b604051631ea9265d60e11b815273__WorkersImpl___________________________90633d524cba9061080390600090600401614e52565b8060016000828152601f6020526040902060059081015460ff16908111156133da57fe5b146133f75760405162461bcd60e51b81526004016107c290614d81565b604051631c9a715b60e01b815273__TaskImpl______________________________90631c9a715b90611723906000908690600401614f40565b613439611b89565b6134555760405162461bcd60e51b81526004016107c290614dd1565b61345e81613508565b50565b613469611b89565b6134855760405162461bcd60e51b81526004016107c290614dd1565b6005546001600160a01b031630146134af5760405162461bcd60e51b81526004016107c290614d51565b6040516368fac41b60e01b815273__UpgradeImpl___________________________906368fac41b9061294c906000908590600401614e60565b6001600160a01b031660009081526022602052604090205490565b3390565b6001600160a01b03811661352e5760405162461bcd60e51b81526004016107c290614d21565b6027546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3602780546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160c081018252600080825260208201819052909182019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061362357805160ff1916838001178555613650565b82800160010185558215613650579182015b82811115613650578251825591602001919060010190613635565b5061365c9291506136fd565b5090565b6040518060a001604052806005905b613677613717565b81526020019060019003908161366f5790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b610c4191905b8082111561365c5760008155600101613703565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b803561072d81615353565b805161072d81615353565b600082601f83011261376657600080fd5b8151613779613774826151ea565b6151c4565b9150818183526020840193506020810190508385602084028201111561379e57600080fd5b60005b838110156137ca57816137b4888261374a565b84525060209283019291909101906001016137a1565b5050505092915050565b600082601f8301126137e557600080fd5b60046137f36137748261520a565b9150818385602084028201111561380957600080fd5b60005b838110156137ca578161381f8882613915565b845250602092830192919091019060010161380c565b600082601f83011261384657600080fd5b8151613854613774826151ea565b9150818183526020840193506020810190508385602084028201111561387957600080fd5b60005b838110156137ca578161388f8882613920565b845250602092830192919091019060010161387c565b600082601f8301126138b657600080fd5b81516138c4613774826151ea565b915081818352602084019350602081019050838560208402820111156138e957600080fd5b60005b838110156137ca57816138ff8882613920565b84525060209283019291909101906001016138ec565b803561072d81615367565b805161072d81615367565b600082601f83011261393c57600080fd5b813561394a61377482615227565b9150808252602083016020830185838301111561396657600080fd5b6139718382846152e9565b50505092915050565b600082601f83011261398b57600080fd5b815161399961377482615227565b915080825260208301602083018583830111156139b557600080fd5b6139718382846152f5565b805161072d81615370565b6000606082840312156139dd57600080fd5b6139e760606151c4565b905060006139f584846139c0565b8252506020613a0684848301613920565b6020830152506040613a1a84828501613920565b60408301525092915050565b803561072d8161537d565b600060208284031215613a4357600080fd5b6000613a4f848461373f565b949350505050565b600080600060608486031215613a6c57600080fd5b6000613a78868661373f565b9350506020613a898682870161373f565b92505060408401356001600160401b03811115613aa557600080fd5b613ab18682870161392b565b9150509250925092565b60008060008060808587031215613ad157600080fd5b6000613add878761373f565b9450506020613aee8782880161373f565b93505060408501356001600160401b03811115613b0a57600080fd5b613b168782880161392b565b92505060608501356001600160401b03811115613b3257600080fd5b613b3e8782880161392b565b91505092959194509250565b60008060408385031215613b5d57600080fd5b6000613b69858561374a565b92505060208301516001600160401b03811115613b8557600080fd5b613b918582860161397a565b9150509250929050565b60008060408385031215613bae57600080fd5b6000613bba858561373f565b9250506020613b9185828601613915565b600060208284031215613bdd57600080fd5b81516001600160401b03811115613bf357600080fd5b613a4f84828501613755565b60008060408385031215613c1257600080fd5b82516001600160401b03811115613c2857600080fd5b613c3485828601613755565b92505060208301516001600160401b03811115613c5057600080fd5b613b91858286016138a5565b600060208284031215613c6e57600080fd5b81516001600160401b03811115613c8457600080fd5b613a4f84828501613835565b600060208284031215613ca257600080fd5b6000613a4f8484613915565b600080600080600060a08688031215613cc657600080fd5b6000613cd28888613915565b9550506020613ce388828901613915565b9450506040613cf488828901613915565b9350506060613d0588828901613a26565b92505060808601356001600160401b03811115613d2157600080fd5b613d2d8882890161392b565b9150509295509295909350565b60008060008060808587031215613d5057600080fd5b6000613d5c8787613915565b9450506020613d6d87828801613915565b9350506040613b1687828801613a26565b60008060008060808587031215613d9457600080fd5b6000613da08787613915565b9450506020613db187828801613a26565b9350506040613dc287828801613a26565b9250506060613b3e87828801613915565b600080600080600060a08688031215613deb57600080fd5b6000613df78888613915565b9550506020613e0888828901613a26565b9450506040613e1988828901613a26565b9350506060613e2a88828901613915565b9250506080613d2d88828901613915565b600060208284031215613e4d57600080fd5b81356001600160401b03811115613e6357600080fd5b613a4f8482850161392b565b60008060408385031215613e8257600080fd5b82356001600160401b03811115613e9857600080fd5b613ea48582860161392b565b92505060208301356001600160401b03811115613ec057600080fd5b613b918582860161392b565b600060608284031215613ede57600080fd5b6000613a4f84846139cb565b600060208284031215613efc57600080fd5b6000613a4f8484613920565b60008060408385031215613f1b57600080fd5b6000613bba8585613915565b60008060008060808587031215613f3d57600080fd5b6000613f498787613920565b9450506020613f5a87828801613920565b93505060408501516001600160401b03811115613f7657600080fd5b613f8287828801613755565b92505060608501516001600160401b03811115613f9e57600080fd5b613b3e878288016138a5565b600080600060608486031215613fbf57600080fd5b6000613fcb8686613915565b9350506020613a8986828701613915565b60008060008060006101008688031215613ff557600080fd5b60006140018888613a26565b95505060206140128882890161373f565b9450506040614023888289016137d4565b93505060c08601356001600160401b0381111561403f57600080fd5b61404b8882890161392b565b92505060e08601356001600160401b03811115613d2157600080fd5b600061407383836140a7565b505060200190565b600061407383836143f4565b60006140938383614a7e565b505060600190565b600061072a8383614bb3565b6140b08161526d565b82525050565b60006140c182615254565b6140cb8185615264565b93506140d68361524e565b8060005b838110156141045781516140ee8882614067565b97506140f98361524e565b9250506001016140da565b509495945050505050565b600061411a82615254565b6141248185615264565b935061412f8361524e565b8060005b838110156141045781516141478882614067565b97506141528361524e565b925050600101614133565b61416681615258565b614170818461148a565b925061417b82610c41565b8060005b8381101561174f578151614193878261407b565b965061419e8361524e565b92505060010161417f565b60006141b482615254565b6141be8185615264565b93506141c98361524e565b8060005b838110156141045781516141e1888261407b565b97506141ec8361524e565b9250506001016141cd565b600061420282615254565b61420c8185615264565b93506142178361524e565b8060005b8381101561410457815161422f888261407b565b975061423a8361524e565b92505060010161421b565b600061425082615254565b61425a8185615264565b93506142658361524e565b8060005b8381101561410457815161427d8882614087565b97506142888361524e565b925050600101614269565b600061429e82615254565b6142a88185615264565b93506142b38361524e565b8060005b838110156141045781516142cb8882614087565b97506142d68361524e565b9250506001016142b7565b60006142ec8261525e565b6142f6818561148a565b93508360208202850161430885610c41565b8060005b858110156143425784840389528151614325858261409b565b94506143308361524e565b60209a909a019992505060010161430c565b5091979650505050505050565b600061435a82615254565b6143648185615264565b935061436f8361524e565b8060005b83811015614104578151614387888261407b565b97506143928361524e565b925050600101614373565b60006143a882615254565b6143b28185615264565b93506143bd8361524e565b8060005b838110156141045781516143d5888261407b565b97506143e08361524e565b9250506001016143c1565b6140b081615278565b6140b081610c41565b600061440882615254565b6144128185615264565b93506144228185602086016152f5565b61442b81615321565b9093019392505050565b6140b0816152bd565b6140b0816152c8565b6140b0816152d3565b6140b0816152de565b6000614466602283615264565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152611b9d60f21b602082015260400192915050565b60006144aa601883615264565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b60006144e3602683615264565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b600061452b602783615264565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152667574207479706560c81b602082015260400192915050565b6000614574601c83615264565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b60006145ad601b83615264565b7f4e6f74207570646174656420456e69676d6120636f6e74726163740000000000815260200192915050565b60006145e6601d83615264565b7f576f726b657227732062616c616e6365206973206e6f7420656d707479000000815260200192915050565b600061461f603483615264565b7f4f7065726174696e672061646472657373206e6f7420646966666572656e742081527366726f6d207374616b696e67206164647265737360601b602082015260400192915050565b6000614675601383615264565b725461736b206973206e6f742077616974696e6760681b815260200192915050565b60006146a4602783615264565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152661a585b1a5e995960ca1b602082015260400192915050565b60006146ed602e83615264565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381526d081b1bd9c81bdd5d08195d995b9d60921b602082015260400192915050565b600061473d603d83615264565b7f5374616b696e6720616464726573732063757272656e746c792074696564207481527f6f20616e20696e2d757365206f7065726174696e672061646472657373000000602082015260400192915050565b600061479c601483615264565b732bb7b935b2b9103737ba103637b3b3b2b21034b760611b815260200192915050565b60006147cc602083615264565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b6000614805601383615264565b722ab73932b3b4b9ba32b932b2103bb7b935b2b960691b815260200192915050565b6000614834602083615264565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b600061486d601183615264565b702932b3b4b9ba32b932b2103bb7b935b2b960791b815260200192915050565b600061489a603283615264565b7f496e76616c6964207374616b696e67206164647265737320666f722074686973815271206f7065726174696e67206164647265737360701b602082015260400192915050565b60006148ee602083615264565b7f4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374815260200192915050565b6000614927602783615264565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f6781526619d959081bdd5d60ca1b602082015260400192915050565b805160009060a084019061497785826140a7565b50602083015161498a60208601826143f4565b50604083015161499d60408601826143f4565b50606083015184820360608601526149b582826141f7565b91505060808301516149ca6080860182614435565b509392505050565b9052565b80516000906101008401906149eb85826140a7565b5060208301516149fe60208601826143f4565b506040830151614a1160408601826143f4565b506060830151614a246060860182614c0e565b506080830151614a376080860182614c0e565b5060a0830151614a4a60a08601826143f4565b5060c0830151614a5d60c086018261443e565b5060e083015184820360e0860152614a7582826143fd565b95945050505050565b80516060830190614a8f8482614447565b506020820151614aa260208501826143f4565b50604082015161082f60408501826143f4565b805160009060c0840190614ac985826140a7565b506020830151614adc60208601826140a7565b506040830151614aef6040860182614450565b5060608301518482036060860152614b0782826143fd565b9150506080830151614b1c60808601826143f4565b5060a083015184820360a0860152614a758282614245565b805160009060c0840190614b4885826140a7565b506020830151614b5b60208601826140a7565b506040830151614b6e6040860182614450565b5060608301518482036060860152614b8682826143fd565b9150506080830151614b9b60808601826143f4565b5060a083015184820360a0860152614a758282614293565b80516000906080840190614bc785826143f4565b5060208301518482036020860152614bdf828261410f565b91505060408301518482036040860152614bf9828261439d565b91505060608301516149ca60608601826143f4565b6140b0816152b1565b6020810161072d82846140a7565b60408101614c3382856140a7565b818103602083015261199d81846143fd565b60408101614c5382856140a7565b818103602083015261199d8184614ab5565b6020808252810161072a81846140b6565b60408082528101614c8781856140b6565b9050818103602083015261199d818461434f565b6020808252810161072a81846141a9565b6020808252810161072a81846142e1565b6020810161072d82846143eb565b6020808252810161072a81846143fd565b60408082528101614ced81856143fd565b9050818103602083015261199d81846143fd565b6020808252810161072d81614459565b6020808252810161072d8161449d565b6020808252810161072d816144d6565b6020808252810161072d8161451e565b6020808252810161072d81614567565b6020808252810161072d816145a0565b6020808252810161072d816145d9565b6020808252810161072d81614612565b6020808252810161072d81614668565b6020808252810161072d81614697565b6020808252810161072d816146e0565b6020808252810161072d81614730565b6020808252810161072d8161478f565b6020808252810161072d816147bf565b6020808252810161072d816147f8565b6020808252810161072d81614827565b6020808252810161072d81614860565b6020808252810161072d8161488d565b6020808252810161072d816148e1565b6020808252810161072d8161491a565b6020808252810161072a8184614963565b6020810161072d82846149d2565b60408101614e6e82856149d2565b6119a060208301846140a7565b60808101614e8982876149d2565b614e9660208301866140a7565b614ea360408301856140a7565b8181036060830152614eb581846143fd565b9695505050505050565b60a08101614ecd82886149d2565b614eda60208301876140a7565b614ee760408301866140a7565b8181036060830152614ef981856143fd565b90508181036080830152614f0d81846143fd565b979650505050505050565b60608101614f2682866149d2565b614f3360208301856140a7565b613a4f60408301846143f4565b60408101614f4e82856149d2565b6119a060208301846143f4565b60c08101614f6982896149d2565b614f7660208301886143f4565b614f8360408301876143f4565b614f9060608301866143f4565b614f9d6080830185614c0e565b81810360a0830152614faf81846143fd565b98975050505050505050565b60a08101614fc982886149d2565b614fd660208301876143f4565b614fe360408301866143f4565b614ff06060830185614c0e565b8181036080830152614f0d81846143fd565b60a0810161501082886149d2565b61501d60208301876143f4565b61502a6040830186614c0e565b6150376060830185614c0e565b614eb560808301846143f4565b60c0810161505282896149d2565b61505f60208301886143f4565b61506c6040830187614c0e565b6150796060830186614c0e565b61508660808301856143f4565b614f0d60a08301846143f4565b606081016150a182866149d2565b614f3360208301856143f4565b608081016150bc82876149d2565b6150c960208301866143f4565b614ea360408301856143f4565b61012081016150e582896149d2565b6150f26020830188614c0e565b6150ff60408301876140a7565b61510c606083018661415d565b81810360e083015261511e81856143fd565b9050818103610100830152614faf81846143fd565b6020808252810161072a81846149d6565b6020808252810161072a8184614ab5565b604080825281016151668185614b34565b90506119a060208301846143f4565b6020810161072d82846143f4565b6080810161519182876143f4565b61519e60208301866143f4565b81810360408301526151b081856140b6565b90508181036060830152614eb5818461434f565b6040518181016001600160401b03811182821017156151e257600080fd5b604052919050565b60006001600160401b0382111561520057600080fd5b5060209081020190565b60006001600160401b0382111561522057600080fd5b5060200290565b60006001600160401b0382111561523d57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b50600490565b50600590565b90815260200190565b600061072d826152a5565b151590565b8061148a8161532b565b8061148a81615335565b8061148a8161533f565b8061148a81615349565b6001600160a01b031690565b6001600160401b031690565b600061072d8261527d565b600061072d82615287565b600061072d82615291565b600061072d8261529b565b82818337506000910152565b60005b838110156153105781810151838201526020016152f8565b8381111561082f5750506000910152565b601f01601f191690565b6002811061345e57fe5b6006811061345e57fe5b6004811061345e57fe5b6003811061345e57fe5b61535c8161526d565b811461345e57600080fd5b61535c81610c41565b6004811061345e57600080fd5b61535c816152b156fea365627a7a7231582015830a72cc54fec09f781b6be9051d689df48346b0fe2f4f4743d3d3ad308e266c6578706572696d656e74616cf564736f6c634300050c0040","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061027f5760003560e01c80638ed057371161015c578063c011b1c3116100ce578063df4da46111610087578063df4da461146105a1578063e79a198f146105a9578063ee6dcef9146105b1578063f2fde38b146105c4578063f74e6e1d146105d7578063f9a9b7ae146105ea5761027f565b8063c011b1c31461052d578063c25d94d21461054d578063c652b91914610560578063ca2af5f214610573578063cbbc061d14610586578063d855a579146105995761027f565b8063a153ec6011610120578063a153ec60146104c3578063a3bdae3e146104d6578063b34e97e8146104f7578063b5c14992146104ff578063b9758c9514610512578063ba2526881461051a5761027f565b80638ed05737146104375780638f32d59b1461045757806395419b281461046c5780639836ca311461047f578063a0c39982146104a25761027f565b8063696356a5116101f557806375bbf75b116101b957806375bbf75b146103ce5780637624281e146103d65780637a743832146103f65780638056b559146104095780638da5cb5b1461041c5780638e055b8b146104245761027f565b8063696356a514610376578063700dd4df1461039657806370266a471461039e578063715018a6146103b3578063716234e3146103bb5761027f565b80633a92d44c116102475780633a92d44c146102fe57806347e7ef241461031357806350946a9f146103265780635486aa7014610339578063550baa2f1461034c5780635f25f850146103615761027f565b806316f9a2a4146102845780631d40ff0b146102ae5780631f3c99c3146102ce5780632e1a7d4d146102d85780633480943b146102eb575b600080fd5b610297610292366004613c90565b6105fd565b6040516102a5929190614c76565b60405180910390f35b6102c16102bc366004613f08565b610697565b6040516102a59190614c65565b6102d6610733565b005b6102d66102e6366004613c90565b610835565b6102d66102f9366004613e3b565b610b72565b610306610bad565b6040516102a59190614ccb565b6102d6610321366004613b9b565b610c44565b6102d6610334366004613faa565b610ed6565b6102d6610347366004613fdc565b611151565b61035461140e565b6040516102a59190614c9b565b610369611468565b6040516102a59190615175565b610389610384366004613a31565b61146e565b6040516102a59190614c17565b61030661148f565b6103a66114f0565b6040516102a59190614cac565b6102d661160a565b6102d66103c9366004613a31565b611678565b610369611757565b6103e96103e4366004613c90565b6117e6565b6040516102a59190614e41565b6102d6610404366004613e3b565b6118ab565b610369610417366004613a57565b6118e2565b6103896119a7565b610354610432366004613f08565b6119b6565b61044a610445366004613c90565b611a49565b6040516102a59190615133565b61045f611b89565b6040516102a59190614cbd565b6102d661047a366004613abb565b611baf565b61049261048d366004613c90565b611edb565b6040516102a59493929190615183565b6104b56104b0366004613a31565b611f7e565b6040516102a5929190614c45565b6102d66104d1366004613d3a565b6121be565b6104e96104e4366004613a31565b612478565b6040516102a5929190614c25565b6102d66126f1565b61036961050d366004613e6f565b61297f565b610389612a0b565b6102d6610528366004613d7e565b612a1a565b61054061053b366004613a31565b612a84565b6040516102a59190615144565b6102d661055b366004613fdc565b612c32565b6102d661056e366004613dd3565b612eb8565b6102d6610581366004613cae565b612f48565b610369610594366004613c90565b6131cc565b610389613258565b610369613277565b6102d661327d565b6102d66105bf366004613c90565b6133b6565b6102d66105d2366004613a31565b613431565b6102d66105e5366004613a31565b613461565b6103696105f8366004613a31565b6134e9565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b815260040161063a929190614f40565b60006040518083038186803b15801561065257600080fd5b505af4158015610666573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261068e9190810190613bff565b91509150915091565b604051635deadfbd60e11b815260609073__WorkersImpl___________________________9063bbd5bf7a906106d69060009087908790600401615093565b60006040518083038186803b1580156106ee57600080fd5b505af4158015610702573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072a9190810190613bcb565b90505b92915050565b6001336000908152601d6020526040902060010154600160a01b900460ff16600281111561075d57fe5b14806107a657506001336000908152601e60209081526040808320546001600160a01b03168352601d909152902060010154600160a01b900460ff1660028111156107a457fe5b145b6107cb5760405162461bcd60e51b81526004016107c290614dc1565b60405180910390fd5b6040516349e44f4960e01b815273__WorkersImpl___________________________906349e44f499061080390600090600401614e52565b60006040518083038186803b15801561081b57600080fd5b505af415801561082f573d6000803e3d6000fd5b50505050565b61083d61358a565b336000908152601e60209081526040808320546001600160a01b039081168452601d835292819020815160c081018352815485168152600182015494851693810193909352919290830190600160a01b900460ff16600281111561089d57fe5b60028111156108a857fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156109345780601f1061090957610100808354040283529160200191610934565b820191906000526020600020905b81548152906001019060200180831161091757829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156109df57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156109ad57fe5b60038111156109b857fe5b8152602001600182015481526020016002820154815250508152602001906001019061096c565b50505091525090915060029050816040015160028111156109fc57fe5b14610a195760405162461bcd60e51b81526004016107c290614e31565b610a216135c0565b6040516328de336160e21b815273__WorkersImpl___________________________9063a378cd8490610a5a9085904390600401615155565b60606040518083038186803b158015610a7257600080fd5b505af4158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610aaa9190810190613ecc565b9050600281516003811115610abb57fe5b14610ad85760405162461bcd60e51b81526004016107c290614d31565b8060200151610ae6436131cc565b11610b035760405162461bcd60e51b81526004016107c290614da1565b604051632fdb7d1960e21b815273__WorkersImpl___________________________9063bf6df46490610b3d906000908790600401614f40565b60006040518083038186803b158015610b5557600080fd5b505af4158015610b69573d6000803e3d6000fd5b50505050505050565b610b7a611b89565b610b965760405162461bcd60e51b81526004016107c290614dd1565b8051610ba99060269060208401906135e2565b5050565b60268054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610c395780601f10610c0e57610100808354040283529160200191610c39565b820191906000526020600020905b815481529060010190602001808311610c1c57829003601f168201915b505050505090505b90565b6005546001600160a01b03163014610c6e5760405162461bcd60e51b81526004016107c290614d51565b6001600160a01b038083166000908152601e602052604090205416610c9161358a565b6001600160a01b038281166000908152601d6020908152604091829020825160c08101845281548516815260018201549485169281019290925290929091830190600160a01b900460ff166002811115610ce757fe5b6002811115610cf257fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015610d7e5780601f10610d5357610100808354040283529160200191610d7e565b820191906000526020600020905b815481529060010190602001808311610d6157829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610e2957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610df757fe5b6003811115610e0257fe5b81526020016001820154815260200160028201548152505081526020019060010190610db6565b5050509152509091506000905081604001516002811115610e4657fe5b1415610e645760405162461bcd60e51b81526004016107c290614de1565b604051630e80483160e21b815273__WorkersImpl___________________________90633a0120c490610ea09060009088908890600401614f18565b60006040518083038186803b158015610eb857600080fd5b505af4158015610ecc573d6000803e3d6000fd5b5050505050505050565b6005546001600160a01b03163014610f005760405162461bcd60e51b81526004016107c290614d51565b33610f0961358a565b6001600160a01b038281166000908152601d6020908152604091829020825160c08101845281548516815260018201549485169281019290925290929091830190600160a01b900460ff166002811115610f5f57fe5b6002811115610f6a57fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015610ff65780601f10610fcb57610100808354040283529160200191610ff6565b820191906000526020600020905b815481529060010190602001808311610fd957829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156110a157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561106f57fe5b600381111561107a57fe5b8152602001600182015481526020016002820154815250508152602001906001019061102e565b50505091525090915060009050816040015160028111156110be57fe5b14156110dc5760405162461bcd60e51b81526004016107c290614de1565b60405163184e876360e31b815273__PrincipalImpl_________________________9063c2743b189061111a906000908990899089906004016150ae565b60006040518083038186803b15801561113257600080fd5b505af4158015611146573d6000803e3d6000fd5b505050505050505050565b6005546001600160a01b0316301461117b5760405162461bcd60e51b81526004016107c290614d51565b61118361358a565b336000908152601d6020908152604091829020825160c08101845281546001600160a01b03908116825260018301549081169382019390935292909190830190600160a01b900460ff1660028111156111d857fe5b60028111156111e357fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f8101839004830285018301909152808452938101939083018282801561126f5780601f106112445761010080835404028352916020019161126f565b820191906000526020600020905b81548152906001019060200180831161125257829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561131a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156112e857fe5b60038111156112f357fe5b815260200160018201548152602001600282015481525050815260200190600101906112a7565b505050915250909150600190508160400151600281111561133757fe5b146113545760405162461bcd60e51b81526004016107c290614dc1565b835160008181526021602052604081206004015460ff16600181111561137657fe5b146113935760405162461bcd60e51b81526004016107c290614df1565b604051632dfb660d60e21b815273__TaskImpl______________________________9063b7ed9834906113d5906000908b908b908b908b908b906004016150d6565b60006040518083038186803b1580156113ed57600080fd5b505af4158015611401573d6000803e3d6000fd5b5050505050505050505050565b60606000601c01805480602002602001604051908101604052809291908181526020018280548015610c3957602002820191906000526020600020905b81548152602001906001019080831161144b575050505050905090565b60025490565b6001600160a01b038082166000908152601e6020526040902054165b919050565b60258054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610c395780601f10610c0e57610100808354040283529160200191610c39565b6114f8613660565b6040805160a08101909152600760056000835b8282101561160157838260040201604051806080016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561158757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611569575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156115df57602002820191906000526020600020905b8154815260200190600101908083116115cb575b505050505081526020016003820154815250508152602001906001019061150b565b50505050905090565b611612611b89565b61162e5760405162461bcd60e51b81526004016107c290614dd1565b6027546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3602780546001600160a01b0319169055565b336000908152601e602052604090205481906001600160a01b0316156116b05760405162461bcd60e51b81526004016107c290614db1565b6001600160a01b038181166000908152601d60205260409020541633146116e95760405162461bcd60e51b81526004016107c290614e11565b6040516355eea9db60e01b815273__WorkersImpl___________________________906355eea9db90611723906000908690600401614e60565b60006040518083038186803b15801561173b57600080fd5b505af415801561174f573d6000803e3d6000fd5b505050505050565b6040516302b519c360e11b815260009073__SecretContractImpl____________________9063056a338690611791908490600401614e52565b60206040518083038186803b1580156117a957600080fd5b505af41580156117bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117e19190810190613eea565b905090565b6117ee61368d565b600082815260216020908152604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561187657602002820191906000526020600020905b815481526020019060010190808311611862575b5050509183525050600482015460209091019060ff16600181111561189757fe5b60018111156118a257fe5b90525092915050565b6118b3611b89565b6118cf5760405162461bcd60e51b81526004016107c290614dd1565b8051610ba99060259060208401906135e2565b6005546000906001600160a01b0316331461190f5760405162461bcd60e51b81526004016107c290614e21565b604051632b1dfbd960e01b815273__UpgradeImpl___________________________90632b1dfbd99061194d90600090889088908890600401614e7b565b60206040518083038186803b15801561196557600080fd5b505af4158015611979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061199d9190810190613eea565b90505b9392505050565b6027546001600160a01b031690565b60405163e5a2600960e01b815260609073__SecretContractImpl____________________9063e5a26009906119f59060009087908790600401615093565b60006040518083038186803b158015611a0d57600080fd5b505af4158015611a21573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072a9190810190613c5c565b611a516136b8565b6000828152601f602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff90911690811115611ae057fe5b6005811115611aeb57fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611b795780601f10611b4e57610100808354040283529160200191611b79565b820191906000526020600020905b815481529060010190602001808311611b5c57829003601f168201915b5050505050815250509050919050565b6027546000906001600160a01b0316611ba0613504565b6001600160a01b031614905090565b6005546001600160a01b03163014611bd95760405162461bcd60e51b81526004016107c290614d51565b33611be261358a565b6001600160a01b038281166000908152601d6020908152604091829020825160c08101845281548516815260018201549485169281019290925290929091830190600160a01b900460ff166002811115611c3857fe5b6002811115611c4357fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015611ccf5780601f10611ca457610100808354040283529160200191611ccf565b820191906000526020600020905b815481529060010190602001808311611cb257829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611d7a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611d4857fe5b6003811115611d5357fe5b81526020016001820154815260200160028201548152505081526020019060010190611d07565b5050509152509091506000905081604001516002811115611d9757fe5b14611db45760405162461bcd60e51b81526004016107c290614e01565b8460005b601b54811015611e3657816001600160a01b03166000601d01600080601b018481548110611de257fe5b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902060010154161415611e2e5760405162461bcd60e51b81526004016107c290614d11565b600101611db8565b50866001600160a01b038116331415611e615760405162461bcd60e51b81526004016107c290614d71565b60405163664e04e560e01b815273__WorkersImpl___________________________9063664e04e590611ea1906000908c908c908c908c90600401614ebf565b60006040518083038186803b158015611eb957600080fd5b505af4158015611ecd573d6000803e3d6000fd5b505050505050505050505050565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611f1b929190614f40565b60006040518083038186803b158015611f3357600080fd5b505af4158015611f47573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611f6f9190810190613f27565b93509350935093509193509193565b6000611f8861358a565b6000611f9261358a565b60005b601b548110156121b357601b8054601d9160009184908110611fb357fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160c0810184528154851681526001820154948516928101929092529092909183019060ff600160a01b90910416600281111561201757fe5b600281111561202257fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156120ae5780601f10612083576101008083540402835291602001916120ae565b820191906000526020600020905b81548152906001019060200180831161209157829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561215957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561212757fe5b600381111561213257fe5b815260200160018201548152602001600282015481525050815260200190600101906120e6565b50505050815250509150856001600160a01b031682602001516001600160a01b031614156121ab57601b80548290811061218f57fe5b6000918252602090912001546001600160a01b031692506121b3565b600101611f95565b509092509050915091565b6005546001600160a01b031630146121e85760405162461bcd60e51b81526004016107c290614d51565b6121f061358a565b336000908152601d6020908152604091829020825160c08101845281546001600160a01b03908116825260018301549081169382019390935292909190830190600160a01b900460ff16600281111561224557fe5b600281111561225057fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156122dc5780601f106122b1576101008083540402835291602001916122dc565b820191906000526020600020905b8154815290600101906020018083116122bf57829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561238757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561235557fe5b600381111561236057fe5b81526020016001820154815260200160028201548152505081526020019060010190612314565b50505091525090915060019050816040015160028111156123a457fe5b146123c15760405162461bcd60e51b81526004016107c290614dc1565b846000808281526021602052604090206004015460ff1660018111156123e357fe5b146124005760405162461bcd60e51b81526004016107c290614df1565b6040516301c7aeeb60e21b815273__TaskImpl______________________________9063071ebbac90612440906000908a908a908a908a90600401614fbb565b60006040518083038186803b15801561245857600080fd5b505af415801561246c573d6000803e3d6000fd5b50505050505050505050565b600060608261248561358a565b6001600160a01b038281166000908152601d6020908152604091829020825160c08101845281548516815260018201549485169281019290925290929091830190600160a01b900460ff1660028111156124db57fe5b60028111156124e657fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156125725780601f1061254757610100808354040283529160200191612572565b820191906000526020600020905b81548152906001019060200180831161255557829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561261d57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156125eb57fe5b60038111156125f657fe5b815260200160018201548152602001600282015481525050815260200190600101906125aa565b505050915250909150600090508160400151600281111561263a57fe5b14156126585760405162461bcd60e51b81526004016107c290614de1565b604051632f68f03160e01b815273__WorkersImpl___________________________90632f68f03190612692906000908990600401614e60565b60006040518083038186803b1580156126aa57600080fd5b505af41580156126be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526126e69190810190613b4a565b935093505050915091565b6126f961358a565b336000908152601d6020908152604091829020825160c08101845281546001600160a01b03908116825260018301549081169382019390935292909190830190600160a01b900460ff16600281111561274e57fe5b600281111561275957fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156127e55780601f106127ba576101008083540402835291602001916127e5565b820191906000526020600020905b8154815290600101906020018083116127c857829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561289057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561285e57fe5b600381111561286957fe5b8152602001600182015481526020016002820154815250508152602001906001019061281d565b505050508152505090506128a3436131cc565b6128bf5760405162461bcd60e51b81526004016107c290614d91565b6002816040015160028111156128d157fe5b146128ee5760405162461bcd60e51b81526004016107c290614e31565b602354608082015110156129145760405162461bcd60e51b81526004016107c290614d01565b6040516318a8dc7160e11b815273__WorkersImpl___________________________90633151b8e29061294c90600090600401614e52565b60006040518083038186803b15801561296457600080fd5b505af4158015612978573d6000803e3d6000fd5b5050505050565b6040516312c8c46d60e31b815260009073__WorkersImpl___________________________906396462368906129bb9086908690600401614cdc565b60206040518083038186803b1580156129d357600080fd5b505af41580156129e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061072a9190810190613eea565b6005546001600160a01b031690565b6005546001600160a01b03163014612a445760405162461bcd60e51b81526004016107c290614d51565b604051638c91056d60e01b815273__TaskImpl______________________________90638c91056d90610ea0906000908890889088908890600401615002565b612a8c61358a565b6001600160a01b038281166000908152601d6020908152604091829020825160c08101845281548516815260018201549485169281019290925290929091830190600160a01b900460ff166002811115612ae257fe5b6002811115612aed57fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015612b795780601f10612b4e57610100808354040283529160200191612b79565b820191906000526020600020905b815481529060010190602001808311612b5c57829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015612c2457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612bf257fe5b6003811115612bfd57fe5b81526020016001820154815260200160028201548152505081526020019060010190612bb1565b505050915250909392505050565b6005546001600160a01b03163014612c5c5760405162461bcd60e51b81526004016107c290614d51565b612c6461358a565b336000908152601d6020908152604091829020825160c08101845281546001600160a01b03908116825260018301549081169382019390935292909190830190600160a01b900460ff166002811115612cb957fe5b6002811115612cc457fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015612d505780601f10612d2557610100808354040283529160200191612d50565b820191906000526020600020905b815481529060010190602001808311612d3357829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015612dfb57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612dc957fe5b6003811115612dd457fe5b81526020016001820154815260200160028201548152505081526020019060010190612d88565b5050509152509091506001905081604001516002811115612e1857fe5b14612e355760405162461bcd60e51b81526004016107c290614dc1565b835160008181526021602052604090206004015460019060ff1681811115612e5957fe5b14612e765760405162461bcd60e51b81526004016107c290614d41565b60405163b1c57e7b60e01b815273__TaskImpl______________________________9063b1c57e7b906113d5906000908b908b908b908b908b906004016150d6565b612ec0611b89565b612edc5760405162461bcd60e51b81526004016107c290614dd1565b6005546001600160a01b03163014612f065760405162461bcd60e51b81526004016107c290614d51565b6040516366e13f4360e01b815273__TaskImpl______________________________906366e13f439061111a9060009089908990899089908990600401615044565b6005546001600160a01b03163014612f725760405162461bcd60e51b81526004016107c290614d51565b612f7a61358a565b336000908152601d6020908152604091829020825160c08101845281546001600160a01b03908116825260018301549081169382019390935292909190830190600160a01b900460ff166002811115612fcf57fe5b6002811115612fda57fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156130665780601f1061303b57610100808354040283529160200191613066565b820191906000526020600020905b81548152906001019060200180831161304957829003601f168201915b505050505081526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561311157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156130df57fe5b60038111156130ea57fe5b8152602001600182015481526020016002820154815250508152602001906001019061309e565b505050915250909150600190508160400151600281111561312e57fe5b1461314b5760405162461bcd60e51b81526004016107c290614dc1565b85600160008281526021602052604090206004015460ff16600181111561316e57fe5b1461318b5760405162461bcd60e51b81526004016107c290614d41565b6040516289b28160e61b815273__TaskImpl______________________________9063226ca040906113d5906000908b908b908b908b908b90600401614f5b565b6040516304d5c11360e31b815260009073__WorkersImpl___________________________906326ae0898906132089084908690600401614f40565b60206040518083038186803b15801561322057600080fd5b505af4158015613234573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061072d9190810190613eea565b336000908152601d60205260409020600101546001600160a01b031690565b60015490565b6005546001600160a01b031630146132a75760405162461bcd60e51b81526004016107c290614d51565b6000336000908152601d6020526040902060010154600160a01b900460ff1660028111156132d157fe5b14158061331c57506000336000908152601e60209081526040808320546001600160a01b03168352601d909152902060010154600160a01b900460ff16600281111561331957fe5b14155b6133385760405162461bcd60e51b81526004016107c290614de1565b336000908152601e60209081526040808320546001600160a01b03168352601d9091529020600301541561337e5760405162461bcd60e51b81526004016107c290614d61565b604051631ea9265d60e11b815273__WorkersImpl___________________________90633d524cba9061080390600090600401614e52565b8060016000828152601f6020526040902060059081015460ff16908111156133da57fe5b146133f75760405162461bcd60e51b81526004016107c290614d81565b604051631c9a715b60e01b815273__TaskImpl______________________________90631c9a715b90611723906000908690600401614f40565b613439611b89565b6134555760405162461bcd60e51b81526004016107c290614dd1565b61345e81613508565b50565b613469611b89565b6134855760405162461bcd60e51b81526004016107c290614dd1565b6005546001600160a01b031630146134af5760405162461bcd60e51b81526004016107c290614d51565b6040516368fac41b60e01b815273__UpgradeImpl___________________________906368fac41b9061294c906000908590600401614e60565b6001600160a01b031660009081526022602052604090205490565b3390565b6001600160a01b03811661352e5760405162461bcd60e51b81526004016107c290614d21565b6027546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3602780546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160c081018252600080825260208201819052909182019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061362357805160ff1916838001178555613650565b82800160010185558215613650579182015b82811115613650578251825591602001919060010190613635565b5061365c9291506136fd565b5090565b6040518060a001604052806005905b613677613717565b81526020019060019003908161366f5790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b610c4191905b8082111561365c5760008155600101613703565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b803561072d81615353565b805161072d81615353565b600082601f83011261376657600080fd5b8151613779613774826151ea565b6151c4565b9150818183526020840193506020810190508385602084028201111561379e57600080fd5b60005b838110156137ca57816137b4888261374a565b84525060209283019291909101906001016137a1565b5050505092915050565b600082601f8301126137e557600080fd5b60046137f36137748261520a565b9150818385602084028201111561380957600080fd5b60005b838110156137ca578161381f8882613915565b845250602092830192919091019060010161380c565b600082601f83011261384657600080fd5b8151613854613774826151ea565b9150818183526020840193506020810190508385602084028201111561387957600080fd5b60005b838110156137ca578161388f8882613920565b845250602092830192919091019060010161387c565b600082601f8301126138b657600080fd5b81516138c4613774826151ea565b915081818352602084019350602081019050838560208402820111156138e957600080fd5b60005b838110156137ca57816138ff8882613920565b84525060209283019291909101906001016138ec565b803561072d81615367565b805161072d81615367565b600082601f83011261393c57600080fd5b813561394a61377482615227565b9150808252602083016020830185838301111561396657600080fd5b6139718382846152e9565b50505092915050565b600082601f83011261398b57600080fd5b815161399961377482615227565b915080825260208301602083018583830111156139b557600080fd5b6139718382846152f5565b805161072d81615370565b6000606082840312156139dd57600080fd5b6139e760606151c4565b905060006139f584846139c0565b8252506020613a0684848301613920565b6020830152506040613a1a84828501613920565b60408301525092915050565b803561072d8161537d565b600060208284031215613a4357600080fd5b6000613a4f848461373f565b949350505050565b600080600060608486031215613a6c57600080fd5b6000613a78868661373f565b9350506020613a898682870161373f565b92505060408401356001600160401b03811115613aa557600080fd5b613ab18682870161392b565b9150509250925092565b60008060008060808587031215613ad157600080fd5b6000613add878761373f565b9450506020613aee8782880161373f565b93505060408501356001600160401b03811115613b0a57600080fd5b613b168782880161392b565b92505060608501356001600160401b03811115613b3257600080fd5b613b3e8782880161392b565b91505092959194509250565b60008060408385031215613b5d57600080fd5b6000613b69858561374a565b92505060208301516001600160401b03811115613b8557600080fd5b613b918582860161397a565b9150509250929050565b60008060408385031215613bae57600080fd5b6000613bba858561373f565b9250506020613b9185828601613915565b600060208284031215613bdd57600080fd5b81516001600160401b03811115613bf357600080fd5b613a4f84828501613755565b60008060408385031215613c1257600080fd5b82516001600160401b03811115613c2857600080fd5b613c3485828601613755565b92505060208301516001600160401b03811115613c5057600080fd5b613b91858286016138a5565b600060208284031215613c6e57600080fd5b81516001600160401b03811115613c8457600080fd5b613a4f84828501613835565b600060208284031215613ca257600080fd5b6000613a4f8484613915565b600080600080600060a08688031215613cc657600080fd5b6000613cd28888613915565b9550506020613ce388828901613915565b9450506040613cf488828901613915565b9350506060613d0588828901613a26565b92505060808601356001600160401b03811115613d2157600080fd5b613d2d8882890161392b565b9150509295509295909350565b60008060008060808587031215613d5057600080fd5b6000613d5c8787613915565b9450506020613d6d87828801613915565b9350506040613b1687828801613a26565b60008060008060808587031215613d9457600080fd5b6000613da08787613915565b9450506020613db187828801613a26565b9350506040613dc287828801613a26565b9250506060613b3e87828801613915565b600080600080600060a08688031215613deb57600080fd5b6000613df78888613915565b9550506020613e0888828901613a26565b9450506040613e1988828901613a26565b9350506060613e2a88828901613915565b9250506080613d2d88828901613915565b600060208284031215613e4d57600080fd5b81356001600160401b03811115613e6357600080fd5b613a4f8482850161392b565b60008060408385031215613e8257600080fd5b82356001600160401b03811115613e9857600080fd5b613ea48582860161392b565b92505060208301356001600160401b03811115613ec057600080fd5b613b918582860161392b565b600060608284031215613ede57600080fd5b6000613a4f84846139cb565b600060208284031215613efc57600080fd5b6000613a4f8484613920565b60008060408385031215613f1b57600080fd5b6000613bba8585613915565b60008060008060808587031215613f3d57600080fd5b6000613f498787613920565b9450506020613f5a87828801613920565b93505060408501516001600160401b03811115613f7657600080fd5b613f8287828801613755565b92505060608501516001600160401b03811115613f9e57600080fd5b613b3e878288016138a5565b600080600060608486031215613fbf57600080fd5b6000613fcb8686613915565b9350506020613a8986828701613915565b60008060008060006101008688031215613ff557600080fd5b60006140018888613a26565b95505060206140128882890161373f565b9450506040614023888289016137d4565b93505060c08601356001600160401b0381111561403f57600080fd5b61404b8882890161392b565b92505060e08601356001600160401b03811115613d2157600080fd5b600061407383836140a7565b505060200190565b600061407383836143f4565b60006140938383614a7e565b505060600190565b600061072a8383614bb3565b6140b08161526d565b82525050565b60006140c182615254565b6140cb8185615264565b93506140d68361524e565b8060005b838110156141045781516140ee8882614067565b97506140f98361524e565b9250506001016140da565b509495945050505050565b600061411a82615254565b6141248185615264565b935061412f8361524e565b8060005b838110156141045781516141478882614067565b97506141528361524e565b925050600101614133565b61416681615258565b614170818461148a565b925061417b82610c41565b8060005b8381101561174f578151614193878261407b565b965061419e8361524e565b92505060010161417f565b60006141b482615254565b6141be8185615264565b93506141c98361524e565b8060005b838110156141045781516141e1888261407b565b97506141ec8361524e565b9250506001016141cd565b600061420282615254565b61420c8185615264565b93506142178361524e565b8060005b8381101561410457815161422f888261407b565b975061423a8361524e565b92505060010161421b565b600061425082615254565b61425a8185615264565b93506142658361524e565b8060005b8381101561410457815161427d8882614087565b97506142888361524e565b925050600101614269565b600061429e82615254565b6142a88185615264565b93506142b38361524e565b8060005b838110156141045781516142cb8882614087565b97506142d68361524e565b9250506001016142b7565b60006142ec8261525e565b6142f6818561148a565b93508360208202850161430885610c41565b8060005b858110156143425784840389528151614325858261409b565b94506143308361524e565b60209a909a019992505060010161430c565b5091979650505050505050565b600061435a82615254565b6143648185615264565b935061436f8361524e565b8060005b83811015614104578151614387888261407b565b97506143928361524e565b925050600101614373565b60006143a882615254565b6143b28185615264565b93506143bd8361524e565b8060005b838110156141045781516143d5888261407b565b97506143e08361524e565b9250506001016143c1565b6140b081615278565b6140b081610c41565b600061440882615254565b6144128185615264565b93506144228185602086016152f5565b61442b81615321565b9093019392505050565b6140b0816152bd565b6140b0816152c8565b6140b0816152d3565b6140b0816152de565b6000614466602283615264565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152611b9d60f21b602082015260400192915050565b60006144aa601883615264565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b60006144e3602683615264565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b600061452b602783615264565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152667574207479706560c81b602082015260400192915050565b6000614574601c83615264565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b60006145ad601b83615264565b7f4e6f74207570646174656420456e69676d6120636f6e74726163740000000000815260200192915050565b60006145e6601d83615264565b7f576f726b657227732062616c616e6365206973206e6f7420656d707479000000815260200192915050565b600061461f603483615264565b7f4f7065726174696e672061646472657373206e6f7420646966666572656e742081527366726f6d207374616b696e67206164647265737360601b602082015260400192915050565b6000614675601383615264565b725461736b206973206e6f742077616974696e6760681b815260200192915050565b60006146a4602783615264565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152661a585b1a5e995960ca1b602082015260400192915050565b60006146ed602e83615264565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381526d081b1bd9c81bdd5d08195d995b9d60921b602082015260400192915050565b600061473d603d83615264565b7f5374616b696e6720616464726573732063757272656e746c792074696564207481527f6f20616e20696e2d757365206f7065726174696e672061646472657373000000602082015260400192915050565b600061479c601483615264565b732bb7b935b2b9103737ba103637b3b3b2b21034b760611b815260200192915050565b60006147cc602083615264565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b6000614805601383615264565b722ab73932b3b4b9ba32b932b2103bb7b935b2b960691b815260200192915050565b6000614834602083615264565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b600061486d601183615264565b702932b3b4b9ba32b932b2103bb7b935b2b960791b815260200192915050565b600061489a603283615264565b7f496e76616c6964207374616b696e67206164647265737320666f722074686973815271206f7065726174696e67206164647265737360701b602082015260400192915050565b60006148ee602083615264565b7f4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374815260200192915050565b6000614927602783615264565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f6781526619d959081bdd5d60ca1b602082015260400192915050565b805160009060a084019061497785826140a7565b50602083015161498a60208601826143f4565b50604083015161499d60408601826143f4565b50606083015184820360608601526149b582826141f7565b91505060808301516149ca6080860182614435565b509392505050565b9052565b80516000906101008401906149eb85826140a7565b5060208301516149fe60208601826143f4565b506040830151614a1160408601826143f4565b506060830151614a246060860182614c0e565b506080830151614a376080860182614c0e565b5060a0830151614a4a60a08601826143f4565b5060c0830151614a5d60c086018261443e565b5060e083015184820360e0860152614a7582826143fd565b95945050505050565b80516060830190614a8f8482614447565b506020820151614aa260208501826143f4565b50604082015161082f60408501826143f4565b805160009060c0840190614ac985826140a7565b506020830151614adc60208601826140a7565b506040830151614aef6040860182614450565b5060608301518482036060860152614b0782826143fd565b9150506080830151614b1c60808601826143f4565b5060a083015184820360a0860152614a758282614245565b805160009060c0840190614b4885826140a7565b506020830151614b5b60208601826140a7565b506040830151614b6e6040860182614450565b5060608301518482036060860152614b8682826143fd565b9150506080830151614b9b60808601826143f4565b5060a083015184820360a0860152614a758282614293565b80516000906080840190614bc785826143f4565b5060208301518482036020860152614bdf828261410f565b91505060408301518482036040860152614bf9828261439d565b91505060608301516149ca60608601826143f4565b6140b0816152b1565b6020810161072d82846140a7565b60408101614c3382856140a7565b818103602083015261199d81846143fd565b60408101614c5382856140a7565b818103602083015261199d8184614ab5565b6020808252810161072a81846140b6565b60408082528101614c8781856140b6565b9050818103602083015261199d818461434f565b6020808252810161072a81846141a9565b6020808252810161072a81846142e1565b6020810161072d82846143eb565b6020808252810161072a81846143fd565b60408082528101614ced81856143fd565b9050818103602083015261199d81846143fd565b6020808252810161072d81614459565b6020808252810161072d8161449d565b6020808252810161072d816144d6565b6020808252810161072d8161451e565b6020808252810161072d81614567565b6020808252810161072d816145a0565b6020808252810161072d816145d9565b6020808252810161072d81614612565b6020808252810161072d81614668565b6020808252810161072d81614697565b6020808252810161072d816146e0565b6020808252810161072d81614730565b6020808252810161072d8161478f565b6020808252810161072d816147bf565b6020808252810161072d816147f8565b6020808252810161072d81614827565b6020808252810161072d81614860565b6020808252810161072d8161488d565b6020808252810161072d816148e1565b6020808252810161072d8161491a565b6020808252810161072a8184614963565b6020810161072d82846149d2565b60408101614e6e82856149d2565b6119a060208301846140a7565b60808101614e8982876149d2565b614e9660208301866140a7565b614ea360408301856140a7565b8181036060830152614eb581846143fd565b9695505050505050565b60a08101614ecd82886149d2565b614eda60208301876140a7565b614ee760408301866140a7565b8181036060830152614ef981856143fd565b90508181036080830152614f0d81846143fd565b979650505050505050565b60608101614f2682866149d2565b614f3360208301856140a7565b613a4f60408301846143f4565b60408101614f4e82856149d2565b6119a060208301846143f4565b60c08101614f6982896149d2565b614f7660208301886143f4565b614f8360408301876143f4565b614f9060608301866143f4565b614f9d6080830185614c0e565b81810360a0830152614faf81846143fd565b98975050505050505050565b60a08101614fc982886149d2565b614fd660208301876143f4565b614fe360408301866143f4565b614ff06060830185614c0e565b8181036080830152614f0d81846143fd565b60a0810161501082886149d2565b61501d60208301876143f4565b61502a6040830186614c0e565b6150376060830185614c0e565b614eb560808301846143f4565b60c0810161505282896149d2565b61505f60208301886143f4565b61506c6040830187614c0e565b6150796060830186614c0e565b61508660808301856143f4565b614f0d60a08301846143f4565b606081016150a182866149d2565b614f3360208301856143f4565b608081016150bc82876149d2565b6150c960208301866143f4565b614ea360408301856143f4565b61012081016150e582896149d2565b6150f26020830188614c0e565b6150ff60408301876140a7565b61510c606083018661415d565b81810360e083015261511e81856143fd565b9050818103610100830152614faf81846143fd565b6020808252810161072a81846149d6565b6020808252810161072a8184614ab5565b604080825281016151668185614b34565b90506119a060208301846143f4565b6020810161072d82846143f4565b6080810161519182876143f4565b61519e60208301866143f4565b81810360408301526151b081856140b6565b90508181036060830152614eb5818461434f565b6040518181016001600160401b03811182821017156151e257600080fd5b604052919050565b60006001600160401b0382111561520057600080fd5b5060209081020190565b60006001600160401b0382111561522057600080fd5b5060200290565b60006001600160401b0382111561523d57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b50600490565b50600590565b90815260200190565b600061072d826152a5565b151590565b8061148a8161532b565b8061148a81615335565b8061148a8161533f565b8061148a81615349565b6001600160a01b031690565b6001600160401b031690565b600061072d8261527d565b600061072d82615287565b600061072d82615291565b600061072d8261529b565b82818337506000910152565b60005b838110156153105781810151838201526020016152f8565b8381111561082f5750506000910152565b601f01601f191690565b6002811061345e57fe5b6006811061345e57fe5b6004811061345e57fe5b6003811061345e57fe5b61535c8161526d565b811461345e57600080fd5b61535c81610c41565b6004811061345e57600080fd5b61535c816152b156fea365627a7a7231582015830a72cc54fec09f781b6be9051d689df48346b0fe2f4f4743d3d3ad308e266c6578706572696d656e74616cf564736f6c634300050c0040","sourceMap":"886:20149:0:-;;;1156:622;8:9:-1;5:2;;;30:1;27;20:12;5:2;1156:622:0;;;;;;;;;;;;;;;;;;;;;707:12:39;-1:-1:-1;;;;;707:10:39;:12;:::i;:::-;698:6;:21;;-1:-1:-1;;;;;;698:21:39;-1:-1:-1;;;;;698:21:39;;;;;;;;734:40;;767:6;;;-1:-1:-1;;734:40:39;;-1:-1:-1;;734:40:39;1346:5:0;:37;;-1:-1:-1;;;;;1346:37:0;;;-1:-1:-1;;;;;;1346:37:0;;;;;;;;1393:28;;;1455:35;;;1431:21;:59;1500:15;:28;;;;;;;;;;;1538:18;:34;;;;;;;;;;;;;;;1582;:50;;;;;1627:4;1582:50;;;1642:22;:26;;;1678:21;:25;1713:26;;;;:14;;:26;;;;;:::i;:::-;-1:-1:-1;1749:22:0;;;;:12;;:22;;;;;:::i;:::-;;1156:622;;;;;;;886:20149;;788:96:36;867:10;788:96;;:::o;886:20149:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;886:20149:0;;;-1:-1:-1;886:20149:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;147:442;;259:3;252:4;244:6;240:17;236:27;226:2;;277:1;274;267:12;226:2;307:6;301:13;329:64;344:48;385:6;344:48;;;329:64;;;320:73;;413:6;406:5;399:21;449:4;441:6;437:17;482:4;475:5;471:16;517:3;508:6;503:3;499:16;496:25;493:2;;;534:1;531;524:12;493:2;544:39;576:6;571:3;566;544:39;;;219:370;;;;;;;;597:134;675:13;;693:33;675:13;693:33;;738:1277;;;;;;;;973:3;961:9;952:7;948:23;944:33;941:2;;;990:1;987;980:12;941:2;1025:1;1042:64;1098:7;1078:9;1042:64;;;1032:74;;1004:108;1143:2;1161:64;1217:7;1208:6;1197:9;1193:22;1161:64;;;1151:74;;1122:109;1262:2;1280:64;1336:7;1327:6;1316:9;1312:22;1280:64;;;1270:74;;1241:109;1381:2;1399:64;1455:7;1446:6;1435:9;1431:22;1399:64;;;1389:74;;1360:109;1500:3;1519:64;1575:7;1566:6;1555:9;1551:22;1519:64;;;1509:74;;1479:110;1641:3;1630:9;1626:19;1620:26;-1:-1;;;;;1658:6;1655:30;1652:2;;;1698:1;1695;1688:12;1652:2;1718:73;1783:7;1774:6;1763:9;1759:22;1718:73;;;1708:83;;1599:198;1849:3;1838:9;1834:19;1828:26;-1:-1;;;;;1866:6;1863:30;1860:2;;;1906:1;1903;1896:12;1860:2;1926:73;1991:7;1982:6;1971:9;1967:22;1926:73;;;1916:83;;1807:198;935:1080;;;;;;;;;;;2022:256;2084:2;2078:9;2110:17;;;-1:-1;;;;;2170:34;;2206:22;;;2167:62;2164:2;;;2242:1;2239;2232:12;2164:2;2258;2251:22;2062:216;;-1:-1;2062:216;2285:321;;-1:-1;;;;;2420:6;2417:30;2414:2;;;2460:1;2457;2450:12;2414:2;-1:-1;2591:4;2527;2504:17;;;;-1:-1;;2500:33;2581:15;;2351:255;2613:91;;-1:-1;;;;;2773:54;;2675:24;2756:76;2919:268;2984:1;2991:101;3005:6;3002:1;2999:13;2991:101;;;3072:11;;;3066:18;3053:11;;;3046:39;3027:2;3020:10;2991:101;;;3107:6;3104:1;3101:13;3098:2;;;3172:1;3163:6;3158:3;3154:16;3147:27;3098:2;2968:219;;;;;3195:117;3264:24;3282:5;3264:24;;;3257:5;3254:35;3244:2;;3303:1;3300;3293:12;3244:2;3238:74;;3319:117;3388:24;3406:5;3388:24;;3362:74;886:20149:0;;;;;;","deployedSourceMap":"886:20149:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;886:20149:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17160:194;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18515:199;;;;;;;;;:::i;:::-;;;;;;;;9989:105;;;:::i;:::-;;9551:120;;;;;;;;;:::i;20598:109::-;;;;;;;;;:::i;4203:92:11:-;;;:::i;:::-;;;;;;;;9123:230:0;;;;;;;;;:::i;16802:237::-;;;;;;;;;:::i;11213:470::-;;;;;;;;;:::i;3606:121:11:-;;;:::i;:::-;;;;;;;;2482:102;;;:::i;:::-;;;;;;;;677:176;;;;;;;;;:::i;:::-;;;;;;;;4042:96;;;:::i;3360:130::-;;;:::i;:::-;;;;;;;;1642:137:39;;;:::i;20838:195:0:-;;;;;;;;;:::i;11810:149::-;;;:::i;3080::11:-;;;;;;;;;:::i;:::-;;;;;;;;20413:117:0;;;;;;;;;:::i;20044:297::-;;;;;;;;;:::i;857:77:39:-;;;:::i;12172:211:0:-;;;;;;;;;:::i;2758:137:11:-;;;;;;;;;:::i;:::-;;;;;;;;1208:92:39;;;:::i;:::-;;;;;;;;8276:360:0;;;;;;;;;:::i;17980:198::-;;;;;;;;;:::i;:::-;;;;;;;;;;;1353:492:11;;;;;;;;;:::i;:::-;;;;;;;;;10402:340:0;;;;;;;;;:::i;18852:200::-;;;;;;;;;:::i;:::-;;;;;;;;;9834:78;;;:::i;19257:181::-;;;;;;;;;:::i;3842:131:11:-;;;:::i;14163:289:0:-;;;;;;;;;:::i;1018:131:11:-;;;;;;;;;:::i;:::-;;;;;;;;14949:455:0;;;;;;;;;:::i;13236:352::-;;;;;;;;;:::i;15795:357::-;;;;;;;;;:::i;17529:167::-;;;;;;;;;:::i;400:115:11:-;;;:::i;2306:90::-;;;:::i;8708:172:0:-;;;:::i;16319:147::-;;;;;;;;;:::i;1928:107:39:-;;;;;;;;;:::i;19579:226:0:-;;;;;;;;;:::i;2089:134:11:-;;;;;;;;;:::i;17160:194:0:-;17238:16;17256:13;17292;:34;17327:5;17334:12;17292:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17292:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17292:55:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;17292:55:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;17292:55:0;;;;;;;;;17285:62;;;;17160:194;;;:::o;18515:199::-;18647:60;;-1:-1:-1;;;18647:60:0;;18608:16;;18647:11;;:30;;:60;;18678:5;;18685:12;;18699:7;;18647:60;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18647:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18647:60:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;18647:60:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;18647:60:0;;;;;;;;;18640:67;;18515:199;;;;;:::o;9989:105::-;3366:34;3344:10;3330:5;:25;;;:13;:25;;;;;:32;;;-1:-1:-1;;;3330:32:0;;;;:70;;;;;;;;;3329:193;;;-1:-1:-1;3488:34:0;3465:10;3417:5;3431:45;;;:33;:45;;;;;;;;;-1:-1:-1;;;;;3431:45:0;3417:60;;:13;:60;;;;;3431:45;3417:67;;-1:-1:-1;;;3417:67:0;;;;:105;;;;;;;;;3329:193;3321:238;;;;-1:-1:-1;;;3321:238:0;;;;;;;;;;;;;;;;;10058:29;;-1:-1:-1;;;10058:29:0;;:11;;:22;;:29;;10081:5;;10058:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10058:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10058:29:0;;;;9989:105::o;9551:120::-;4572:33;;:::i;:::-;4656:10;4608:5;4622:45;;;:33;:45;;;;;;;;;-1:-1:-1;;;;;4622:45:0;;;4608:60;;:13;:60;;;;;;4572:96;;;;;;;;;;;;;4622:45;4572:96;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4572:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4572:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4572:96:0;;-1:-1:-1;4572:96:0;;-1:-1:-1;4703:35:0;;-1:-1:-1;4686:6:0;:13;;;:52;;;;;;;;;4678:104;;;;-1:-1:-1;;;4678:104:0;;;;;;;;;4792:39;;:::i;:::-;4834:56;;-1:-1:-1;;;4834:56:0;;:11;;:34;;:56;;4869:6;;4877:12;;4834:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4834:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4834:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4834:56:0;;;;;;;;;4792:98;-1:-1:-1;4937:33:0;4908:25;;:62;;;;;;;;;4900:126;;;;-1:-1:-1;;;4900:126:0;;;;;;;;;5080:9;:21;;;5044:33;5064:12;5044:19;:33::i;:::-;:57;5036:128;;;;-1:-1:-1;;;5036:128:0;;;;;;;;;9624:40;;-1:-1:-1;;;9624:40:0;;:11;;:24;;:40;;9649:5;;9656:7;;9624:40;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9624:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9624:40:0;;;;9551:120;;;:::o;20598:109::-;1061:9:39;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;20678:22:0;;;;:12;;:22;;;;;:::i;:::-;;20598:109;:::o;4203:92:11:-;4276:12;4269:19;;;;;;;;-1:-1:-1;;4269:19:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4245:12;;4269:19;;4276:12;;4269:19;;4276:12;4269:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4203:92;;:::o;9123:230:0:-;7397:34;;-1:-1:-1;;;;;7397:34:0;7388:4;7380:51;7372:91;;;;-1:-1:-1;;;7372:91:0;;;;;;;;;-1:-1:-1;;;;;9234:45:0;;;:5;:45;;;:33;:45;;;;;;;2449:33;;:::i;:::-;-1:-1:-1;;;;;2485:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2449:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2485:20;;2449:56;;;-1:-1:-1;;;2449:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2449:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2449:56:0;;-1:-1:-1;2449:56:0;;-1:-1:-1;2540:38:0;;-1:-1:-1;2523:6:0;:13;;;:55;;;;;;;;;;2515:87;;;;-1:-1:-1;;;2515:87:0;;;;;;;;;9295:51;;-1:-1:-1;;;9295:51:0;;:11;;:23;;:51;;9319:5;;9326:10;;9338:7;;9295:51;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9295:51:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9295:51:0;;;;7473:1;;9123:230;;:::o;16802:237::-;7397:34;;-1:-1:-1;;;;;7397:34:0;7388:4;7380:51;7372:91;;;;-1:-1:-1;;;7372:91:0;;;;;;;;;16938:10;2449:33;;:::i;:::-;-1:-1:-1;;;;;2485:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2449:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2485:20;;2449:56;;;-1:-1:-1;;;2449:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2449:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2449:56:0;;-1:-1:-1;2449:56:0;;-1:-1:-1;2540:38:0;;-1:-1:-1;2523:6:0;:13;;;:55;;;;;;;;;;2515:87;;;;-1:-1:-1;;;2515:87:0;;;;;;;;;16964:68;;-1:-1:-1;;;16964:68:0;;:13;;:34;;:68;;16999:5;;17006:12;;17020:5;;17027:4;;16964:68;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16964:68:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16964:68:0;;;;7473:1;;16802:237;;;:::o;11213:470::-;7397:34;;-1:-1:-1;;;;;7397:34:0;7388:4;7380:51;7372:91;;;;-1:-1:-1;;;7372:91:0;;;;;;;;;2996:33;;:::i;:::-;3046:10;3032:5;:25;;;:13;:25;;;;;;;;;2996:61;;;;;;;;;-1:-1:-1;;;;;2996:61:0;;;;;;;;;;;;;;;;;;;;3032:25;;2996:61;;;;-1:-1:-1;;;2996:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2996:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2996:61:0;;-1:-1:-1;2996:61:0;;-1:-1:-1;3092:34:0;;-1:-1:-1;3075:6:0;:13;;;:51;;;;;;;;;3067:84;;;;-1:-1:-1;;;3067:84:0;;;;;;;;;11512:12;;11522:1;5367:24;;;:15;11512:12;5367:24;;;;:31;;;;;;:78;;;;;;;;5359:135;;;;-1:-1:-1;;;5359:135:0;;;;;;;;;11540:136;;-1:-1:-1;;;11540:136:0;;:8;;:33;;:136;;11574:5;;11581:8;;11591:32;;11625:9;;11648:21;;11671:4;;11540:136;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11540:136:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11540:136:0;;;;3161:1;7473;11213:470;;;;;:::o;3606:121:11:-;3668:16;3703:5;:17;;3696:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3606:121;:::o;2482:102::-;2556:21;;2482:102;:::o;677:176::-;-1:-1:-1;;;;;796:50:11;;;770:7;796:50;;;:33;:50;;;;;;;677:176;;;;:::o;4042:96::-;4117:14;4110:21;;;;;;;;-1:-1:-1;;4110:21:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4086:12;;4110:21;;4117:14;;4110:21;;4117:14;4110:21;;;;;;;;;;;;;;;;;;;;;;;;3360:130;3409:36;;:::i;:::-;3457:26;;;;;;;;;3464:19;3457:26;3464:5;3457:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3457:26:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:130;:::o;1642:137:39:-;1061:9;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;1724:6;;1703:40;;1740:1;;-1:-1:-1;;;;;1724:6:39;;1703:40;;1740:1;;1703:40;1753:6;:19;;-1:-1:-1;;;;;;1753:19:39;;;1642:137::o;20838:195:0:-;6588:10;6611:1;6554:45;;;:33;:45;;;;;;20932:17;;-1:-1:-1;;;;;6554:45:0;:59;6546:145;;;;-1:-1:-1;;;6546:145:0;;;;;;;;;-1:-1:-1;;;;;6709:32:0;;;:5;:32;;;:13;:32;;;;;:47;;6760:10;6709:61;6701:136;;;;-1:-1:-1;;;6701:136:0;;;;;;;;;20965:61;;-1:-1:-1;;;20965:61:0;;:11;;:35;;:61;;21001:5;;21008:17;;20965:61;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20965:61:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20965:61:0;;;;20838:195;;:::o;11810:149::-;11902:50;;-1:-1:-1;;;11902:50:0;;11875:4;;11902:18;;:43;;:50;;11875:4;;11902:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11902:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11902:50:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11902:50:0;;;;;;;;;11895:57;;11810:149;:::o;3080::11:-;3145:34;;:::i;:::-;3198:5;:24;;;:15;:24;;;;;;;;;3191:31;;;;;;;;;-1:-1:-1;;;;;3191:31:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3198:24;;3191:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3191:31:11;;;-1:-1:-1;;3191:31:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3191:31:11;3080:149;-1:-1:-1;;3080:149:11:o;20413:117:0:-;1061:9:39;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;20497:26:0;;;;:14;;:26;;;;;:::i;20044:297::-;7644:34;;20209:7;;-1:-1:-1;;;;;7644:34:0;7630:10;:48;7622:93;;;;-1:-1:-1;;;7622:93:0;;;;;;;;;20239:95;;-1:-1:-1;;;20239:95:0;;:11;;:46;;:95;;20286:5;;20293:17;;20312:15;;20329:4;;20239:95;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20239:95:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20239:95:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20239:95:0;;;;;;;;;20232:102;;7725:1;20044:297;;;;;:::o;857:77:39:-;921:6;;-1:-1:-1;;;;;921:6:39;857:77;:::o;12172:211:0:-;12305:71;;-1:-1:-1;;;12305:71:0;;12266:16;;12305:18;;:49;;:71;;12355:5;;12362:6;;12370:5;;12305:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12305:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12305:71:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;12305:71:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;12305:71:0;;;;;;;;2758:137:11;2819:30;;:::i;:::-;2868:5;:20;;;:11;:20;;;;;;;;;2861:27;;;;;;;;;-1:-1:-1;;;;;2861:27:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2861:27:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2868:20;2861:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2861:27:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2758:137;;;:::o;1208:92:39:-;1287:6;;1248:4;;-1:-1:-1;;;;;1287:6:39;1271:12;:10;:12::i;:::-;-1:-1:-1;;;;;1271:22:39;;1264:29;;1208:92;:::o;8276:360:0:-;7397:34;;-1:-1:-1;;;;;7397:34:0;7388:4;7380:51;7372:91;;;;-1:-1:-1;;;7372:91:0;;;;;;;;;8445:10;2084:33;;:::i;:::-;-1:-1:-1;;;;;2120:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2084:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2120:20;;2084:56;;;-1:-1:-1;;;2084:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2084:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2084:56:0;;-1:-1:-1;2084:56:0;;-1:-1:-1;2175:38:0;;-1:-1:-1;2158:6:0;:13;;;:55;;;;;;;;;2150:85;;;;-1:-1:-1;;;2150:85:0;;;;;;;;;8480:7;7032:6;7027:191;7048:21;:28;7044:32;;7027:191;;;7155:7;-1:-1:-1;;;;;7105:57:0;:5;:13;;:39;7119:5;:21;;7141:1;7119:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7119:24:0;;;7105:39;;;;;;;;;;;;;;;7119:24;7105:46;;;:57;;7097:110;;;;-1:-1:-1;;;7097:110:0;;;;;;;;;7078:3;;7027:191;;;-1:-1:-1;8520:15:0;-1:-1:-1;;;;;6288:29:0;;6307:10;6288:29;;6280:94;;;;-1:-1:-1;;;6280:94:0;;;;;;;;;8551:78;;-1:-1:-1;;;8551:78:0;;:11;;:24;;:78;;8576:5;;8583:15;;8600:7;;8609;;8618:10;;8551:78;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8551:78:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8551:78:0;;;;7227:1;2245;7473;;8276:360;;;;:::o;17980:198::-;18057:4;18063;18069:16;18087:13;18119:11;:31;18151:5;18158:12;18119:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18119:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18119:52:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;18119:52:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;18119:52:0;;;;;;;;;18112:59;;;;;;;;17980:198;;;;;:::o;1353:492:11:-;1428:7;1437:26;;:::i;:::-;1475:15;1500:33;;:::i;:::-;1548:6;1543:262;1564:21;:28;1560:32;;1543:262;;;1636:21;:24;;1622:13;;:5;;1658:1;;1636:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1636:24:11;;;1622:39;;;;;;;;;;;;;;;;1613:48;;;;;;;;;;;;;1636:24;1613:48;;;;;;;;;;;;;;;1622:39;;1613:48;;;;-1:-1:-1;;;1613:48:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1613:48:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1696:7;-1:-1:-1;;;;;1679:24:11;:6;:13;;;-1:-1:-1;;;;;1679:24:11;;1675:120;;;1733:21;:24;;1755:1;;1733:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1733:24:11;;-1:-1:-1;1775:5:11;;1675:120;1594:3;;1543:262;;;-1:-1:-1;1822:7:11;;-1:-1:-1;1831:6:11;-1:-1:-1;1353:492:11;;;:::o;10402:340:0:-;7397:34;;-1:-1:-1;;;;;7397:34:0;7388:4;7380:51;7372:91;;;;-1:-1:-1;;;7372:91:0;;;;;;;;;2996:33;;:::i;:::-;3046:10;3032:5;:25;;;:13;:25;;;;;;;;;2996:61;;;;;;;;;-1:-1:-1;;;;;2996:61:0;;;;;;;;;;;;;;;;;;;;3032:25;;2996:61;;;;-1:-1:-1;;;2996:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2996:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2996:61:0;;-1:-1:-1;2996:61:0;;-1:-1:-1;3092:34:0;;-1:-1:-1;3075:6:0;:13;;;:51;;;;;;;;;3067:84;;;;-1:-1:-1;;;3067:84:0;;;;;;;;;10629:7;5402:43;5367:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;5359:135;;;;-1:-1:-1;;;5359:135:0;;;;;;;;;10652:83;;-1:-1:-1;;;10652:83:0;;:8;;:40;;:83;;10693:5;;10700:7;;10709:9;;10720:8;;10730:4;;10652:83;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10652:83:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10652:83:0;;;;3161:1;7473;10402:340;;;;:::o;18852:200::-;18957:7;18966:12;18932:10;2449:33;;:::i;:::-;-1:-1:-1;;;;;2485:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2449:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2485:20;;2449:56;;;-1:-1:-1;;;2449:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2449:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2449:56:0;;-1:-1:-1;2449:56:0;;-1:-1:-1;2540:38:0;;-1:-1:-1;2523:6:0;:13;;;:55;;;;;;;;;;2515:87;;;;-1:-1:-1;;;2515:87:0;;;;;;;;;19001:44;;-1:-1:-1;;;19001:44:0;;:11;;:25;;:44;;19027:5;;19034:10;;19001:44;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19001:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19001:44:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;19001:44:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;19001:44:0;;;;;;;;;18994:51;;;;18852:200;;;;;:::o;9834:78::-;4082:33;;:::i;:::-;4132:10;4118:5;:25;;;:13;:25;;;;;;;;;4082:61;;;;;;;;;-1:-1:-1;;;;;4082:61:0;;;;;;;;;;;;;;;;;;;;4118:25;;4082:61;;;;-1:-1:-1;;;4082:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4082:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4161:33;4181:12;4161:19;:33::i;:::-;4153:90;;;;-1:-1:-1;;;4153:90:0;;;;;;;;;4278:35;4261:6;:13;;;:52;;;;;;;;;4253:104;;;;-1:-1:-1;;;4253:104:0;;;;;;;;;4393:22;;4375:14;;;;:40;;4367:87;;;;-1:-1:-1;;;4367:87:0;;;;;;;;;9877:28;;-1:-1:-1;;;9877:28:0;;:11;;:21;;:28;;9899:5;;9877:28;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9877:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9877:28:0;;;;9834:78;:::o;19257:181::-;19384:47;;-1:-1:-1;;;19384:47:0;;19357:4;;19384:11;;:28;;:47;;19413:5;;19420:10;;19384:47;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19384:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19384:47:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;19384:47:0;;;;;;;;3842:131:11;3932:34;;-1:-1:-1;;;;;3932:34:11;3842:131;:::o;14163:289:0:-;7397:34;;-1:-1:-1;;;;;7397:34:0;7388:4;7380:51;7372:91;;;;-1:-1:-1;;;7372:91:0;;;;;;;;;14358:87;;-1:-1:-1;;;14358:87:0;;:8;;:29;;:87;;14388:5;;14395:11;;14408:9;;14419:6;;14427:17;;14358:87;;;;1018:131:11;1075:26;;:::i;:::-;-1:-1:-1;;;;;1120:22:11;;;:5;:22;;;:13;:22;;;;;;;;;1113:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1120:22;;1113:29;;;-1:-1:-1;;;1113:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1113:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1113:29:11;;-1:-1:-1;1113:29:11;;1018:131;-1:-1:-1;;;1018:131:11:o;14949:455:0:-;7397:34;;-1:-1:-1;;;;;7397:34:0;7388:4;7380:51;7372:91;;;;-1:-1:-1;;;7372:91:0;;;;;;;;;2996:33;;:::i;:::-;3046:10;3032:5;:25;;;:13;:25;;;;;;;;;2996:61;;;;;;;;;-1:-1:-1;;;;;2996:61:0;;;;;;;;;;;;;;;;;;;;3032:25;;2996:61;;;;-1:-1:-1;;;2996:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2996:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2996:61:0;;-1:-1:-1;2996:61:0;;-1:-1:-1;3092:34:0;;-1:-1:-1;3075:6:0;:13;;;:51;;;;;;;;;3067:84;;;;-1:-1:-1;;;3067:84:0;;;;;;;;;15240:12;;15250:1;5692:24;;;:15;15240:12;5692:24;;;;:31;;;5727:42;;5692:31;;:77;;;;;;;;;5684:130;;;;-1:-1:-1;;;5684:130:0;;;;;;;;;15268:129;;-1:-1:-1;;;15268:129:0;;:8;;:26;;:129;;15295:5;;15302:8;;15312:32;;15358:9;;15369:21;;15392:4;;15268:129;;;;13236:352;1061:9:39;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;7397:34:0;;-1:-1:-1;;;;;7397:34:0;7388:4;7380:51;7372:91;;;;-1:-1:-1;;;7372:91:0;;;;;;;;;13476:105;;-1:-1:-1;;;13476:105:0;;:8;;:39;;:105;;13516:5;;13523:11;;13536:9;;13547:6;;13555:17;;13574:6;;13476:105;;;;15795:357;7397:34;;-1:-1:-1;;;;;7397:34:0;7388:4;7380:51;7372:91;;;;-1:-1:-1;;;7372:91:0;;;;;;;;;2996:33;;:::i;:::-;3046:10;3032:5;:25;;;:13;:25;;;;;;;;;2996:61;;;;;;;;;-1:-1:-1;;;;;2996:61:0;;;;;;;;;;;;;;;;;;;;3032:25;;2996:61;;;;-1:-1:-1;;;2996:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2996:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2996:61:0;;-1:-1:-1;2996:61:0;;-1:-1:-1;3092:34:0;;-1:-1:-1;3075:6:0;:13;;;:51;;;;;;;;;3067:84;;;;-1:-1:-1;;;3067:84:0;;;;;;;;;16038:7;5727:42;5692:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;5684:130;;;;-1:-1:-1;;;5684:130:0;;;;;;;;;16061:84;;-1:-1:-1;;;16061:84:0;;:8;;:30;;:84;;16092:5;;16099:7;;16108;;16117:11;;16130:8;;16140:4;;16061:84;;;;17529:167;17633:56;;-1:-1:-1;;;17633:56:0;;17610:4;;17633:11;;:35;;:56;;17610:4;;17676:12;;17633:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17633:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17633:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;17633:56:0;;;;;;;;400:115:11;490:10;450:7;476:25;;;:13;:25;;;;;:32;;;-1:-1:-1;;;;;476:32:11;400:115;:::o;2306:90::-;2374:15;;2306:90;:::o;8708:172:0:-;7397:34;;-1:-1:-1;;;;;7397:34:0;7388:4;7380:51;7372:91;;;;-1:-1:-1;;;7372:91:0;;;;;;;;;3777:38;3755:10;3741:5;:25;;;:13;:25;;;;;:32;;;-1:-1:-1;;;3741:32:0;;;;:74;;;;;;;;;;3740:197;;;-1:-1:-1;3899:38:0;3876:10;3828:5;3842:45;;;:33;:45;;;;;;;;;-1:-1:-1;;;;;3842:45:0;3828:60;;:13;:60;;;;;3842:45;3828:67;;-1:-1:-1;;;3828:67:0;;;;:109;;;;;;;;;;3740:197;3732:241;;;;-1:-1:-1;;;3732:241:0;;;;;;;;;2782:10;2734:5;2748:45;;;:33;:45;;;;;;;;;-1:-1:-1;;;;;2748:45:0;2734:60;;:13;:60;;;;;:68;;;:73;2726:127;;;;-1:-1:-1;;;2726:127:0;;;;;;;;;8840:33;;-1:-1:-1;;;8840:33:0;;:11;;:26;;:33;;8867:5;;8840:33;;;;16319:147;16390:7;6046:37;6015:5;:20;;;:11;:20;;;;;:27;;;;;;;;:68;;;;;;;;6007:100;;;;-1:-1:-1;;;6007:100:0;;;;;;;;;16413:46;;-1:-1:-1;;;16413:46:0;;:8;;:30;;:46;;16444:5;;16451:7;;16413:46;;;;1928:107:39;1061:9;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;2000:28;2019:8;2000:18;:28::i;:::-;1928:107;:::o;19579:226:0:-;1061:9:39;:7;:9::i;:::-;1053:54;;;;-1:-1:-1;;;1053:54:39;;;;;;;;;7397:34:0;;-1:-1:-1;;;;;7397:34:0;7388:4;7380:51;7372:91;;;;-1:-1:-1;;;7372:91:0;;;;;;;;;19723:75;;-1:-1:-1;;;19723:75:0;;:11;;:37;;:75;;19761:5;;19768:29;;19723:75;;;;2089:134:11;-1:-1:-1;;;;;2182:34:11;2159:4;2182:34;;;:25;:34;;;;;;;2089:134::o;788:96:36:-;867:10;788:96;:::o;2136:225:39:-;-1:-1:-1;;;;;2209:22:39;;2201:73;;;;-1:-1:-1;;;2201:73:39;;;;;;;;;2310:6;;2289:38;;-1:-1:-1;;;;;2289:38:39;;;;2310:6;;2289:38;;2310:6;;2289:38;2337:6;:17;;-1:-1:-1;;;;;;2337:17:39;-1:-1:-1;;;;;2337:17:39;;;;;;;;;;2136:225::o;886:20149:0:-;;;;;;;;;-1:-1:-1;886:20149:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;886:20149:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;886:20149:0;;;-1:-1:-1;886:20149:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;886:20149:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;886:20149:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:722;;429:3;422:4;414:6;410:17;406:27;396:2;;447:1;444;437:12;396:2;477:6;471:13;499:80;514:64;571:6;514:64;;;499:80;;;490:89;;596:5;621:6;614:5;607:21;651:4;643:6;639:17;629:27;;673:4;668:3;664:14;657:21;;726:6;773:3;765:4;757:6;753:17;748:3;744:27;741:36;738:2;;;790:1;787;780:12;738:2;815:1;800:217;825:6;822:1;819:13;800:217;;;883:3;905:48;949:3;937:10;905:48;;;893:61;;-1:-1;977:4;968:14;;;;996;;;;;847:1;840:9;800:217;;;804:14;389:634;;;;;;;;1050:615;;1165:3;1158:4;1150:6;1146:17;1142:27;1132:2;;1183:1;1180;1173:12;1132:2;1207:3;1225:78;1240:62;1295:6;1240:62;;1225:78;1216:87;;1320:5;1379:6;1426:3;1418:4;1410:6;1406:17;1401:3;1397:27;1394:36;1391:2;;;1443:1;1440;1433:12;1391:2;1468:1;1453:206;1478:6;1475:1;1472:13;1453:206;;;1536:3;1558:37;1591:3;1579:10;1558:37;;;1546:50;;-1:-1;1619:4;1610:14;;;;1638;;;;;1500:1;1493:9;1453:206;;1691:722;;1819:3;1812:4;1804:6;1800:17;1796:27;1786:2;;1837:1;1834;1827:12;1786:2;1867:6;1861:13;1889:80;1904:64;1961:6;1904:64;;1889:80;1880:89;;1986:5;2011:6;2004:5;1997:21;2041:4;2033:6;2029:17;2019:27;;2063:4;2058:3;2054:14;2047:21;;2116:6;2163:3;2155:4;2147:6;2143:17;2138:3;2134:27;2131:36;2128:2;;;2180:1;2177;2170:12;2128:2;2205:1;2190:217;2215:6;2212:1;2209:13;2190:217;;;2273:3;2295:48;2339:3;2327:10;2295:48;;;2283:61;;-1:-1;2367:4;2358:14;;;;2386;;;;;2237:1;2230:9;2190:217;;2439:722;;2567:3;2560:4;2552:6;2548:17;2544:27;2534:2;;2585:1;2582;2575:12;2534:2;2615:6;2609:13;2637:80;2652:64;2709:6;2652:64;;2637:80;2628:89;;2734:5;2759:6;2752:5;2745:21;2789:4;2781:6;2777:17;2767:27;;2811:4;2806:3;2802:14;2795:21;;2864:6;2911:3;2903:4;2895:6;2891:17;2886:3;2882:27;2879:36;2876:2;;;2928:1;2925;2918:12;2876:2;2953:1;2938:217;2963:6;2960:1;2957:13;2938:217;;;3021:3;3043:48;3087:3;3075:10;3043:48;;;3031:61;;-1:-1;3115:4;3106:14;;;;3134;;;;;2985:1;2978:9;2938:217;;3169:130;3236:20;;3261:33;3236:20;3261:33;;3306:134;3384:13;;3402:33;3384:13;3402:33;;3448:440;;3549:3;3542:4;3534:6;3530:17;3526:27;3516:2;;3567:1;3564;3557:12;3516:2;3604:6;3591:20;3626:64;3641:48;3682:6;3641:48;;3626:64;3617:73;;3710:6;3703:5;3696:21;3746:4;3738:6;3734:17;3779:4;3772:5;3768:16;3814:3;3805:6;3800:3;3796:16;3793:25;3790:2;;;3831:1;3828;3821:12;3790:2;3841:41;3875:6;3870:3;3865;3841:41;;;3509:379;;;;;;;;3897:442;;4009:3;4002:4;3994:6;3990:17;3986:27;3976:2;;4027:1;4024;4017:12;3976:2;4057:6;4051:13;4079:64;4094:48;4135:6;4094:48;;4079:64;4070:73;;4163:6;4156:5;4149:21;4199:4;4191:6;4187:17;4232:4;4225:5;4221:16;4267:3;4258:6;4253:3;4249:16;4246:25;4243:2;;;4284:1;4281;4274:12;4243:2;4294:39;4326:6;4321:3;4316;4294:39;;4347:170;4443:13;;4461:51;4443:13;4461:51;;4560:695;;4687:4;4675:9;4670:3;4666:19;4662:30;4659:2;;;4705:1;4702;4695:12;4659:2;4723:20;4738:4;4723:20;;;4714:29;-1:-1;4804:1;4835:78;4909:3;4889:9;4835:78;;;4811:103;;-1:-1;4982:2;5015:60;5071:3;5047:22;;;5015:60;;;5008:4;5001:5;4997:16;4990:86;4935:152;5140:2;5173:60;5229:3;5220:6;5209:9;5205:22;5173:60;;;5166:4;5159:5;5155:16;5148:86;5097:148;4653:602;;;;;5540:128;5606:20;;5631:32;5606:20;5631:32;;5675:241;;5779:2;5767:9;5758:7;5754:23;5750:32;5747:2;;;5795:1;5792;5785:12;5747:2;5830:1;5847:53;5892:7;5872:9;5847:53;;;5837:63;5741:175;-1:-1;;;;5741:175;5923:595;;;;6070:2;6058:9;6049:7;6045:23;6041:32;6038:2;;;6086:1;6083;6076:12;6038:2;6121:1;6138:53;6183:7;6163:9;6138:53;;;6128:63;;6100:97;6228:2;6246:53;6291:7;6282:6;6271:9;6267:22;6246:53;;;6236:63;;6207:98;6364:2;6353:9;6349:18;6336:32;-1:-1;;;;;6380:6;6377:30;6374:2;;;6420:1;6417;6410:12;6374:2;6440:62;6494:7;6485:6;6474:9;6470:22;6440:62;;;6430:72;;6315:193;6032:486;;;;;;6525:825;;;;;6698:3;6686:9;6677:7;6673:23;6669:33;6666:2;;;6715:1;6712;6705:12;6666:2;6750:1;6767:53;6812:7;6792:9;6767:53;;;6757:63;;6729:97;6857:2;6875:53;6920:7;6911:6;6900:9;6896:22;6875:53;;;6865:63;;6836:98;6993:2;6982:9;6978:18;6965:32;-1:-1;;;;;7009:6;7006:30;7003:2;;;7049:1;7046;7039:12;7003:2;7069:62;7123:7;7114:6;7103:9;7099:22;7069:62;;;7059:72;;6944:193;7196:2;7185:9;7181:18;7168:32;-1:-1;;;;;7212:6;7209:30;7206:2;;;7252:1;7249;7242:12;7206:2;7272:62;7326:7;7317:6;7306:9;7302:22;7272:62;;;7262:72;;7147:193;6660:690;;;;;;;;7357:496;;;7498:2;7486:9;7477:7;7473:23;7469:32;7466:2;;;7514:1;7511;7504:12;7466:2;7549:1;7566:64;7622:7;7602:9;7566:64;;;7556:74;;7528:108;7688:2;7677:9;7673:18;7667:25;-1:-1;;;;;7704:6;7701:30;7698:2;;;7744:1;7741;7734:12;7698:2;7764:73;7829:7;7820:6;7809:9;7805:22;7764:73;;;7754:83;;7646:197;7460:393;;;;;;7860:366;;;7981:2;7969:9;7960:7;7956:23;7952:32;7949:2;;;7997:1;7994;7987:12;7949:2;8032:1;8049:53;8094:7;8074:9;8049:53;;;8039:63;;8011:97;8139:2;8157:53;8202:7;8193:6;8182:9;8178:22;8157:53;;8233:392;;8373:2;8361:9;8352:7;8348:23;8344:32;8341:2;;;8389:1;8386;8379:12;8341:2;8424:24;;-1:-1;;;;;8457:30;;8454:2;;;8500:1;8497;8490:12;8454:2;8520:89;8601:7;8592:6;8581:9;8577:22;8520:89;;8632:657;;;8814:2;8802:9;8793:7;8789:23;8785:32;8782:2;;;8830:1;8827;8820:12;8782:2;8865:24;;-1:-1;;;;;8898:30;;8895:2;;;8941:1;8938;8931:12;8895:2;8961:89;9042:7;9033:6;9022:9;9018:22;8961:89;;;8951:99;;8844:212;9108:2;9097:9;9093:18;9087:25;-1:-1;;;;;9124:6;9121:30;9118:2;;;9164:1;9161;9154:12;9118:2;9184:89;9265:7;9256:6;9245:9;9241:22;9184:89;;9296:392;;9436:2;9424:9;9415:7;9411:23;9407:32;9404:2;;;9452:1;9449;9442:12;9404:2;9487:24;;-1:-1;;;;;9520:30;;9517:2;;;9563:1;9560;9553:12;9517:2;9583:89;9664:7;9655:6;9644:9;9640:22;9583:89;;9695:241;;9799:2;9787:9;9778:7;9774:23;9770:32;9767:2;;;9815:1;9812;9805:12;9767:2;9850:1;9867:53;9912:7;9892:9;9867:53;;9943:845;;;;;;10123:3;10111:9;10102:7;10098:23;10094:33;10091:2;;;10140:1;10137;10130:12;10091:2;10175:1;10192:53;10237:7;10217:9;10192:53;;;10182:63;;10154:97;10282:2;10300:53;10345:7;10336:6;10325:9;10321:22;10300:53;;;10290:63;;10261:98;10390:2;10408:53;10453:7;10444:6;10433:9;10429:22;10408:53;;;10398:63;;10369:98;10498:2;10516:52;10560:7;10551:6;10540:9;10536:22;10516:52;;;10506:62;;10477:97;10633:3;10622:9;10618:19;10605:33;-1:-1;;;;;10650:6;10647:30;10644:2;;;10690:1;10687;10680:12;10644:2;10710:62;10764:7;10755:6;10744:9;10740:22;10710:62;;;10700:72;;10584:194;10085:703;;;;;;;;;10795:719;;;;;10958:3;10946:9;10937:7;10933:23;10929:33;10926:2;;;10975:1;10972;10965:12;10926:2;11010:1;11027:53;11072:7;11052:9;11027:53;;;11017:63;;10989:97;11117:2;11135:53;11180:7;11171:6;11160:9;11156:22;11135:53;;;11125:63;;11096:98;11225:2;11243:52;11287:7;11278:6;11267:9;11263:22;11243:52;;11521:613;;;;;11674:3;11662:9;11653:7;11649:23;11645:33;11642:2;;;11691:1;11688;11681:12;11642:2;11726:1;11743:53;11788:7;11768:9;11743:53;;;11733:63;;11705:97;11833:2;11851:52;11895:7;11886:6;11875:9;11871:22;11851:52;;;11841:62;;11812:97;11940:2;11958:52;12002:7;11993:6;11982:9;11978:22;11958:52;;;11948:62;;11919:97;12047:2;12065:53;12110:7;12101:6;12090:9;12086:22;12065:53;;12141:739;;;;;;12311:3;12299:9;12290:7;12286:23;12282:33;12279:2;;;12328:1;12325;12318:12;12279:2;12363:1;12380:53;12425:7;12405:9;12380:53;;;12370:63;;12342:97;12470:2;12488:52;12532:7;12523:6;12512:9;12508:22;12488:52;;;12478:62;;12449:97;12577:2;12595:52;12639:7;12630:6;12619:9;12615:22;12595:52;;;12585:62;;12556:97;12684:2;12702:53;12747:7;12738:6;12727:9;12723:22;12702:53;;;12692:63;;12663:98;12792:3;12811:53;12856:7;12847:6;12836:9;12832:22;12811:53;;12887:345;;13000:2;12988:9;12979:7;12975:23;12971:32;12968:2;;;13016:1;13013;13006:12;12968:2;13051:31;;-1:-1;;;;;13091:30;;13088:2;;;13134:1;13131;13124:12;13088:2;13154:62;13208:7;13199:6;13188:9;13184:22;13154:62;;13239:574;;;13378:2;13366:9;13357:7;13353:23;13349:32;13346:2;;;13394:1;13391;13384:12;13346:2;13429:31;;-1:-1;;;;;13469:30;;13466:2;;;13512:1;13509;13502:12;13466:2;13532:62;13586:7;13577:6;13566:9;13562:22;13532:62;;;13522:72;;13408:192;13659:2;13648:9;13644:18;13631:32;-1:-1;;;;;13675:6;13672:30;13669:2;;;13715:1;13712;13705:12;13669:2;13735:62;13789:7;13780:6;13769:9;13765:22;13735:62;;13820:317;;13962:2;13950:9;13941:7;13937:23;13933:32;13930:2;;;13978:1;13975;13968:12;13930:2;14013:1;14030:91;14113:7;14093:9;14030:91;;14392:263;;14507:2;14495:9;14486:7;14482:23;14478:32;14475:2;;;14523:1;14520;14513:12;14475:2;14558:1;14575:64;14631:7;14611:9;14575:64;;14662:366;;;14783:2;14771:9;14762:7;14758:23;14754:32;14751:2;;;14799:1;14796;14789:12;14751:2;14834:1;14851:53;14896:7;14876:9;14851:53;;15408:930;;;;;15624:3;15612:9;15603:7;15599:23;15595:33;15592:2;;;15641:1;15638;15631:12;15592:2;15676:1;15693:64;15749:7;15729:9;15693:64;;;15683:74;;15655:108;15794:2;15812:64;15868:7;15859:6;15848:9;15844:22;15812:64;;;15802:74;;15773:109;15934:2;15923:9;15919:18;15913:25;-1:-1;;;;;15950:6;15947:30;15944:2;;;15990:1;15987;15980:12;15944:2;16010:89;16091:7;16082:6;16071:9;16067:22;16010:89;;;16000:99;;15892:213;16157:2;16146:9;16142:18;16136:25;-1:-1;;;;;16173:6;16170:30;16167:2;;;16213:1;16210;16203:12;16167:2;16233:89;16314:7;16305:6;16294:9;16290:22;16233:89;;16345:595;;;;16492:2;16480:9;16471:7;16467:23;16463:32;16460:2;;;16508:1;16505;16498:12;16460:2;16543:1;16560:53;16605:7;16585:9;16560:53;;;16550:63;;16522:97;16650:2;16668:53;16713:7;16704:6;16693:9;16689:22;16668:53;;16947:996;;;;;;17159:3;17147:9;17138:7;17134:23;17130:33;17127:2;;;17176:1;17173;17166:12;17127:2;17211:1;17228:52;17272:7;17252:9;17228:52;;;17218:62;;17190:96;17317:2;17335:53;17380:7;17371:6;17360:9;17356:22;17335:53;;;17325:63;;17296:98;17425:2;17443:76;17511:7;17502:6;17491:9;17487:22;17443:76;;;17433:86;;17404:121;17584:3;17573:9;17569:19;17556:33;-1:-1;;;;;17601:6;17598:30;17595:2;;;17641:1;17638;17631:12;17595:2;17661:62;17715:7;17706:6;17695:9;17691:22;17661:62;;;17651:72;;17535:194;17788:3;17777:9;17773:19;17760:33;-1:-1;;;;;17805:6;17802:30;17799:2;;;17845:1;17842;17835:12;17951:173;;18038:46;18080:3;18072:6;18038:46;;;-1:-1;;18113:4;18104:14;;18031:93;18133:173;;18220:46;18262:3;18254:6;18220:46;;18513:269;;18646:96;18738:3;18730:6;18646:96;;;-1:-1;;18771:4;18762:14;;18639:143;19085:265;;19240:104;19340:3;19332:6;19240:104;;19540:103;19613:24;19631:5;19613:24;;;19608:3;19601:37;19595:48;;;20047:690;;20192:54;20240:5;20192:54;;;20259:86;20338:6;20333:3;20259:86;;;20252:93;;20366:56;20416:5;20366:56;;;20442:7;20470:1;20455:260;20480:6;20477:1;20474:13;20455:260;;;20547:6;20541:13;20568:63;20627:3;20612:13;20568:63;;;20561:70;;20648:60;20701:6;20648:60;;;20638:70;-1:-1;;20502:1;20495:9;20455:260;;;-1:-1;20728:3;;20171:566;-1:-1;;;;;20171:566;20776:654;;20907:50;20951:5;20907:50;;;20970:76;21039:6;21034:3;20970:76;;;20963:83;;21067:52;21113:5;21067:52;;;21139:7;21167:1;21152:256;21177:6;21174:1;21171:13;21152:256;;;21244:6;21238:13;21265:63;21324:3;21309:13;21265:63;;;21258:70;;21345:56;21394:6;21345:56;;;21335:66;-1:-1;;21199:1;21192:9;21152:256;;21471:684;21612:52;21658:5;21612:52;;;21677:92;21762:6;21757:3;21677:92;;;21670:99;;21790:54;21838:5;21790:54;;;21864:7;21892:1;21877:266;21902:6;21899:1;21896:13;21877:266;;;21969:6;21963:13;21990:71;22057:3;22042:13;21990:71;;;21983:78;;22078:58;22129:6;22078:58;;;22068:68;-1:-1;;21924:1;21917:9;21877:266;;22194:690;;22339:54;22387:5;22339:54;;;22406:86;22485:6;22480:3;22406:86;;;22399:93;;22513:56;22563:5;22513:56;;;22589:7;22617:1;22602:260;22627:6;22624:1;22621:13;22602:260;;;22694:6;22688:13;22715:63;22774:3;22759:13;22715:63;;;22708:70;;22795:60;22848:6;22795:60;;;22785:70;-1:-1;;22649:1;22642:9;22602:260;;22923:654;;23054:50;23098:5;23054:50;;;23117:76;23186:6;23181:3;23117:76;;;23110:83;;23214:52;23260:5;23214:52;;;23286:7;23314:1;23299:256;23324:6;23321:1;23318:13;23299:256;;;23391:6;23385:13;23412:63;23471:3;23456:13;23412:63;;;23405:70;;23492:56;23541:6;23492:56;;;23482:66;-1:-1;;23346:1;23339:9;23299:256;;23660:838;;23837:73;23904:5;23837:73;;;23923:99;24015:6;24010:3;23923:99;;;23916:106;;24043:75;24112:5;24043:75;;;24138:7;24166:1;24151:325;24176:6;24173:1;24170:13;24151:325;;;24243:6;24237:13;24264:109;24369:3;24354:13;24264:109;;;24257:116;;24390:79;24462:6;24390:79;;;24380:89;-1:-1;;24198:1;24191:9;24151:325;;24581:862;;24766:73;24833:5;24766:73;;;24852:107;24952:6;24947:3;24852:107;;;24845:114;;24980:75;25049:5;24980:75;;;25075:7;25103:1;25088:333;25113:6;25110:1;25107:13;25088:333;;;25180:6;25174:13;25201:117;25314:3;25299:13;25201:117;;;25194:124;;25335:79;25407:6;25335:79;;;25325:89;-1:-1;;25135:1;25128:9;25088:333;;25536:1052;;25731:79;25804:5;25731:79;;;25823:111;25927:6;25922:3;25823:111;;;25816:118;;25957:3;25999:4;25991:6;25987:17;25982:3;25978:27;26026:81;26101:5;26026:81;;;26127:7;26155:1;26140:409;26165:6;26162:1;26159:13;26140:409;;;26227:9;26221:4;26217:20;26212:3;26205:33;26272:6;26266:13;26294:118;26407:4;26392:13;26294:118;;;26286:126;;26429:85;26507:6;26429:85;;;26537:4;26528:14;;;;;26419:95;-1:-1;;26187:1;26180:9;26140:409;;;-1:-1;26562:4;;25710:878;-1:-1;;;;;;;25710:878;26627:690;;26772:54;26820:5;26772:54;;;26839:86;26918:6;26913:3;26839:86;;;26832:93;;26946:56;26996:5;26946:56;;;27022:7;27050:1;27035:260;27060:6;27057:1;27054:13;27035:260;;;27127:6;27121:13;27148:63;27207:3;27192:13;27148:63;;;27141:70;;27228:60;27281:6;27228:60;;;27218:70;-1:-1;;27082:1;27075:9;27035:260;;27356:654;;27487:50;27531:5;27487:50;;;27550:76;27619:6;27614:3;27550:76;;;27543:83;;27647:52;27693:5;27647:52;;;27719:7;27747:1;27732:256;27757:6;27754:1;27751:13;27732:256;;;27824:6;27818:13;27845:63;27904:3;27889:13;27845:63;;;27838:70;;27925:56;27974:6;27925:56;;;27915:66;-1:-1;;27779:1;27772:9;27732:256;;28018:104;28095:21;28110:5;28095:21;;28129:103;28202:24;28220:5;28202:24;;28485:343;;28595:38;28627:5;28595:38;;;28645:70;28708:6;28703:3;28645:70;;;28638:77;;28720:52;28765:6;28760:3;28753:4;28746:5;28742:16;28720:52;;;28793:29;28815:6;28793:29;;;28784:39;;;;28575:253;-1:-1;;;28575:253;29861:162;29957:60;30011:5;29957:60;;30030:142;30116:50;30160:5;30116:50;;30179:148;30268:53;30315:5;30268:53;;30497:146;30585:52;30631:5;30585:52;;30812:465;;30972:67;31036:2;31031:3;30972:67;;;31072:66;31052:87;;-1:-1;;;31168:2;31159:12;;31152:88;31268:2;31259:12;;30958:319;-1:-1;;30958:319;31286:364;;31446:67;31510:2;31505:3;31446:67;;;31546:66;31526:87;;31641:2;31632:12;;31432:218;-1:-1;;31432:218;31659:465;;31819:67;31883:2;31878:3;31819:67;;;31919:66;31899:87;;-1:-1;;;32015:2;32006:12;;31999:88;32115:2;32106:12;;31805:319;-1:-1;;31805:319;32133:465;;32293:67;32357:2;32352:3;32293:67;;;32393:66;32373:87;;-1:-1;;;32489:2;32480:12;;32473:88;32589:2;32580:12;;32279:319;-1:-1;;32279:319;32607:364;;32767:67;32831:2;32826:3;32767:67;;;32867:66;32847:87;;32962:2;32953:12;;32753:218;-1:-1;;32753:218;32980:364;;33140:67;33204:2;33199:3;33140:67;;;33240:66;33220:87;;33335:2;33326:12;;33126:218;-1:-1;;33126:218;33353:364;;33513:67;33577:2;33572:3;33513:67;;;33613:66;33593:87;;33708:2;33699:12;;33499:218;-1:-1;;33499:218;33726:465;;33886:67;33950:2;33945:3;33886:67;;;33986:66;33966:87;;-1:-1;;;34082:2;34073:12;;34066:88;34182:2;34173:12;;33872:319;-1:-1;;33872:319;34200:364;;34360:67;34424:2;34419:3;34360:67;;;-1:-1;;;34440:87;;34555:2;34546:12;;34346:218;-1:-1;;34346:218;34573:465;;34733:67;34797:2;34792:3;34733:67;;;34833:66;34813:87;;-1:-1;;;34929:2;34920:12;;34913:88;35029:2;35020:12;;34719:319;-1:-1;;34719:319;35047:465;;35207:67;35271:2;35266:3;35207:67;;;35307:66;35287:87;;-1:-1;;;35403:2;35394:12;;35387:88;35503:2;35494:12;;35193:319;-1:-1;;35193:319;35521:465;;35681:67;35745:2;35740:3;35681:67;;;35781:66;35761:87;;35882:66;35877:2;35868:12;;35861:88;35977:2;35968:12;;35667:319;-1:-1;;35667:319;35995:364;;36155:67;36219:2;36214:3;36155:67;;;-1:-1;;;36235:87;;36350:2;36341:12;;36141:218;-1:-1;;36141:218;36368:364;;36528:67;36592:2;36587:3;36528:67;;;36628:66;36608:87;;36723:2;36714:12;;36514:218;-1:-1;;36514:218;36741:364;;36901:67;36965:2;36960:3;36901:67;;;-1:-1;;;36981:87;;37096:2;37087:12;;36887:218;-1:-1;;36887:218;37114:364;;37274:67;37338:2;37333:3;37274:67;;;37374:66;37354:87;;37469:2;37460:12;;37260:218;-1:-1;;37260:218;37487:364;;37647:67;37711:2;37706:3;37647:67;;;-1:-1;;;37727:87;;37842:2;37833:12;;37633:218;-1:-1;;37633:218;37860:465;;38020:67;38084:2;38079:3;38020:67;;;38120:66;38100:87;;-1:-1;;;38216:2;38207:12;;38200:88;38316:2;38307:12;;38006:319;-1:-1;;38006:319;38334:364;;38494:67;38558:2;38553:3;38494:67;;;38594:66;38574:87;;38689:2;38680:12;;38480:218;-1:-1;;38480:218;38707:465;;38867:67;38931:2;38926:3;38867:67;;;38967:66;38947:87;;-1:-1;;;39063:2;39054:12;;39047:88;39163:2;39154:12;;38853:319;-1:-1;;38853:319;39259:1120;39491:22;;39259:1120;;39424:4;39415:14;;;39519:62;39419:3;39491:22;39519:62;;;39444:143;39667:4;39660:5;39656:16;39650:23;39679:63;39736:4;39731:3;39727:14;39713:12;39679:63;;;39597:151;39825:4;39818:5;39814:16;39808:23;39837:63;39894:4;39889:3;39885:14;39871:12;39837:63;;;39758:148;39991:4;39984:5;39980:16;39974:23;40043:3;40037:4;40033:14;40026:4;40021:3;40017:14;40010:38;40063:99;40157:4;40143:12;40063:99;;;40055:107;;39916:258;40249:4;40242:5;40238:16;40232:23;40261:86;40341:4;40336:3;40332:14;40318:12;40261:86;;;-1:-1;40370:4;39397:982;-1:-1;;;39397:982;40386:122;40485:18;;40479:29;40586:1532;40812:22;;40586:1532;;40743:5;40734:15;;;40840:62;40738:3;40812:22;40840:62;;;40764:144;40987:4;40980:5;40976:16;40970:23;40999:63;41056:4;41051:3;41047:14;41033:12;40999:63;;;40918:150;41147:4;41140:5;41136:16;41130:23;41159:63;41216:4;41211:3;41207:14;41193:12;41159:63;;;41078:150;41305:4;41298:5;41294:16;41288:23;41317:61;41372:4;41367:3;41363:14;41349:12;41317:61;;;41238:146;41458:4;41451:5;41447:16;41441:23;41470:61;41525:4;41520:3;41516:14;41502:12;41470:61;;;41394:143;41617:4;41610:5;41606:16;41600:23;41629:63;41686:4;41681:3;41677:14;41663:12;41629:63;;;41547:151;41773:4;41766:5;41762:16;41756:23;41785:76;41855:4;41850:3;41846:14;41832:12;41785:76;;;41708:159;41941:4;41934:5;41930:16;41924:23;41993:3;41987:4;41983:14;41976:4;41971:3;41967:14;41960:38;42013:67;42075:4;42061:12;42013:67;;;42005:75;40716:1402;-1:-1;;;;;40716:1402;42194:655;42404:22;;42327:4;42318:14;;;42432:78;42322:3;42404:22;42432:78;;;42347:169;42596:4;42589:5;42585:16;42579:23;42608:63;42665:4;42660:3;42656:14;42642:12;42608:63;;;42526:151;42753:4;42746:5;42742:16;42736:23;42765:63;42822:4;42817:3;42813:14;42799:12;42765:63;;43682:1365;43907:22;;43682:1365;;43831:4;43822:14;;;43935:62;43826:3;43907:22;43935:62;;;43851:152;44078:4;44071:5;44067:16;44061:23;44090:63;44147:4;44142:3;44138:14;44124:12;44090:63;;;44013:146;44234:4;44227:5;44223:16;44217:23;44246:78;44318:4;44313:3;44309:14;44295:12;44246:78;;;44169:161;44405:4;44398:5;44394:16;44388:23;44457:3;44451:4;44447:14;44440:4;44435:3;44431:14;44424:38;44477:67;44539:4;44525:12;44477:67;;;44469:75;;44340:216;44632:4;44625:5;44621:16;44615:23;44644:63;44701:4;44696:3;44692:14;44678:12;44644:63;;;44566:147;44792:4;44785:5;44781:16;44775:23;44844:3;44838:4;44834:14;44827:4;44822:3;44818:14;44811:38;44864:145;45004:4;44990:12;44864:145;;45117:1421;45350:22;;45117:1421;;45274:4;45265:14;;;45378:70;45269:3;45350:22;45378:70;;;45294:160;45529:4;45522:5;45518:16;45512:23;45541:71;45606:4;45601:3;45597:14;45583:12;45541:71;;;45464:154;45693:4;45686:5;45682:16;45676:23;45705:86;45785:4;45780:3;45776:14;45762:12;45705:86;;;45628:169;45872:4;45865:5;45861:16;45855:23;45924:3;45918:4;45914:14;45907:4;45902:3;45898:14;45891:38;45944:75;46014:4;46000:12;45944:75;;;45936:83;;45807:224;46107:4;46100:5;46096:16;46090:23;46119:71;46184:4;46179:3;46175:14;46161:12;46119:71;;;46041:155;46275:4;46268:5;46264:16;46258:23;46327:3;46321:4;46317:14;46310:4;46305:3;46301:14;46294:38;46347:153;46495:4;46481:12;46347:153;;46622:1020;46849:22;;46622:1020;;46771:4;46762:14;;;46877:62;46766:3;46849:22;46877:62;;;46791:154;47021:4;47014:5;47010:16;47004:23;47073:3;47067:4;47063:14;47056:4;47051:3;47047:14;47040:38;47093:99;47187:4;47173:12;47093:99;;;47085:107;;46955:249;47279:4;47272:5;47268:16;47262:23;47331:3;47325:4;47321:14;47314:4;47309:3;47305:14;47298:38;47351:99;47445:4;47431:12;47351:99;;;47343:107;;47214:248;47535:4;47528:5;47524:16;47518:23;47547:63;47604:4;47599:3;47595:14;47581:12;47547:63;;48125:100;48196:23;48213:5;48196:23;;48357:213;48475:2;48460:18;;48489:71;48464:9;48533:6;48489:71;;48577:408;48741:2;48726:18;;48755:71;48730:9;48799:6;48755:71;;;48874:9;48868:4;48864:20;48859:2;48848:9;48844:18;48837:48;48899:76;48970:4;48961:6;48899:76;;48992:468;49186:2;49171:18;;49200:71;49175:9;49244:6;49200:71;;;49319:9;49313:4;49309:20;49304:2;49293:9;49289:18;49282:48;49344:106;49445:4;49436:6;49344:106;;49467:361;49635:2;49649:47;;;49620:18;;49710:108;49620:18;49804:6;49710:108;;49835:620;50081:2;50095:47;;;50066:18;;50156:108;50066:18;50250:6;50156:108;;;50148:116;;50312:9;50306:4;50302:20;50297:2;50286:9;50282:18;50275:48;50337:108;50440:4;50431:6;50337:108;;50462:361;50630:2;50644:47;;;50615:18;;50705:108;50615:18;50799:6;50705:108;;50830:461;51048:2;51062:47;;;51033:18;;51123:158;51033:18;51267:6;51123:158;;51298:201;51410:2;51395:18;;51424:65;51399:9;51462:6;51424:65;;51506:297;51642:2;51656:47;;;51627:18;;51717:76;51627:18;51779:6;51717:76;;51810:516;52000:2;52014:47;;;51985:18;;52075:84;51985:18;52145:6;52075:84;;;52067:92;;52207:9;52201:4;52197:20;52192:2;52181:9;52177:18;52170:48;52232:84;52311:4;52302:6;52232:84;;52333:407;52524:2;52538:47;;;52509:18;;52599:131;52509:18;52599:131;;52747:407;52938:2;52952:47;;;52923:18;;53013:131;52923:18;53013:131;;53161:407;53352:2;53366:47;;;53337:18;;53427:131;53337:18;53427:131;;53575:407;53766:2;53780:47;;;53751:18;;53841:131;53751:18;53841:131;;53989:407;54180:2;54194:47;;;54165:18;;54255:131;54165:18;54255:131;;54403:407;54594:2;54608:47;;;54579:18;;54669:131;54579:18;54669:131;;54817:407;55008:2;55022:47;;;54993:18;;55083:131;54993:18;55083:131;;55231:407;55422:2;55436:47;;;55407:18;;55497:131;55407:18;55497:131;;55645:407;55836:2;55850:47;;;55821:18;;55911:131;55821:18;55911:131;;56059:407;56250:2;56264:47;;;56235:18;;56325:131;56235:18;56325:131;;56473:407;56664:2;56678:47;;;56649:18;;56739:131;56649:18;56739:131;;56887:407;57078:2;57092:47;;;57063:18;;57153:131;57063:18;57153:131;;57301:407;57492:2;57506:47;;;57477:18;;57567:131;57477:18;57567:131;;57715:407;57906:2;57920:47;;;57891:18;;57981:131;57891:18;57981:131;;58129:407;58320:2;58334:47;;;58305:18;;58395:131;58305:18;58395:131;;58543:407;58734:2;58748:47;;;58719:18;;58809:131;58719:18;58809:131;;58957:407;59148:2;59162:47;;;59133:18;;59223:131;59133:18;59223:131;;59371:407;59562:2;59576:47;;;59547:18;;59637:131;59547:18;59637:131;;59785:407;59976:2;59990:47;;;59961:18;;60051:131;59961:18;60051:131;;60199:407;60390:2;60404:47;;;60375:18;;60465:131;60375:18;60465:131;;60613:389;60795:2;60809:47;;;60780:18;;60870:122;60780:18;60978:6;60870:122;;61009:269;61155:2;61140:18;;61169:99;61144:9;61241:6;61169:99;;61285:388;61459:2;61444:18;;61473:99;61448:9;61545:6;61473:99;;;61583:80;61659:2;61648:9;61644:18;61635:6;61583:80;;61680:711;61928:3;61913:19;;61943:99;61917:9;62015:6;61943:99;;;62053:80;62129:2;62118:9;62114:18;62105:6;62053:80;;;62144;62220:2;62209:9;62205:18;62196:6;62144:80;;;62272:9;62266:4;62262:20;62257:2;62246:9;62242:18;62235:48;62297:84;62376:4;62367:6;62297:84;;;62289:92;61899:492;-1:-1;;;;;;61899:492;62398:915;62692:3;62677:19;;62707:99;62681:9;62779:6;62707:99;;;62817:80;62893:2;62882:9;62878:18;62869:6;62817:80;;;62908;62984:2;62973:9;62969:18;62960:6;62908:80;;;63036:9;63030:4;63026:20;63021:2;63010:9;63006:18;62999:48;63061:84;63140:4;63131:6;63061:84;;;63053:92;;63194:9;63188:4;63184:20;63178:3;63167:9;63163:19;63156:49;63219:84;63298:4;63289:6;63219:84;;;63211:92;62663:650;-1:-1;;;;;;;62663:650;63320:507;63522:2;63507:18;;63536:99;63511:9;63608:6;63536:99;;;63646:80;63722:2;63711:9;63707:18;63698:6;63646:80;;;63737;63813:2;63802:9;63798:18;63789:6;63737:80;;63834:388;64008:2;63993:18;;64022:99;63997:9;64094:6;64022:99;;;64132:80;64208:2;64197:9;64193:18;64184:6;64132:80;;64229:947;64531:3;64516:19;;64546:99;64520:9;64618:6;64546:99;;;64656:80;64732:2;64721:9;64717:18;64708:6;64656:80;;;64747;64823:2;64812:9;64808:18;64799:6;64747:80;;;64838;64914:2;64903:9;64899:18;64890:6;64838:80;;;64929:79;65003:3;64992:9;64988:19;64979:6;64929:79;;;65057:9;65051:4;65047:20;65041:3;65030:9;65026:19;65019:49;65082:84;65161:4;65152:6;65082:84;;;65074:92;64502:674;-1:-1;;;;;;;;64502:674;65183:827;65457:3;65442:19;;65472:99;65446:9;65544:6;65472:99;;;65582:80;65658:2;65647:9;65643:18;65634:6;65582:80;;;65673;65749:2;65738:9;65734:18;65725:6;65673:80;;;65764:78;65838:2;65827:9;65823:18;65814:6;65764:78;;;65891:9;65885:4;65881:20;65875:3;65864:9;65860:19;65853:49;65916:84;65995:4;65986:6;65916:84;;66017:739;66271:3;66256:19;;66286:99;66260:9;66358:6;66286:99;;;66396:80;66472:2;66461:9;66457:18;66448:6;66396:80;;;66487:78;66561:2;66550:9;66546:18;66537:6;66487:78;;;66576;66650:2;66639:9;66635:18;66626:6;66576:78;;;66665:81;66741:3;66730:9;66726:19;66717:6;66665:81;;66763:859;67045:3;67030:19;;67060:99;67034:9;67132:6;67060:99;;;67170:80;67246:2;67235:9;67231:18;67222:6;67170:80;;;67261:78;67335:2;67324:9;67320:18;67311:6;67261:78;;;67350;67424:2;67413:9;67409:18;67400:6;67350:78;;;67439:81;67515:3;67504:9;67500:19;67491:6;67439:81;;;67531;67607:3;67596:9;67592:19;67583:6;67531:81;;68024:507;68226:2;68211:18;;68240:99;68215:9;68312:6;68240:99;;;68350:80;68426:2;68415:9;68411:18;68402:6;68350:80;;69052:711;69300:3;69285:19;;69315:99;69289:9;69387:6;69315:99;;;69425:80;69501:2;69490:9;69486:18;69477:6;69425:80;;;69516;69592:2;69581:9;69577:18;69568:6;69516:80;;69770:1123;70136:3;70121:19;;70151:99;70125:9;70223:6;70151:99;;;70261:78;70335:2;70324:9;70320:18;70311:6;70261:78;;;70350:80;70426:2;70415:9;70411:18;70402:6;70350:80;;;70441:126;70563:2;70552:9;70548:18;70539:6;70441:126;;;70616:9;70610:4;70606:20;70600:3;70589:9;70585:19;70578:49;70641:84;70720:4;70711:6;70641:84;;;70633:92;;70774:9;70768:4;70764:20;70758:3;70747:9;70743:19;70736:49;70799:84;70878:4;70869:6;70799:84;;70900:373;71074:2;71088:47;;;71059:18;;71149:114;71059:18;71249:6;71149:114;;71280:357;71446:2;71460:47;;;71431:18;;71521:106;71431:18;71613:6;71521:106;;71644:492;71846:2;71860:47;;;71831:18;;71921:114;71831:18;72021:6;71921:114;;;71913:122;;72046:80;72122:2;72111:9;72107:18;72098:6;72046:80;;72143:213;72261:2;72246:18;;72275:71;72250:9;72319:6;72275:71;;72363:843;72665:3;72650:19;;72680:71;72654:9;72724:6;72680:71;;;72762:72;72830:2;72819:9;72815:18;72806:6;72762:72;;;72882:9;72876:4;72872:20;72867:2;72856:9;72852:18;72845:48;72907:108;73010:4;73001:6;72907:108;;;72899:116;;73063:9;73057:4;73053:20;73048:2;73037:9;73033:18;73026:48;73088:108;73191:4;73182:6;73088:108;;73213:256;73275:2;73269:9;73301:17;;;-1:-1;;;;;73361:34;;73397:22;;;73358:62;73355:2;;;73433:1;73430;73423:12;73355:2;73449;73442:22;73253:216;;-1:-1;73253:216;73476:304;;-1:-1;;;;;73627:6;73624:30;73621:2;;;73667:1;73664;73657:12;73621:2;-1:-1;73702:4;73690:17;;;73755:15;;73558:222;73787:244;;-1:-1;;;;;73936:6;73933:30;73930:2;;;73976:1;73973;73966:12;73930:2;-1:-1;74011:4;73999:17;;73867:164;74660:321;;-1:-1;;;;;74795:6;74792:30;74789:2;;;74835:1;74832;74825:12;74789:2;-1:-1;74966:4;74902;74879:17;;;;-1:-1;;74875:33;74956:15;;74726:255;74988:147;75108:4;75099:14;;75056:79;76336:133;76435:12;;76406:63;76620:107;-1:-1;76714:3;;76692:35;77181:134;-1:-1;77302:3;;77280:35;78924:168;79032:19;;;79081:4;79072:14;;79025:67;81608:91;;81670:24;81688:5;81670:24;;81706:85;81772:13;81765:21;;81748:43;81877:156;81964:5;81970:58;81964:5;81970:58;;82040:136;82117:5;82123:48;82117:5;82123:48;;82183:142;82263:5;82269:51;82263:5;82269:51;;82332:140;82411:5;82417:50;82411:5;82417:50;;82479:121;-1:-1;;;;;82541:54;;82524:76;82686:96;-1:-1;;;;;82747:30;;82730:52;82789:156;;82891:49;82934:5;82891:49;;82952:136;;83044:39;83077:5;83044:39;;83095:142;;83190:42;83226:5;83190:42;;83244:140;;83338:41;83373:5;83338:41;;83392:145;83473:6;83468:3;83463;83450:30;-1:-1;83529:1;83511:16;;83504:27;83443:94;83546:268;83611:1;83618:101;83632:6;83629:1;83626:13;83618:101;;;83699:11;;;83693:18;83680:11;;;83673:39;83654:2;83647:10;83618:101;;;83734:6;83731:1;83728:13;83725:2;;;-1:-1;;83799:1;83781:16;;83774:27;83595:219;83822:97;83910:2;83890:14;-1:-1;;83886:28;;83870:49;83927:116;84021:1;84014:5;84011:12;84001:2;;84027:9;84050:106;84134:1;84127:5;84124:12;84114:2;;84140:9;84163:109;84250:1;84243:5;84240:12;84230:2;;84256:9;84279:108;84365:1;84358:5;84355:12;84345:2;;84371:9;84394:117;84463:24;84481:5;84463:24;;;84456:5;84453:35;84443:2;;84502:1;84499;84492:12;84518:117;84587:24;84605:5;84587:24;;84642:112;84729:1;84722:5;84719:12;84709:2;;84745:1;84742;84735:12;84885:115;84953:23;84970:5;84953:23;","source":"pragma solidity ^0.5.12;\\npragma experimental ABIEncoderV2;\\n\\nimport \\"openzeppelin-solidity/contracts/math/SafeMath.sol\\";\\nimport \\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\";\\nimport \\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\";\\nimport \\"./utils/SolRsaVerify.sol\\";\\n\\nimport { WorkersImpl } from \\"./impl/WorkersImpl.sol\\";\\nimport { PrincipalImpl } from \\"./impl/PrincipalImpl.sol\\";\\nimport { TaskImpl } from \\"./impl/TaskImpl.sol\\";\\nimport { UpgradeImpl } from \\"./impl/UpgradeImpl.sol\\";\\nimport { SecretContractImpl } from \\"./impl/SecretContractImpl.sol\\";\\nimport { EnigmaCommon } from \\"./impl/EnigmaCommon.sol\\";\\nimport { EnigmaState } from \\"./impl/EnigmaState.sol\\";\\nimport { EnigmaEvents } from \\"./impl/EnigmaEvents.sol\\";\\nimport { EnigmaStorage } from \\"./impl/EnigmaStorage.sol\\";\\nimport { Getters } from \\"./impl/Getters.sol\\";\\nimport { ERC20 } from \\"./interfaces/ERC20.sol\\";\\n\\ncontract Enigma is EnigmaStorage, EnigmaEvents, Getters, Ownable {\\n    using SafeMath for uint256;\\n    using SafeMath for uint64;\\n    using ECDSA for bytes32;\\n\\n    // ========================================== Constructor ==========================================\\n\\n    constructor(address _tokenAddress, address _principal, address _exchangeRate, uint _epochSize,\\n        uint _timeoutThreshold, bytes memory _mrSigner, bytes memory _isvSvn) public {\\n        state.engToken = ERC20(_tokenAddress);\\n        state.epochSize = _epochSize;\\n        state.taskTimeoutSize = _timeoutThreshold * state.epochSize;\\n        state.principal = _principal;\\n        state.exchangeRate = _exchangeRate;\\n        state.updatedEnigmaContractAddress = address(this);\\n        state.stakingThreshold = 1;\\n        state.workerGroupSize = 1;\\n        state.mrSigner = _mrSigner;\\n        state.isvSvn = _isvSvn;\\n    }\\n\\n    // ========================================== Modifiers ==========================================\\n\\n    /**\\n    * Checks if the custodian wallet is not registered as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerUnregistered(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.Unregistered, \\"Registered worker\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is registered as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerRegistered(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status != EnigmaCommon.WorkerStatus.Unregistered, \\"Unregistered worker\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if staking address balance is 0\\n    *\\n    */\\n    modifier emptyBalance() {\\n        require(state.workers[state.stakingToOperatingAddresses[msg.sender]].balance == 0,\\n            \\"Worker\'s balance is not empty\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged in as a worker\\n    *\\n    */\\n    modifier workerLoggedIn() {\\n        EnigmaCommon.Worker memory worker = state.workers[msg.sender];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedIn, \\"Worker not logged in\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the staking address or operating address is logged in\\n    *\\n    */\\n    modifier stakingOrOperatingAddressLoggedIn() {\\n        require((state.workers[msg.sender].status == EnigmaCommon.WorkerStatus.LoggedIn) ||\\n            state.workers[state.stakingToOperatingAddresses[msg.sender]].status == EnigmaCommon.WorkerStatus.LoggedIn,\\n            \\"Worker not logged in\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the staking address or operating address is registered\\n    *\\n    */\\n    modifier stakingOrOperatingAddressRegistered() {\\n        require((state.workers[msg.sender].status != EnigmaCommon.WorkerStatus.Unregistered) ||\\n        state.workers[state.stakingToOperatingAddresses[msg.sender]].status != EnigmaCommon.WorkerStatus.Unregistered,\\n            \\"Unregistered worker\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if worker can log in\\n    *\\n    */\\n    modifier canLogIn() {\\n        EnigmaCommon.Worker memory worker = state.workers[msg.sender];\\n        require(getFirstBlockNumber(block.number) != 0, \\"Principal node has not been initialized\\");\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        require(worker.balance >= state.stakingThreshold, \\"Worker\'s balance is not sufficient\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the worker can withdraw\\n    *\\n    */\\n    modifier canWithdraw() {\\n        EnigmaCommon.Worker memory worker = state.workers[state.stakingToOperatingAddresses[msg.sender]];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        EnigmaCommon.WorkerLog memory workerLog = WorkersImpl.getLatestWorkerLogImpl(worker, block.number);\\n        require(workerLog.workerEventType == EnigmaCommon.WorkerLogType.LogOut,\\n            \\"Worker\'s last log is not of LogOut type\\");\\n        require(getFirstBlockNumber(block.number) > workerLog.blockNumber,\\n            \\"Cannot withdraw in same epoch as log out event\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has not been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractUndefined(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Undefined,\\n            \\"Secret contract already deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractDeployed(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Deployed,\\n            \\"Secret contract not deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks task record has been created and is still pending receipt\\n    *\\n    * @param _taskId Task ID\\n    */\\n    modifier taskWaiting(bytes32 _taskId) {\\n        require(state.tasks[_taskId].status == EnigmaCommon.TaskStatus.RecordCreated, \\"Task is not waiting\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure signing key used for registration is unique\\n    *\\n    */\\n    modifier areOperatingAndStakingDiff(address _stakingAddress) {\\n        require(_stakingAddress != msg.sender, \\"Operating address not different from staking address\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure staking address can set an operating address\\n    *\\n    */\\n    modifier canSetOperatingAddress(address _operatingAddress) {\\n        require(state.stakingToOperatingAddresses[msg.sender] == address(0),\\n            \\"Staking address currently tied to an in-use operating address\\");\\n        require(state.workers[_operatingAddress].stakingAddress == msg.sender,\\n            \\"Invalid staking address for this operating address\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure signing key used for registration is unique\\n    *\\n    * @param _signer Signing key\\n    */\\n    modifier isUniqueSigningKey(address _signer) {\\n        for (uint i = 0; i < state.workerAddresses.length; i++) {\\n            require(state.workers[state.workerAddresses[i]].signer != _signer,\\n                \\"Not a unique signing key\\");\\n        }\\n        _;\\n    }\\n\\n    /**\\n    * Ensure that the contract\'s context is the updated contract\\n    *\\n    */\\n    modifier isUpdatedEnigmaContract() {\\n        require(address(this) == state.updatedEnigmaContractAddress, \\"Not updated Enigma contract\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure the sender of the recent call is the updated contract\\n    *\\n    */\\n    modifier fromUpdatedEnigmaContract() {\\n        require(msg.sender == state.updatedEnigmaContractAddress, \\"Not from updated Enigma contract\\");\\n        _;\\n    }\\n\\n    // ========================================== Functions ==========================================\\n\\n    /**\\n    * Registers a new worker or change the signer parameters of an existing\\n    * worker. This should be called by every worker (and the principal)\\n    * node in order to receive tasks.\\n    *\\n    * @param _stakingAddress The operating address\\n    * @param _signer The signer address, derived from the enclave public key\\n    * @param _report The RLP encoded report returned by the IAS\\n    * @param _signature Signature\\n    */\\n    function register(address _stakingAddress, address _signer, bytes memory _report, bytes memory _signature)\\n    public\\n    isUpdatedEnigmaContract\\n    workerUnregistered(msg.sender)\\n    isUniqueSigningKey(_signer)\\n    areOperatingAndStakingDiff(_stakingAddress)\\n    {\\n        WorkersImpl.registerImpl(state, _stakingAddress, _signer, _report, _signature);\\n    }\\n\\n    /**\\n    * Unregisters a staking address\' worker.\\n    *\\n    */\\n    function unregister()\\n    public\\n    isUpdatedEnigmaContract\\n    stakingOrOperatingAddressRegistered\\n    emptyBalance\\n    {\\n        WorkersImpl.unregisterImpl(state);\\n    }\\n\\n    /**\\n    * Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    *\\n    * @param _custodian The worker\'s ETH address\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function deposit(address _custodian, uint _amount)\\n    public\\n    isUpdatedEnigmaContract\\n    workerRegistered(state.stakingToOperatingAddresses[_custodian])\\n    {\\n        WorkersImpl.depositImpl(state, _custodian, _amount);\\n    }\\n\\n    /**\\n    * Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    *\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function withdraw(uint _amount)\\n    public\\n    canWithdraw\\n    {\\n        WorkersImpl.withdrawImpl(state, _amount);\\n    }\\n\\n    /**\\n    * Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\n    * selection process.\\n    */\\n    function login() public canLogIn {\\n        WorkersImpl.loginImpl(state);\\n    }\\n\\n    /**\\n    * Logout worker. Worker must be logged in to do so.\\n    */\\n    function logout() public stakingOrOperatingAddressLoggedIn {\\n        WorkersImpl.logoutImpl(state);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContractFailure(\\n        bytes32 _taskId,\\n        bytes32 _codeHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractFailureImpl(state, _taskId, _codeHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _gasUsed Gas used for task\\n    * @param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n    * @param _bytes32s [taskId, preCodeHash, codeHash, initStateDeltaHash]\\n    * @param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContract(\\n        uint64 _gasUsed,\\n        address _optionalEthereumContractAddress,\\n        bytes32[4] memory _bytes32s,\\n        bytes memory _optionalEthereumData,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn\\n    contractUndefined(_bytes32s[0])\\n    {\\n        TaskImpl.deploySecretContractImpl(state, _gasUsed, _optionalEthereumContractAddress, _bytes32s,\\n            _optionalEthereumData, _sig);\\n    }\\n\\n    /**\\n    * Check if secret contract has been deployed\\n    *\\n    * @return  Number of deployed secret contracts\\n    */\\n    function countSecretContracts()\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return SecretContractImpl.countSecretContractsImpl(state);\\n    }\\n\\n    /**\\n    * Get deployed secret contract addresses within a range\\n    *\\n    * @param _start Start of range\\n    * @param _stop End of range\\n    * @return Subset of deployed secret contract addresses\\n    */\\n    function getSecretContractAddresses(uint _start, uint _stop)\\n    public\\n    view\\n    returns (bytes32[] memory)\\n    {\\n        return SecretContractImpl.getSecretContractAddressesImpl(state, _start, _stop);\\n    }\\n\\n    /**\\n    * Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\n    * generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\n    * task deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\n    * the on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\n    * invalid.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    * @param _nonce Locally-computed nonce value for this deployment\\n    */\\n    function createDeploymentTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber,\\n        uint _nonce\\n    )\\n    public\\n    onlyOwner\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createDeploymentTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber, _nonce);\\n    }\\n\\n    /**\\n    * Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\n    * contract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\n    * the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\n    * The task record is finalized and the worker is credited with the task fee.\\n    *\\n    * @param _gasUsed Gas used for task computation\\n    * @param _optionalEthereumContractAddress Output state hash\\n    * @param _bytes32s [scAddr, taskId, stateDeltaHash, outputHash]\\n    * @param _optionalEthereumData Output state hash\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitReceipt(\\n        uint64 _gasUsed,\\n        address _optionalEthereumContractAddress,\\n        bytes32[4] memory _bytes32s,\\n        bytes memory _optionalEthereumData,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn\\n    contractDeployed(_bytes32s[0])\\n    {\\n        TaskImpl.commitReceiptImpl(state, _gasUsed, _optionalEthereumContractAddress,\\n            _bytes32s, _optionalEthereumData, _sig);\\n    }\\n\\n    /**\\n    * Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\n    * updated to indicate task failure.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _outputHash Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitTaskFailure(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _outputHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitTaskFailureImpl(state, _scAddr, _taskId, _outputHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    *\\n    * @param _taskId Unique taskId\\n    */\\n    function returnFeesForTask(bytes32 _taskId)\\n    public\\n    taskWaiting(_taskId)\\n    {\\n        TaskImpl.returnFeesForTaskImpl(state, _taskId);\\n    }\\n\\n    /**\\n    * Reparameterizing workers with a new seed\\n    * This should be called for each epoch by the Principal node\\n    *\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n    * @param _seed The random integer generated by the enclave\\n    * @param _sig Principal node\'s signature\\n    */\\n    function setWorkersParams(uint _blockNumber, uint _seed, bytes memory _sig)\\n    public\\n    isUpdatedEnigmaContract\\n    workerRegistered(msg.sender)\\n    {\\n        PrincipalImpl.setWorkersParamsImpl(state, _blockNumber, _seed, _sig);\\n    }\\n\\n    /**\\n    * Get active workers before a certain block number\\n    *\\n    * @param _blockNumber Block number\\n    */\\n    function getActiveWorkers(uint _blockNumber)\\n    public\\n    view\\n    returns (address[] memory, uint[] memory)\\n    {\\n        return PrincipalImpl.getActiveWorkersImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get the first block number of an epoch that a given block number belongs to\\n    *\\n    * @param _blockNumber Block number\\n    * @return Block number\\n    */\\n    function getFirstBlockNumber(uint _blockNumber)\\n    public\\n    view\\n    returns (uint) {\\n        return WorkersImpl.getFirstBlockNumberImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get worker params for an epoch given a particular block number\\n    *\\n    * @param _blockNumber Block number\\n    * @return Epoch\'s first block number\\n    * @return Seed\\n    * @return Array of worker\'s signing addresses\\n    * @return Array of worker\'s stakes\\n    */\\n    function getWorkerParams(uint _blockNumber)\\n    public\\n    view\\n    returns (uint, uint, address[] memory, uint[] memory) {\\n        return WorkersImpl.getWorkerParamsImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\n    * and the secret contract address.\\n    *\\n    * @param _blockNumber Block number the task record was mined\\n    * @param _scAddr Secret contract address\\n    * @return Selected workers\' addresses\\n    */\\n    function getWorkerGroup(uint _blockNumber, bytes32 _scAddr)\\n    public\\n    view\\n    returns (address[] memory)\\n    {\\n        return WorkersImpl.getWorkerGroupImpl(state, _blockNumber, _scAddr);\\n    }\\n\\n    /**\\n    * The RLP encoded report returned by the IAS server\\n    *\\n    * @param _custodian The worker\'s custodian address\\n    */\\n    function getReport(address _custodian)\\n    public\\n    view\\n    workerRegistered(_custodian)\\n    returns (address, bytes memory)\\n    {\\n        return WorkersImpl.getReportImpl(state, _custodian);\\n    }\\n\\n    /**\\n    * This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n    * @param _data The report itself\\n    * @param _signature The signature of the report\\n    */\\n    function verifyReport(bytes memory _data, bytes memory _signature)\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return WorkersImpl.verifyReportImpl(_data, _signature);\\n    }\\n\\n    /**\\n    * Upgrade Enigma Contract\\n    * @param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address\\n    */\\n    function upgradeEnigmaContract(address _updatedEnigmaContractAddress)\\n    public\\n    onlyOwner\\n    isUpdatedEnigmaContract\\n    {\\n        return UpgradeImpl.upgradeEnigmaContractImpl(state, _updatedEnigmaContractAddress);\\n    }\\n\\n    /**\\n    * Transfer worker stake from old contract to new contract upon registration\\n    * @param _operatingAddress Operating Address\\n    * @param _stakingAddress Newly-registered worker address\\n    * @param _sig Signature\\n    */\\n    function transferWorkerStakePostUpgrade(address _operatingAddress, address _stakingAddress, bytes memory _sig)\\n    public\\n    fromUpdatedEnigmaContract\\n    returns (uint256)\\n    {\\n        return UpgradeImpl.transferWorkerStakePostUpgradeImpl(state, _operatingAddress, _stakingAddress, _sig);\\n    }\\n\\n    /**\\n    * Set mrSigner\\n    * @param _mrSigner mrSigner\\n    */\\n    function setMrSigner(bytes memory _mrSigner)\\n    public\\n    onlyOwner\\n    {\\n        state.mrSigner = _mrSigner;\\n    }\\n\\n    /**\\n    * Set isvSvn\\n    * @param _isvSvn mrSigner\\n    */\\n    function setIsvSvn(bytes memory _isvSvn)\\n    public\\n    onlyOwner\\n    {\\n        state.isvSvn = _isvSvn;\\n    }\\n\\n    /**\\n    * Set operating address for a particular staking address\\n    * @param _operatingAddress Operating Address\\n    */\\n    function setOperatingAddress(address _operatingAddress)\\n    public\\n    canSetOperatingAddress(_operatingAddress)\\n    {\\n        WorkersImpl.setOperatingAddressImpl(state, _operatingAddress);\\n    }\\n}\\n","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[1113]},"id":1114,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".12"],"nodeType":"PragmaDirective","src":"0:24:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"25:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":1114,"sourceUnit":23739,"src":"60:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":1114,"sourceUnit":23552,"src":"120:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"openzeppelin-solidity/contracts/ownership/Ownable.sol","id":5,"nodeType":"ImportDirective","scope":1114,"sourceUnit":23853,"src":"185:63:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":6,"nodeType":"ImportDirective","scope":1114,"sourceUnit":23444,"src":"249:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":8,"nodeType":"ImportDirective","scope":1114,"sourceUnit":10510,"src":"285:53:0","symbolAliases":[{"foreign":7,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":10,"nodeType":"ImportDirective","scope":1114,"sourceUnit":3798,"src":"339:57:0","symbolAliases":[{"foreign":9,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":12,"nodeType":"ImportDirective","scope":1114,"sourceUnit":6792,"src":"397:47:0","symbolAliases":[{"foreign":11,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol","file":"./impl/UpgradeImpl.sol","id":14,"nodeType":"ImportDirective","scope":1114,"sourceUnit":9338,"src":"445:53:0","symbolAliases":[{"foreign":13,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":16,"nodeType":"ImportDirective","scope":1114,"sourceUnit":4438,"src":"499:67:0","symbolAliases":[{"foreign":15,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":18,"nodeType":"ImportDirective","scope":1114,"sourceUnit":2859,"src":"567:55:0","symbolAliases":[{"foreign":17,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":20,"nodeType":"ImportDirective","scope":1114,"sourceUnit":3049,"src":"623:53:0","symbolAliases":[{"foreign":19,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":22,"nodeType":"ImportDirective","scope":1114,"sourceUnit":2985,"src":"677:55:0","symbolAliases":[{"foreign":21,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":24,"nodeType":"ImportDirective","scope":1114,"sourceUnit":3057,"src":"733:57:0","symbolAliases":[{"foreign":23,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":26,"nodeType":"ImportDirective","scope":1114,"sourceUnit":3271,"src":"791:45:0","symbolAliases":[{"foreign":25,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":28,"nodeType":"ImportDirective","scope":1114,"sourceUnit":11613,"src":"837:47:0","symbolAliases":[{"foreign":27,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":29,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":3056,"src":"905:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$3056","typeString":"contract EnigmaStorage"}},"id":30,"nodeType":"InheritanceSpecifier","src":"905:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":31,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2984,"src":"920:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2984","typeString":"contract EnigmaEvents"}},"id":32,"nodeType":"InheritanceSpecifier","src":"920:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":33,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":3270,"src":"934:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$3270","typeString":"contract Getters"}},"id":34,"nodeType":"InheritanceSpecifier","src":"934:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":35,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":23852,"src":"943:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$23852","typeString":"contract Ownable"}},"id":36,"nodeType":"InheritanceSpecifier","src":"943:7:0"}],"contractDependencies":[2984,3056,3270,23470,23852],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":1113,"linearizedBaseContracts":[1113,23852,23470,3270,2984,3056],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":39,"libraryName":{"contractScope":null,"id":37,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":23738,"src":"963:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$23738","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"957:27:0","typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":42,"libraryName":{"contractScope":null,"id":40,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":23738,"src":"995:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$23738","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"989:26:0","typeName":{"id":41,"name":"uint64","nodeType":"ElementaryTypeName","src":"1008:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}},{"id":45,"libraryName":{"contractScope":null,"id":43,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":23551,"src":"1026:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$23551","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"1020:24:0","typeName":{"id":44,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1036:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":129,"nodeType":"Block","src":"1336:442:0","statements":[{"expression":{"argumentTypes":null,"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":62,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1346:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":64,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2993,"src":"1346:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11612","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":66,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1369:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":65,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11612,"src":"1363:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$11612_$","typeString":"type(contract ERC20)"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1363:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11612","typeString":"contract ERC20"}},"src":"1346:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11612","typeString":"contract ERC20"}},"id":69,"nodeType":"ExpressionStatement","src":"1346:37:0"},{"expression":{"argumentTypes":null,"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":70,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1393:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":72,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2995,"src":"1393:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":73,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1411:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1393:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":75,"nodeType":"ExpressionStatement","src":"1393:28:0"},{"expression":{"argumentTypes":null,"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":76,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1431:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":78,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2997,"src":"1431:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":79,"name":"_timeoutThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"1455:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":80,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1475:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":81,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2995,"src":"1475:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1455:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1431:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":84,"nodeType":"ExpressionStatement","src":"1431:59:0"},{"expression":{"argumentTypes":null,"id":89,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":85,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1500:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":87,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2999,"src":"1500:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":88,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"1518:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1500:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":90,"nodeType":"ExpressionStatement","src":"1500:28:0"},{"expression":{"argumentTypes":null,"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":91,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1538:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":93,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"exchangeRate","nodeType":"MemberAccess","referencedDeclaration":3001,"src":"1538:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":94,"name":"_exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1559:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1538:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":96,"nodeType":"ExpressionStatement","src":"1538:34:0"},{"expression":{"argumentTypes":null,"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":97,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1582:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":99,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":3003,"src":"1582:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":101,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24453,"src":"1627:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$1113","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$1113","typeString":"contract Enigma"}],"id":100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1619:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1619:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1582:50:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"1582:50:0"},{"expression":{"argumentTypes":null,"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":105,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1642:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":3040,"src":"1642:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1667:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1642:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":110,"nodeType":"ExpressionStatement","src":"1642:26:0"},{"expression":{"argumentTypes":null,"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":111,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1678:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":3042,"src":"1678:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1678:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":116,"nodeType":"ExpressionStatement","src":"1678:25:0"},{"expression":{"argumentTypes":null,"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":117,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1713:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"mrSigner","nodeType":"MemberAccess","referencedDeclaration":3044,"src":"1713:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":120,"name":"_mrSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1730:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1713:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":122,"nodeType":"ExpressionStatement","src":"1713:26:0"},{"expression":{"argumentTypes":null,"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":123,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1749:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isvSvn","nodeType":"MemberAccess","referencedDeclaration":3046,"src":"1749:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":126,"name":"_isvSvn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"1764:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1749:22:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":128,"nodeType":"ExpressionStatement","src":"1749:22:0"}]},"documentation":null,"id":130,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":130,"src":"1168:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1168:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":49,"name":"_principal","nodeType":"VariableDeclaration","scope":130,"src":"1191:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":51,"name":"_exchangeRate","nodeType":"VariableDeclaration","scope":130,"src":"1211:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":53,"name":"_epochSize","nodeType":"VariableDeclaration","scope":130,"src":"1234:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint","nodeType":"ElementaryTypeName","src":"1234:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":55,"name":"_timeoutThreshold","nodeType":"VariableDeclaration","scope":130,"src":"1259:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint","nodeType":"ElementaryTypeName","src":"1259:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":57,"name":"_mrSigner","nodeType":"VariableDeclaration","scope":130,"src":"1283:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"1283:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":59,"name":"_isvSvn","nodeType":"VariableDeclaration","scope":130,"src":"1307:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":58,"name":"bytes","nodeType":"ElementaryTypeName","src":"1307:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1167:161:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"1336:0:0"},"scope":1113,"src":"1156:622:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":154,"nodeType":"Block","src":"2074:179:0","statements":[{"assignments":[137],"declarations":[{"constant":false,"id":137,"name":"worker","nodeType":"VariableDeclaration","scope":154,"src":"2084:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":136,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2725,"src":"2084:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":142,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":138,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"2120:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"2120:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":141,"indexExpression":{"argumentTypes":null,"id":140,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2134:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2120:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2084:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":144,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2158:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"2158:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":146,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"2175:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"2175:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2175:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2158:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5265676973746572656420776f726b6572","id":150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2215:19:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ccb6cfef1d3461916d43bf0d52798d70480f86f73b45a501a4074fec044e3f9a","typeString":"literal_string \\"Registered worker\\""},"value":"Registered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ccb6cfef1d3461916d43bf0d52798d70480f86f73b45a501a4074fec044e3f9a","typeString":"literal_string \\"Registered worker\\""}],"id":143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"2150:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2150:85:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":152,"nodeType":"ExpressionStatement","src":"2150:85:0"},{"id":153,"nodeType":"PlaceholderStatement","src":"2245:1:0"}]},"documentation":"Checks if the custodian wallet is not registered as a worker\\n    * @param _user The custodian address of the worker","id":155,"name":"workerUnregistered","nodeType":"ModifierDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"name":"_user","nodeType":"VariableDeclaration","scope":155,"src":"2059:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"2059:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2058:15:0"},"src":"2031:222:0","visibility":"internal"},{"body":{"id":179,"nodeType":"Block","src":"2439:181:0","statements":[{"assignments":[162],"declarations":[{"constant":false,"id":162,"name":"worker","nodeType":"VariableDeclaration","scope":179,"src":"2449:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":161,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2725,"src":"2449:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":167,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":163,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"2485:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"2485:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":166,"indexExpression":{"argumentTypes":null,"id":165,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2499:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2485:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2449:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":169,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2523:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"2523:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":171,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"2540:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"2540:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2540:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2523:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2580:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"2515:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2515:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":177,"nodeType":"ExpressionStatement","src":"2515:87:0"},{"id":178,"nodeType":"PlaceholderStatement","src":"2612:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":180,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"name":"_user","nodeType":"VariableDeclaration","scope":180,"src":"2424:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"2424:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2423:15:0"},"src":"2398:222:0","visibility":"internal"},{"body":{"id":198,"nodeType":"Block","src":"2716:155:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":183,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"2734:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"2734:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":190,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":185,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"2748:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingToOperatingAddresses","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"2748:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":189,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":187,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"2782:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2782:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2748:45:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2734:60:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2721,"src":"2734:68:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2734:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f7420656d707479","id":194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2821:31:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2f410c804512b184b2dccaa3d1781dc11f47a096afc8959d157c4ede15a45ad6","typeString":"literal_string \\"Worker\'s balance is not empty\\""},"value":"Worker\'s balance is not empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f410c804512b184b2dccaa3d1781dc11f47a096afc8959d157c4ede15a45ad6","typeString":"literal_string \\"Worker\'s balance is not empty\\""}],"id":182,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"2726:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2726:127:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":196,"nodeType":"ExpressionStatement","src":"2726:127:0"},{"id":197,"nodeType":"PlaceholderStatement","src":"2863:1:0"}]},"documentation":"Checks if staking address balance is 0\\n    ","id":199,"name":"emptyBalance","nodeType":"ModifierDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"2713:2:0"},"src":"2692:179:0","visibility":"internal"},{"body":{"id":222,"nodeType":"Block","src":"2986:183:0","statements":[{"assignments":[204],"declarations":[{"constant":false,"id":204,"name":"worker","nodeType":"VariableDeclaration","scope":222,"src":"2996:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":203,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2725,"src":"2996:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":210,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":205,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3032:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"3032:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":209,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":207,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"3046:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3046:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3032:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2996:61:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"3075:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"3075:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":214,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"3092:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"3092:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3092:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3075:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3128:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"3067:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3067:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":220,"nodeType":"ExpressionStatement","src":"3067:84:0"},{"id":221,"nodeType":"PlaceholderStatement","src":"3161:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    ","id":223,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[],"src":"2983:2:0"},"src":"2960:209:0","visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"3311:266:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":226,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3330:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"3330:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":230,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":228,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"3344:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3344:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3330:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"3330:32:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":232,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"3366:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"3366:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3366:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3330:70:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3329:72:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":237,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3417:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"3417:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":244,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3431:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingToOperatingAddresses","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"3431:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":243,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":241,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"3465:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3465:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3431:45:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3417:60:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"3417:67:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":246,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"3488:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"3488:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3488:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3417:105:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3329:193:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3536:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"3321:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3321:238:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":253,"nodeType":"ExpressionStatement","src":"3321:238:0"},{"id":254,"nodeType":"PlaceholderStatement","src":"3569:1:0"}]},"documentation":"Checks if the staking address or operating address is logged in\\n    ","id":256,"name":"stakingOrOperatingAddressLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[],"src":"3308:2:0"},"src":"3266:311:0","visibility":"internal"},{"body":{"id":288,"nodeType":"Block","src":"3722:269:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":259,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3741:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"3741:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":263,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":261,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"3755:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3755:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3741:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"3741:32:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":265,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"3777:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"3777:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3777:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3741:74:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3740:76:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":270,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3828:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"3828:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":277,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":272,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3842:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingToOperatingAddresses","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"3842:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":276,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":274,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"3876:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3876:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3842:45:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3828:60:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"3828:67:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":279,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"3899:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"3899:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3899:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3828:109:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3740:197:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3951:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"3732:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3732:241:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"ExpressionStatement","src":"3732:241:0"},{"id":287,"nodeType":"PlaceholderStatement","src":"3983:1:0"}]},"documentation":"Checks if the staking address or operating address is registered\\n    ","id":289,"name":"stakingOrOperatingAddressRegistered","nodeType":"ModifierDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[],"src":"3719:2:0"},"src":"3675:316:0","visibility":"internal"},{"body":{"id":331,"nodeType":"Block","src":"4072:400:0","statements":[{"assignments":[294],"declarations":[{"constant":false,"id":294,"name":"worker","nodeType":"VariableDeclaration","scope":331,"src":"4082:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":293,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2725,"src":"4082:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":300,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":295,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4118:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"4118:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":299,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":297,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"4132:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4132:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4118:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4082:61:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":303,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24389,"src":"4181:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4181:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":302,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"4161:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4161:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4198:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4161:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4201:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"4153:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4153:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"ExpressionStatement","src":"4153:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":312,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4261:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"4261:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":314,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"4278:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"4278:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4278:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"4261:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4315:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"4253:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4253:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":320,"nodeType":"ExpressionStatement","src":"4253:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":322,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4375:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2721,"src":"4375:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":324,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4393:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":3040,"src":"4393:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4375:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4417:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"4367:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4367:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":329,"nodeType":"ExpressionStatement","src":"4367:87:0"},{"id":330,"nodeType":"PlaceholderStatement","src":"4464:1:0"}]},"documentation":"Checks if worker can log in\\n    ","id":332,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"4069:2:0"},"src":"4052:420:0","visibility":"internal"},{"body":{"id":390,"nodeType":"Block","src":"4562:620:0","statements":[{"assignments":[337],"declarations":[{"constant":false,"id":337,"name":"worker","nodeType":"VariableDeclaration","scope":390,"src":"4572:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":336,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2725,"src":"4572:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":346,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":338,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4608:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"4608:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":345,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":340,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4622:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingToOperatingAddresses","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"4622:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":344,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":342,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"4656:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4656:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4622:45:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4608:60:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4572:96:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":348,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4686:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"4686:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":350,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"4703:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"4703:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4703:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"4686:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4740:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"4678:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4678:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"ExpressionStatement","src":"4678:104:0"},{"assignments":[360],"declarations":[{"constant":false,"id":360,"name":"workerLog","nodeType":"VariableDeclaration","scope":390,"src":"4792:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2743_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":359,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2743,"src":"4792:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2743_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":367,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":363,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4869:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":364,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24389,"src":"4877:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4877:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":361,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"4834:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":10508,"src":"4834:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2725_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2743_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4834:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2743_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"4792:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2774","typeString":"enum EnigmaCommon.WorkerLogType"},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":369,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"4908:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2743_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2738,"src":"4908:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2774","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":371,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"4937:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2774,"src":"4937:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2774_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4937:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2774","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"4908:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4984:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":368,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"4900:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4900:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"4900:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":380,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24389,"src":"5064:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5064:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":379,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"5044:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5044:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":383,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"5080:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2743_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2740,"src":"5080:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5044:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5115:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":378,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"5036:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5036:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":388,"nodeType":"ExpressionStatement","src":"5036:128:0"},{"id":389,"nodeType":"PlaceholderStatement","src":"5174:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    ","id":391,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[],"src":"4559:2:0"},"src":"4539:643:0","visibility":"internal"},{"body":{"id":409,"nodeType":"Block","src":"5349:163:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2769","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":396,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"5367:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":3034,"src":"5367:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2755_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":399,"indexExpression":{"argumentTypes":null,"id":398,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5383:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5367:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2755_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2754,"src":"5367:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2769","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":401,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"5402:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"5402:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2769_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5402:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2769","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"5367:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5459:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"5359:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5359:135:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":407,"nodeType":"ExpressionStatement","src":"5359:135:0"},{"id":408,"nodeType":"PlaceholderStatement","src":"5504:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":410,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"name":"_scAddr","nodeType":"VariableDeclaration","scope":410,"src":"5332:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5332:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5331:17:0"},"src":"5305:207:0","visibility":"internal"},{"body":{"id":428,"nodeType":"Block","src":"5674:158:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2769","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":415,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"5692:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":3034,"src":"5692:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2755_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":418,"indexExpression":{"argumentTypes":null,"id":417,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5708:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5692:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2755_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2754,"src":"5692:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2769","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":420,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"5727:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"5727:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2769_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5727:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2769","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"5692:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5783:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"5684:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5684:130:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":426,"nodeType":"ExpressionStatement","src":"5684:130:0"},{"id":427,"nodeType":"PlaceholderStatement","src":"5824:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":429,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"name":"_scAddr","nodeType":"VariableDeclaration","scope":429,"src":"5657:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5657:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5656:17:0"},"src":"5631:201:0","visibility":"internal"},{"body":{"id":447,"nodeType":"Block","src":"5997:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2762","typeString":"enum EnigmaCommon.TaskStatus"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":434,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"6015:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":3027,"src":"6015:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2711_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":437,"indexExpression":{"argumentTypes":null,"id":436,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"6027:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6015:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2711_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2708,"src":"6015:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2762","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":439,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"6046:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2762,"src":"6046:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2762_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6046:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2762","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"6015:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6085:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"6007:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6007:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":445,"nodeType":"ExpressionStatement","src":"6007:100:0"},{"id":446,"nodeType":"PlaceholderStatement","src":"6117:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":448,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"name":"_taskId","nodeType":"VariableDeclaration","scope":448,"src":"5980:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5980:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5979:17:0"},"src":"5959:166:0","visibility":"internal"},{"body":{"id":461,"nodeType":"Block","src":"6270:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":453,"name":"_stakingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6288:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"6307:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6307:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"6288:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4f7065726174696e672061646472657373206e6f7420646966666572656e742066726f6d207374616b696e672061646472657373","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6319:54:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_4deceade7f0fcaaf4a69635f9314d9f26308495a5be650c1a0421efac2aabb8b","typeString":"literal_string \\"Operating address not different from staking address\\""},"value":"Operating address not different from staking address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4deceade7f0fcaaf4a69635f9314d9f26308495a5be650c1a0421efac2aabb8b","typeString":"literal_string \\"Operating address not different from staking address\\""}],"id":452,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"6280:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6280:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"ExpressionStatement","src":"6280:94:0"},{"id":460,"nodeType":"PlaceholderStatement","src":"6384:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    ","id":462,"name":"areOperatingAndStakingDiff","nodeType":"ModifierDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"name":"_stakingAddress","nodeType":"VariableDeclaration","scope":462,"src":"6245:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"6245:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"6244:25:0"},"src":"6209:183:0","visibility":"internal"},{"body":{"id":492,"nodeType":"Block","src":"6536:319:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":467,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"6554:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingToOperatingAddresses","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"6554:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":471,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":469,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"6588:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6588:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6554:45:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6611:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6603:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6603:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"6554:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5374616b696e6720616464726573732063757272656e746c79207469656420746f20616e20696e2d757365206f7065726174696e672061646472657373","id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6627:63:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_76cdd1246aec3da2e647167226e9586523f0fbb3433bbb17506df44ba156765d","typeString":"literal_string \\"Staking address currently tied to an in-use operating address\\""},"value":"Staking address currently tied to an in-use operating address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76cdd1246aec3da2e647167226e9586523f0fbb3433bbb17506df44ba156765d","typeString":"literal_string \\"Staking address currently tied to an in-use operating address\\""}],"id":466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"6546:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6546:145:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"6546:145:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":480,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"6709:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"6709:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":483,"indexExpression":{"argumentTypes":null,"id":482,"name":"_operatingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"6723:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6709:32:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingAddress","nodeType":"MemberAccess","referencedDeclaration":2713,"src":"6709:47:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":485,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"6760:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6760:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"6709:61:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"496e76616c6964207374616b696e67206164647265737320666f722074686973206f7065726174696e672061646472657373","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6784:52:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d6c8295c94fdcacce10a0f24320fecc0e7f3ba840c4ddceb56f9d99e4a541a04","typeString":"literal_string \\"Invalid staking address for this operating address\\""},"value":"Invalid staking address for this operating address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6c8295c94fdcacce10a0f24320fecc0e7f3ba840c4ddceb56f9d99e4a541a04","typeString":"literal_string \\"Invalid staking address for this operating address\\""}],"id":479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"6701:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6701:136:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":490,"nodeType":"ExpressionStatement","src":"6701:136:0"},{"id":491,"nodeType":"PlaceholderStatement","src":"6847:1:0"}]},"documentation":"Ensure staking address can set an operating address\\n    ","id":493,"name":"canSetOperatingAddress","nodeType":"ModifierDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"name":"_operatingAddress","nodeType":"VariableDeclaration","scope":493,"src":"6509:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"6509:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"6508:27:0"},"src":"6477:378:0","visibility":"internal"},{"body":{"id":526,"nodeType":"Block","src":"7017:218:0","statements":[{"body":{"id":523,"nodeType":"Block","src":"7083:135:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":510,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7105:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"7105:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":516,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":512,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7119:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"7119:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":515,"indexExpression":{"argumentTypes":null,"id":514,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"7141:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7119:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7105:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2715,"src":"7105:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":518,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"7155:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7105:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7180:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"7097:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7097:110:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"7097:110:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":501,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"7044:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":502,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7048:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"7048:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7048:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7044:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":524,"initializationExpression":{"assignments":[498],"declarations":[{"constant":false,"id":498,"name":"i","nodeType":"VariableDeclaration","scope":524,"src":"7032:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":497,"name":"uint","nodeType":"ElementaryTypeName","src":"7032:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":500,"initialValue":{"argumentTypes":null,"hexValue":"30","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7041:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7032:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7078:3:0","subExpression":{"argumentTypes":null,"id":506,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"7078:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":508,"nodeType":"ExpressionStatement","src":"7078:3:0"},"nodeType":"ForStatement","src":"7027:191:0"},{"id":525,"nodeType":"PlaceholderStatement","src":"7227:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":527,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"name":"_signer","nodeType":"VariableDeclaration","scope":527,"src":"7000:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"7000:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"6999:17:0"},"src":"6972:263:0","visibility":"internal"},{"body":{"id":540,"nodeType":"Block","src":"7362:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":531,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24453,"src":"7388:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$1113","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$1113","typeString":"contract Enigma"}],"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7380:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7380:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":533,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7397:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":3003,"src":"7397:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7380:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74207570646174656420456e69676d6120636f6e7472616374","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7433:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""},"value":"Not updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""}],"id":529,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"7372:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7372:91:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"7372:91:0"},{"id":539,"nodeType":"PlaceholderStatement","src":"7473:1:0"}]},"documentation":"Ensure that the contract\'s context is the updated contract\\n    ","id":541,"name":"isUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"7359:2:0"},"src":"7327:154:0","visibility":"internal"},{"body":{"id":553,"nodeType":"Block","src":"7612:121:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":544,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"7630:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7630:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":546,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7644:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":3003,"src":"7644:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7680:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""},"value":"Not from updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""}],"id":543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"7622:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7622:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":551,"nodeType":"ExpressionStatement","src":"7622:93:0"},{"id":552,"nodeType":"PlaceholderStatement","src":"7725:1:0"}]},"documentation":"Ensure the sender of the recent call is the updated contract\\n    ","id":554,"name":"fromUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"7609:2:0"},"src":"7575:158:0","visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"8541:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":580,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"8576:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":581,"name":"_stakingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"8583:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":582,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"8600:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":583,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"8609:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":584,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"8618:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":577,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"8551:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":9679,"src":"8551:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,address,bytes memory,bytes memory)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8551:78:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"8551:78:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _stakingAddress The operating address\\n@param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":588,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":565,"modifierName":{"argumentTypes":null,"id":564,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"8398:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8398:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":567,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"8445:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8445:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":569,"modifierName":{"argumentTypes":null,"id":566,"name":"workerUnregistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"8426:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8426:30:0"},{"arguments":[{"argumentTypes":null,"id":571,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"8480:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":572,"modifierName":{"argumentTypes":null,"id":570,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"8461:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8461:27:0"},{"arguments":[{"argumentTypes":null,"id":574,"name":"_stakingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"8520:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":575,"modifierName":{"argumentTypes":null,"id":573,"name":"areOperatingAndStakingDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8493:26:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8493:43:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"name":"_stakingAddress","nodeType":"VariableDeclaration","scope":588,"src":"8294:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"8294:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":558,"name":"_signer","nodeType":"VariableDeclaration","scope":588,"src":"8319:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"8319:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":560,"name":"_report","nodeType":"VariableDeclaration","scope":588,"src":"8336:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":559,"name":"bytes","nodeType":"ElementaryTypeName","src":"8336:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":562,"name":"_signature","nodeType":"VariableDeclaration","scope":588,"src":"8358:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":561,"name":"bytes","nodeType":"ElementaryTypeName","src":"8358:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8293:89:0"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"8541:0:0"},"scope":1113,"src":"8276:360:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":603,"nodeType":"Block","src":"8830:50:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":600,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"8867:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":597,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"8840:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"unregisterImpl","nodeType":"MemberAccess","referencedDeclaration":9723,"src":"8840:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8840:33:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":602,"nodeType":"ExpressionStatement","src":"8840:33:0"}]},"documentation":"Unregisters a staking address\' worker.\\n    ","id":604,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":591,"modifierName":{"argumentTypes":null,"id":590,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"8745:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8745:23:0"},{"arguments":null,"id":593,"modifierName":{"argumentTypes":null,"id":592,"name":"stakingOrOperatingAddressRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"8773:35:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8773:35:0"},{"arguments":null,"id":595,"modifierName":{"argumentTypes":null,"id":594,"name":"emptyBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"8813:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8813:12:0"}],"name":"unregister","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[],"src":"8727:2:0"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"8830:0:0"},"scope":1113,"src":"8708:172:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":627,"nodeType":"Block","src":"9285:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":622,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"9319:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":623,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"9326:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":624,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"9338:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":619,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"9295:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":9979,"src":"9295:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9295:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"ExpressionStatement","src":"9295:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":628,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":611,"modifierName":{"argumentTypes":null,"id":610,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"9189:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9189:23:0"},{"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":613,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"9234:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingToOperatingAddresses","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"9234:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":616,"indexExpression":{"argumentTypes":null,"id":615,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"9268:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9234:45:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":617,"modifierName":{"argumentTypes":null,"id":612,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"9217:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"9217:63:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"name":"_custodian","nodeType":"VariableDeclaration","scope":628,"src":"9140:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"9140:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":608,"name":"_amount","nodeType":"VariableDeclaration","scope":628,"src":"9160:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint","nodeType":"ElementaryTypeName","src":"9160:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9139:34:0"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"9285:0:0"},"scope":1113,"src":"9123:230:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":642,"nodeType":"Block","src":"9614:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":638,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"9649:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":639,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"9656:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":635,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"9624:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":10035,"src":"9624:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9624:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"9624:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":643,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":633,"modifierName":{"argumentTypes":null,"id":632,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"9598:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9598:11:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"name":"_amount","nodeType":"VariableDeclaration","scope":643,"src":"9569:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint","nodeType":"ElementaryTypeName","src":"9569:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9568:14:0"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[],"src":"9614:0:0"},"scope":1113,"src":"9551:120:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":654,"nodeType":"Block","src":"9867:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":651,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"9899:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":648,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"9877:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":9849,"src":"9877:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9877:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"9877:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":655,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":646,"modifierName":{"argumentTypes":null,"id":645,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"9858:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9858:8:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"9848:2:0"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"9867:0:0"},"scope":1113,"src":"9834:78:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":666,"nodeType":"Block","src":"10048:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":663,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"10081:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":660,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"10058:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":9915,"src":"10058:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10058:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":665,"nodeType":"ExpressionStatement","src":"10058:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":667,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":658,"modifierName":{"argumentTypes":null,"id":657,"name":"stakingOrOperatingAddressLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"10014:33:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"10014:33:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[],"src":"10004:2:0"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"10048:0:0"},"scope":1113,"src":"9989:105:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":695,"nodeType":"Block","src":"10642:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":688,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"10693:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":689,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"10700:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":690,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"10709:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":691,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"10720:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":692,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"10730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":685,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"10652:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6791_$","typeString":"type(library TaskImpl)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4902,"src":"10652:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10652:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"ExpressionStatement","src":"10652:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":696,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":678,"modifierName":{"argumentTypes":null,"id":677,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"10564:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"10564:23:0"},{"arguments":null,"id":680,"modifierName":{"argumentTypes":null,"id":679,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"10592:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"10592:14:0"},{"arguments":[{"argumentTypes":null,"id":682,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"10629:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":683,"modifierName":{"argumentTypes":null,"id":681,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"10611:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"10611:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"name":"_taskId","nodeType":"VariableDeclaration","scope":696,"src":"10448:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10448:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":671,"name":"_codeHash","nodeType":"VariableDeclaration","scope":696,"src":"10473:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10473:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":673,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":696,"src":"10500:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":672,"name":"uint64","nodeType":"ElementaryTypeName","src":"10500:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":675,"name":"_sig","nodeType":"VariableDeclaration","scope":696,"src":"10525:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":674,"name":"bytes","nodeType":"ElementaryTypeName","src":"10525:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"10438:110:0"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"10642:0:0"},"scope":1113,"src":"10402:340:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":731,"nodeType":"Block","src":"11530:153:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":723,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"11574:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":724,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"11581:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":725,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"11591:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":726,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"11625:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},{"argumentTypes":null,"id":727,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"11648:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":728,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"11671:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":720,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"11540:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6791_$","typeString":"type(library TaskImpl)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":5421,"src":"11540:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_uint64_$_t_address_$_t_array$_t_bytes32_$4_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint64,address,bytes32[4] memory,bytes memory,bytes memory)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11540:136:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":730,"nodeType":"ExpressionStatement","src":"11540:136:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _gasUsed Gas used for task\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _bytes32s [taskId, preCodeHash, codeHash, initStateDeltaHash]\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _sig Worker\'s signature for deployment","id":732,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":711,"modifierName":{"argumentTypes":null,"id":710,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"11447:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11447:23:0"},{"arguments":null,"id":713,"modifierName":{"argumentTypes":null,"id":712,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"11475:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11475:14:0"},{"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":715,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"11512:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},"id":717,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11522:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11512:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":718,"modifierName":{"argumentTypes":null,"id":714,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"11494:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"11494:31:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":732,"src":"11252:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":697,"name":"uint64","nodeType":"ElementaryTypeName","src":"11252:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":700,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":732,"src":"11277:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"11277:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":704,"name":"_bytes32s","nodeType":"VariableDeclaration","scope":732,"src":"11327:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4]"},"typeName":{"baseType":{"id":701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11327:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":703,"length":{"argumentTypes":null,"hexValue":"34","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11335:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"11327:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_storage_ptr","typeString":"bytes32[4]"}},"value":null,"visibility":"internal"},{"constant":false,"id":706,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":732,"src":"11364:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":705,"name":"bytes","nodeType":"ElementaryTypeName","src":"11364:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":708,"name":"_sig","nodeType":"VariableDeclaration","scope":732,"src":"11408:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":707,"name":"bytes","nodeType":"ElementaryTypeName","src":"11408:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"11242:189:0"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[],"src":"11530:0:0"},"scope":1113,"src":"11213:470:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":742,"nodeType":"Block","src":"11885:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":739,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"11946:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":737,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"11902:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$4437_$","typeString":"type(library SecretContractImpl)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":4369,"src":"11902:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$3047_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11902:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":736,"id":741,"nodeType":"Return","src":"11895:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":743,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"11839:2:0"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"name":"","nodeType":"VariableDeclaration","scope":743,"src":"11875:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint","nodeType":"ElementaryTypeName","src":"11875:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11874:6:0"},"scope":1113,"src":"11810:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":760,"nodeType":"Block","src":"12288:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":755,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"12355:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":756,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"12362:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":757,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"12370:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":753,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"12305:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$4437_$","typeString":"type(library SecretContractImpl)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":4436,"src":"12305:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$3047_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12305:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":752,"id":759,"nodeType":"Return","src":"12298:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":761,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"name":"_start","nodeType":"VariableDeclaration","scope":761,"src":"12208:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint","nodeType":"ElementaryTypeName","src":"12208:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":747,"name":"_stop","nodeType":"VariableDeclaration","scope":761,"src":"12221:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint","nodeType":"ElementaryTypeName","src":"12221:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12207:25:0"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"name":"","nodeType":"VariableDeclaration","scope":761,"src":"12266:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12266:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":750,"length":null,"nodeType":"ArrayTypeName","src":"12266:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"12265:18:0"},"scope":1113,"src":"12172:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":789,"nodeType":"Block","src":"13466:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":781,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"13516:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":782,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"13523:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":783,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"13536:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":784,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"13547:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":785,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"13555:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":786,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"13574:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":778,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"13476:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6791_$","typeString":"type(library TaskImpl)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4730,"src":"13476:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13476:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"ExpressionStatement","src":"13476:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":790,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":774,"modifierName":{"argumentTypes":null,"id":773,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23785,"src":"13424:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13424:9:0"},{"arguments":null,"id":776,"modifierName":{"argumentTypes":null,"id":775,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"13438:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13438:23:0"}],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":790,"src":"13281:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13281:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":765,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":790,"src":"13310:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":764,"name":"uint64","nodeType":"ElementaryTypeName","src":"13310:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":767,"name":"_gasPx","nodeType":"VariableDeclaration","scope":790,"src":"13336:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":766,"name":"uint64","nodeType":"ElementaryTypeName","src":"13336:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":769,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":790,"src":"13359:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint","nodeType":"ElementaryTypeName","src":"13359:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":771,"name":"_nonce","nodeType":"VariableDeclaration","scope":790,"src":"13391:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint","nodeType":"ElementaryTypeName","src":"13391:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"13271:137:0"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"13466:0:0"},"scope":1113,"src":"13236:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":813,"nodeType":"Block","src":"14348:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":806,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"14388:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":807,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"14395:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":808,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"14408:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":809,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"14419:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":810,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"14427:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":803,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"14358:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6791_$","typeString":"type(library TaskImpl)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":5633,"src":"14358:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14358:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"14358:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":814,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":801,"modifierName":{"argumentTypes":null,"id":800,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"14320:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14320:23:0"}],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":814,"src":"14198:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14198:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":794,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":814,"src":"14227:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":793,"name":"uint64","nodeType":"ElementaryTypeName","src":"14227:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":796,"name":"_gasPx","nodeType":"VariableDeclaration","scope":814,"src":"14253:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":795,"name":"uint64","nodeType":"ElementaryTypeName","src":"14253:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":798,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":814,"src":"14276:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint","nodeType":"ElementaryTypeName","src":"14276:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14188:116:0"},"returnParameters":{"id":802,"nodeType":"ParameterList","parameters":[],"src":"14348:0:0"},"scope":1113,"src":"14163:289:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":849,"nodeType":"Block","src":"15258:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":841,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"15295:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":842,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"15302:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":843,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"15312:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":844,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"15358:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},{"argumentTypes":null,"id":845,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"15369:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":846,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"15392:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":838,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"15268:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6791_$","typeString":"type(library TaskImpl)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":6427,"src":"15268:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_uint64_$_t_address_$_t_array$_t_bytes32_$4_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint64,address,bytes32[4] memory,bytes memory,bytes memory)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15268:129:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":848,"nodeType":"ExpressionStatement","src":"15268:129:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _gasUsed Gas used for task computation\\n@param _optionalEthereumContractAddress Output state hash\\n@param _bytes32s [scAddr, taskId, stateDeltaHash, outputHash]\\n@param _optionalEthereumData Output state hash\\n@param _sig Worker\'s signature","id":850,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":829,"modifierName":{"argumentTypes":null,"id":828,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"15176:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15176:23:0"},{"arguments":null,"id":831,"modifierName":{"argumentTypes":null,"id":830,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"15204:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15204:14:0"},{"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":833,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"15240:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},"id":835,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15250:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15240:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":836,"modifierName":{"argumentTypes":null,"id":832,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"15223:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"15223:30:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":850,"src":"14981:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":815,"name":"uint64","nodeType":"ElementaryTypeName","src":"14981:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":818,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":850,"src":"15006:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"15006:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":822,"name":"_bytes32s","nodeType":"VariableDeclaration","scope":850,"src":"15056:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4]"},"typeName":{"baseType":{"id":819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15056:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":821,"length":{"argumentTypes":null,"hexValue":"34","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15064:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"15056:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_storage_ptr","typeString":"bytes32[4]"}},"value":null,"visibility":"internal"},{"constant":false,"id":824,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":850,"src":"15093:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":823,"name":"bytes","nodeType":"ElementaryTypeName","src":"15093:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":826,"name":"_sig","nodeType":"VariableDeclaration","scope":850,"src":"15137:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":825,"name":"bytes","nodeType":"ElementaryTypeName","src":"15137:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14971:189:0"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"15258:0:0"},"scope":1113,"src":"14949:455:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":881,"nodeType":"Block","src":"16051:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":873,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"16092:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":874,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"16099:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":875,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"16108:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":876,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"16117:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":877,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"16130:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":878,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"16140:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":870,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"16061:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6791_$","typeString":"type(library TaskImpl)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5827,"src":"16061:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16061:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":880,"nodeType":"ExpressionStatement","src":"16061:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":882,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":863,"modifierName":{"argumentTypes":null,"id":862,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"15974:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15974:23:0"},{"arguments":null,"id":865,"modifierName":{"argumentTypes":null,"id":864,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"16002:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"16002:14:0"},{"arguments":[{"argumentTypes":null,"id":867,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"16038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":868,"modifierName":{"argumentTypes":null,"id":866,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"16021:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"16021:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"name":"_scAddr","nodeType":"VariableDeclaration","scope":882,"src":"15831:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15831:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":854,"name":"_taskId","nodeType":"VariableDeclaration","scope":882,"src":"15856:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15856:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":856,"name":"_outputHash","nodeType":"VariableDeclaration","scope":882,"src":"15881:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15881:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":858,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":882,"src":"15910:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":857,"name":"uint64","nodeType":"ElementaryTypeName","src":"15910:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":860,"name":"_sig","nodeType":"VariableDeclaration","scope":882,"src":"15935:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":859,"name":"bytes","nodeType":"ElementaryTypeName","src":"15935:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"15821:137:0"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"16051:0:0"},"scope":1113,"src":"15795:357:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":897,"nodeType":"Block","src":"16403:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":893,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"16444:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":894,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"16451:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":890,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"16413:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6791_$","typeString":"type(library TaskImpl)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6790,"src":"16413:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16413:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":896,"nodeType":"ExpressionStatement","src":"16413:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":898,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":887,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"16390:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":888,"modifierName":{"argumentTypes":null,"id":886,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"16378:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"16378:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"name":"_taskId","nodeType":"VariableDeclaration","scope":898,"src":"16346:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16346:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16345:17:0"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"16403:0:0"},"scope":1113,"src":"16319:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":922,"nodeType":"Block","src":"16954:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":916,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"16999:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":917,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"17006:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":918,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"17020:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":919,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"17027:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":913,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"16964:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3797_$","typeString":"type(library PrincipalImpl)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3626,"src":"16964:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16964:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":921,"nodeType":"ExpressionStatement","src":"16964:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":923,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":907,"modifierName":{"argumentTypes":null,"id":906,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"16893:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"16893:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":909,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"16938:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16938:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":911,"modifierName":{"argumentTypes":null,"id":908,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"16921:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"16921:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":923,"src":"16828:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint","nodeType":"ElementaryTypeName","src":"16828:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":902,"name":"_seed","nodeType":"VariableDeclaration","scope":923,"src":"16847:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint","nodeType":"ElementaryTypeName","src":"16847:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":904,"name":"_sig","nodeType":"VariableDeclaration","scope":923,"src":"16859:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":903,"name":"bytes","nodeType":"ElementaryTypeName","src":"16859:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"16827:50:0"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"16954:0:0"},"scope":1113,"src":"16802:237:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":940,"nodeType":"Block","src":"17275:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":936,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"17327:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":937,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"17334:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":934,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"17292:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3797_$","typeString":"type(library PrincipalImpl)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3796,"src":"17292:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$3047_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17292:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":933,"id":939,"nodeType":"Return","src":"17285:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":941,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":941,"src":"17186:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint","nodeType":"ElementaryTypeName","src":"17186:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17185:19:0"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"name":"","nodeType":"VariableDeclaration","scope":941,"src":"17238:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"17238:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":928,"length":null,"nodeType":"ArrayTypeName","src":"17238:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":932,"name":"","nodeType":"VariableDeclaration","scope":941,"src":"17256:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":930,"name":"uint","nodeType":"ElementaryTypeName","src":"17256:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":931,"length":null,"nodeType":"ArrayTypeName","src":"17256:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"17237:33:0"},"scope":1113,"src":"17160:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":954,"nodeType":"Block","src":"17616:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":950,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"17669:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":951,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"17676:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":948,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"17633:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":10155,"src":"17633:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$3047_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17633:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":947,"id":953,"nodeType":"Return","src":"17626:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":955,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":955,"src":"17558:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint","nodeType":"ElementaryTypeName","src":"17558:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17557:19:0"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"name":"","nodeType":"VariableDeclaration","scope":955,"src":"17610:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint","nodeType":"ElementaryTypeName","src":"17610:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17609:6:0"},"scope":1113,"src":"17529:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":976,"nodeType":"Block","src":"18102:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":972,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"18151:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":973,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"18158:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":970,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"18119:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":10192,"src":"18119:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$3047_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18119:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":969,"id":975,"nodeType":"Return","src":"18112:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":977,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":977,"src":"18005:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint","nodeType":"ElementaryTypeName","src":"18005:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18004:19:0"},"returnParameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"name":"","nodeType":"VariableDeclaration","scope":977,"src":"18057:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint","nodeType":"ElementaryTypeName","src":"18057:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":962,"name":"","nodeType":"VariableDeclaration","scope":977,"src":"18063:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint","nodeType":"ElementaryTypeName","src":"18063:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":965,"name":"","nodeType":"VariableDeclaration","scope":977,"src":"18069:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"18069:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":964,"length":null,"nodeType":"ArrayTypeName","src":"18069:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":968,"name":"","nodeType":"VariableDeclaration","scope":977,"src":"18087:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":966,"name":"uint","nodeType":"ElementaryTypeName","src":"18087:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":967,"length":null,"nodeType":"ArrayTypeName","src":"18087:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"18056:45:0"},"scope":1113,"src":"17980:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":994,"nodeType":"Block","src":"18630:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":989,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"18678:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":990,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"18685:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":991,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"18699:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":987,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"18647:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":10456,"src":"18647:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$3047_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18647:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":986,"id":993,"nodeType":"Return","src":"18640:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":995,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":995,"src":"18539:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint","nodeType":"ElementaryTypeName","src":"18539:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":981,"name":"_scAddr","nodeType":"VariableDeclaration","scope":995,"src":"18558:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18558:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"18538:36:0"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"name":"","nodeType":"VariableDeclaration","scope":995,"src":"18608:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"18608:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":984,"length":null,"nodeType":"ArrayTypeName","src":"18608:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"18607:18:0"},"scope":1113,"src":"18515:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":1013,"nodeType":"Block","src":"18984:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1009,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"19027:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":1010,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"19034:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1007,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"19001:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":9777,"src":"19001:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$3047_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19001:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":1006,"id":1012,"nodeType":"Return","src":"18994:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":1014,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":1000,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"18932:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1001,"modifierName":{"argumentTypes":null,"id":999,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"18915:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"18915:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"name":"_custodian","nodeType":"VariableDeclaration","scope":1014,"src":"18871:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"18871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"18870:20:0"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"name":"","nodeType":"VariableDeclaration","scope":1014,"src":"18957:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"18957:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1005,"name":"","nodeType":"VariableDeclaration","scope":1014,"src":"18966:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1004,"name":"bytes","nodeType":"ElementaryTypeName","src":"18966:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18956:23:0"},"scope":1113,"src":"18852:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":1029,"nodeType":"Block","src":"19367:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1025,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"19413:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":1026,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"19420:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1023,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"19384:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":9803,"src":"19384:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19384:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1022,"id":1028,"nodeType":"Return","src":"19377:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":1030,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"name":"_data","nodeType":"VariableDeclaration","scope":1030,"src":"19279:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1015,"name":"bytes","nodeType":"ElementaryTypeName","src":"19279:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":1018,"name":"_signature","nodeType":"VariableDeclaration","scope":1030,"src":"19299:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1017,"name":"bytes","nodeType":"ElementaryTypeName","src":"19299:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"19278:45:0"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"name":"","nodeType":"VariableDeclaration","scope":1030,"src":"19357:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint","nodeType":"ElementaryTypeName","src":"19357:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"19356:6:0"},"scope":1113,"src":"19257:181:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":1045,"nodeType":"Block","src":"19706:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1041,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"19761:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":1042,"name":"_updatedEnigmaContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"19768:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1039,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"19723:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$9337_$","typeString":"type(library UpgradeImpl)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeEnigmaContractImpl","nodeType":"MemberAccess","referencedDeclaration":9246,"src":"19723:37:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19723:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":1038,"id":1044,"nodeType":"Return","src":"19716:82:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address","id":1046,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1035,"modifierName":{"argumentTypes":null,"id":1034,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23785,"src":"19664:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"19664:9:0"},{"arguments":null,"id":1037,"modifierName":{"argumentTypes":null,"id":1036,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"19678:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"19678:23:0"}],"name":"upgradeEnigmaContract","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"name":"_updatedEnigmaContractAddress","nodeType":"VariableDeclaration","scope":1046,"src":"19610:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"19610:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"19609:39:0"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"19706:0:0"},"scope":1113,"src":"19579:226:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1067,"nodeType":"Block","src":"20222:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1061,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"20286:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":1062,"name":"_operatingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"20293:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1063,"name":"_stakingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"20312:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1064,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"20329:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1059,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"20239:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$9337_$","typeString":"type(library UpgradeImpl)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferWorkerStakePostUpgradeImpl","nodeType":"MemberAccess","referencedDeclaration":9336,"src":"20239:46:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,address,address,bytes memory) returns (uint256)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20239:95:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1058,"id":1066,"nodeType":"Return","src":"20232:102:0"}]},"documentation":"Transfer worker stake from old contract to new contract upon registration\\n@param _operatingAddress Operating Address\\n@param _stakingAddress Newly-registered worker address\\n@param _sig Signature","id":1068,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1055,"modifierName":{"argumentTypes":null,"id":1054,"name":"fromUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"20170:25:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"20170:25:0"}],"name":"transferWorkerStakePostUpgrade","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"name":"_operatingAddress","nodeType":"VariableDeclaration","scope":1068,"src":"20084:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"20084:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1050,"name":"_stakingAddress","nodeType":"VariableDeclaration","scope":1068,"src":"20111:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"20111:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1052,"name":"_sig","nodeType":"VariableDeclaration","scope":1068,"src":"20136:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1051,"name":"bytes","nodeType":"ElementaryTypeName","src":"20136:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"20083:71:0"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"name":"","nodeType":"VariableDeclaration","scope":1068,"src":"20209:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"20209:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"20208:9:0"},"scope":1113,"src":"20044:297:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1081,"nodeType":"Block","src":"20487:43:0","statements":[{"expression":{"argumentTypes":null,"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1075,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"20497:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":1077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"mrSigner","nodeType":"MemberAccess","referencedDeclaration":3044,"src":"20497:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1078,"name":"_mrSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"20514:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"20497:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1080,"nodeType":"ExpressionStatement","src":"20497:26:0"}]},"documentation":"Set mrSigner\\n@param _mrSigner mrSigner","id":1082,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1073,"modifierName":{"argumentTypes":null,"id":1072,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23785,"src":"20473:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"20473:9:0"}],"name":"setMrSigner","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"name":"_mrSigner","nodeType":"VariableDeclaration","scope":1082,"src":"20434:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1069,"name":"bytes","nodeType":"ElementaryTypeName","src":"20434:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"20433:24:0"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[],"src":"20487:0:0"},"scope":1113,"src":"20413:117:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1095,"nodeType":"Block","src":"20668:39:0","statements":[{"expression":{"argumentTypes":null,"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1089,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"20678:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":1091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isvSvn","nodeType":"MemberAccess","referencedDeclaration":3046,"src":"20678:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1092,"name":"_isvSvn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"20693:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"20678:22:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1094,"nodeType":"ExpressionStatement","src":"20678:22:0"}]},"documentation":"Set isvSvn\\n@param _isvSvn mrSigner","id":1096,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1087,"modifierName":{"argumentTypes":null,"id":1086,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23785,"src":"20654:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"20654:9:0"}],"name":"setIsvSvn","nodeType":"FunctionDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"name":"_isvSvn","nodeType":"VariableDeclaration","scope":1096,"src":"20617:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1083,"name":"bytes","nodeType":"ElementaryTypeName","src":"20617:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"20616:22:0"},"returnParameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"20668:0:0"},"scope":1113,"src":"20598:109:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1111,"nodeType":"Block","src":"20955:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1107,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"21001:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":1108,"name":"_operatingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"21008:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1104,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"20965:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setOperatingAddressImpl","nodeType":"MemberAccess","referencedDeclaration":9740,"src":"20965:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20965:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"20965:61:0"}]},"documentation":"Set operating address for a particular staking address\\n@param _operatingAddress Operating Address","id":1112,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":1101,"name":"_operatingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"20932:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1102,"modifierName":{"argumentTypes":null,"id":1100,"name":"canSetOperatingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"20909:22:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"20909:41:0"}],"name":"setOperatingAddress","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"name":"_operatingAddress","nodeType":"VariableDeclaration","scope":1112,"src":"20867:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"20867:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"20866:27:0"},"returnParameters":{"id":1103,"nodeType":"ParameterList","parameters":[],"src":"20955:0:0"},"scope":1113,"src":"20838:195:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":1114,"src":"886:20149:0"}],"src":"0:21036:0"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[1113]},"id":1114,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".12"],"nodeType":"PragmaDirective","src":"0:24:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"25:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":1114,"sourceUnit":23739,"src":"60:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":1114,"sourceUnit":23552,"src":"120:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"openzeppelin-solidity/contracts/ownership/Ownable.sol","id":5,"nodeType":"ImportDirective","scope":1114,"sourceUnit":23853,"src":"185:63:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":6,"nodeType":"ImportDirective","scope":1114,"sourceUnit":23444,"src":"249:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":8,"nodeType":"ImportDirective","scope":1114,"sourceUnit":10510,"src":"285:53:0","symbolAliases":[{"foreign":7,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":10,"nodeType":"ImportDirective","scope":1114,"sourceUnit":3798,"src":"339:57:0","symbolAliases":[{"foreign":9,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":12,"nodeType":"ImportDirective","scope":1114,"sourceUnit":6792,"src":"397:47:0","symbolAliases":[{"foreign":11,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol","file":"./impl/UpgradeImpl.sol","id":14,"nodeType":"ImportDirective","scope":1114,"sourceUnit":9338,"src":"445:53:0","symbolAliases":[{"foreign":13,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":16,"nodeType":"ImportDirective","scope":1114,"sourceUnit":4438,"src":"499:67:0","symbolAliases":[{"foreign":15,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":18,"nodeType":"ImportDirective","scope":1114,"sourceUnit":2859,"src":"567:55:0","symbolAliases":[{"foreign":17,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":20,"nodeType":"ImportDirective","scope":1114,"sourceUnit":3049,"src":"623:53:0","symbolAliases":[{"foreign":19,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":22,"nodeType":"ImportDirective","scope":1114,"sourceUnit":2985,"src":"677:55:0","symbolAliases":[{"foreign":21,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":24,"nodeType":"ImportDirective","scope":1114,"sourceUnit":3057,"src":"733:57:0","symbolAliases":[{"foreign":23,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":26,"nodeType":"ImportDirective","scope":1114,"sourceUnit":3271,"src":"791:45:0","symbolAliases":[{"foreign":25,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":28,"nodeType":"ImportDirective","scope":1114,"sourceUnit":11613,"src":"837:47:0","symbolAliases":[{"foreign":27,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":29,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":3056,"src":"905:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$3056","typeString":"contract EnigmaStorage"}},"id":30,"nodeType":"InheritanceSpecifier","src":"905:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":31,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2984,"src":"920:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2984","typeString":"contract EnigmaEvents"}},"id":32,"nodeType":"InheritanceSpecifier","src":"920:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":33,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":3270,"src":"934:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$3270","typeString":"contract Getters"}},"id":34,"nodeType":"InheritanceSpecifier","src":"934:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":35,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":23852,"src":"943:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$23852","typeString":"contract Ownable"}},"id":36,"nodeType":"InheritanceSpecifier","src":"943:7:0"}],"contractDependencies":[2984,3056,3270,23470,23852],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":1113,"linearizedBaseContracts":[1113,23852,23470,3270,2984,3056],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":39,"libraryName":{"contractScope":null,"id":37,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":23738,"src":"963:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$23738","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"957:27:0","typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":42,"libraryName":{"contractScope":null,"id":40,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":23738,"src":"995:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$23738","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"989:26:0","typeName":{"id":41,"name":"uint64","nodeType":"ElementaryTypeName","src":"1008:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}},{"id":45,"libraryName":{"contractScope":null,"id":43,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":23551,"src":"1026:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$23551","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"1020:24:0","typeName":{"id":44,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1036:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":129,"nodeType":"Block","src":"1336:442:0","statements":[{"expression":{"argumentTypes":null,"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":62,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1346:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":64,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2993,"src":"1346:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11612","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":66,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1369:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":65,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11612,"src":"1363:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$11612_$","typeString":"type(contract ERC20)"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1363:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11612","typeString":"contract ERC20"}},"src":"1346:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$11612","typeString":"contract ERC20"}},"id":69,"nodeType":"ExpressionStatement","src":"1346:37:0"},{"expression":{"argumentTypes":null,"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":70,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1393:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":72,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2995,"src":"1393:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":73,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1411:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1393:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":75,"nodeType":"ExpressionStatement","src":"1393:28:0"},{"expression":{"argumentTypes":null,"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":76,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1431:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":78,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2997,"src":"1431:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":79,"name":"_timeoutThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"1455:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":80,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1475:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":81,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2995,"src":"1475:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1455:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1431:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":84,"nodeType":"ExpressionStatement","src":"1431:59:0"},{"expression":{"argumentTypes":null,"id":89,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":85,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1500:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":87,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2999,"src":"1500:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":88,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"1518:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1500:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":90,"nodeType":"ExpressionStatement","src":"1500:28:0"},{"expression":{"argumentTypes":null,"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":91,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1538:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":93,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"exchangeRate","nodeType":"MemberAccess","referencedDeclaration":3001,"src":"1538:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":94,"name":"_exchangeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1559:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1538:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":96,"nodeType":"ExpressionStatement","src":"1538:34:0"},{"expression":{"argumentTypes":null,"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":97,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1582:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":99,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":3003,"src":"1582:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":101,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24453,"src":"1627:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$1113","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$1113","typeString":"contract Enigma"}],"id":100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1619:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1619:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1582:50:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"1582:50:0"},{"expression":{"argumentTypes":null,"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":105,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1642:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":3040,"src":"1642:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1667:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1642:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":110,"nodeType":"ExpressionStatement","src":"1642:26:0"},{"expression":{"argumentTypes":null,"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":111,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1678:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":3042,"src":"1678:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1678:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":116,"nodeType":"ExpressionStatement","src":"1678:25:0"},{"expression":{"argumentTypes":null,"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":117,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1713:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"mrSigner","nodeType":"MemberAccess","referencedDeclaration":3044,"src":"1713:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":120,"name":"_mrSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1730:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1713:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":122,"nodeType":"ExpressionStatement","src":"1713:26:0"},{"expression":{"argumentTypes":null,"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":123,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1749:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isvSvn","nodeType":"MemberAccess","referencedDeclaration":3046,"src":"1749:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":126,"name":"_isvSvn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"1764:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1749:22:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":128,"nodeType":"ExpressionStatement","src":"1749:22:0"}]},"documentation":null,"id":130,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":130,"src":"1168:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1168:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":49,"name":"_principal","nodeType":"VariableDeclaration","scope":130,"src":"1191:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":51,"name":"_exchangeRate","nodeType":"VariableDeclaration","scope":130,"src":"1211:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":53,"name":"_epochSize","nodeType":"VariableDeclaration","scope":130,"src":"1234:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint","nodeType":"ElementaryTypeName","src":"1234:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":55,"name":"_timeoutThreshold","nodeType":"VariableDeclaration","scope":130,"src":"1259:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint","nodeType":"ElementaryTypeName","src":"1259:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":57,"name":"_mrSigner","nodeType":"VariableDeclaration","scope":130,"src":"1283:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"1283:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":59,"name":"_isvSvn","nodeType":"VariableDeclaration","scope":130,"src":"1307:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":58,"name":"bytes","nodeType":"ElementaryTypeName","src":"1307:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1167:161:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"1336:0:0"},"scope":1113,"src":"1156:622:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":154,"nodeType":"Block","src":"2074:179:0","statements":[{"assignments":[137],"declarations":[{"constant":false,"id":137,"name":"worker","nodeType":"VariableDeclaration","scope":154,"src":"2084:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":136,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2725,"src":"2084:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":142,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":138,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"2120:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"2120:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":141,"indexExpression":{"argumentTypes":null,"id":140,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2134:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2120:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2084:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":144,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2158:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"2158:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":146,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"2175:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"2175:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2175:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2158:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5265676973746572656420776f726b6572","id":150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2215:19:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ccb6cfef1d3461916d43bf0d52798d70480f86f73b45a501a4074fec044e3f9a","typeString":"literal_string \\"Registered worker\\""},"value":"Registered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ccb6cfef1d3461916d43bf0d52798d70480f86f73b45a501a4074fec044e3f9a","typeString":"literal_string \\"Registered worker\\""}],"id":143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"2150:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2150:85:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":152,"nodeType":"ExpressionStatement","src":"2150:85:0"},{"id":153,"nodeType":"PlaceholderStatement","src":"2245:1:0"}]},"documentation":"Checks if the custodian wallet is not registered as a worker\\n    * @param _user The custodian address of the worker","id":155,"name":"workerUnregistered","nodeType":"ModifierDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"name":"_user","nodeType":"VariableDeclaration","scope":155,"src":"2059:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"2059:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2058:15:0"},"src":"2031:222:0","visibility":"internal"},{"body":{"id":179,"nodeType":"Block","src":"2439:181:0","statements":[{"assignments":[162],"declarations":[{"constant":false,"id":162,"name":"worker","nodeType":"VariableDeclaration","scope":179,"src":"2449:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":161,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2725,"src":"2449:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":167,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":163,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"2485:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"2485:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":166,"indexExpression":{"argumentTypes":null,"id":165,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2499:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2485:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2449:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":169,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2523:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"2523:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":171,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"2540:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"2540:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2540:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2523:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2580:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"2515:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2515:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":177,"nodeType":"ExpressionStatement","src":"2515:87:0"},{"id":178,"nodeType":"PlaceholderStatement","src":"2612:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":180,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"name":"_user","nodeType":"VariableDeclaration","scope":180,"src":"2424:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"2424:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2423:15:0"},"src":"2398:222:0","visibility":"internal"},{"body":{"id":198,"nodeType":"Block","src":"2716:155:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":183,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"2734:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"2734:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":190,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":185,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"2748:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingToOperatingAddresses","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"2748:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":189,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":187,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"2782:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2782:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2748:45:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2734:60:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2721,"src":"2734:68:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2734:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f7420656d707479","id":194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2821:31:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2f410c804512b184b2dccaa3d1781dc11f47a096afc8959d157c4ede15a45ad6","typeString":"literal_string \\"Worker\'s balance is not empty\\""},"value":"Worker\'s balance is not empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f410c804512b184b2dccaa3d1781dc11f47a096afc8959d157c4ede15a45ad6","typeString":"literal_string \\"Worker\'s balance is not empty\\""}],"id":182,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"2726:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2726:127:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":196,"nodeType":"ExpressionStatement","src":"2726:127:0"},{"id":197,"nodeType":"PlaceholderStatement","src":"2863:1:0"}]},"documentation":"Checks if staking address balance is 0\\n    ","id":199,"name":"emptyBalance","nodeType":"ModifierDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"2713:2:0"},"src":"2692:179:0","visibility":"internal"},{"body":{"id":222,"nodeType":"Block","src":"2986:183:0","statements":[{"assignments":[204],"declarations":[{"constant":false,"id":204,"name":"worker","nodeType":"VariableDeclaration","scope":222,"src":"2996:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":203,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2725,"src":"2996:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":210,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":205,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3032:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"3032:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":209,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":207,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"3046:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3046:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3032:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2996:61:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"3075:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"3075:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":214,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"3092:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"3092:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3092:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3075:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3128:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"3067:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3067:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":220,"nodeType":"ExpressionStatement","src":"3067:84:0"},{"id":221,"nodeType":"PlaceholderStatement","src":"3161:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    ","id":223,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[],"src":"2983:2:0"},"src":"2960:209:0","visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"3311:266:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":226,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3330:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"3330:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":230,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":228,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"3344:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3344:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3330:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"3330:32:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":232,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"3366:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"3366:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3366:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3330:70:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3329:72:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":237,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3417:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"3417:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":244,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3431:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingToOperatingAddresses","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"3431:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":243,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":241,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"3465:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3465:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3431:45:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3417:60:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"3417:67:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":246,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"3488:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"3488:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3488:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3417:105:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3329:193:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3536:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"3321:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3321:238:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":253,"nodeType":"ExpressionStatement","src":"3321:238:0"},{"id":254,"nodeType":"PlaceholderStatement","src":"3569:1:0"}]},"documentation":"Checks if the staking address or operating address is logged in\\n    ","id":256,"name":"stakingOrOperatingAddressLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[],"src":"3308:2:0"},"src":"3266:311:0","visibility":"internal"},{"body":{"id":288,"nodeType":"Block","src":"3722:269:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":259,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3741:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"3741:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":263,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":261,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"3755:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3755:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3741:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"3741:32:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":265,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"3777:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"3777:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3777:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3741:74:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3740:76:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":270,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3828:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"3828:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":277,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":272,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3842:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingToOperatingAddresses","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"3842:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":276,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":274,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"3876:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3876:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3842:45:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3828:60:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"3828:67:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":279,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"3899:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"3899:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3899:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3828:109:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3740:197:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3951:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"3732:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3732:241:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"ExpressionStatement","src":"3732:241:0"},{"id":287,"nodeType":"PlaceholderStatement","src":"3983:1:0"}]},"documentation":"Checks if the staking address or operating address is registered\\n    ","id":289,"name":"stakingOrOperatingAddressRegistered","nodeType":"ModifierDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[],"src":"3719:2:0"},"src":"3675:316:0","visibility":"internal"},{"body":{"id":331,"nodeType":"Block","src":"4072:400:0","statements":[{"assignments":[294],"declarations":[{"constant":false,"id":294,"name":"worker","nodeType":"VariableDeclaration","scope":331,"src":"4082:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":293,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2725,"src":"4082:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":300,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":295,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4118:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"4118:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":299,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":297,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"4132:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4132:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4118:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4082:61:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":303,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24389,"src":"4181:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4181:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":302,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"4161:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4161:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4198:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4161:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4201:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"4153:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4153:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"ExpressionStatement","src":"4153:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":312,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4261:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"4261:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":314,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"4278:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"4278:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4278:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"4261:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4315:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"4253:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4253:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":320,"nodeType":"ExpressionStatement","src":"4253:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":322,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4375:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2721,"src":"4375:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":324,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4393:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":3040,"src":"4393:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4375:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4417:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"4367:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4367:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":329,"nodeType":"ExpressionStatement","src":"4367:87:0"},{"id":330,"nodeType":"PlaceholderStatement","src":"4464:1:0"}]},"documentation":"Checks if worker can log in\\n    ","id":332,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"4069:2:0"},"src":"4052:420:0","visibility":"internal"},{"body":{"id":390,"nodeType":"Block","src":"4562:620:0","statements":[{"assignments":[337],"declarations":[{"constant":false,"id":337,"name":"worker","nodeType":"VariableDeclaration","scope":390,"src":"4572:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":336,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2725,"src":"4572:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":346,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":338,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4608:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"4608:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":345,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":340,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4622:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingToOperatingAddresses","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"4622:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":344,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":342,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"4656:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4656:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4622:45:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4608:60:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4572:96:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":348,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4686:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"4686:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":350,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"4703:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"4703:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2766_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4703:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2766","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"4686:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4740:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"4678:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4678:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"ExpressionStatement","src":"4678:104:0"},{"assignments":[360],"declarations":[{"constant":false,"id":360,"name":"workerLog","nodeType":"VariableDeclaration","scope":390,"src":"4792:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2743_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":359,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2743,"src":"4792:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2743_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":367,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":363,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4869:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":364,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24389,"src":"4877:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4877:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2725_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":361,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"4834:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":10508,"src":"4834:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2725_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2743_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4834:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2743_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"4792:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2774","typeString":"enum EnigmaCommon.WorkerLogType"},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":369,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"4908:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2743_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2738,"src":"4908:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2774","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":371,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"4937:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2774,"src":"4937:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2774_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4937:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2774","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"4908:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4984:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":368,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"4900:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4900:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"4900:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":380,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24389,"src":"5064:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5064:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":379,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"5044:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5044:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":383,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"5080:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2743_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2740,"src":"5080:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5044:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5115:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":378,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"5036:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5036:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":388,"nodeType":"ExpressionStatement","src":"5036:128:0"},{"id":389,"nodeType":"PlaceholderStatement","src":"5174:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    ","id":391,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[],"src":"4559:2:0"},"src":"4539:643:0","visibility":"internal"},{"body":{"id":409,"nodeType":"Block","src":"5349:163:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2769","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":396,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"5367:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":3034,"src":"5367:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2755_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":399,"indexExpression":{"argumentTypes":null,"id":398,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5383:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5367:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2755_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2754,"src":"5367:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2769","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":401,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"5402:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"5402:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2769_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5402:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2769","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"5367:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5459:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"5359:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5359:135:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":407,"nodeType":"ExpressionStatement","src":"5359:135:0"},{"id":408,"nodeType":"PlaceholderStatement","src":"5504:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":410,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"name":"_scAddr","nodeType":"VariableDeclaration","scope":410,"src":"5332:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5332:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5331:17:0"},"src":"5305:207:0","visibility":"internal"},{"body":{"id":428,"nodeType":"Block","src":"5674:158:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2769","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":415,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"5692:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":3034,"src":"5692:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2755_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":418,"indexExpression":{"argumentTypes":null,"id":417,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5708:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5692:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2755_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2754,"src":"5692:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2769","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":420,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"5727:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"5727:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2769_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5727:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2769","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"5692:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5783:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"5684:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5684:130:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":426,"nodeType":"ExpressionStatement","src":"5684:130:0"},{"id":427,"nodeType":"PlaceholderStatement","src":"5824:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":429,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"name":"_scAddr","nodeType":"VariableDeclaration","scope":429,"src":"5657:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5657:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5656:17:0"},"src":"5631:201:0","visibility":"internal"},{"body":{"id":447,"nodeType":"Block","src":"5997:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2762","typeString":"enum EnigmaCommon.TaskStatus"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":434,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"6015:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":3027,"src":"6015:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2711_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":437,"indexExpression":{"argumentTypes":null,"id":436,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"6027:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6015:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2711_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2708,"src":"6015:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2762","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":439,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"6046:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2858_$","typeString":"type(library EnigmaCommon)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2762,"src":"6046:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2762_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6046:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2762","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"6015:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6085:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"6007:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6007:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":445,"nodeType":"ExpressionStatement","src":"6007:100:0"},{"id":446,"nodeType":"PlaceholderStatement","src":"6117:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":448,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"name":"_taskId","nodeType":"VariableDeclaration","scope":448,"src":"5980:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5980:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5979:17:0"},"src":"5959:166:0","visibility":"internal"},{"body":{"id":461,"nodeType":"Block","src":"6270:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":453,"name":"_stakingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6288:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"6307:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6307:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"6288:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4f7065726174696e672061646472657373206e6f7420646966666572656e742066726f6d207374616b696e672061646472657373","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6319:54:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_4deceade7f0fcaaf4a69635f9314d9f26308495a5be650c1a0421efac2aabb8b","typeString":"literal_string \\"Operating address not different from staking address\\""},"value":"Operating address not different from staking address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4deceade7f0fcaaf4a69635f9314d9f26308495a5be650c1a0421efac2aabb8b","typeString":"literal_string \\"Operating address not different from staking address\\""}],"id":452,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"6280:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6280:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"ExpressionStatement","src":"6280:94:0"},{"id":460,"nodeType":"PlaceholderStatement","src":"6384:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    ","id":462,"name":"areOperatingAndStakingDiff","nodeType":"ModifierDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"name":"_stakingAddress","nodeType":"VariableDeclaration","scope":462,"src":"6245:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"6245:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"6244:25:0"},"src":"6209:183:0","visibility":"internal"},{"body":{"id":492,"nodeType":"Block","src":"6536:319:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":467,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"6554:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingToOperatingAddresses","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"6554:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":471,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":469,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"6588:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6588:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6554:45:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6611:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6603:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6603:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"6554:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5374616b696e6720616464726573732063757272656e746c79207469656420746f20616e20696e2d757365206f7065726174696e672061646472657373","id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6627:63:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_76cdd1246aec3da2e647167226e9586523f0fbb3433bbb17506df44ba156765d","typeString":"literal_string \\"Staking address currently tied to an in-use operating address\\""},"value":"Staking address currently tied to an in-use operating address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76cdd1246aec3da2e647167226e9586523f0fbb3433bbb17506df44ba156765d","typeString":"literal_string \\"Staking address currently tied to an in-use operating address\\""}],"id":466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"6546:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6546:145:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"6546:145:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":480,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"6709:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"6709:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":483,"indexExpression":{"argumentTypes":null,"id":482,"name":"_operatingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"6723:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6709:32:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingAddress","nodeType":"MemberAccess","referencedDeclaration":2713,"src":"6709:47:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":485,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"6760:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6760:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"6709:61:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"496e76616c6964207374616b696e67206164647265737320666f722074686973206f7065726174696e672061646472657373","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6784:52:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d6c8295c94fdcacce10a0f24320fecc0e7f3ba840c4ddceb56f9d99e4a541a04","typeString":"literal_string \\"Invalid staking address for this operating address\\""},"value":"Invalid staking address for this operating address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6c8295c94fdcacce10a0f24320fecc0e7f3ba840c4ddceb56f9d99e4a541a04","typeString":"literal_string \\"Invalid staking address for this operating address\\""}],"id":479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"6701:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6701:136:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":490,"nodeType":"ExpressionStatement","src":"6701:136:0"},{"id":491,"nodeType":"PlaceholderStatement","src":"6847:1:0"}]},"documentation":"Ensure staking address can set an operating address\\n    ","id":493,"name":"canSetOperatingAddress","nodeType":"ModifierDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"name":"_operatingAddress","nodeType":"VariableDeclaration","scope":493,"src":"6509:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"6509:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"6508:27:0"},"src":"6477:378:0","visibility":"internal"},{"body":{"id":526,"nodeType":"Block","src":"7017:218:0","statements":[{"body":{"id":523,"nodeType":"Block","src":"7083:135:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":510,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7105:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":3019,"src":"7105:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2725_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":516,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":512,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7119:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"7119:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":515,"indexExpression":{"argumentTypes":null,"id":514,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"7141:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7119:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7105:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2725_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2715,"src":"7105:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":518,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"7155:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7105:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7180:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"7097:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7097:110:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"7097:110:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":501,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"7044:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":502,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7048:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"7048:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7048:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7044:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":524,"initializationExpression":{"assignments":[498],"declarations":[{"constant":false,"id":498,"name":"i","nodeType":"VariableDeclaration","scope":524,"src":"7032:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":497,"name":"uint","nodeType":"ElementaryTypeName","src":"7032:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":500,"initialValue":{"argumentTypes":null,"hexValue":"30","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7041:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7032:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7078:3:0","subExpression":{"argumentTypes":null,"id":506,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"7078:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":508,"nodeType":"ExpressionStatement","src":"7078:3:0"},"nodeType":"ForStatement","src":"7027:191:0"},{"id":525,"nodeType":"PlaceholderStatement","src":"7227:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":527,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"name":"_signer","nodeType":"VariableDeclaration","scope":527,"src":"7000:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"7000:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"6999:17:0"},"src":"6972:263:0","visibility":"internal"},{"body":{"id":540,"nodeType":"Block","src":"7362:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":531,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24453,"src":"7388:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$1113","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$1113","typeString":"contract Enigma"}],"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7380:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7380:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":533,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7397:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":3003,"src":"7397:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7380:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74207570646174656420456e69676d6120636f6e7472616374","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7433:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""},"value":"Not updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""}],"id":529,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"7372:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7372:91:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"7372:91:0"},{"id":539,"nodeType":"PlaceholderStatement","src":"7473:1:0"}]},"documentation":"Ensure that the contract\'s context is the updated contract\\n    ","id":541,"name":"isUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"7359:2:0"},"src":"7327:154:0","visibility":"internal"},{"body":{"id":553,"nodeType":"Block","src":"7612:121:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":544,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"7630:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7630:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":546,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"7644:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":3003,"src":"7644:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7680:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""},"value":"Not from updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""}],"id":543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[24402,24403],"referencedDeclaration":24403,"src":"7622:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7622:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":551,"nodeType":"ExpressionStatement","src":"7622:93:0"},{"id":552,"nodeType":"PlaceholderStatement","src":"7725:1:0"}]},"documentation":"Ensure the sender of the recent call is the updated contract\\n    ","id":554,"name":"fromUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"7609:2:0"},"src":"7575:158:0","visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"8541:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":580,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"8576:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":581,"name":"_stakingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"8583:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":582,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"8600:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":583,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"8609:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":584,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"8618:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":577,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"8551:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":9679,"src":"8551:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,address,bytes memory,bytes memory)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8551:78:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"8551:78:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _stakingAddress The operating address\\n@param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":588,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":565,"modifierName":{"argumentTypes":null,"id":564,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"8398:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8398:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":567,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"8445:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8445:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":569,"modifierName":{"argumentTypes":null,"id":566,"name":"workerUnregistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"8426:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8426:30:0"},{"arguments":[{"argumentTypes":null,"id":571,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"8480:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":572,"modifierName":{"argumentTypes":null,"id":570,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"8461:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8461:27:0"},{"arguments":[{"argumentTypes":null,"id":574,"name":"_stakingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"8520:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":575,"modifierName":{"argumentTypes":null,"id":573,"name":"areOperatingAndStakingDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8493:26:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8493:43:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"name":"_stakingAddress","nodeType":"VariableDeclaration","scope":588,"src":"8294:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"8294:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":558,"name":"_signer","nodeType":"VariableDeclaration","scope":588,"src":"8319:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"8319:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":560,"name":"_report","nodeType":"VariableDeclaration","scope":588,"src":"8336:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":559,"name":"bytes","nodeType":"ElementaryTypeName","src":"8336:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":562,"name":"_signature","nodeType":"VariableDeclaration","scope":588,"src":"8358:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":561,"name":"bytes","nodeType":"ElementaryTypeName","src":"8358:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8293:89:0"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"8541:0:0"},"scope":1113,"src":"8276:360:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":603,"nodeType":"Block","src":"8830:50:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":600,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"8867:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":597,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"8840:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"unregisterImpl","nodeType":"MemberAccess","referencedDeclaration":9723,"src":"8840:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8840:33:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":602,"nodeType":"ExpressionStatement","src":"8840:33:0"}]},"documentation":"Unregisters a staking address\' worker.\\n    ","id":604,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":591,"modifierName":{"argumentTypes":null,"id":590,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"8745:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8745:23:0"},{"arguments":null,"id":593,"modifierName":{"argumentTypes":null,"id":592,"name":"stakingOrOperatingAddressRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"8773:35:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8773:35:0"},{"arguments":null,"id":595,"modifierName":{"argumentTypes":null,"id":594,"name":"emptyBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"8813:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8813:12:0"}],"name":"unregister","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[],"src":"8727:2:0"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"8830:0:0"},"scope":1113,"src":"8708:172:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":627,"nodeType":"Block","src":"9285:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":622,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"9319:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":623,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"9326:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":624,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"9338:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":619,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"9295:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":9979,"src":"9295:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9295:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"ExpressionStatement","src":"9295:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":628,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":611,"modifierName":{"argumentTypes":null,"id":610,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"9189:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9189:23:0"},{"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":613,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"9234:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingToOperatingAddresses","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"9234:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":616,"indexExpression":{"argumentTypes":null,"id":615,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"9268:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9234:45:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":617,"modifierName":{"argumentTypes":null,"id":612,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"9217:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"9217:63:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"name":"_custodian","nodeType":"VariableDeclaration","scope":628,"src":"9140:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"9140:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":608,"name":"_amount","nodeType":"VariableDeclaration","scope":628,"src":"9160:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint","nodeType":"ElementaryTypeName","src":"9160:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9139:34:0"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"9285:0:0"},"scope":1113,"src":"9123:230:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":642,"nodeType":"Block","src":"9614:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":638,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"9649:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":639,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"9656:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":635,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"9624:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":10035,"src":"9624:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9624:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"9624:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":643,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":633,"modifierName":{"argumentTypes":null,"id":632,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"9598:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9598:11:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"name":"_amount","nodeType":"VariableDeclaration","scope":643,"src":"9569:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint","nodeType":"ElementaryTypeName","src":"9569:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9568:14:0"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[],"src":"9614:0:0"},"scope":1113,"src":"9551:120:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":654,"nodeType":"Block","src":"9867:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":651,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"9899:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":648,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"9877:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":9849,"src":"9877:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9877:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"9877:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":655,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":646,"modifierName":{"argumentTypes":null,"id":645,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"9858:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9858:8:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"9848:2:0"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"9867:0:0"},"scope":1113,"src":"9834:78:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":666,"nodeType":"Block","src":"10048:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":663,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"10081:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":660,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"10058:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":9915,"src":"10058:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10058:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":665,"nodeType":"ExpressionStatement","src":"10058:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":667,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":658,"modifierName":{"argumentTypes":null,"id":657,"name":"stakingOrOperatingAddressLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"10014:33:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"10014:33:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[],"src":"10004:2:0"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"10048:0:0"},"scope":1113,"src":"9989:105:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":695,"nodeType":"Block","src":"10642:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":688,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"10693:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":689,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"10700:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":690,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"10709:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":691,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"10720:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":692,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"10730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":685,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"10652:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6791_$","typeString":"type(library TaskImpl)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4902,"src":"10652:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10652:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"ExpressionStatement","src":"10652:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":696,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":678,"modifierName":{"argumentTypes":null,"id":677,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"10564:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"10564:23:0"},{"arguments":null,"id":680,"modifierName":{"argumentTypes":null,"id":679,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"10592:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"10592:14:0"},{"arguments":[{"argumentTypes":null,"id":682,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"10629:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":683,"modifierName":{"argumentTypes":null,"id":681,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"10611:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"10611:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"name":"_taskId","nodeType":"VariableDeclaration","scope":696,"src":"10448:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10448:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":671,"name":"_codeHash","nodeType":"VariableDeclaration","scope":696,"src":"10473:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10473:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":673,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":696,"src":"10500:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":672,"name":"uint64","nodeType":"ElementaryTypeName","src":"10500:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":675,"name":"_sig","nodeType":"VariableDeclaration","scope":696,"src":"10525:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":674,"name":"bytes","nodeType":"ElementaryTypeName","src":"10525:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"10438:110:0"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"10642:0:0"},"scope":1113,"src":"10402:340:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":731,"nodeType":"Block","src":"11530:153:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":723,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"11574:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":724,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"11581:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":725,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"11591:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":726,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"11625:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},{"argumentTypes":null,"id":727,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"11648:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":728,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"11671:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":720,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"11540:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6791_$","typeString":"type(library TaskImpl)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":5421,"src":"11540:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_uint64_$_t_address_$_t_array$_t_bytes32_$4_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint64,address,bytes32[4] memory,bytes memory,bytes memory)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11540:136:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":730,"nodeType":"ExpressionStatement","src":"11540:136:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _gasUsed Gas used for task\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _bytes32s [taskId, preCodeHash, codeHash, initStateDeltaHash]\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _sig Worker\'s signature for deployment","id":732,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":711,"modifierName":{"argumentTypes":null,"id":710,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"11447:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11447:23:0"},{"arguments":null,"id":713,"modifierName":{"argumentTypes":null,"id":712,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"11475:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11475:14:0"},{"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":715,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"11512:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},"id":717,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11522:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11512:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":718,"modifierName":{"argumentTypes":null,"id":714,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"11494:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"11494:31:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":732,"src":"11252:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":697,"name":"uint64","nodeType":"ElementaryTypeName","src":"11252:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":700,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":732,"src":"11277:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"11277:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":704,"name":"_bytes32s","nodeType":"VariableDeclaration","scope":732,"src":"11327:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4]"},"typeName":{"baseType":{"id":701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11327:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":703,"length":{"argumentTypes":null,"hexValue":"34","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11335:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"11327:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_storage_ptr","typeString":"bytes32[4]"}},"value":null,"visibility":"internal"},{"constant":false,"id":706,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":732,"src":"11364:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":705,"name":"bytes","nodeType":"ElementaryTypeName","src":"11364:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":708,"name":"_sig","nodeType":"VariableDeclaration","scope":732,"src":"11408:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":707,"name":"bytes","nodeType":"ElementaryTypeName","src":"11408:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"11242:189:0"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[],"src":"11530:0:0"},"scope":1113,"src":"11213:470:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":742,"nodeType":"Block","src":"11885:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":739,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"11946:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":737,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"11902:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$4437_$","typeString":"type(library SecretContractImpl)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":4369,"src":"11902:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$3047_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11902:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":736,"id":741,"nodeType":"Return","src":"11895:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":743,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"11839:2:0"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"name":"","nodeType":"VariableDeclaration","scope":743,"src":"11875:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint","nodeType":"ElementaryTypeName","src":"11875:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11874:6:0"},"scope":1113,"src":"11810:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":760,"nodeType":"Block","src":"12288:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":755,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"12355:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":756,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"12362:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":757,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"12370:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":753,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"12305:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$4437_$","typeString":"type(library SecretContractImpl)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":4436,"src":"12305:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$3047_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12305:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":752,"id":759,"nodeType":"Return","src":"12298:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":761,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"name":"_start","nodeType":"VariableDeclaration","scope":761,"src":"12208:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint","nodeType":"ElementaryTypeName","src":"12208:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":747,"name":"_stop","nodeType":"VariableDeclaration","scope":761,"src":"12221:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint","nodeType":"ElementaryTypeName","src":"12221:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12207:25:0"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"name":"","nodeType":"VariableDeclaration","scope":761,"src":"12266:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12266:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":750,"length":null,"nodeType":"ArrayTypeName","src":"12266:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"12265:18:0"},"scope":1113,"src":"12172:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":789,"nodeType":"Block","src":"13466:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":781,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"13516:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":782,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"13523:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":783,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"13536:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":784,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"13547:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":785,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"13555:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":786,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"13574:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":778,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"13476:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6791_$","typeString":"type(library TaskImpl)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4730,"src":"13476:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13476:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"ExpressionStatement","src":"13476:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":790,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":774,"modifierName":{"argumentTypes":null,"id":773,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23785,"src":"13424:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13424:9:0"},{"arguments":null,"id":776,"modifierName":{"argumentTypes":null,"id":775,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"13438:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13438:23:0"}],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":790,"src":"13281:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13281:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":765,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":790,"src":"13310:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":764,"name":"uint64","nodeType":"ElementaryTypeName","src":"13310:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":767,"name":"_gasPx","nodeType":"VariableDeclaration","scope":790,"src":"13336:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":766,"name":"uint64","nodeType":"ElementaryTypeName","src":"13336:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":769,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":790,"src":"13359:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint","nodeType":"ElementaryTypeName","src":"13359:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":771,"name":"_nonce","nodeType":"VariableDeclaration","scope":790,"src":"13391:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint","nodeType":"ElementaryTypeName","src":"13391:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"13271:137:0"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"13466:0:0"},"scope":1113,"src":"13236:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":813,"nodeType":"Block","src":"14348:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":806,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"14388:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":807,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"14395:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":808,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"14408:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":809,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"14419:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":810,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"14427:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":803,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"14358:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6791_$","typeString":"type(library TaskImpl)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":5633,"src":"14358:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14358:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"14358:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":814,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":801,"modifierName":{"argumentTypes":null,"id":800,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"14320:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14320:23:0"}],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":814,"src":"14198:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14198:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":794,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":814,"src":"14227:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":793,"name":"uint64","nodeType":"ElementaryTypeName","src":"14227:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":796,"name":"_gasPx","nodeType":"VariableDeclaration","scope":814,"src":"14253:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":795,"name":"uint64","nodeType":"ElementaryTypeName","src":"14253:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":798,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":814,"src":"14276:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint","nodeType":"ElementaryTypeName","src":"14276:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14188:116:0"},"returnParameters":{"id":802,"nodeType":"ParameterList","parameters":[],"src":"14348:0:0"},"scope":1113,"src":"14163:289:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":849,"nodeType":"Block","src":"15258:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":841,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"15295:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":842,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"15302:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":843,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"15312:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":844,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"15358:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},{"argumentTypes":null,"id":845,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"15369:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":846,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"15392:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":838,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"15268:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6791_$","typeString":"type(library TaskImpl)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":6427,"src":"15268:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_uint64_$_t_address_$_t_array$_t_bytes32_$4_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint64,address,bytes32[4] memory,bytes memory,bytes memory)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15268:129:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":848,"nodeType":"ExpressionStatement","src":"15268:129:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _gasUsed Gas used for task computation\\n@param _optionalEthereumContractAddress Output state hash\\n@param _bytes32s [scAddr, taskId, stateDeltaHash, outputHash]\\n@param _optionalEthereumData Output state hash\\n@param _sig Worker\'s signature","id":850,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":829,"modifierName":{"argumentTypes":null,"id":828,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"15176:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15176:23:0"},{"arguments":null,"id":831,"modifierName":{"argumentTypes":null,"id":830,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"15204:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15204:14:0"},{"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":833,"name":"_bytes32s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"15240:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4] memory"}},"id":835,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15250:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15240:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":836,"modifierName":{"argumentTypes":null,"id":832,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"15223:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"15223:30:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":850,"src":"14981:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":815,"name":"uint64","nodeType":"ElementaryTypeName","src":"14981:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":818,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":850,"src":"15006:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"15006:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":822,"name":"_bytes32s","nodeType":"VariableDeclaration","scope":850,"src":"15056:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_memory_ptr","typeString":"bytes32[4]"},"typeName":{"baseType":{"id":819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15056:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":821,"length":{"argumentTypes":null,"hexValue":"34","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15064:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"15056:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$4_storage_ptr","typeString":"bytes32[4]"}},"value":null,"visibility":"internal"},{"constant":false,"id":824,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":850,"src":"15093:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":823,"name":"bytes","nodeType":"ElementaryTypeName","src":"15093:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":826,"name":"_sig","nodeType":"VariableDeclaration","scope":850,"src":"15137:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":825,"name":"bytes","nodeType":"ElementaryTypeName","src":"15137:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14971:189:0"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"15258:0:0"},"scope":1113,"src":"14949:455:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":881,"nodeType":"Block","src":"16051:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":873,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"16092:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":874,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"16099:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":875,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"16108:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":876,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"16117:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":877,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"16130:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":878,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"16140:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":870,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"16061:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6791_$","typeString":"type(library TaskImpl)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5827,"src":"16061:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16061:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":880,"nodeType":"ExpressionStatement","src":"16061:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":882,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":863,"modifierName":{"argumentTypes":null,"id":862,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"15974:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15974:23:0"},{"arguments":null,"id":865,"modifierName":{"argumentTypes":null,"id":864,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"16002:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"16002:14:0"},{"arguments":[{"argumentTypes":null,"id":867,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"16038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":868,"modifierName":{"argumentTypes":null,"id":866,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"16021:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"16021:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"name":"_scAddr","nodeType":"VariableDeclaration","scope":882,"src":"15831:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15831:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":854,"name":"_taskId","nodeType":"VariableDeclaration","scope":882,"src":"15856:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15856:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":856,"name":"_outputHash","nodeType":"VariableDeclaration","scope":882,"src":"15881:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15881:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":858,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":882,"src":"15910:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":857,"name":"uint64","nodeType":"ElementaryTypeName","src":"15910:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":860,"name":"_sig","nodeType":"VariableDeclaration","scope":882,"src":"15935:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":859,"name":"bytes","nodeType":"ElementaryTypeName","src":"15935:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"15821:137:0"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"16051:0:0"},"scope":1113,"src":"15795:357:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":897,"nodeType":"Block","src":"16403:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":893,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"16444:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":894,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"16451:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":890,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"16413:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6791_$","typeString":"type(library TaskImpl)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6790,"src":"16413:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16413:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":896,"nodeType":"ExpressionStatement","src":"16413:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":898,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":887,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"16390:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":888,"modifierName":{"argumentTypes":null,"id":886,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"16378:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"16378:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"name":"_taskId","nodeType":"VariableDeclaration","scope":898,"src":"16346:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16346:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16345:17:0"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"16403:0:0"},"scope":1113,"src":"16319:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":922,"nodeType":"Block","src":"16954:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":916,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"16999:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":917,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"17006:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":918,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"17020:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":919,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"17027:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":913,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"16964:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3797_$","typeString":"type(library PrincipalImpl)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3626,"src":"16964:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16964:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":921,"nodeType":"ExpressionStatement","src":"16964:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":923,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":907,"modifierName":{"argumentTypes":null,"id":906,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"16893:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"16893:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":909,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24399,"src":"16938:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16938:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":911,"modifierName":{"argumentTypes":null,"id":908,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"16921:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"16921:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":923,"src":"16828:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint","nodeType":"ElementaryTypeName","src":"16828:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":902,"name":"_seed","nodeType":"VariableDeclaration","scope":923,"src":"16847:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint","nodeType":"ElementaryTypeName","src":"16847:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":904,"name":"_sig","nodeType":"VariableDeclaration","scope":923,"src":"16859:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":903,"name":"bytes","nodeType":"ElementaryTypeName","src":"16859:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"16827:50:0"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"16954:0:0"},"scope":1113,"src":"16802:237:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":940,"nodeType":"Block","src":"17275:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":936,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"17327:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":937,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"17334:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":934,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"17292:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3797_$","typeString":"type(library PrincipalImpl)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3796,"src":"17292:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$3047_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17292:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":933,"id":939,"nodeType":"Return","src":"17285:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":941,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":941,"src":"17186:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint","nodeType":"ElementaryTypeName","src":"17186:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17185:19:0"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"name":"","nodeType":"VariableDeclaration","scope":941,"src":"17238:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"17238:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":928,"length":null,"nodeType":"ArrayTypeName","src":"17238:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":932,"name":"","nodeType":"VariableDeclaration","scope":941,"src":"17256:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":930,"name":"uint","nodeType":"ElementaryTypeName","src":"17256:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":931,"length":null,"nodeType":"ArrayTypeName","src":"17256:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"17237:33:0"},"scope":1113,"src":"17160:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":954,"nodeType":"Block","src":"17616:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":950,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"17669:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":951,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"17676:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":948,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"17633:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":10155,"src":"17633:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$3047_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17633:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":947,"id":953,"nodeType":"Return","src":"17626:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":955,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":955,"src":"17558:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint","nodeType":"ElementaryTypeName","src":"17558:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17557:19:0"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"name":"","nodeType":"VariableDeclaration","scope":955,"src":"17610:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint","nodeType":"ElementaryTypeName","src":"17610:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17609:6:0"},"scope":1113,"src":"17529:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":976,"nodeType":"Block","src":"18102:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":972,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"18151:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":973,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"18158:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":970,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"18119:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":10192,"src":"18119:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$3047_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18119:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":969,"id":975,"nodeType":"Return","src":"18112:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":977,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":977,"src":"18005:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint","nodeType":"ElementaryTypeName","src":"18005:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18004:19:0"},"returnParameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"name":"","nodeType":"VariableDeclaration","scope":977,"src":"18057:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint","nodeType":"ElementaryTypeName","src":"18057:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":962,"name":"","nodeType":"VariableDeclaration","scope":977,"src":"18063:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint","nodeType":"ElementaryTypeName","src":"18063:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":965,"name":"","nodeType":"VariableDeclaration","scope":977,"src":"18069:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"18069:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":964,"length":null,"nodeType":"ArrayTypeName","src":"18069:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":968,"name":"","nodeType":"VariableDeclaration","scope":977,"src":"18087:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":966,"name":"uint","nodeType":"ElementaryTypeName","src":"18087:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":967,"length":null,"nodeType":"ArrayTypeName","src":"18087:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"18056:45:0"},"scope":1113,"src":"17980:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":994,"nodeType":"Block","src":"18630:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":989,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"18678:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":990,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"18685:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":991,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"18699:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":987,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"18647:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":10456,"src":"18647:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$3047_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18647:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":986,"id":993,"nodeType":"Return","src":"18640:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":995,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":995,"src":"18539:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint","nodeType":"ElementaryTypeName","src":"18539:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":981,"name":"_scAddr","nodeType":"VariableDeclaration","scope":995,"src":"18558:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18558:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"18538:36:0"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"name":"","nodeType":"VariableDeclaration","scope":995,"src":"18608:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"18608:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":984,"length":null,"nodeType":"ArrayTypeName","src":"18608:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"18607:18:0"},"scope":1113,"src":"18515:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":1013,"nodeType":"Block","src":"18984:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1009,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"19027:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":1010,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"19034:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1007,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"19001:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":9777,"src":"19001:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$3047_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19001:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":1006,"id":1012,"nodeType":"Return","src":"18994:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":1014,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":1000,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"18932:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1001,"modifierName":{"argumentTypes":null,"id":999,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"18915:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"18915:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"name":"_custodian","nodeType":"VariableDeclaration","scope":1014,"src":"18871:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"18871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"18870:20:0"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"name":"","nodeType":"VariableDeclaration","scope":1014,"src":"18957:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"18957:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1005,"name":"","nodeType":"VariableDeclaration","scope":1014,"src":"18966:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1004,"name":"bytes","nodeType":"ElementaryTypeName","src":"18966:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18956:23:0"},"scope":1113,"src":"18852:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":1029,"nodeType":"Block","src":"19367:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1025,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"19413:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":1026,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"19420:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1023,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"19384:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":9803,"src":"19384:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19384:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1022,"id":1028,"nodeType":"Return","src":"19377:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":1030,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"name":"_data","nodeType":"VariableDeclaration","scope":1030,"src":"19279:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1015,"name":"bytes","nodeType":"ElementaryTypeName","src":"19279:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":1018,"name":"_signature","nodeType":"VariableDeclaration","scope":1030,"src":"19299:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1017,"name":"bytes","nodeType":"ElementaryTypeName","src":"19299:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"19278:45:0"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"name":"","nodeType":"VariableDeclaration","scope":1030,"src":"19357:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint","nodeType":"ElementaryTypeName","src":"19357:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"19356:6:0"},"scope":1113,"src":"19257:181:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":1045,"nodeType":"Block","src":"19706:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1041,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"19761:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":1042,"name":"_updatedEnigmaContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"19768:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1039,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"19723:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$9337_$","typeString":"type(library UpgradeImpl)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeEnigmaContractImpl","nodeType":"MemberAccess","referencedDeclaration":9246,"src":"19723:37:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19723:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":1038,"id":1044,"nodeType":"Return","src":"19716:82:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address","id":1046,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1035,"modifierName":{"argumentTypes":null,"id":1034,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23785,"src":"19664:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"19664:9:0"},{"arguments":null,"id":1037,"modifierName":{"argumentTypes":null,"id":1036,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"19678:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"19678:23:0"}],"name":"upgradeEnigmaContract","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"name":"_updatedEnigmaContractAddress","nodeType":"VariableDeclaration","scope":1046,"src":"19610:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"19610:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"19609:39:0"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"19706:0:0"},"scope":1113,"src":"19579:226:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1067,"nodeType":"Block","src":"20222:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1061,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"20286:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":1062,"name":"_operatingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"20293:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1063,"name":"_stakingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"20312:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1064,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"20329:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":1059,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"20239:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$9337_$","typeString":"type(library UpgradeImpl)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferWorkerStakePostUpgradeImpl","nodeType":"MemberAccess","referencedDeclaration":9336,"src":"20239:46:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,address,address,bytes memory) returns (uint256)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20239:95:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1058,"id":1066,"nodeType":"Return","src":"20232:102:0"}]},"documentation":"Transfer worker stake from old contract to new contract upon registration\\n@param _operatingAddress Operating Address\\n@param _stakingAddress Newly-registered worker address\\n@param _sig Signature","id":1068,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1055,"modifierName":{"argumentTypes":null,"id":1054,"name":"fromUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"20170:25:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"20170:25:0"}],"name":"transferWorkerStakePostUpgrade","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"name":"_operatingAddress","nodeType":"VariableDeclaration","scope":1068,"src":"20084:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"20084:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1050,"name":"_stakingAddress","nodeType":"VariableDeclaration","scope":1068,"src":"20111:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"20111:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1052,"name":"_sig","nodeType":"VariableDeclaration","scope":1068,"src":"20136:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1051,"name":"bytes","nodeType":"ElementaryTypeName","src":"20136:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"20083:71:0"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"name":"","nodeType":"VariableDeclaration","scope":1068,"src":"20209:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"20209:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"20208:9:0"},"scope":1113,"src":"20044:297:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1081,"nodeType":"Block","src":"20487:43:0","statements":[{"expression":{"argumentTypes":null,"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1075,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"20497:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":1077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"mrSigner","nodeType":"MemberAccess","referencedDeclaration":3044,"src":"20497:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1078,"name":"_mrSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"20514:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"20497:26:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1080,"nodeType":"ExpressionStatement","src":"20497:26:0"}]},"documentation":"Set mrSigner\\n@param _mrSigner mrSigner","id":1082,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1073,"modifierName":{"argumentTypes":null,"id":1072,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23785,"src":"20473:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"20473:9:0"}],"name":"setMrSigner","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"name":"_mrSigner","nodeType":"VariableDeclaration","scope":1082,"src":"20434:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1069,"name":"bytes","nodeType":"ElementaryTypeName","src":"20434:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"20433:24:0"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[],"src":"20487:0:0"},"scope":1113,"src":"20413:117:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1095,"nodeType":"Block","src":"20668:39:0","statements":[{"expression":{"argumentTypes":null,"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1089,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"20678:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},"id":1091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isvSvn","nodeType":"MemberAccess","referencedDeclaration":3046,"src":"20678:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1092,"name":"_isvSvn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"20693:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"20678:22:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1094,"nodeType":"ExpressionStatement","src":"20678:22:0"}]},"documentation":"Set isvSvn\\n@param _isvSvn mrSigner","id":1096,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1087,"modifierName":{"argumentTypes":null,"id":1086,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23785,"src":"20654:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"20654:9:0"}],"name":"setIsvSvn","nodeType":"FunctionDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"name":"_isvSvn","nodeType":"VariableDeclaration","scope":1096,"src":"20617:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1083,"name":"bytes","nodeType":"ElementaryTypeName","src":"20617:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"20616:22:0"},"returnParameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"20668:0:0"},"scope":1113,"src":"20598:109:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1111,"nodeType":"Block","src":"20955:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1107,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"21001:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":1108,"name":"_operatingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"21008:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$3047_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1104,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10509,"src":"20965:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$10509_$","typeString":"type(library WorkersImpl)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setOperatingAddressImpl","nodeType":"MemberAccess","referencedDeclaration":9740,"src":"20965:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$3047_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20965:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"20965:61:0"}]},"documentation":"Set operating address for a particular staking address\\n@param _operatingAddress Operating Address","id":1112,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":1101,"name":"_operatingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"20932:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1102,"modifierName":{"argumentTypes":null,"id":1100,"name":"canSetOperatingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"20909:22:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"20909:41:0"}],"name":"setOperatingAddress","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"name":"_operatingAddress","nodeType":"VariableDeclaration","scope":1112,"src":"20867:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"20867:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"20866:27:0"},"returnParameters":{"id":1103,"nodeType":"ParameterList","parameters":[],"src":"20955:0:0"},"scope":1113,"src":"20838:195:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":1114,"src":"886:20149:0"}],"src":"0:21036:0"},"compiler":{"name":"solc","version":"0.5.12+commit.7709ece9.Emscripten.clang"},"networks":{"4447":{"events":{"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event","signature":"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5"},"0x0a581ae4192c44a0074ccc9c655d264ea6a838e99ca8dfc8ca439aee62cb5183":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"}],"name":"LoggedIn","type":"event","signature":"0x0a581ae4192c44a0074ccc9c655d264ea6a838e99ca8dfc8ca439aee62cb5183"},"0x8d11ef6404d9eeb0a13d346ad9b49adf23be5a095f5efb8741c3eec74e43ee9c":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"}],"name":"LoggedOut","type":"event","signature":"0x8d11ef6404d9eeb0a13d346ad9b49adf23be5a095f5efb8741c3eec74e43ee9c"},"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event","signature":"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"},"0x46216b692e6c99daacda2844a09844fd9b83f5834ff1f4ff211b6130c5f288f0":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"scAddr","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"gasUsed","type":"uint256"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0x46216b692e6c99daacda2844a09844fd9b83f5834ff1f4ff211b6130c5f288f0"},"0x5dee55d018f978a2726933d05dd5004ada75a6f0d6cb984427803a2a1165cbfb":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"scAddr","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"gasUsed","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasUsedTotal","type":"uint256"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0x5dee55d018f978a2726933d05dd5004ada75a6f0d6cb984427803a2a1165cbfb"},"0x81ec9994a9c987e62ebfddb9120cd523132fd17a7d2487069ed6f5fb98f4044b":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"gasUsed","type":"uint64"},{"indexed":false,"internalType":"address","name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"internalType":"bytes32[4]","name":"bytes32s","type":"bytes32[4]"},{"indexed":false,"internalType":"uint256","name":"deltaHashIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasUsedTotal","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"optionalEthereumData","type":"bytes"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0x81ec9994a9c987e62ebfddb9120cd523132fd17a7d2487069ed6f5fb98f4044b"},"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"custodian","type":"address"},{"indexed":false,"internalType":"address","name":"signer","type":"address"}],"name":"Registered","type":"event","signature":"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55"},"0xe48e7d798803aa26679cdc4e9bc6f7af8ac2230a062656300f5b90b8152eb5b3":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"gasUsed","type":"uint64"},{"indexed":false,"internalType":"address","name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"internalType":"bytes32[4]","name":"bytes32s","type":"bytes32[4]"},{"indexed":false,"internalType":"uint256","name":"gasUsedTotal","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"optionalEthereumData","type":"bytes"},{"indexed":false,"internalType":"address","name":"workerAddress","type":"address"}],"name":"SecretContractDeployed","type":"event","signature":"0xe48e7d798803aa26679cdc4e9bc6f7af8ac2230a062656300f5b90b8152eb5b3"},"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event","signature":"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f"},"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"taskId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"inputsHash","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"gasLimit","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"gasPx","type":"uint64"},{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d"},"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event","signature":"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9"},"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"seed","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"firstBlockNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"internalType":"address[]","name":"workers","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"stakes","type":"uint256[]"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event","signature":"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd"},"0xb159a65bf540387f02e04528dcc6808f9f83a5ce032a33efc384d121852a651f":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"custodian","type":"address"},{"indexed":false,"internalType":"address","name":"signer","type":"address"},{"indexed":false,"internalType":"bytes","name":"isvProdId","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"attributes","type":"bytes"}],"name":"Registered","type":"event","signature":"0xb159a65bf540387f02e04528dcc6808f9f83a5ce032a33efc384d121852a651f"},"0xa653477f8f6ae1d2c8f9464991988fc79f13ca61dcd7a95b7ca6134f0d32451d":{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"custodian","type":"address"},{"indexed":false,"internalType":"address","name":"signer","type":"address"},{"indexed":false,"internalType":"bytes","name":"isvProdid","type":"bytes"}],"name":"Registered","type":"event","signature":"0xa653477f8f6ae1d2c8f9464991988fc79f13ca61dcd7a95b7ca6134f0d32451d"}},"links":{"WorkersImpl":"0x27d160115a1E2aA7C4F709dDEB9dABbA82Ba5188","PrincipalImpl":"0x8cc94094329e2397f176b9a3415a9A6EB66F3746","TaskImpl":"0x718e1497188318aDdf7e38b8318747006541F888","UpgradeImpl":"0x1E5Ead93c911450036a8312C25B5211b728F96D5","SecretContractImpl":"0x59a13b07fE44Aa7221Fd6C55A3E8df26d4E37a65"},"address":"0xfeaD3d6e2fA0f92551375fa985006ffc6ac07E18","transactionHash":"0x8445c61d3ed52d25cb9017b3d608406d091624415eb28bfafb2c436e5def23f3"}},"schemaVersion":"3.0.19","updatedAt":"2019-12-11T18:02:56.249Z","networkType":"ethereum","devdoc":{"methods":{"commitReceipt(uint64,address,bytes32[4],bytes,bytes)":{"params":{"_bytes32s":"[scAddr, taskId, stateDeltaHash, outputHash]","_gasUsed":"Gas used for task computation","_optionalEthereumContractAddress":"Output state hash","_optionalEthereumData":"Output state hash","_sig":"Worker\'s signature"}},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_taskId":"Unique taskId"}},"countSecretContracts()":{"return":"Number of deployed secret contracts"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash","_nonce":"Locally-computed nonce value for this deployment"}},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"deploySecretContract(uint64,address,bytes32[4],bytes,bytes)":{"params":{"_bytes32s":"[taskId, preCodeHash, codeHash, initStateDeltaHash]","_gasUsed":"Gas used for task","_optionalEthereumContractAddress":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumData":"Initial state delta hash as a result of the contract\'s constructor","_sig":"Worker\'s signature for deployment"}},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deposit(address,uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit","_custodian":"The worker\'s ETH address"}},"getActiveWorkers(uint256)":{"params":{"_blockNumber":"Block number"}},"getAllSecretContractAddresses()":{"return":"Array of secret contract addresses"},"getEpochSize()":{"return":"Epoch size"},"getFirstBlockNumber(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Block number"},"getIsvSvn()":{"return":"isvSvn"},"getMrSigner()":{"return":"mrSigner"},"getOperatingAddressFromStakingAddress(address)":{"params":{"_stakingAddress":"Worker\'s staking address"},"return":"Operating address"},"getReport(address)":{"params":{"_custodian":"The worker\'s custodian address"}},"getSecretContract(bytes32)":{"params":{"_scAddr":"Secret contract address"},"return":"SecretContract struct"},"getSecretContractAddresses(uint256,uint256)":{"params":{"_start":"Start of range","_stop":"End of range"},"return":"Subset of deployed secret contract addresses"},"getSigningAddress()":{"return":"Signing address"},"getTaskRecord(bytes32)":{"params":{"_taskId":"Unique identifier for a given task"},"return":"TaskRecord struct"},"getTaskTimeoutSize()":{"return":"task timeout"},"getUpdatedEnigmaContractAddress()":{"return":"Updated Enigma contract address"},"getUserTaskDeployments(address)":{"params":{"_sender":"Task sender\'s ethereum address"},"return":"Current number for task deployments for user"},"getWorker(address)":{"params":{"_worker":"Worker\'s ethereum address"},"return":"Worker struct"},"getWorkerFromSigningAddress(address)":{"params":{"_signer":"Worker\'s signing address"},"return":"Ethereum operating addressWorker struct"},"getWorkerGroup(uint256,bytes32)":{"params":{"_blockNumber":"Block number the task record was mined","_scAddr":"Secret contract address"},"return":"Selected workers\' addresses"},"getWorkerParams(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes"},"getWorkersParams()":{"return":"Array of WorkersParams structs"},"isOwner()":{"details":"Returns true if the caller is the current owner."},"owner()":{"details":"Returns the address of the current owner."},"register(address,address,bytes,bytes)":{"params":{"_report":"The RLP encoded report returned by the IAS","_signature":"Signature","_signer":"The signer address, derived from the enclave public key","_stakingAddress":"The operating address"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"returnFeesForTask(bytes32)":{"params":{"_taskId":"Unique taskId"}},"setIsvSvn(bytes)":{"params":{"_isvSvn":"mrSigner"}},"setMrSigner(bytes)":{"params":{"_mrSigner":"mrSigner"}},"setOperatingAddress(address)":{"params":{"_operatingAddress":"Operating Address"}},"setWorkersParams(uint256,uint256,bytes)":{"params":{"_blockNumber":"Block number principal node is attempting to set worker params","_seed":"The random integer generated by the enclave","_sig":"Principal node\'s signature"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferWorkerStakePostUpgrade(address,address,bytes)":{"params":{"_operatingAddress":"Operating Address","_sig":"Signature","_stakingAddress":"Newly-registered worker address"}},"upgradeEnigmaContract(address)":{"params":{"_updatedEnigmaContractAddress":"Updated newly-deployed Enigma contract address"}},"verifyReport(bytes,bytes)":{"params":{"_data":"The report itself","_signature":"The signature of the report"}},"withdraw(uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit"}}}},"userdoc":{"methods":{"commitReceipt(uint64,address,bytes32[4],bytes,bytes)":{"notice":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee."},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"notice":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure."},"countSecretContracts()":{"notice":"Check if secret contract has been deployed"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"notice":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid."},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"notice":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"deploySecretContract(uint64,address,bytes32[4],bytes,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deposit(address,uint256)":{"notice":"Deposits ENG stake into contract from worker. Worker must be registered to do so."},"getActiveWorkers(uint256)":{"notice":"Get active workers before a certain block number"},"getAllSecretContractAddresses()":{"notice":"Get all secret contract addresses"},"getEpochSize()":{"notice":"Get the epoch block size"},"getFirstBlockNumber(uint256)":{"notice":"Get the first block number of an epoch that a given block number belongs to"},"getIsvSvn()":{"notice":"Get isvSvn"},"getMrSigner()":{"notice":"Get mrSigner"},"getOperatingAddressFromStakingAddress(address)":{"notice":"Get operating address from staking address"},"getReport(address)":{"notice":"The RLP encoded report returned by the IAS server"},"getSecretContract(bytes32)":{"notice":"Get a SecretContract struct given a particular secret contract address"},"getSecretContractAddresses(uint256,uint256)":{"notice":"Get deployed secret contract addresses within a range"},"getSigningAddress()":{"notice":"Get signing address of calling worker"},"getTaskRecord(bytes32)":{"notice":"Get a TaskRecord struct given a particular task\'s ID"},"getTaskTimeoutSize()":{"notice":"Get the task timeout size"},"getUpdatedEnigmaContractAddress()":{"notice":"Get updated Enigma contract address"},"getUserTaskDeployments(address)":{"notice":"Get the current number/index (used as unique nonce value) of task deployments for a given user user"},"getWorker(address)":{"notice":"Get Worker struct from a given worker\'s ethereum address"},"getWorkerFromSigningAddress(address)":{"notice":"Get Worker struct from a given worker\'s signing address"},"getWorkerGroup(uint256,bytes32)":{"notice":"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address."},"getWorkerParams(uint256)":{"notice":"Get worker params for an epoch given a particular block number"},"getWorkersParams()":{"notice":"Get epoch-based history of worker params information"},"login()":{"notice":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process."},"logout()":{"notice":"Logout worker. Worker must be logged in to do so."},"register(address,address,bytes,bytes)":{"notice":"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks."},"returnFeesForTask(bytes32)":{"notice":"Return the task fee to the task creator when too many blocks have elapsed without task resolution."},"setIsvSvn(bytes)":{"notice":"Set isvSvn"},"setMrSigner(bytes)":{"notice":"Set mrSigner"},"setOperatingAddress(address)":{"notice":"Set operating address for a particular staking address"},"setWorkersParams(uint256,uint256,bytes)":{"notice":"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node"},"transferWorkerStakePostUpgrade(address,address,bytes)":{"notice":"Transfer worker stake from old contract to new contract upon registration"},"unregister()":{"notice":"Unregisters a staking address\' worker.    "},"upgradeEnigmaContract(address)":{"notice":"Upgrade Enigma Contract"},"verifyReport(bytes,bytes)":{"notice":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate."},"withdraw(uint256)":{"notice":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so."}}}}')},function(e){e.exports=JSON.parse('{"contractName":"EnigmaToken","abi":[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[],"name":"INITIAL_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.12+commit.7709ece9\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"INITIAL_SUPPLY\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_from\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"details\\":\\"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. \\",\\"methods\\":{\\"approve(address,uint256)\\":{\\"details\\":\\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\",\\"params\\":{\\"_spender\\":\\"The address which will spend the funds.\\",\\"_value\\":\\"The amount of tokens to be spent.\\"}},\\"balanceOf(address)\\":{\\"details\\":\\"See {IERC20-balanceOf}.\\"},\\"constructor\\":{\\"details\\":\\"EnigmaToken Constructor Runs only on initial contract creation.\\"},\\"decimals()\\":{\\"details\\":\\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\\"},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\\"},\\"name()\\":{\\"details\\":\\"Returns the name of the token.\\"},\\"symbol()\\":{\\"details\\":\\"Returns the symbol of the token, usually a shorter version of the name.\\"},\\"totalSupply()\\":{\\"details\\":\\"See {IERC20-totalSupply}.\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"Transfer token for a specified address when not paused\\",\\"params\\":{\\"_to\\":\\"The address to transfer to.\\",\\"_value\\":\\"The amount to be transferred.\\"}},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"Transfer tokens from one address to another when not paused\\",\\"params\\":{\\"_from\\":\\"address The address which you want to send tokens from\\",\\"_to\\":\\"address The address which you want to transfer to\\",\\"_value\\":\\"uint256 the amount of tokens to be transferred\\"}}},\\"title\\":\\"Enigma Token\\"},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":\\"EnigmaToken\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":{\\"keccak256\\":\\"0x02ab7fd2fdc4816f2ac021dbc37bd6c0c784a5b18654bebcc59e0f8498768b46\\",\\"urls\\":[\\"bzz-raw://192116264305047f6e30d3cea3695ddfe502d344fd9073aa5f93c737de3f0f98\\",\\"dweb:/ipfs/QmTf56fb2oxN4oKW7NgBDkBgG6e15bHtK1Kjy1bFseHM8V\\"]},\\"openzeppelin-solidity/contracts/GSN/Context.sol\\":{\\"keccak256\\":\\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\\",\\"urls\\":[\\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\\",\\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\\",\\"urls\\":[\\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\\",\\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\":{\\"keccak256\\":\\"0x65a4078c03875c25413a068ce9cfdd7e68a90f8786612d1189c89341e6e3b802\\",\\"urls\\":[\\"bzz-raw://45c0d95495b944fbb1aa09d900b0ab530903a432125ab8fddfa05064a7988991\\",\\"dweb:/ipfs/Qma2VeknkKA1THeubGzshWFk44BktXkXP1UKp9Un2uDSsu\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\":{\\"keccak256\\":\\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\\",\\"urls\\":[\\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\\",\\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\":{\\"keccak256\\":\\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\\",\\"urls\\":[\\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\\",\\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b506040518060400160405280600681526020017f456e69676d6100000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f454e47000000000000000000000000000000000000000000000000000000000081525060088260039080519060200190610095929190610266565b5081516100a9906004906020850190610266565b506005805460ff191660ff92909216919091179055506100d290503366354a6ba7a180006100d7565b610301565b6001600160a01b03821661014c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610165816002546101eb60201b6105a81790919060201c565b6002556001600160a01b038216600090815260208181526040909120546101959183906105a86101eb821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008282018381101561025f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102a757805160ff19168380011785556102d4565b828001600101855582156102d4579182015b828111156102d45782518255916020019190600101906102b9565b506102e09291506102e4565b5090565b6102fe91905b808211156102e057600081556001016102ea565b90565b610a56806103106000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610406565b6100c1610421565b6101626004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610482565b6101626004803603604081101561028857600080fd5b506001600160a01b0381351690602001356104f0565b61017e600480360360408110156102b457600080fd5b506001600160a01b03813581169160200135166104fc565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e8383610508565b9392505050565b60025490565b600061038884848461051c565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006103fd6103b16105a4565b846103f885600160006103c26105a4565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6105a816565b610602565b50600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006103fd61048f6105a4565b846103f8856040518060600160405280602581526020016109fd60259139600160006104b96105a4565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6106ee16565b600061036e8383610785565b600061036e8383610799565b60006103fd6105156105a4565b8484610602565b60006105298484846107c4565b61059a846105356105a4565b6103f88560405180606001604052806028815260200161098c602891396001600160a01b038a166000908152600160205260408120906105736105a4565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6106ee16565b5060019392505050565b3390565b60008282018381101561036e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0383166106475760405162461bcd60e51b81526004018080602001828103825260248152602001806109d96024913960400191505060405180910390fd5b6001600160a01b03821661068c5760405162461bcd60e51b81526004018080602001828103825260228152602001806109446022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000818484111561077d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561074257818101518382015260200161072a565b50505050905090810190601f16801561076f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60006103fd6107926105a4565b84846107c4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166108095760405162461bcd60e51b81526004018080602001828103825260258152602001806109b46025913960400191505060405180910390fd5b6001600160a01b03821661084e5760405162461bcd60e51b81526004018080602001828103825260238152602001806109216023913960400191505060405180910390fd5b61089181604051806060016040528060268152602001610966602691396001600160a01b038616600090815260208190526040902054919063ffffffff6106ee16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108c6908263ffffffff6105a816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820ac1e8e16a66f16bca3cd9b74a6ad7572be31110b0503e41b79eb0d13b98a42a064736f6c634300050c0032","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610406565b6100c1610421565b6101626004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610482565b6101626004803603604081101561028857600080fd5b506001600160a01b0381351690602001356104f0565b61017e600480360360408110156102b457600080fd5b506001600160a01b03813581169160200135166104fc565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e8383610508565b9392505050565b60025490565b600061038884848461051c565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006103fd6103b16105a4565b846103f885600160006103c26105a4565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6105a816565b610602565b50600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006103fd61048f6105a4565b846103f8856040518060600160405280602581526020016109fd60259139600160006104b96105a4565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6106ee16565b600061036e8383610785565b600061036e8383610799565b60006103fd6105156105a4565b8484610602565b60006105298484846107c4565b61059a846105356105a4565b6103f88560405180606001604052806028815260200161098c602891396001600160a01b038a166000908152600160205260408120906105736105a4565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6106ee16565b5060019392505050565b3390565b60008282018381101561036e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0383166106475760405162461bcd60e51b81526004018080602001828103825260248152602001806109d96024913960400191505060405180910390fd5b6001600160a01b03821661068c5760405162461bcd60e51b81526004018080602001828103825260228152602001806109446022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000818484111561077d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561074257818101518382015260200161072a565b50505050905090810190601f16801561076f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60006103fd6107926105a4565b84846107c4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166108095760405162461bcd60e51b81526004018080602001828103825260258152602001806109b46025913960400191505060405180910390fd5b6001600160a01b03821661084e5760405162461bcd60e51b81526004018080602001828103825260238152602001806109216023913960400191505060405180910390fd5b61089181604051806060016040528060268152602001610966602691396001600160a01b038616600090815260208190526040902054919063ffffffff6106ee16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108c6908263ffffffff6105a816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820ac1e8e16a66f16bca3cd9b74a6ad7572be31110b0503e41b79eb0d13b98a42a064736f6c634300050c0032","sourceMap":"661:1642:2:-;;;914:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;914:105:2;416:163:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;966:1:2;512:4:41;504:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;526:16:41;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:41;:20;;-1:-1:-1;;552:20:41;;;;;;;;;;;;-1:-1:-1;979:33:2;;-1:-1:-1;985:10:2;754:17;979:5;:33::i;:::-;661:1642;;5962:302:40;-1:-1:-1;;;;;6037:21:40;;6029:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:24;6137:6;6120:12;;:16;;;;;;:24;;;;:::i;:::-;6105:12;:39;-1:-1:-1;;;;;6175:18:40;;:9;:18;;;;;;;;;;;;:30;;6198:6;;6175:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;6154:18:40;;:9;:18;;;;;;;;;;;:51;;;;6220:37;;;;;;;6154:18;;:9;;6220:37;;;;;;;;;;5962:302;;:::o;834:176:38:-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:38:o;661:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;661:1642:2;;;-1:-1:-1;661:1642:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","deployedSourceMap":"661:1642:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;661:1642:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:128:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2027:128:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1559:89:40;;;:::i;:::-;;;;;;;;;;;;;;;;1621:150:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1621:150:2;;;;;;;;;;;;;;;;;:::i;713:58::-;;;:::i;1472:81:41:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3802:207:40;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3802:207:40;;;;;;;;:::i;1706:108::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1706:108:40;-1:-1:-1;;;;;1706:108:40;;:::i;838:85:41:-;;;:::i;4496:258:40:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4496:258:40;;;;;;;;:::i;1201:120:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1201:120:2;;;;;;;;:::i;2161:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2161:139:2;;;;;;;;;;:::i;644:81:41:-;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2027:128:2:-;2094:4;2117:31;2131:8;2141:6;2117:13;:31::i;:::-;2110:38;2027:128;-1:-1:-1;;;2027:128:2:o;1559:89:40:-;1629:12;;1559:89;:::o;1621:150:2:-;1703:4;1726:38;1745:5;1752:3;1757:6;1726:18;:38::i;:::-;1719:45;1621:150;-1:-1:-1;;;;1621:150:2:o;713:58::-;754:17;713:58;:::o;1472:81:41:-;1537:9;;;;1472:81;:::o;3802:207:40:-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;-1:-1:-1;;;;;3930:25:40;;;;;;;;;;;;;;;;;-1:-1:-1;3930:25:40;;;:34;;;;;;;;;;;:50;:38;:50;:::i;:::-;3898:8;:83::i;:::-;-1:-1:-1;3998:4:40;3802:207;;;;:::o;1706:108::-;-1:-1:-1;;;;;1789:18:40;1763:7;1789:18;;;;;;;;;;;;1706:108::o;838:85:41:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;4496:258:40;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;-1:-1:-1;;;;;4629:25:40;;;;;;;;;;;;;;;;;-1:-1:-1;4629:25:40;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;1201:120:2:-;1264:4;1287:27;1302:3;1307:6;1287:14;:27::i;2161:139::-;2235:7;2261:32;2277:6;2284:8;2261:15;:32::i;2500:149:40:-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3289:19:40;;;;;;:11;:19;;;;;;3309:12;:10;:12::i;:::-;-1:-1:-1;;;;;3289:33:40;;;;;;;;;;;;-1:-1:-1;3289:33:40;;;:89;;:37;:89;:::i;3258:121::-;-1:-1:-1;3396:4:40;3107:300;;;;;:::o;788:96:36:-;867:10;788:96;:::o;834:176:38:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:38;;;;;;;;;;;;;;;;;;;;;;;;;;;7351:332:40;-1:-1:-1;;;;;7444:19:40;;7436:68;;;;-1:-1:-1;;;7436:68:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7522:21:40;;7514:68;;;;-1:-1:-1;;;7514:68:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7593:18:40;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7644:32;;;;;;;;;;;;;;;;;7351:332;;;:::o;1732:187:38:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:38;;;1732:187::o;2017:155:40:-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;2230:132::-;-1:-1:-1;;;;;2328:18:40;;;2302:7;2328:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2230:132::o;5228:464::-;-1:-1:-1;;;;;5325:20:40;;5317:70;;;;-1:-1:-1;;;5317:70:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5405:23:40;;5397:71;;;;-1:-1:-1;;;5397:71:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5499:17:40;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5479:17:40;;;:9;:17;;;;;;;;;;;:91;;;;5603:20;;;;;;;:32;;5628:6;5603:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5580:20:40;;;:9;:20;;;;;;;;;;;;:55;;;;5650:35;;;;;;;5580:20;;5650:35;;;;;;;;;;;;;5228:464;;;:::o","source":"pragma solidity ^0.5.12;\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\";\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\";\\n\\n/**\\n * @title Enigma Token\\n * @dev ERC20 Enigma Token (ENG)\\n *\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\n * units referred to as \'Grains\'.\\n *\\n * ENG are displayed using 8 decimal places of precision.\\n *\\n * 1 ENG is equivalent to:\\n *   100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n *\\n * 150 million ENG (total supply) is equivalent to:\\n *   15000000000000000 == 150000000 * 10**8 == 1e17\\n *\\n * All initial ENG Grains are assigned to the creator of\\n * this contract.\\n *\\n */\\ncontract EnigmaToken is ERC20, ERC20Detailed {\\n\\n    uint256 public constant INITIAL_SUPPLY = 150000000 * 10**8;  // 150 million ENG specified in Grains\\n\\n    /**\\n    * @dev EnigmaToken Constructor\\n    * Runs only on initial contract creation.\\n    */\\n    constructor() public ERC20Detailed(\\"Enigma\\", \\"ENG\\", 8) {\\n        _mint(msg.sender, INITIAL_SUPPLY);\\n    }\\n\\n    /**\\n    * @dev Transfer token for a specified address when not paused\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\n        return super.transfer(_to, _value);\\n    }\\n\\n    /**\\n    * @dev Transfer tokens from one address to another when not paused\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint256 the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\n        return super.transferFrom(_from, _to, _value);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint256 _value) public returns (bool) {\\n        return super.approve(_spender, _value);\\n    }\\n\\n    function allowance(address _owner, address _spender) public view returns (uint256) {\\n        return super.allowance(_owner,_spender);\\n    }\\n\\n}\\n","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1981]},"id":1982,"nodeType":"SourceUnit","nodes":[{"id":1885,"literals":["solidity","^","0.5",".12"],"nodeType":"PragmaDirective","src":"0:24:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1886,"nodeType":"ImportDirective","scope":1982,"sourceUnit":23461,"src":"25:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1887,"nodeType":"ImportDirective","scope":1982,"sourceUnit":23519,"src":"89:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1888,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":23460,"src":"685:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$23460","typeString":"contract ERC20"}},"id":1889,"nodeType":"InheritanceSpecifier","src":"685:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1890,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":23518,"src":"692:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$23518","typeString":"contract ERC20Detailed"}},"id":1891,"nodeType":"InheritanceSpecifier","src":"692:13:2"}],"contractDependencies":[22673,23460,23518,23587],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1981,"linearizedBaseContracts":[1981,23518,23460,23587,22673],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1898,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1981,"src":"713:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"766:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"770:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"766:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"754:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1912,"nodeType":"Block","src":"969:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1907,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23602,"src":"985:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"985:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1909,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"997:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1906,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23344,"src":"979:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"979:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1911,"nodeType":"ExpressionStatement","src":"979:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1913,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"949:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"959:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"966:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1904,"modifierName":{"argumentTypes":null,"id":1900,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23518,"src":"935:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$23518_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"935:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[],"src":"925:2:2"},"returnParameters":{"id":1905,"nodeType":"ParameterList","parameters":[],"src":"969:0:2"},"scope":1981,"src":"914:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1928,"nodeType":"Block","src":"1270:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1924,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"1302:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1925,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"1307:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1922,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23669,"src":"1287:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1981","typeString":"contract super EnigmaToken"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":23118,"src":"1287:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1287:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1921,"id":1927,"nodeType":"Return","src":"1280:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1929,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"name":"_to","nodeType":"VariableDeclaration","scope":1929,"src":"1219:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1917,"name":"_value","nodeType":"VariableDeclaration","scope":1929,"src":"1232:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1218:29:2"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"name":"","nodeType":"VariableDeclaration","scope":1929,"src":"1264:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1919,"name":"bool","nodeType":"ElementaryTypeName","src":"1264:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1263:6:2"},"scope":1981,"src":"1201:120:2","stateMutability":"nonpayable","superFunction":23118,"visibility":"public"},{"body":{"id":1947,"nodeType":"Block","src":"1709:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1942,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"1745:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1943,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"1752:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1944,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"1757:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1940,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23669,"src":"1726:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1981","typeString":"contract super EnigmaToken"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":23189,"src":"1726:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1726:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1939,"id":1946,"nodeType":"Return","src":"1719:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1948,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"name":"_from","nodeType":"VariableDeclaration","scope":1948,"src":"1643:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"1643:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1933,"name":"_to","nodeType":"VariableDeclaration","scope":1948,"src":"1658:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1932,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1935,"name":"_value","nodeType":"VariableDeclaration","scope":1948,"src":"1671:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"1671:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1642:44:2"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"name":"","nodeType":"VariableDeclaration","scope":1948,"src":"1703:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1937,"name":"bool","nodeType":"ElementaryTypeName","src":"1703:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1702:6:2"},"scope":1981,"src":"1621:150:2","stateMutability":"nonpayable","superFunction":23189,"visibility":"public"},{"body":{"id":1963,"nodeType":"Block","src":"2100:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1959,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"2131:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1960,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"2141:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1957,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23669,"src":"2117:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1981","typeString":"contract super EnigmaToken"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":23153,"src":"2117:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2117:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1956,"id":1962,"nodeType":"Return","src":"2110:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1964,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"name":"_spender","nodeType":"VariableDeclaration","scope":1964,"src":"2044:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1952,"name":"_value","nodeType":"VariableDeclaration","scope":1964,"src":"2062:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2062:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2043:34:2"},"returnParameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"name":"","nodeType":"VariableDeclaration","scope":1964,"src":"2094:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1954,"name":"bool","nodeType":"ElementaryTypeName","src":"2094:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2093:6:2"},"scope":1981,"src":"2027:128:2","stateMutability":"nonpayable","superFunction":23153,"visibility":"public"},{"body":{"id":1979,"nodeType":"Block","src":"2244:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1975,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"2277:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1976,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"2284:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1973,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23669,"src":"2261:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1981","typeString":"contract super EnigmaToken"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":23134,"src":"2261:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1972,"id":1978,"nodeType":"Return","src":"2254:39:2"}]},"documentation":null,"id":1980,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"name":"_owner","nodeType":"VariableDeclaration","scope":1980,"src":"2180:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"2180:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1968,"name":"_spender","nodeType":"VariableDeclaration","scope":1980,"src":"2196:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1967,"name":"address","nodeType":"ElementaryTypeName","src":"2196:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2179:34:2"},"returnParameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"name":"","nodeType":"VariableDeclaration","scope":1980,"src":"2235:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1970,"name":"uint256","nodeType":"ElementaryTypeName","src":"2235:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2234:9:2"},"scope":1981,"src":"2161:139:2","stateMutability":"view","superFunction":23134,"visibility":"public"}],"scope":1982,"src":"661:1642:2"}],"src":"0:2304:2"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1981]},"id":1982,"nodeType":"SourceUnit","nodes":[{"id":1885,"literals":["solidity","^","0.5",".12"],"nodeType":"PragmaDirective","src":"0:24:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1886,"nodeType":"ImportDirective","scope":1982,"sourceUnit":23461,"src":"25:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1887,"nodeType":"ImportDirective","scope":1982,"sourceUnit":23519,"src":"89:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1888,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":23460,"src":"685:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$23460","typeString":"contract ERC20"}},"id":1889,"nodeType":"InheritanceSpecifier","src":"685:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1890,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":23518,"src":"692:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$23518","typeString":"contract ERC20Detailed"}},"id":1891,"nodeType":"InheritanceSpecifier","src":"692:13:2"}],"contractDependencies":[22673,23460,23518,23587],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1981,"linearizedBaseContracts":[1981,23518,23460,23587,22673],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1898,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1981,"src":"713:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"766:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"770:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"766:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"754:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1912,"nodeType":"Block","src":"969:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1907,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23602,"src":"985:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"985:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1909,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"997:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1906,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23344,"src":"979:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"979:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1911,"nodeType":"ExpressionStatement","src":"979:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1913,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"949:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"959:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"966:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1904,"modifierName":{"argumentTypes":null,"id":1900,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23518,"src":"935:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$23518_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"935:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[],"src":"925:2:2"},"returnParameters":{"id":1905,"nodeType":"ParameterList","parameters":[],"src":"969:0:2"},"scope":1981,"src":"914:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1928,"nodeType":"Block","src":"1270:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1924,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"1302:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1925,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"1307:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1922,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23669,"src":"1287:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1981","typeString":"contract super EnigmaToken"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":23118,"src":"1287:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1287:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1921,"id":1927,"nodeType":"Return","src":"1280:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1929,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"name":"_to","nodeType":"VariableDeclaration","scope":1929,"src":"1219:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1917,"name":"_value","nodeType":"VariableDeclaration","scope":1929,"src":"1232:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1218:29:2"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"name":"","nodeType":"VariableDeclaration","scope":1929,"src":"1264:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1919,"name":"bool","nodeType":"ElementaryTypeName","src":"1264:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1263:6:2"},"scope":1981,"src":"1201:120:2","stateMutability":"nonpayable","superFunction":23118,"visibility":"public"},{"body":{"id":1947,"nodeType":"Block","src":"1709:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1942,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"1745:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1943,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"1752:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1944,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"1757:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1940,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23669,"src":"1726:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1981","typeString":"contract super EnigmaToken"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":23189,"src":"1726:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1726:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1939,"id":1946,"nodeType":"Return","src":"1719:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1948,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"name":"_from","nodeType":"VariableDeclaration","scope":1948,"src":"1643:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"1643:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1933,"name":"_to","nodeType":"VariableDeclaration","scope":1948,"src":"1658:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1932,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1935,"name":"_value","nodeType":"VariableDeclaration","scope":1948,"src":"1671:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"1671:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1642:44:2"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"name":"","nodeType":"VariableDeclaration","scope":1948,"src":"1703:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1937,"name":"bool","nodeType":"ElementaryTypeName","src":"1703:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1702:6:2"},"scope":1981,"src":"1621:150:2","stateMutability":"nonpayable","superFunction":23189,"visibility":"public"},{"body":{"id":1963,"nodeType":"Block","src":"2100:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1959,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"2131:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1960,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"2141:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1957,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23669,"src":"2117:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1981","typeString":"contract super EnigmaToken"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":23153,"src":"2117:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2117:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1956,"id":1962,"nodeType":"Return","src":"2110:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1964,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"name":"_spender","nodeType":"VariableDeclaration","scope":1964,"src":"2044:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1952,"name":"_value","nodeType":"VariableDeclaration","scope":1964,"src":"2062:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2062:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2043:34:2"},"returnParameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"name":"","nodeType":"VariableDeclaration","scope":1964,"src":"2094:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1954,"name":"bool","nodeType":"ElementaryTypeName","src":"2094:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2093:6:2"},"scope":1981,"src":"2027:128:2","stateMutability":"nonpayable","superFunction":23153,"visibility":"public"},{"body":{"id":1979,"nodeType":"Block","src":"2244:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1975,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"2277:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1976,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"2284:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1973,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23669,"src":"2261:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1981","typeString":"contract super EnigmaToken"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":23134,"src":"2261:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1972,"id":1978,"nodeType":"Return","src":"2254:39:2"}]},"documentation":null,"id":1980,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"name":"_owner","nodeType":"VariableDeclaration","scope":1980,"src":"2180:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"2180:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1968,"name":"_spender","nodeType":"VariableDeclaration","scope":1980,"src":"2196:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1967,"name":"address","nodeType":"ElementaryTypeName","src":"2196:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2179:34:2"},"returnParameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"name":"","nodeType":"VariableDeclaration","scope":1980,"src":"2235:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1970,"name":"uint256","nodeType":"ElementaryTypeName","src":"2235:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2234:9:2"},"scope":1981,"src":"2161:139:2","stateMutability":"view","superFunction":23134,"visibility":"public"}],"scope":1982,"src":"661:1642:2"}],"src":"0:2304:2"},"compiler":{"name":"solc","version":"0.5.12+commit.7709ece9.Emscripten.clang"},"networks":{"4447":{"events":{"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"},"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"}},"links":{},"address":"0x0433f2445F5F0Ef09a4Aeab19C6C8F80b4893671","transactionHash":"0xe85bb0818468df17b89754761339328691724dcb3e1c7c2367c5adcf83b477ed"}},"schemaVersion":"3.0.19","updatedAt":"2019-12-11T18:02:56.206Z","networkType":"ethereum","devdoc":{"details":"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. ","methods":{"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.","params":{"_spender":"The address which will spend the funds.","_value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"EnigmaToken Constructor Runs only on initial contract creation."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"Transfer token for a specified address when not paused","params":{"_to":"The address to transfer to.","_value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another when not paused","params":{"_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}}},"title":"Enigma Token"},"userdoc":{"methods":{}}}')},function(e,t){e.exports=require("jayson/lib/client/browser")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("retry")},function(e,t){e.exports=require("ethereumjs-abi")},function(e,t,n){e.exports=n(17)},function(e,t){e.exports=require("core-js/stable")},function(e,t){e.exports=require("regenerator-runtime/runtime")},function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"ERROR",(function(){return v})),n.d(r,"DEPOSIT_TRANSACTION_HASH",(function(){return h})),n.d(r,"DEPOSIT_CONFIRMATION",(function(){return E})),n.d(r,"DEPOSIT_RECEIPT",(function(){return C})),n.d(r,"WITHDRAW_TRANSACTION_HASH",(function(){return V})),n.d(r,"WITHDRAW_CONFIRMATION",(function(){return x})),n.d(r,"WITHDRAW_RECEIPT",(function(){return L})),n.d(r,"LOGIN_TRANSACTION_HASH",(function(){return P})),n.d(r,"LOGIN_CONFIRMATION",(function(){return N})),n.d(r,"LOGIN_RECEIPT",(function(){return R})),n.d(r,"LOGOUT_TRANSACTION_HASH",(function(){return w})),n.d(r,"LOGOUT_CONFIRMATION",(function(){return A})),n.d(r,"LOGOUT_RECEIPT",(function(){return W})),n.d(r,"SET_OPERATING_ADDRESS_TRANSACTION_HASH",(function(){return q})),n.d(r,"SET_OPERATING_ADDRESS_CONFIRMATION",(function(){return M})),n.d(r,"SET_OPERATING_ADDRESS_RECEIPT",(function(){return U})),n.d(r,"DEPLOY_SC_ADDR_RESULT",(function(){return F})),n.d(r,"DEPLOY_SC_ETH_TRANSACTION_HASH",(function(){return O})),n.d(r,"DEPLOY_SC_ETH_CONFIRMATION",(function(){return B})),n.d(r,"DEPLOY_SC_ETH_RECEIPT",(function(){return H})),n.d(r,"DEPLOY_SC_ENG_RECEIPT",(function(){return G})),n.d(r,"CREATE_TASK",(function(){return z})),n.d(r,"CREATE_TASK_INPUT",(function(){return K})),n.d(r,"CREATE_TASK_RECORD_TRANSACTION_HASH",(function(){return Q})),n.d(r,"CREATE_TASK_RECORD_CONFIRMATION",(function(){return j})),n.d(r,"CREATE_TASK_RECORD_RECEIPT",(function(){return X})),n.d(r,"CREATE_TASK_RECORD",(function(){return Y})),n.d(r,"SEND_TASK_INPUT_RESULT",(function(){return Z})),n.d(r,"POLL_TASK_STATUS_RESULT",(function(){return J})),n.d(r,"GET_TASK_RESULT_RESULT",(function(){return ee})),n.d(r,"DEPLOY_SECRET_CONTRACT_RESULT",(function(){return te})),n.d(r,"RETURN_FEES_FOR_TASK_RECEIPT",(function(){return ne})),n.d(r,"RETURN_FEES_FOR_TASK",(function(){return re})),n.d(r,"POLL_TASK_ETH_RESULT",(function(){return ae})),n.d(r,"RPC_SEND_TASK_INPUT",(function(){return se})),n.d(r,"RPC_DEPLOY_SECRET_CONTRACT",(function(){return ie})),n.d(r,"RPC_GET_TASK_RESULT",(function(){return oe})),n.d(r,"RPC_GET_TASK_STATUS",(function(){return de})),n.d(r,"GET_TASK_RESULT_SUCCESS",(function(){return pe})),n.d(r,"GET_TASK_RESULT_FAILED",(function(){return le})),n.d(r,"GET_TASK_RESULT_UNVERIFIED",(function(){return ce})),n.d(r,"GET_TASK_RESULT_INPROGRESS",(function(){return ye})),n.d(r,"ETH_STATUS_UNDEFINED",(function(){return ue})),n.d(r,"ETH_STATUS_CREATED",(function(){return me})),n.d(r,"ETH_STATUS_VERIFIED",(function(){return fe})),n.d(r,"ETH_STATUS_FAILED",(function(){return _e})),n.d(r,"ETH_STATUS_FAILED_ETH",(function(){return be})),n.d(r,"ETH_STATUS_FAILED_RETURN",(function(){return ge}));n(15),n(16);var a=n(2),s=n.n(a),i=n(3),o=n.n(i),d=n(0),p=n.n(d),l=n(7),c=n.n(l),y=n(4),u=n(5),m=n.n(u);p.a.options.usePureJavaScript=!0;var f=c.a.ec;function _(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2]?"00":"",r=!0,a=!1,i=void 0;try{for(var o,d=t[Symbol.iterator]();!(r=(o=d.next()).done);r=!0){var p=o.value;p=g(p),e+=n+s.a.BigInt(p.length/2).toString(16).padStart(16,"0")+p}}catch(e){a=!0,i=e}finally{try{r||null==d.return||d.return()}finally{if(a)throw i}}return e}function b(e,t){var n=!0,r=!1,a=void 0;try{for(var i,o=t[Symbol.iterator]();!(n=(i=o.next()).done);n=!0){var d=i.value;e=_(e+="01"+s.a.BigInt(d[0].length*(d[1]+9)).toString(16).padStart(16,"0"),d[0],!0)}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function g(e){return"0x"==e.substring(0,2)?e.substring(2):e}var T={test:function(){return"hello2"},generateScAddr:function(e,t){return o.a.soliditySha3({t:"bytes",v:e},{t:"uint",v:t})},hash:function(e){var t=_("",e);return o.a.soliditySha3({t:"bytes",v:t})},principalHash:function(e,t,n,r){var a="";return a=b(a=_(a,[e,t],!0),[[n,20],[r,32]]),o.a.soliditySha3({t:"bytes",v:a})},commitReceiptsHash:function(e,t,n,r,a,s,i,d,p){var l="";return l=_(l,[e]),l=_(l=b(l,[t]),[n]),l=_(l=b(l,[r,a,s]),[i,d,p]),o.a.soliditySha3({t:"bytes",v:l})},getDerivedKey:function(e,t){var n=new f("secp256k1");128==e.length&&(e="04"+e);var r=n.keyFromPrivate(t,"hex"),a=n.keyFromPublic(e,"hex").getPublic().mul(r.getPrivate()),s=2|(a.getY().isOdd()?1:0),i=a.getX(),o=y.Buffer.from([s]),d=i.toArrayLike(y.Buffer,"be",32),l=p.a.md.sha256.create();return l.update(o.toString("binary")),l.update(d.toString("binary")),l.digest().toHex()},encryptMessage:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:p.a.random.getBytesSync(12),r=p.a.util.hexToBytes(e),a=p.a.cipher.createCipher("AES-GCM",r);return a.start({iv:n}),a.update(p.a.util.createBuffer(t)),a.finish(),a.output.putBuffer(a.mode.tag).putBytes(n).toHex()},decryptMessage:function(e,t){var n=p.a.util.hexToBytes(e),r=y.Buffer.from(t,"hex"),a=p.a.util.createBuffer(r.slice(-12)),s=p.a.util.createBuffer(r.slice(-28,-12)),i=p.a.cipher.createDecipher("AES-GCM",n);if(i.start({iv:a,tag:s}),i.update(p.a.util.createBuffer(r.slice(0,-28))),i.finish())return i.output.toHex();throw new Error("decipher did not finish")},toGrains:function(e){return e*Math.pow(10,8)}};T.remove0x=g,T.hexToAscii=function(e){if("number"!=typeof e&&"string"!=typeof e)return"";e=e.toString().replace(/\s+/gi,"");for(var t=[],n=0;n<e.length;n+=2){var r=parseInt(e.substr(n,2),16);isNaN(r)||0===r||t.push(String.fromCharCode(r))}return t.join("")},T.sleep=function(e){return new Promise((function(t){return setTimeout(t,e)}))},T.gzip=function(e){return new Promise((function(t,n){m.a.gzip(e,(function(e,r){e?n(e):t(r)}))}))},T.gunzip=function(e){return new Promise((function(t,n){m.a.gunzip(e,(function(e,r){e?n(e):t(r)}))}))};var S=T,D=n(8),I=n(9),k=n(1),$=n.n(k),v="error",h="depositTransactionHash",E="depositConfirmation",C="depositReceipt",V="withdrawTransactionHash",x="withdrawConfirmation",L="withdrawReceipt",P="loginTransactionHash",N="loginConfirmation",R="loginReceipt",w="logoutTransactionHash",A="logoutConfirmation",W="logoutReceipt",q="setOperatingAddressTransactionHash",M="setOperatingAddressConfirmation",U="setOperatingAddressReceipt",F="deploySCAddrResult",O="deploySCEthTransactionHash",B="deploySCEthConfirmation",H="deploySCEthReceipt",G="deploySCEngReceipt",z="createTask",K="createTaskInput",Q="createTaskRecordTransactionHash",j="createTaskRecordConfirmation",X="createTaskRecordReceipt",Y="createTaskRecord",Z="sendTaskInputResult",J="pollTaskStatusResult",ee="getTaskResultResult",te="deploySecretContractResult",ne="returnFeesForTaskReceipt",re="returnFeesForTask",ae="pollTaskETHResult",se="sendTaskInput",ie="deploySecretContract",oe="getTaskResult",de="getTaskStatus",pe="SUCCESS",le="FAILED",ce="UNVERIFIED",ye="INPROGRESS",ue=0,me=1,fe=2,_e=3,be=4,ge=5;function Te(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Se=function(){function e(t,n,r,a,s){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.enigmaContract=n,this.tokenContract=r,this.txDefaults=a,this.enigma=s}var t,n,r;return t=e,(n=[{key:"findBySigningAddress",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorkerFromSigningAddress(e).call());case 2:return t=n.sent,n.abrupt("return",{account:t[0],stakingAddress:t[1][0],status:parseInt(t[1][2]),report:t[1][3],balance:parseInt(t[1][4]),logs:t[1][5]});case 4:case"end":return n.stop()}}),null,this)}},{key:"getWorkerStatus",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorker(e).call());case 2:return t=n.sent,n.abrupt("return",parseInt(t.status));case 4:case"end":return n.stop()}}),null,this)}},{key:"isDeployed",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=parseInt,t.next=3,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 3:return t.t1=t.sent.status,t.t2=(0,t.t0)(t.t1),t.abrupt("return",1===t.t2);case 6:case"end":return t.stop()}}),null,this)}},{key:"countSecretContracts",value:function(){return regeneratorRuntime.async((function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,regeneratorRuntime.awrap(this.enigmaContract.methods.countSecretContracts().call());case 3:return e.t1=e.sent,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}}),null,this)}},{key:"getSecretContractAddresses",value:function(e,t){return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContractAddresses(e,t).call());case 2:return n.abrupt("return",n.sent);case 3:case"end":return n.stop()}}),null,this)}},{key:"getAllSecretContractAddresses",value:function(){return regeneratorRuntime.async((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getAllSecretContractAddresses().call());case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),null,this)}},{key:"getCodeHash",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return t.abrupt("return",t.sent.codeHash);case 3:case"end":return t.stop()}}),null,this)}},{key:"countStateDeltas",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return t.abrupt("return",t.sent.stateDeltaHashes.length);case 3:case"end":return t.stop()}}),null,this)}},{key:"getStateDeltaHash",value:function(e,t){return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return n.t0=t,n.abrupt("return",n.sent.stateDeltaHashes[n.t0]);case 4:case"end":return n.stop()}}),null,this)}},{key:"getStateDeltaHashes",value:function(e,t,n){return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return r.t0=t,r.t1=n,r.abrupt("return",r.sent.stateDeltaHashes.slice(r.t0,r.t1));case 5:case"end":return r.stop()}}),null,this)}},{key:"isValidDeltaHash",value:function(e,t){return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getSecretContract(e).call());case 2:return n.t0=t,n.abrupt("return",n.sent.stateDeltaHashes.includes(n.t0));case 4:case"end":return n.stop()}}),null,this)}},{key:"login",value:function(e){var t=this,n=new $.a;return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,regeneratorRuntime.awrap(t.enigmaContract.methods.login().send({from:e}).on("transactionHash",(function(e){n.emit(P,e)})).on("confirmation",(function(e,t){n.emit(N,e,t)})).on("receipt",(function(e){n.emit(R,e)})));case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(v,r.t0.message);case 8:case"end":return r.stop()}}),null,null,[[0,5]]),n}},{key:"setOperatingAddress",value:function(e,t){var n=this,r=new $.a;return regeneratorRuntime.async((function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,regeneratorRuntime.awrap(n.enigmaContract.methods.setOperatingAddress(t).send({from:e}).on("transactionHash",(function(e){r.emit(q,e)})).on("confirmation",(function(e,t){r.emit(M,e,t)})).on("receipt",(function(e){r.emit(U,e)})));case 3:a.next=8;break;case 5:a.prev=5,a.t0=a.catch(0),r.emit(v,a.t0.message);case 8:case"end":return a.stop()}}),null,null,[[0,5]]),r}},{key:"logout",value:function(e){var t=this,n=new $.a;return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,regeneratorRuntime.awrap(t.enigmaContract.methods.logout().send({from:e}).on("transactionHash",(function(e){n.emit(w,e)})).on("confirmation",(function(e,t){n.emit(A,e,t)})).on("receipt",(function(e){n.emit(W,e)})));case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(v,r.t0.message);case 8:case"end":return r.stop()}}),null,null,[[0,5]]),n}},{key:"deposit",value:function(e,t){var n,r=this,a=new $.a;return regeneratorRuntime.async((function(s){for(;;)switch(s.prev=s.next){case 0:return s.next=2,regeneratorRuntime.awrap(r.tokenContract.methods.balanceOf(e).call());case 2:if(!(s.sent<t)){s.next=7;break}return a.emit("error",{name:"NotEnoughTokens",message:"Not enough tokens in wallet"}),s.abrupt("return");case 7:return s.next=9,regeneratorRuntime.awrap(r.tokenContract.methods.approve(r.enigmaContract.options.address,t).send({from:e}));case 9:return s.prev=9,s.next=12,regeneratorRuntime.awrap(r.enigmaContract.methods.deposit(e,t).send({from:e}).on("transactionHash",(function(e){a.emit(h,e)})).on("confirmation",(function(e,t){a.emit(E,e,t)})));case 12:n=s.sent,a.emit(C,n),s.next=19;break;case 16:s.prev=16,s.t0=s.catch(9),a.emit(v,s.t0.message);case 19:case"end":return s.stop()}}),null,null,[[9,16]]),a}},{key:"withdraw",value:function(e,t){var n=this,r=new $.a;return regeneratorRuntime.async((function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,regeneratorRuntime.awrap(n.enigmaContract.methods.withdraw(t).send({from:e}).on("transactionHash",(function(e){r.emit(V,e)})).on("confirmation",(function(e,t){r.emit(x,e,t)})).on("receipt",(function(e){r.emit(L,e)})));case 3:a.next=8;break;case 5:a.prev=5,a.t0=a.catch(0),r.emit(v,a.t0.message);case 8:case"end":return a.stop()}}),null,null,[[0,5]]),r}},{key:"getBalance",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=parseInt,t.next=3,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorker(e).call());case 3:return t.t1=t.sent.balance,t.abrupt("return",(0,t.t0)(t.t1));case 5:case"end":return t.stop()}}),null,this)}},{key:"getWorkerSignerAddr",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorker(e).call());case 2:return t.abrupt("return",t.sent.signer);case 3:case"end":return t.stop()}}),null,this)}},{key:"getOperatingAddressFromStakingAddress",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getOperatingAddressFromStakingAddress(e).call());case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),null,this)}}])&&Te(t.prototype,n),r&&Te(t,r),e}();var De=function e(t,n,r,a,s,i,o,d,p,l,c,y,u,m,f,_){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.inputsHash=S.hash([n,r,_?f:t,o]),this.scAddr=t,this.encryptedFn=n,this.encryptedAbiEncodedArgs=r,this.gasLimit=a,this.gasPx=s,this.msgId=i,this.userPubKey=o,this.firstBlockNumber=d,this.workerAddress=p,this.workerEncryptionKey=l,this.sender=c,this.userTaskSig=y,this.nonce=u,this.preCode=m,this.preCodeHash=f,this.isContractDeploymentTask=_,this.transactionHash="",this.taskId="",this.receipt="",this.ethStatus=0,this.proof="",this.creationBlockNumber=-1,this.encryptedAbiEncodedOutputs="",this.delta="",this.usedGas="",this.ethereumPayload="",this.ethereumAddress="",this.workerTaskSig="",this.engStatus="null",this.decryptedOutput=""},Ie=n(10),ke=n.n(Ie),$e=n(11),ve=n.n($e),he=n(12),Ee=n.n(he),Ce=n(13),Ve=n(6),xe=n.n(Ve);function Le(e){return(Le="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Pe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Ne=function(){function e(t,n,r,a){var s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.txDefaults=s,this.config={},this.config.retry={},this.config.retry.retries=i.retry&&null!=i.retry.retries?i.retry.retries:5,this.config.retry.factor=i.retry&&null!=i.retry.factor?i.retry.factor:2,this.config.retry.minTimeout=i.retry&&null!=i.retry.minTimeout?i.retry.minTimeout:2e3,this.config.retry.maxTimeout=i.retry&&null!=i.retry.maxTimeout?i.retry.maxTimeout:"Infinity",this.config.retry.randomize=!i.retry||(null==i.retry.randomize||i.retry.randomize);this.client=ke()((function(e,t){ve.a.post(a,JSON.parse(e),{headers:{"Content-Type":"application/json",credentials:"include"}}).then((function(e){if(v in e.data)t(e.data.error,null);else{var n=JSON.stringify(e.data.result);t(null,n)}})).catch((function(e){t({code:-32e3,message:e.message},null)}))}),{}),this.workerParamsCache={},this.selectedWorkerGroupCache={},this.taskKeyLocalStorage={},this.createContracts(n,r)}var t,n,r;return t=e,r=[{key:"serializeTask",value:function(e){return e.isContractDeploymentTask?{preCode:e.preCode,encryptedArgs:S.remove0x(e.encryptedAbiEncodedArgs),encryptedFn:S.remove0x(e.encryptedFn),userDHKey:S.remove0x(e.userPubKey),contractAddress:S.remove0x(e.scAddr),workerAddress:e.workerAddress}:{taskId:S.remove0x(e.taskId),workerAddress:e.workerAddress,encryptedFn:S.remove0x(e.encryptedFn),encryptedArgs:S.remove0x(e.encryptedAbiEncodedArgs),contractAddress:S.remove0x(e.scAddr),userDHKey:S.remove0x(e.userPubKey)}}},{key:"version",value:function(){return"0.0.1"}}],(n=[{key:"admin",value:function(){this.admin=new Se(this.web3,this.enigmaContract,this.tokenContract,this.txDefaults,this)}},{key:"createContracts",value:function(e,t){this.enigmaContract=new this.web3.eth.Contract(D.abi,e,this.txDefaults),this.tokenContract=new this.web3.eth.Contract(I.abi,t,this.txDefaults)}},{key:"createTask",value:function(e,t,n,r,a,s,i){var o,d,p,l,c,y,u,m,f,_,b,g,T,D,I,k,h,E,C,V,x,L,P,N,R,w,A,W,q=this,M=new $.a;return regeneratorRuntime.async((function($){for(;;)switch($.prev=$.next){case 0:return $.t0=parseInt,$.next=3,regeneratorRuntime.awrap(q.enigmaContract.methods.getUserTaskDeployments(a).call());case 3:if($.t1=$.sent,o=(0,$.t0)($.t1),d=i?S.generateScAddr(a,o):s,!i){$.next=17;break}if(!Buffer.isBuffer(s)){$.next=14;break}return p=s,$.next=11,regeneratorRuntime.awrap(S.gzip(p));case 11:l=$.sent,$.next=15;break;case 14:throw Error("PreCode expected to be a Buffer, instead got "+Le(s));case 15:$.next=19;break;case 17:p="",l="";case 19:for(c=i?q.web3.utils.soliditySha3({t:"bytes",value:p.toString("hex")}):"",y=void 0===t||0===t.length?[[],[]]:t[0].map((function(e,n){return t.map((function(e){return e[n]}))})),u=S.remove0x(q.web3.eth.abi.encodeParameters(y[1],y[0])),m=[],f=0;f<u.length;f+=2)m.push(parseInt(u.substr(f,2),16));return $.next=26,regeneratorRuntime.awrap(q.web3.eth.getBlockNumber());case 26:return _=$.sent,$.next=29,regeneratorRuntime.awrap(q.getWorkerParams(_));case 29:return b=$.sent,g=b.firstBlockNumber,$.next=33,regeneratorRuntime.awrap(q.selectWorkerGroup(d,b,1)[0]);case 33:return T=(T=$.sent).toLowerCase().slice(-40),D=q.obtainTaskKeyPair(a,o),I=D.publicKey,k=D.privateKey,$.prev=36,$.next=39,regeneratorRuntime.awrap(new Promise((function(e,t){q.client.request("getWorkerEncryptionKey",{workerAddress:T,userPubKey:I},(function(n,r){n?t(n):e(r)}))})));case 39:if(h=$.sent,E=h.result,C=h.id,V=E.workerEncryptionKey,x=E.workerSig,L="0x0000000000000013456e69676d612055736572204d6573736167650000000000000040"+V,P=(P=xe.a.recover("0x"+x,q.web3.utils.soliditySha3({t:"bytes",value:L}))).toLowerCase().slice(-40),T===P){$.next=50;break}console.error("Worker address",T,"!= recovered address",P),M.emit(v,{name:"InvalidWorker",message:"Invalid worker encryption key + signature combo ".concat(T," != ").concat(P)}),$.next=58;break;case 50:return N=S.getDerivedKey(V,k),R=S.encryptMessage(N,e),w=S.encryptMessage(N,Buffer.from(m)),A=q.web3.utils.soliditySha3({t:"bytes",v:R},{t:"bytes",v:w}),$.next=56,regeneratorRuntime.awrap(q.web3.eth.sign(A,a));case 56:W=$.sent,M.emit(z,new De(d,R,w,n,r,C,I,g,T,V,a,W,o,l.toString("base64"),c,i));case 58:$.next=63;break;case 60:$.prev=60,$.t2=$.catch(36),M.emit(v,$.t2);case 63:case"end":return $.stop()}}),null,null,[[36,60]]),M}},{key:"createTaskRecord",value:function(e){var t,n=this,r=new $.a;return regeneratorRuntime.async((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,regeneratorRuntime.awrap(n.tokenContract.methods.balanceOf(e.sender).call());case 2:if(!(a.sent<e.gasLimit*e.gasPx)){a.next=6;break}return r.emit(v,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),a.abrupt("return");case 6:return a.next=8,regeneratorRuntime.awrap(n.tokenContract.methods.approve(n.enigmaContract.options.address,e.gasLimit*e.gasPx).send({from:e.sender}));case 8:if(a.prev=8,!e.isContractDeploymentTask){a.next=15;break}return a.next=12,regeneratorRuntime.awrap(n.enigmaContract.methods.createDeploymentTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber,e.nonce).send({from:e.sender}).on("transactionHash",(function(t){e.transactionHash=t,r.emit(Q,t)})).on("confirmation",(function(e,t){r.emit(j,e,t)})));case 12:a.t0=a.sent,a.next=18;break;case 15:return a.next=17,regeneratorRuntime.awrap(n.enigmaContract.methods.createTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber).send({from:e.sender}).on("transactionHash",(function(t){e.transactionHash=t,r.emit(Q,t)})).on("confirmation",(function(e,t){r.emit(j,e,t)})));case 17:a.t0=a.sent;case 18:t=a.t0,e.taskId=t.events.TaskRecordCreated.returnValues.taskId,e.receipt=t,e.ethStatus=1,e.creationBlockNumber=t.blockNumber,r.emit(X,t),r.emit(Y,e),a.next=30;break;case 27:a.prev=27,a.t1=a.catch(8),r.emit(v,a.t1.message);case 30:case"end":return a.stop()}}),null,null,[[8,27]]),r}},{key:"getTaskRecordStatus",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getTaskRecord(e.taskId).call());case 2:return t=n.sent,e.ethStatus=parseInt(t.status),e.proof=t.proof,n.abrupt("return",e);case 6:case"end":return n.stop()}}),null,this)}},{key:"getTaskRecordFromTaskId",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getTaskRecord(e).call());case 2:return t=n.sent,n.abrupt("return",{sender:t.sender,inputsHash:t.inputsHash,outputHash:t.outputHash,gasLimit:parseInt(t.gasLimit),gasPx:parseInt(t.gasPx),blockNumber:parseInt(t.blockNumber),status:parseInt(t.status),proof:t.proof});case 4:case"end":return n.stop()}}),null,this)}},{key:"getTaskOutputHash",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getTaskRecord(e.taskId).call());case 2:return t.abrupt("return",t.sent.outputHash);case 3:case"end":return t.stop()}}),null,this)}},{key:"getReport",value:function(e){return regeneratorRuntime.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(this.enigmaContract.methods.getReport(e).call());case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),null,this)}},{key:"getWorkerParams",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:if(!(0===Object.keys(this.workerParamsCache).length||e-this.workerParamsCache.firstBlockNumber>=this.epochSize)){n.next=8;break}return n.next=3,regeneratorRuntime.awrap(this.enigmaContract.methods.getEpochSize().call());case 3:return this.epochSize=n.sent,n.next=6,regeneratorRuntime.awrap(this.enigmaContract.methods.getWorkerParams(e).call());case 6:t=n.sent,this.workerParamsCache={firstBlockNumber:parseInt(t[0]),seed:s.a.BigInt(t[1]),workers:t[2],stakes:t[3].map((function(e){return s.a.BigInt(e)}))};case 8:return n.abrupt("return",this.workerParamsCache);case 9:case"end":return n.stop()}}),null,this)}},{key:"selectWorkerGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5,r=t.stakes.reduce((function(e,t){return s.a.add(e,t)}),s.a.BigInt(0)),a=0,i=[];do{for(var d=Ce.rawEncode(["uint256","bytes32","uint256"],[t.seed.toString(10),e,a]),p=o.a.keccak256(d),l=s.a.remainder(s.a.BigInt(p),r),c=t.workers[t.workers.length-1],y=0;y<t.workers.length;y++)if((l=s.a.subtract(l,t.stakes[y]))<=0){c=t.workers[y];break}i.includes(c)||i.push(c),a++}while(i.length<n);return i}},{key:"sendTaskInput",value:function(t){var n,r,a=this,s=new $.a;return regeneratorRuntime.async((function(i){for(;;)switch(i.prev=i.next){case 0:return n=se,r=Z,t.isContractDeploymentTask&&(n=ie,r=te),i.prev=3,i.next=6,regeneratorRuntime.awrap(new Promise((function(r,s){a.client.request(n,e.serializeTask(t),(function(e,t){e?s(e):r(t)}))})));case 6:s.emit(r,t),i.next=12;break;case 9:i.prev=9,i.t0=i.catch(3),s.emit(v,i.t0);case 12:case"end":return i.stop()}}),null,null,[[3,9]]),s}},{key:"getTaskResult",value:function(e){var t=this,n=new $.a,r=Ee.a.operation(this.config.retry);return r.attempt((function(a){var s;return regeneratorRuntime.async((function(i){for(;;)switch(i.prev=i.next){case 0:return i.prev=0,i.next=3,regeneratorRuntime.awrap(new Promise((function(n,r){t.client.request(oe,{taskId:S.remove0x(e.taskId)},(function(e,t){e?r(e):n(t)}))})));case 3:if(!(s=i.sent).result){i.next=20;break}i.t0=s.result.status,i.next=i.t0===pe?8:i.t0===le?12:i.t0===ce?15:i.t0===ye?15:17;break;case 8:e.delta=s.result.delta,e.ethereumPayload=s.result.ethereumPayload,e.ethereumAddress=s.result.ethereumAddress,e.preCodeHash=s.result.preCodeHash;case 12:e.encryptedAbiEncodedOutputs=s.result.output,e.usedGas=s.result.usedGas,e.workerTaskSig=s.result.signature;case 15:return e.engStatus=s.result.status,i.abrupt("break",18);case 17:throw new Error("Invalid task result status").message;case 18:i.next=26;break;case 20:if(!r.retry(!0)){i.next=25;break}return console.log("Warning: Got an empty TaskResult on attempt "+a+" of "+(t.config.retry.retries+1)+". Retrying..."),i.abrupt("return");case 25:e.engStatus=null;case 26:n.emit(ee,e),i.next=32;break;case 29:i.prev=29,i.t1=i.catch(0),n.emit(v,i.t1);case 32:case"end":return i.stop()}}),null,null,[[0,29]])})),n}},{key:"returnFeesForTask",value:function(e){var t,n,r=this,a=new $.a;return regeneratorRuntime.async((function(s){for(;;)switch(s.prev=s.next){case 0:return s.next=2,regeneratorRuntime.awrap(r.enigmaContract.methods.getTaskTimeoutSize().call());case 2:return t=s.sent,s.next=5,regeneratorRuntime.awrap(r.web3.eth.getBlockNumber());case 5:if(!(s.sent-e.creationBlockNumber<=t)){s.next=9;break}return a.emit(v,{name:"InvalidTaskReturn",message:"Not enough time has elapsed to return task funds"}),s.abrupt("return");case 9:return s.prev=9,s.next=12,regeneratorRuntime.awrap(r.enigmaContract.methods.returnFeesForTask(e.taskId).send({from:e.sender}));case 12:n=s.sent,e.ethStatus=ge,a.emit(ne,n),a.emit(re,e),s.next=21;break;case 18:s.prev=18,s.t0=s.catch(9),a.emit(v,s.t0.message);case 21:case"end":return s.stop()}}),null,null,[[9,18]]),a}},{key:"decryptTaskResult",value:function(e){var t,n,r;return regeneratorRuntime.async((function(a){for(;;)switch(a.prev=a.next){case 0:return console.log("task.encryptedAbiEncodedOutputs is "+e.encryptedAbiEncodedOutputs),e.encryptedAbiEncodedOutputs?(t=this.obtainTaskKeyPair(e.sender,e.nonce),n=t.privateKey,r=S.getDerivedKey(e.workerEncryptionKey,n),e.decryptedOutput=S.decryptMessage(r,e.encryptedAbiEncodedOutputs)):(console.log("Warning: task.encryptedAbiEncodedOutputs is empty, there is nothing to decrypt."),e.decryptedOutput=null),a.abrupt("return",e);case 3:case"end":return a.stop()}}),null,this)}},{key:"verifyTaskOutput",value:function(e){var t,n;return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,regeneratorRuntime.awrap(this.getTaskOutputHash(e));case 2:return t=r.sent,n=this.web3.utils.soliditySha3({t:"bytes",value:e.encryptedAbiEncodedOutputs.toString("hex")}),r.abrupt("return",t===n);case 5:case"end":return r.stop()}}),null,this)}},{key:"verifyTaskStatus",value:function(e){var t;return regeneratorRuntime.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,regeneratorRuntime.awrap(this.getTaskRecordStatus(e));case 2:t=n.sent.ethStatus,n.t0=e.engStatus,n.next=n.t0===pe?6:n.t0===le?8:n.t0===ce?10:n.t0===ye?10:12;break;case 6:return n.abrupt("return",t===fe);case 8:return n.abrupt("return",t===_e);case 10:return n.abrupt("return",t===me);case 12:return n.abrupt("return",t===ue);case 13:case"end":return n.stop()}}),null,this)}},{key:"pollTaskStatusGen",value:regeneratorRuntime.mark((function e(t,n){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,new Promise((function(e,a){r.client.request(de,{taskId:S.remove0x(t.taskId),workerAddress:t.workerAddress,withResult:n},(function(r,s){r?a(r):(t.engStatus=s.result.status,n&&(t.encryptedAbiEncodedOutputs=s.result.output),e(t))}))}));case 3:e.next=0;break;case 5:case"end":return e.stop()}}),e)}))},{key:"innerPollTaskStatus",value:function(e,t,n){var r=this;t.next().value.then((function(a){n.emit(J,a),"SUCCESS"!==a.engStatus&&"FAILED"!==a.engStatus&&r.innerPollTaskStatus(e,t,n)})).catch((function(e){n.emit(v,e)}))}},{key:"pollTaskStatus",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=new $.a,r=this.pollTaskStatusGen(e,t);return this.innerPollTaskStatus(e,r,n),n}},{key:"pollTaskETH",value:function(e){var t,n=arguments;return regeneratorRuntime.async((function(r){for(;;)switch(r.prev=r.next){case 0:t=n.length>1&&void 0!==n[1]?n[1]:1e3;case 1:if(e.ethStatus!==me){r.next=9;break}return r.next=4,regeneratorRuntime.awrap(this.getTaskRecordStatus(e));case 4:return e=r.sent,r.next=7,regeneratorRuntime.awrap(S.sleep(t));case 7:r.next=1;break;case 9:return r.abrupt("return",e);case 10:case"end":return r.stop()}}),null,this)}},{key:"obtainTaskKeyPair",value:function(e,t){var n,r=this.getTaskId(e,t),a="undefined"!=typeof window,s=a?atob(window.localStorage.getItem("seed")):this.taskKeyLocalStorage.seed;if(null==s)throw Error("Need to set seed through setTaskKeyPair first");var i=s+r,o=p.a.random.createInstance();o.seedFileSync=function(e){return p.a.util.fillString(i,e)},n=p.a.util.bytesToHex(o.getBytes(32));var d=xe.a.publicKeyByPrivateKey(n);return a?window.localStorage.setItem("encodedPrivateKey"+r,btoa(n)):this.taskKeyLocalStorage["encodedPrivateKey"+r]=Buffer.from(n,"binary").toString("base64"),{publicKey:d,privateKey:n}}},{key:"setTaskKeyPair",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t="undefined"!=typeof window;if(""===e)for(var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",r=0;r<9;r++)e+=n.charAt(Math.floor(Math.random()*n.length));return t?window.localStorage.setItem("seed",btoa(e)):this.taskKeyLocalStorage.seed=e,e}},{key:"deploySecretContract",value:function(e,t,n,r,a,s){var i,o=this,d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,p=new $.a;return regeneratorRuntime.async((function(l){for(;;)switch(l.prev=l.next){case 0:i=0;case 1:return l.prev=2,l.next=5,regeneratorRuntime.awrap(function(){var i;return regeneratorRuntime.async((function(d){for(;;)switch(d.prev=d.next){case 0:return d.next=2,regeneratorRuntime.awrap(new Promise((function(i,d){o.createTask(e,t,n,r,a,s,!0).on(z,(function(e){return i(e)})).on(v,(function(e){return d(e)}))})));case 2:return i=d.sent,p.emit(z,i),d.next=6,regeneratorRuntime.awrap(new Promise((function(e,t){o.createTaskRecord(i).on(Y,(function(t){return e(t)})).on(v,(function(e){return t(e)}))})));case 6:return i=d.sent,p.emit(Y,i),d.next=10,regeneratorRuntime.awrap(new Promise((function(e,t){o.sendTaskInput(i).on(te,(function(t){return e(t)})).on(v,(function(e){return t(e)}))})));case 10:return p.emit(te,i),d.abrupt("return","break");case 12:case"end":return d.stop()}}))}());case 5:if("break"!==l.sent){l.next=8;break}return l.abrupt("break",17);case 8:l.next=15;break;case 10:if(l.prev=10,l.t0=l.catch(2),!(i++>=d||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==l.t0)){l.next=15;break}return p.emit(v,l.t0),l.abrupt("break",17);case 15:l.next=1;break;case 17:case"end":return l.stop()}}),null,null,[[2,10]]),p}},{key:"computeTask",value:function(e,t,n,r,a,s){var i,o=this,d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,p=new $.a;return regeneratorRuntime.async((function(l){for(;;)switch(l.prev=l.next){case 0:i=0;case 1:return l.prev=2,l.next=5,regeneratorRuntime.awrap(function(){var i;return regeneratorRuntime.async((function(d){for(;;)switch(d.prev=d.next){case 0:return d.next=2,regeneratorRuntime.awrap(new Promise((function(i,d){o.createTask(e,t,n,r,a,s,!1).on(z,(function(e){return i(e)})).on(v,(function(e){return d(e)}))})));case 2:return i=d.sent,p.emit(z,i),d.next=6,regeneratorRuntime.awrap(new Promise((function(e,t){o.createTaskRecord(i).on(Y,(function(t){return e(t)})).on(v,(function(e){return t(e)}))})));case 6:return i=d.sent,p.emit(Y,i),d.next=10,regeneratorRuntime.awrap(new Promise((function(e,t){o.sendTaskInput(i).on(Z,(function(t){return e(t)})).on(v,(function(e){return t(e)}))})));case 10:return p.emit(Z,i),d.abrupt("return","break");case 12:case"end":return d.stop()}}))}());case 5:if("break"!==l.sent){l.next=8;break}return l.abrupt("break",17);case 8:l.next=15;break;case 10:if(l.prev=10,l.t0=l.catch(2),!(i++>=d||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==l.t0)){l.next=15;break}return p.emit(v,l.t0),l.abrupt("break",17);case 15:l.next=1;break;case 17:case"end":return l.stop()}}),null,null,[[2,10]]),p}},{key:"getTaskId",value:function(e,t){return this.web3.utils.soliditySha3({t:"address",v:e},{t:"uint256",v:t})}}])&&Pe(t.prototype,n),r&&Pe(t,r),e}();n.d(t,"Enigma",(function(){return Ne})),n.d(t,"utils",(function(){return S})),n.d(t,"eeConstants",(function(){return r})),n.d(t,"Task",(function(){return De}))}])}));
//# sourceMappingURL=enigma-js.node.min.js.map