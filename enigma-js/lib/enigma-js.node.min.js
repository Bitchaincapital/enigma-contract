!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("enigma-js",[],t):"object"==typeof exports?exports["enigma-js"]=t():e["enigma-js"]=t()}(global,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=14)}([function(e,t){e.exports=require("node-forge")},function(e,t){e.exports=require("eventemitter3")},function(e,t){e.exports=require("jsbi")},function(e,t){e.exports=require("web3-utils")},function(e,t){e.exports=require("buffer")},function(e,t){e.exports=require("zlib")},function(e,t){e.exports=require("eth-crypto")},function(e,t){e.exports=require("elliptic")},function(e){e.exports=JSON.parse('{"contractName":"Enigma","abi":[{"constant":true,"inputs":[],"name":"getAllSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getWorkersParams","outputs":[{"components":[{"name":"firstBlockNumber","type":"uint256"},{"name":"workers","type":"address[]"},{"name":"stakes","type":"uint256[]"},{"name":"seed","type":"uint256"}],"name":"","type":"tuple[5]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_scAddr","type":"bytes32"}],"name":"getSecretContract","outputs":[{"components":[{"name":"owner","type":"address"},{"name":"preCodeHash","type":"bytes32"},{"name":"codeHash","type":"bytes32"},{"name":"stateDeltaHashes","type":"bytes32[]"},{"name":"status","type":"uint8"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"getTaskRecord","outputs":[{"components":[{"name":"sender","type":"address"},{"name":"inputsHash","type":"bytes32"},{"name":"outputHash","type":"bytes32"},{"name":"gasLimit","type":"uint64"},{"name":"gasPx","type":"uint64"},{"name":"blockNumber","type":"uint256"},{"name":"status","type":"uint8"},{"name":"proof","type":"bytes"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_signer","type":"address"}],"name":"getWorkerFromSigningAddress","outputs":[{"name":"","type":"address"},{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getUpdatedEnigmaContractAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_worker","type":"address"}],"name":"getWorker","outputs":[{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSigningAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEpochSize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_sender","type":"address"}],"name":"getUserTaskDeployments","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_tokenAddress","type":"address"},{"name":"_principal","type":"address"},{"name":"_epochSize","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint64[]"},{"indexed":false,"name":"gasPxs","type":"uint64[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event"},{"constant":false,"inputs":[{"name":"_signer","type":"address"},{"name":"_report","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_custodian","type":"address"},{"name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"login","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"logout","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContractFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_preCodeHash","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_initStateDeltaHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"countSecretContracts","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_start","type":"uint256"},{"name":"_stop","type":"uint256"}],"name":"getSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint64"},{"name":"_gasPx","type":"uint64"},{"name":"_firstBlockNumber","type":"uint256"},{"name":"_nonce","type":"uint256"}],"name":"createDeploymentTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint64"},{"name":"_gasPx","type":"uint64"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHashes","type":"bytes32[]"},{"name":"_gasLimits","type":"uint64[]"},{"name":"_gasPxs","type":"uint64[]"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecords","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_stateDeltaHash","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitReceipt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitTaskFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"returnFeesForTask","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_seed","type":"uint256"},{"name":"_sig","type":"bytes"}],"name":"setWorkersParams","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getActiveWorkers","outputs":[{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getFirstBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getWorkerParams","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_scAddr","type":"bytes32"}],"name":"getWorkerGroup","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_custodian","type":"address"}],"name":"getReport","outputs":[{"name":"","type":"address"},{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_data","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"verifyReport","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_updatedEnigmaContractAddress","type":"address"}],"name":"upgradeEnigmaContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_workerAddress","type":"address"},{"name":"_signer","type":"address"},{"name":"_sig","type":"bytes"}],"name":"transferWorkerStakePostUpgrade","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getActiveWorkers\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getWorkerGroup\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"logout\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitReceipt\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"deposit\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_initStateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_seed\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setWorkersParams\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getAllSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getWorkersParams\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple[5]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"countSecretContracts\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getSecretContract\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"register\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_workerAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"transferWorkerStakePostUpgrade\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_start\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_stop\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getTaskRecord\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"proof\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"isOwner\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getWorkerParams\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorkerFromSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContractFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"login\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_data\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"verifyReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"_gasLimits\\",\\"type\\":\\"uint64[]\\"},{\\"name\\":\\"_gasPxs\\",\\"type\\":\\"uint64[]\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecords\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getUpdatedEnigmaContractAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_worker\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorker\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createDeploymentTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitTaskFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getFirstBlockNumber\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getEpochSize\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"returnFeesForTask\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_updatedEnigmaContractAddress\\",\\"type\\":\\"address\\"}],\\"name\\":\\"upgradeEnigmaContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_sender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getUserTaskDeployments\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"name\\":\\"_tokenAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_principal\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_epochSize\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"custodian\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"Registered\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"hash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"workerAddr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"ValidatedSig\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"inclusionBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"indexed\\":false,\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WorkersParameterized\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskIds\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimits\\",\\"type\\":\\"uint64[]\\"},{\\"indexed\\":false,\\"name\\":\\"gasPxs\\",\\"type\\":\\"uint64[]\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordsCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"deltaHashIndex\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskIds\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"outputHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptsVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailedETH\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"TaskFeeReturned\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"DepositSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WithdrawSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"initStateDeltaHash\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"SecretContractDeployed\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_optionalEthereumContractAddress\\":\\"Output state hash\\",\\"_optionalEthereumData\\":\\"Output state hash\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_stateDeltaHash\\":\\"Input state delta hash\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"countSecretContracts()\\":{\\"return\\":\\"Number of deployed secret contracts\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\",\\"_nonce\\":\\"Locally-computed nonce value for this deployment\\"}},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"createTaskRecords(bytes32[],uint64[],uint64[],uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimits\\":\\"ENG gas limit\\",\\"_gasPxs\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHashes\\":\\"Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_initStateDeltaHash\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumContractAddress\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumData\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_preCodeHash\\":\\"Predeployed bytecode hash\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deposit(address,uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\",\\"_custodian\\":\\"The worker\'s ETH address\\"}},\\"getActiveWorkers(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"}},\\"getAllSecretContractAddresses()\\":{\\"return\\":\\"Array of secret contract addresses\\"},\\"getEpochSize()\\":{\\"return\\":\\"Epoch size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Block number\\"},\\"getReport(address)\\":{\\"params\\":{\\"_custodian\\":\\"The worker\'s custodian address\\"}},\\"getSecretContract(bytes32)\\":{\\"params\\":{\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"SecretContract struct\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"params\\":{\\"_start\\":\\"Start of range\\",\\"_stop\\":\\"End of range\\"},\\"return\\":\\"Subset of deployed secret contract addresses\\"},\\"getSigningAddress()\\":{\\"return\\":\\"Signing address\\"},\\"getTaskRecord(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique identifier for a given task\\"},\\"return\\":\\"TaskRecord struct\\"},\\"getUpdatedEnigmaContractAddress()\\":{\\"return\\":\\"Updated Enigma contract address\\"},\\"getUserTaskDeployments(address)\\":{\\"params\\":{\\"_sender\\":\\"Task sender\'s ethereum address\\"},\\"return\\":\\"Current number for task deployments for user\\"},\\"getWorker(address)\\":{\\"params\\":{\\"_worker\\":\\"Worker\'s ethereum address\\"},\\"return\\":\\"Worker struct\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"params\\":{\\"_signer\\":\\"Worker\'s signing address\\"},\\"return\\":\\"Ethereum addressWorker struct\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number the task record was mined\\",\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"Selected workers\' addresses\\"},\\"getWorkerParams(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes\\"},\\"getWorkersParams()\\":{\\"return\\":\\"Array of WorkersParams structs\\"},\\"isOwner()\\":{\\"return\\":\\"true if `msg.sender` is the owner of the contract.\\"},\\"owner()\\":{\\"return\\":\\"the address of the owner.\\"},\\"register(address,bytes,bytes)\\":{\\"params\\":{\\"_report\\":\\"The RLP encoded report returned by the IAS\\",\\"_signature\\":\\"Signature\\",\\"_signer\\":\\"The signer address, derived from the enclave public key\\"}},\\"renounceOwnership()\\":{\\"details\\":\\"Allows the current owner to relinquish control of the contract.\\"},\\"returnFeesForTask(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique taskId\\"}},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number principal node is attempting to set worker params\\",\\"_seed\\":\\"The random integer generated by the enclave\\",\\"_sig\\":\\"Principal node\'s signature\\"}},\\"transferOwnership(address)\\":{\\"details\\":\\"Allows the current owner to transfer control of the contract to a newOwner.\\",\\"params\\":{\\"newOwner\\":\\"The address to transfer ownership to.\\"}},\\"transferWorkerStakePostUpgrade(address,address,bytes)\\":{\\"params\\":{\\"_sig\\":\\"Signature\\",\\"_signer\\":\\"Newly-registered worker address\\",\\"_workerAddress\\":\\"Newly-registered worker address\\"}},\\"upgradeEnigmaContract(address)\\":{\\"params\\":{\\"_updatedEnigmaContractAddress\\":\\"Updated newly-deployed Enigma contract address\\"}},\\"verifyReport(bytes,bytes)\\":{\\"params\\":{\\"_data\\":\\"The report itself\\",\\"_signature\\":\\"The signature of the report\\"}},\\"withdraw(uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\"}}}},\\"userdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee.\\"},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure.\\"},\\"countSecretContracts()\\":{\\"notice\\":\\"Check if secret contract has been deployed\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"notice\\":\\"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid.\\"},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"notice\\":\\"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"createTaskRecords(bytes32[],uint64[],uint64[],uint256)\\":{\\"notice\\":\\"Create task records for tasks (either contract deployment or regular tasks). This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deposit(address,uint256)\\":{\\"notice\\":\\"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\"},\\"getActiveWorkers(uint256)\\":{\\"notice\\":\\"Get active workers before a certain block number\\"},\\"getAllSecretContractAddresses()\\":{\\"notice\\":\\"Get all secret contract addresses\\"},\\"getEpochSize()\\":{\\"notice\\":\\"Get the epoch block size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"notice\\":\\"Get the first block number of an epoch that a given block number belongs to\\"},\\"getReport(address)\\":{\\"notice\\":\\"The RLP encoded report returned by the IAS server\\"},\\"getSecretContract(bytes32)\\":{\\"notice\\":\\"Get a SecretContract struct given a particular secret contract address\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"notice\\":\\"Get deployed secret contract addresses within a range\\"},\\"getSigningAddress()\\":{\\"notice\\":\\"Get signing address of calling worker\\"},\\"getTaskRecord(bytes32)\\":{\\"notice\\":\\"Get a TaskRecord struct given a particular task\'s ID\\"},\\"getUpdatedEnigmaContractAddress()\\":{\\"notice\\":\\"Get updated Enigma contract address\\"},\\"getUserTaskDeployments(address)\\":{\\"notice\\":\\"Get the current number/index (used as unique nonce value) of task deployments for a given user user\\"},\\"getWorker(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s ethereum address\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s signing address\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"notice\\":\\"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address.\\"},\\"getWorkerParams(uint256)\\":{\\"notice\\":\\"Get worker params for an epoch given a particular block number\\"},\\"getWorkersParams()\\":{\\"notice\\":\\"Get epoch-based history of worker params information\\"},\\"login()\\":{\\"notice\\":\\"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process.\\"},\\"logout()\\":{\\"notice\\":\\"Logout worker. Worker must be logged in to do so.\\"},\\"register(address,bytes,bytes)\\":{\\"notice\\":\\"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks.\\"},\\"renounceOwnership()\\":{\\"notice\\":\\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\\"},\\"returnFeesForTask(bytes32)\\":{\\"notice\\":\\"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\"},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"notice\\":\\"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node\\"},\\"transferWorkerStakePostUpgrade(address,address,bytes)\\":{\\"notice\\":\\"Upgrade Enigma Contract\\"},\\"upgradeEnigmaContract(address)\\":{\\"notice\\":\\"Upgrade Enigma Contract\\"},\\"verifyReport(bytes,bytes)\\":{\\"notice\\":\\"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\"},\\"withdraw(uint256)\\":{\\"notice\\":\\"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\"}}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":\\"Enigma\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":{\\"keccak256\\":\\"0x1e2eca2f27dcee88f92d348e37d77577ba31f929edd02c37c957976dc7e73745\\",\\"urls\\":[\\"bzzr://725b784ad6b705e3f7f6882466245525d0bcbdb9b2ba52d92995b750fc0beb08\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol\\":{\\"keccak256\\":\\"0x5bd9c996532891c2234021e7a827a8b997352074a0b3dec322adc52d864f14b3\\",\\"urls\\":[\\"bzzr://0b7c3170039b962271adb4d1289e3bf2287853e48720c6dd50213ed8c4f56c96\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol\\":{\\"keccak256\\":\\"0x85d20b0a45fa97f06a09bb0f5fa2699839ad651a6aaa66ec4e2b807173bda6c5\\",\\"urls\\":[\\"bzzr://2a4d99d8211f5ad682106c277cc6ec82f93341714d79ccc966c1211e3d7e184c\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol\\":{\\"keccak256\\":\\"0xb60ae3a36e5955a9a2ea5d6025984206bc503d546861ccc4b14629c22caafca7\\",\\"urls\\":[\\"bzzr://6d6c88518a482f959ab708aad0b3ae73cdd01eab9a8c418a87c297dadf482485\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol\\":{\\"keccak256\\":\\"0xaba87ac6cd834c8a356a454c9eeca6373a159c772e70c2d444facb024907f087\\",\\"urls\\":[\\"bzzr://e8c6d14b96f76d84c547c841b61e0df7a87fdb3f099621cafbe70f45c79cbf05\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol\\":{\\"keccak256\\":\\"0x8c9c76d05650f05e0074a74d4122ff7bac75b998ae7af273fd028f81ffc7aced\\",\\"urls\\":[\\"bzzr://af3e7b00776d98b98ca147381f0733ceccbee58cc883f759f80eb6adcbc75463\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol\\":{\\"keccak256\\":\\"0xd2620fd3dd9691f88740477d06dd32b4ecb7f090f7c76fd1e99a3117f5072e4f\\",\\"urls\\":[\\"bzzr://1c4cc43db4ca854e6c8d25c09b139000545e942bc05722b95858d6761b425ee7\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol\\":{\\"keccak256\\":\\"0x4e00d7b1cd34e5f91b51a6d6cff4af44221cda6b193ce91e76f71a838fa889f1\\",\\"urls\\":[\\"bzzr://215fe7b649e59d98e2bb8c94efe38336b3364ea428f69fb2871b5896f65432be\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol\\":{\\"keccak256\\":\\"0xbe955d4941ce0a2f3909a0e7f9671d766cfb5c6a4966aeacb1b2e01aaca88c96\\",\\"urls\\":[\\"bzzr://b7b52740a4dd5a8d527c583c771a223eb7534a479b4f7f4867ad0fa15b2d7834\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol\\":{\\"keccak256\\":\\"0xd026eeadac6bc37aea8c00477b89b4a6325f93117133d8d44fef34d67fc14e1e\\",\\"urls\\":[\\"bzzr://83f0920325d1d0b7f402a2a31d0731c4a5ba562a50adc5160000d3e232b36a4a\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol\\":{\\"keccak256\\":\\"0xe918c3a32ffaa3be9a2ca32e0c156fa13f45df3a180b4afb966ed74beac68aee\\",\\"urls\\":[\\"bzzr://4cf87b0dd13996acd984d0964bef0de24f9f5b8a7f9c181ac6fcb2cdf04b2e38\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol\\":{\\"keccak256\\":\\"0xe21e3ce303a61dc1fe7e5ee8c77c94b0a96eaa9015f8abe6eb1fbce2d903b8ee\\",\\"urls\\":[\\"bzzr://ff90e3a82eb6fb10497c419d71bf240f43c544d0071b74b251204200dc08bba1\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Base64.sol\\":{\\"keccak256\\":\\"0x6b6fca483b4fd19ab6f282b45b24f02277ad2b0e2e65269c1f1f9b0672bf8ef3\\",\\"urls\\":[\\"bzzr://227cecb0afb5c808a338d0c757cedf9c085786a8f74fece5d9b14fac332f1301\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Bytes.sol\\":{\\"keccak256\\":\\"0xa9504cd72371444aaec522d40e02f930e9017fc59059c80b4d0b60afe6d3f151\\",\\"urls\\":[\\"bzzr://09e35d59d1fd6c478388e098f8f586d0eb3004af0e8402e5dc0c003b3d555e56\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Memory.sol\\":{\\"keccak256\\":\\"0xbb69933fc38ebf561a60fc4496c8d48f4aef12b5cef49bb9dd2957d8c6478ce0\\",\\"urls\\":[\\"bzzr://a4b1117bcf978aebba7df92a10df9e866cf854033bc2f4d8e426e360ba78d1fa\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol\\":{\\"keccak256\\":\\"0x171f88dc2ce91d601aa659bf84a240a2e7565d26d1a3ef1a0f98ec8181573498\\",\\"urls\\":[\\"bzzr://3830487ad541d0a7df9b761dee0a835cf065e369c6f1b2ac5f8409413f1777b6\\"]},\\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\":{\\"keccak256\\":\\"0xb48974d92a87053dc1d6c5389f3d1b2ad522dec23afcb508eaa935d98dfdc0b6\\",\\"urls\\":[\\"bzzr://e665a84309432c27a26e622665dd97ff29d4d6ad7ad655d6e2c50226a5e99b56\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]},\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\":{\\"keccak256\\":\\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\\",\\"urls\\":[\\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\\"]}},\\"version\\":1}","bytecode":"0x60806040523480156200001157600080fd5b5060405160608062004f7e8339810180604052620000339190810190620000f3565b602380546001600160a01b0319163317908190556040516001600160a01b0391909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600080546001600160a01b039485166001600160a01b031991821617909155600191825560c86002556003805493909416928116929092179092556004805490911630179055602181905560225562000181565b8051620000e0816200015c565b92915050565b8051620000e08162000176565b6000806000606084860312156200010957600080fd5b6000620001178686620000d3565b93505060206200012a86828701620000d3565b92505060406200013d86828701620000e6565b9150509250925092565b60006001600160a01b038216620000e0565b90565b620001678162000147565b81146200017357600080fd5b50565b620001678162000159565b614ded80620001916000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80639836ca3111610130578063c011b1c3116100b8578063df4da4611161007c578063df4da461146104f6578063ee6dcef9146104fe578063f2fde38b14610511578063f74e6e1d14610524578063f9a9b7ae1461053757610232565b8063c011b1c314610495578063c652b919146104b5578063ca2af5f2146104c8578063cbbc061d146104db578063d855a579146104ee57610232565b8063b34e97e8116100ff578063b34e97e81461044c578063b5c1499214610454578063b695ca7a14610467578063b9758c951461047a578063ba2526881461048257610232565b80639836ca31146103d4578063a0c39982146103f7578063a153ec6014610418578063a3bdae3e1461042b57610232565b806370266a47116101be5780638056b559116101825780638056b559146103645780638da5cb5b146103775780638e055b8b1461038c5780638ed057371461039f5780638f32d59b146103bf57610232565b806370266a47146102ff578063715018a61461031457806375bbf75b1461031c5780637624281e14610331578063786cd4d71461035157610232565b8063365a2cb311610205578063365a2cb31461029e57806347e7ef24146102b157806348cc3761146102c457806350946a9f146102d7578063550baa2f146102ea57610232565b806316f9a2a4146102375780631d40ff0b146102615780631f3c99c3146102815780632e1a7d4d1461028b575b600080fd5b61024a610245366004613824565b61054a565b6040516102589291906146c4565b60405180910390f35b61027461026f366004613b5d565b6105e4565b60405161025891906146b3565b610289610683565b005b610289610299366004613824565b6108dc565b6102896102ac366004613842565b610c23565b6102896102bf36600461368a565b610efc565b6102896102d2366004613842565b61114a565b6102896102e5366004613bff565b6113e5565b6102f261166c565b60405161025891906146e9565b6103076116c7565b60405161025891906146fa565b6102896117e1565b61032461183c565b6040516102589190614bc2565b61034461033f366004613824565b6118ce565b604051610258919061480e565b61028961035f366004613641565b611995565b61032461037236600461358c565b611a86565b61037f611b51565b6040516102589190614665565b6102f261039a366004613b5d565b611b60565b6103b26103ad366004613824565b611bf6565b6040516102589190614b80565b6103c7611d36565b604051610258919061470b565b6103e76103e2366004613824565b611d47565b6040516102589493929190614bd0565b61040a610405366004613566565b611dea565b604051610258929190614693565b6102896104263660046139ac565b61202d565b61043e610439366004613566565b6122f9565b604051610258929190614673565b61028961257b565b610324610462366004613ac4565b6127e7565b61028961047536600461377f565b612876565b61037f6128e6565b610289610490366004613a18565b6128f5565b6104a86104a3366004613566565b612965565b6040516102589190614b91565b6102896104c3366004613a5c565b612b16565b6102896104d6366004613920565b612b88565b6103246104e9366004613824565b612e57565b61037f612ee6565b610324612f02565b61028961050c366004613824565b612f08565b61028961051f366004613566565b612f89565b610289610532366004613566565b612fa6565b610324610545366004613566565b613054565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b815260040161058792919061494c565b60006040518083038186803b15801561059f57600080fd5b505af41580156105b3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105db91908101906136ee565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a906106269060009087908790600401614b3d565b60006040518083038186803b15801561063e57600080fd5b505af4158015610652573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067a91908101906136ba565b90505b92915050565b3361068c6130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156106d457fe5b60028111156106df57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561077c5780601f106107515761010080835404028352916020019161077c565b820191906000526020600020905b81548152906001019060200180831161075f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561082757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156107f557fe5b600381111561080057fe5b815260200160018201548152602001600282015481525050815260200190600101906107b4565b505050915250909150600190508160200151600281111561084457fe5b1461086d57604051600160e51b62461bcd028152600401610864906147be565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f49906108a89060009060040161481f565b60006040518083038186803b1580156108c057600080fd5b505af41580156108d4573d6000803e3d6000fd5b505050505050565b336108e56130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561092d57fe5b600281111561093857fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109d55780601f106109aa576101008083540402835291602001916109d5565b820191906000526020600020905b8154815290600101906020018083116109b857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610a8057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610a4e57fe5b6003811115610a5957fe5b81526020016001820154815260200160028201548152505081526020019060010190610a0d565b5050509152509091506002905081602001516002811115610a9d57fe5b14610abd57604051600160e51b62461bcd028152600401610864906147fe565b610ac561310d565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610b019085904390600401614ba2565b60606040518083038186803b158015610b1957600080fd5b505af4158015610b2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b519190810190613b21565b9050600281516003811115610b6257fe5b14610b8257604051600160e51b62461bcd0281526004016108649061475e565b8060200151610b9043612e57565b11610bb057604051600160e51b62461bcd028152600401610864906147ae565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df46490610bed90600090889060040161494c565b60006040518083038186803b158015610c0557600080fd5b505af4158015610c19573d6000803e3d6000fd5b5050505050505050565b6004546001600160a01b03163014610c5057604051600160e51b62461bcd0281526004016108649061477e565b33610c596130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610ca157fe5b6002811115610cac57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d495780601f10610d1e57610100808354040283529160200191610d49565b820191906000526020600020905b815481529060010190602001808311610d2c57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610df457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610dc257fe5b6003811115610dcd57fe5b81526020016001820154815260200160028201548152505081526020019060010190610d81565b5050509152509091506001905081602001516002811115610e1157fe5b14610e3157604051600160e51b62461bcd028152600401610864906147be565b8960016000828152601f602052604090206004015460ff166001811115610e5457fe5b14610e7457604051600160e51b62461bcd0281526004016108649061476e565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610ebf906000908f908f908f908f908f908f908f908f90600401614967565b60006040518083038186803b158015610ed757600080fd5b505af4158015610eeb573d6000803e3d6000fd5b505050505050505050505050505050565b6004546001600160a01b03163014610f2957604051600160e51b62461bcd0281526004016108649061477e565b81610f326130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610f7a57fe5b6002811115610f8557fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110225780601f10610ff757610100808354040283529160200191611022565b820191906000526020600020905b81548152906001019060200180831161100557829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110cd57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561109b57fe5b60038111156110a657fe5b8152602001600182015481526020016002820154815250508152602001906001019061105a565b50505091525090915060009050816020015160028111156110ea57fe5b141561110b57604051600160e51b62461bcd028152600401610864906147ce565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610bed90600090889088906004016148cd565b6004546001600160a01b0316301461117757604051600160e51b62461bcd0281526004016108649061477e565b336111806130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156111c857fe5b60028111156111d357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112705780601f1061124557610100808354040283529160200191611270565b820191906000526020600020905b81548152906001019060200180831161125357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561131b57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156112e957fe5b60038111156112f457fe5b815260200160018201548152602001600282015481525050815260200190600101906112a8565b505050915250909150600190508160200151600281111561133857fe5b1461135857604051600160e51b62461bcd028152600401610864906147be565b89600080828152601f602052604090206004015460ff16600181111561137a57fe5b1461139a57604051600160e51b62461bcd028152600401610864906147de565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610ebf906000908f908f908f908f908f908f908f908f90600401614967565b6004546001600160a01b0316301461141257604051600160e51b62461bcd0281526004016108649061477e565b3361141b6130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561146357fe5b600281111561146e57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561150b5780601f106114e05761010080835404028352916020019161150b565b820191906000526020600020905b8154815290600101906020018083116114ee57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156115b657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561158457fe5b600381111561158f57fe5b81526020016001820154815260200160028201548152505081526020019060010190611543565b50505091525090915060009050816020015160028111156115d357fe5b14156115f457604051600160e51b62461bcd028152600401610864906147ce565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b189061163590600090899089908990600401614b58565b60006040518083038186803b15801561164d57600080fd5b505af4158015611661573d6000803e3d6000fd5b505050505050505050565b60606000601b018054806020026020016040519081016040528092919081815260200182805480156116bd57602002820191906000526020600020905b8154815260200190600101908083116116a9575b5050505050905090565b6116cf61312f565b6040805160a08101909152600660056000835b828210156117d857838260040201604051806080016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561175e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611740575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156117b657602002820191906000526020600020905b8154815260200190600101908083116117a2575b50505050508152602001600382015481525050815260200190600101906116e2565b50505050905090565b6117e9611d36565b6117f257600080fd5b6023546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3602380546001600160a01b0319169055565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a33869061187990849060040161481f565b60206040518083038186803b15801561189157600080fd5b505af41580156118a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118c99190810190613b3f565b905090565b6118d661315d565b6000828152601f6020908152604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561195e57602002820191906000526020600020905b81548152602001906001019080831161194a575b5050509183525050600482015460209091019060ff16600181111561197f57fe5b600181111561198a57fe5b90525090505b919050565b6004546001600160a01b031630146119c257604051600160e51b62461bcd0281526004016108649061477e565b8260005b601a54811015611a4457816001600160a01b03166000601c01600080601a0184815481106119f057fe5b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902054161415611a3c57604051600160e51b62461bcd0281526004016108649061474e565b6001016119c6565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e2090610bed9060009088908890889060040161488c565b6004546000906001600160a01b03163314611ab657604051600160e51b62461bcd028152600401610864906147ee565b604051600160e01b632b1dfbd902815273__UpgradeImpl___________________________90632b1dfbd990611af790600090889088908890600401614848565b60206040518083038186803b158015611b0f57600080fd5b505af4158015611b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b479190810190613b3f565b90505b9392505050565b6023546001600160a01b031690565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a2600990611ba29060009087908790600401614b3d565b60006040518083038186803b158015611bba57600080fd5b505af4158015611bce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067a919081019061374b565b611bfe613188565b6000828152601d602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff90911690811115611c8d57fe5b6005811115611c9857fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611d265780601f10611cfb57610100808354040283529160200191611d26565b820191906000526020600020905b815481529060010190602001808311611d0957829003601f168201915b5050505050815250509050919050565b6023546001600160a01b0316331490565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611d8792919061494c565b60006040518083038186803b158015611d9f57600080fd5b505af4158015611db3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ddb9190810190613b7c565b93509350935093509193509193565b6000611df46130dd565b6000611dfe6130dd565b60005b601a5481101561202257601a8054601c9160009184908110611e1f57fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611e7557fe5b6002811115611e8057fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f1d5780601f10611ef257610100808354040283529160200191611f1d565b820191906000526020600020905b815481529060010190602001808311611f0057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611fc857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611f9657fe5b6003811115611fa157fe5b81526020016001820154815260200160028201548152505081526020019060010190611f55565b50505050815250509150856001600160a01b031682600001516001600160a01b0316141561201a57601a805482908110611ffe57fe5b6000918252602090912001546001600160a01b03169250612022565b600101611e01565b509092509050915091565b6004546001600160a01b0316301461205a57604051600160e51b62461bcd0281526004016108649061477e565b336120636130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156120ab57fe5b60028111156120b657fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121535780601f1061212857610100808354040283529160200191612153565b820191906000526020600020905b81548152906001019060200180831161213657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156121fe57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156121cc57fe5b60038111156121d757fe5b8152602001600182015481526020016002820154815250508152602001906001019061218b565b505050915250909150600190508160200151600281111561221b57fe5b1461223b57604051600160e51b62461bcd028152600401610864906147be565b85600080828152601f602052604090206004015460ff16600181111561225d57fe5b1461227d57604051600160e51b62461bcd028152600401610864906147de565b604051600160e21b6301c7aeeb02815273__TaskImpl______________________________9063071ebbac906122c0906000908b908b908b908b90600401614a5a565b60006040518083038186803b1580156122d857600080fd5b505af41580156122ec573d6000803e3d6000fd5b5050505050505050505050565b60006060826123066130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561234e57fe5b600281111561235957fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123f65780601f106123cb576101008083540402835291602001916123f6565b820191906000526020600020905b8154815290600101906020018083116123d957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156124a157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561246f57fe5b600381111561247a57fe5b8152602001600182015481526020016002820154815250508152602001906001019061242e565b50505091525090915060009050816020015160028111156124be57fe5b14156124df57604051600160e51b62461bcd028152600401610864906147ce565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f0319061251c90600090899060040161482d565b60006040518083038186803b15801561253457600080fd5b505af4158015612548573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261257091908101906135f0565b935093505050915091565b336125846130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156125cc57fe5b60028111156125d757fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126745780601f1061264957610100808354040283529160200191612674565b820191906000526020600020905b81548152906001019060200180831161265757829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561271f57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156126ed57fe5b60038111156126f857fe5b815260200160018201548152602001600282015481525050815260200190600101906126ac565b5050505081525050905061273243612e57565b61275157604051600160e51b62461bcd0281526004016108649061479e565b60028160200151600281111561276357fe5b1461278357604051600160e51b62461bcd028152600401610864906147fe565b602154606082015110156127ac57604051600160e51b62461bcd0281526004016108649061473e565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e2906108a89060009060040161481f565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________906396462368906128269086908690600401614719565b60206040518083038186803b15801561283e57600080fd5b505af4158015612852573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061067a9190810190613b3f565b6004546001600160a01b031630146128a357604051600160e51b62461bcd0281526004016108649061477e565b604051600160e01b63512e7a1702815273__TaskImpl______________________________9063512e7a1790610bed9060009088908890889088906004016148f5565b6004546001600160a01b031690565b6004546001600160a01b0316301461292257604051600160e51b62461bcd0281526004016108649061477e565b604051600160e01b638c91056d02815273__TaskImpl______________________________90638c91056d90610bed906000908890889088908890600401614aac565b61296d6130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156129b557fe5b60028111156129c057fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a5d5780601f10612a3257610100808354040283529160200191612a5d565b820191906000526020600020905b815481529060010190602001808311612a4057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612b0857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612ad657fe5b6003811115612ae157fe5b81526020016001820154815260200160028201548152505081526020019060010190612a95565b505050915250909392505050565b6004546001600160a01b03163014612b4357604051600160e51b62461bcd0281526004016108649061477e565b604051600160e01b6366e13f4302815273__TaskImpl______________________________906366e13f43906116359060009089908990899089908990600401614aee565b6004546001600160a01b03163014612bb557604051600160e51b62461bcd0281526004016108649061477e565b33612bbe6130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115612c0657fe5b6002811115612c1157fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612cae5780601f10612c8357610100808354040283529160200191612cae565b820191906000526020600020905b815481529060010190602001808311612c9157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612d5957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612d2757fe5b6003811115612d3257fe5b81526020016001820154815260200160028201548152505081526020019060010190612ce6565b5050509152509091506001905081602001516002811115612d7657fe5b14612d9657604051600160e51b62461bcd028152600401610864906147be565b8660016000828152601f602052604090206004015460ff166001811115612db957fe5b14612dd957604051600160e51b62461bcd0281526004016108649061476e565b604051600160e61b6289b28102815273__TaskImpl______________________________9063226ca04090612e1d906000908c908c908c908c908c906004016149fa565b60006040518083038186803b158015612e3557600080fd5b505af4158015612e49573d6000803e3d6000fd5b505050505050505050505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612e96908490869060040161494c565b60206040518083038186803b158015612eae57600080fd5b505af4158015612ec2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061067d9190810190613b3f565b336000908152601c60205260409020546001600160a01b031690565b60015490565b8060016000828152601d6020526040902060059081015460ff1690811115612f2c57fe5b14612f4c57604051600160e51b62461bcd0281526004016108649061478e565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b906108a890600090869060040161494c565b612f91611d36565b612f9a57600080fd5b612fa38161306e565b50565b612fae611d36565b612fb757600080fd5b6004546001600160a01b03163014612fe457604051600160e51b62461bcd0281526004016108649061477e565b604051600160e01b6368fac41b02815273__UpgradeImpl___________________________906368fac41b9061302190600090859060040161482d565b60006040518083038186803b15801561303957600080fd5b505af415801561304d573d6000803e3d6000fd5b5050505050565b6001600160a01b0316600090815260208052604090205490565b6001600160a01b03811661308157600080fd5b6023546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3602380546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b6131476131cd565b81526020019060019003908161313f5790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b803561067d81614d80565b805161067d81614d80565b600082601f83011261321c57600080fd5b815161322f61322a82614c37565b614c11565b9150818183526020840193506020810190508385602084028201111561325457600080fd5b60005b83811015613280578161326a8882613200565b8452506020928301929190910190600101613257565b5050505092915050565b600082601f83011261329b57600080fd5b81356132a961322a82614c37565b915081818352602084019350602081019050838560208402820111156132ce57600080fd5b60005b8381101561328057816132e4888261344a565b84525060209283019291909101906001016132d1565b600082601f83011261330b57600080fd5b815161331961322a82614c37565b9150818183526020840193506020810190508385602084028201111561333e57600080fd5b60005b8381101561328057816133548882613455565b8452506020928301929190910190600101613341565b600082601f83011261337b57600080fd5b815161338961322a82614c37565b915081818352602084019350602081019050838560208402820111156133ae57600080fd5b60005b8381101561328057816133c48882613455565b84525060209283019291909101906001016133b1565b600082601f8301126133eb57600080fd5b81356133f961322a82614c37565b9150818183526020840193506020810190508385602084028201111561341e57600080fd5b60005b838110156132805781613434888261355b565b8452506020928301929190910190600101613421565b803561067d81614d94565b805161067d81614d94565b600082601f83011261347157600080fd5b813561347f61322a82614c57565b9150808252602083016020830185838301111561349b57600080fd5b6134a6838284614d16565b50505092915050565b600082601f8301126134c057600080fd5b81516134ce61322a82614c57565b915080825260208301602083018583830111156134ea57600080fd5b6134a6838284614d22565b805161067d81614d9d565b60006060828403121561351257600080fd5b61351c6060614c11565b9050600061352a84846134f5565b825250602061353b84848301613455565b602083015250604061354f84828501613455565b60408301525092915050565b803561067d81614daa565b60006020828403121561357857600080fd5b600061358484846131f5565b949350505050565b6000806000606084860312156135a157600080fd5b60006135ad86866131f5565b93505060206135be868287016131f5565b92505060408401356001600160401b038111156135da57600080fd5b6135e686828701613460565b9150509250925092565b6000806040838503121561360357600080fd5b600061360f8585613200565b92505060208301516001600160401b0381111561362b57600080fd5b613637858286016134af565b9150509250929050565b60008060006060848603121561365657600080fd5b600061366286866131f5565b93505060208401356001600160401b0381111561367e57600080fd5b6135be86828701613460565b6000806040838503121561369d57600080fd5b60006136a985856131f5565b92505060206136378582860161344a565b6000602082840312156136cc57600080fd5b81516001600160401b038111156136e257600080fd5b6135848482850161320b565b6000806040838503121561370157600080fd5b82516001600160401b0381111561371757600080fd5b6137238582860161320b565b92505060208301516001600160401b0381111561373f57600080fd5b6136378582860161336a565b60006020828403121561375d57600080fd5b81516001600160401b0381111561377357600080fd5b613584848285016132fa565b6000806000806080858703121561379557600080fd5b84356001600160401b038111156137ab57600080fd5b6137b78782880161328a565b94505060208501356001600160401b038111156137d357600080fd5b6137df878288016133da565b93505060408501356001600160401b038111156137fb57600080fd5b613807878288016133da565b92505060606138188782880161344a565b91505092959194509250565b60006020828403121561383657600080fd5b6000613584848461344a565b600080600080600080600080610100898b03121561385f57600080fd5b600061386b8b8b61344a565b985050602061387c8b828c0161344a565b975050604061388d8b828c0161344a565b965050606061389e8b828c0161344a565b95505060808901356001600160401b038111156138ba57600080fd5b6138c68b828c01613460565b94505060a06138d78b828c016131f5565b93505060c06138e88b828c0161355b565b92505060e08901356001600160401b0381111561390457600080fd5b6139108b828c01613460565b9150509295985092959890939650565b600080600080600060a0868803121561393857600080fd5b6000613944888861344a565b95505060206139558882890161344a565b94505060406139668882890161344a565b93505060606139778882890161355b565b92505060808601356001600160401b0381111561399357600080fd5b61399f88828901613460565b9150509295509295909350565b600080600080608085870312156139c257600080fd5b60006139ce878761344a565b94505060206139df8782880161344a565b93505060406139f08782880161355b565b92505060608501356001600160401b03811115613a0c57600080fd5b61381887828801613460565b60008060008060808587031215613a2e57600080fd5b6000613a3a878761344a565b9450506020613a4b8782880161355b565b93505060406138078782880161355b565b600080600080600060a08688031215613a7457600080fd5b6000613a80888861344a565b9550506020613a918882890161355b565b9450506040613aa28882890161355b565b9350506060613ab38882890161344a565b925050608061399f8882890161344a565b60008060408385031215613ad757600080fd5b82356001600160401b03811115613aed57600080fd5b613af985828601613460565b92505060208301356001600160401b03811115613b1557600080fd5b61363785828601613460565b600060608284031215613b3357600080fd5b60006135848484613500565b600060208284031215613b5157600080fd5b60006135848484613455565b60008060408385031215613b7057600080fd5b60006136a9858561344a565b60008060008060808587031215613b9257600080fd5b6000613b9e8787613455565b9450506020613baf87828801613455565b93505060408501516001600160401b03811115613bcb57600080fd5b613bd78782880161320b565b92505060608501516001600160401b03811115613bf357600080fd5b6138188782880161336a565b600080600060608486031215613c1457600080fd5b6000613c20868661344a565b93505060206135be8682870161344a565b6000613c3d8383613c7d565b505060200190565b6000613c3d838361401a565b6000613c5d83836144ec565b505060600190565b600061067a8383614601565b6000613c3d838361465c565b613c8681614c9a565b82525050565b6000613c9782614c87565b613ca18185614c91565b9350613cac83614c7e565b8060005b83811015613cda578151613cc48882613c31565b9750613ccf83614c7e565b925050600101613cb0565b509495945050505050565b6000613cf082614c87565b613cfa8185614c91565b9350613d0583614c7e565b8060005b83811015613cda578151613d1d8882613c31565b9750613d2883614c7e565b925050600101613d09565b6000613d3e82614c87565b613d488185614c91565b9350613d5383614c7e565b8060005b83811015613cda578151613d6b8882613c45565b9750613d7683614c7e565b925050600101613d57565b6000613d8c82614c87565b613d968185614c91565b9350613da183614c7e565b8060005b83811015613cda578151613db98882613c45565b9750613dc483614c7e565b925050600101613da5565b6000613dda82614c87565b613de48185614c91565b9350613def83614c7e565b8060005b83811015613cda578151613e078882613c45565b9750613e1283614c7e565b925050600101613df3565b6000613e2882614c87565b613e328185614c91565b9350613e3d83614c7e565b8060005b83811015613cda578151613e558882613c51565b9750613e6083614c7e565b925050600101613e41565b6000613e7682614c87565b613e808185614c91565b9350613e8b83614c7e565b8060005b83811015613cda578151613ea38882613c51565b9750613eae83614c7e565b925050600101613e8f565b6000613ec482614c8b565b613ece8185611990565b935083602082028501613ee085614c84565b8060005b85811015613f1a5784840389528151613efd8582613c65565b9450613f0883614c7e565b60209a909a0199925050600101613ee4565b5091979650505050505050565b6000613f3282614c87565b613f3c8185614c91565b9350613f4783614c7e565b8060005b83811015613cda578151613f5f8882613c45565b9750613f6a83614c7e565b925050600101613f4b565b6000613f8082614c87565b613f8a8185614c91565b9350613f9583614c7e565b8060005b83811015613cda578151613fad8882613c45565b9750613fb883614c7e565b925050600101613f99565b6000613fce82614c87565b613fd88185614c91565b9350613fe383614c7e565b8060005b83811015613cda578151613ffb8882613c71565b975061400683614c7e565b925050600101613fe7565b613c8681614ca5565b613c8681614c84565b600061402e82614c87565b6140388185614c91565b9350614048818560208601614d22565b61405181614d4e565b9093019392505050565b613c8681614cea565b613c8681614cf5565b613c8681614d00565b613c8681614d0b565b600061408c602283614c91565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b60006140d3601883614c91565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b600061410c602783614c91565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000614158601c83614c91565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000614191601b83614c91565b7f4e6f74207570646174656420456e69676d6120636f6e74726163740000000000815260200192915050565b60006141ca601383614c91565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b6000614203602783614c91565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b600061424f602e83614c91565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b60006142ae601483614c91565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b60006142e7601383614c91565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b6000614320602083614c91565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000614359602083614c91565b7f4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374815260200192915050565b6000614392602783614c91565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a08401906143e58582613c7d565b5060208301516143f8602086018261401a565b50604083015161440b604086018261401a565b50606083015184820360608601526144238282613dcf565b9150506080830151614438608086018261405b565b509392505050565b9052565b80516000906101008401906144598582613c7d565b50602083015161446c602086018261401a565b50604083015161447f604086018261401a565b506060830151614492606086018261465c565b5060808301516144a5608086018261465c565b5060a08301516144b860a086018261401a565b5060c08301516144cb60c0860182614064565b5060e083015184820360e08601526144e38282614023565b95945050505050565b805160608301906144fd848261406d565b506020820151614510602085018261401a565b506040820151614523604085018261401a565b50505050565b805160009060a084019061453d8582613c7d565b5060208301516145506020860182614076565b50604083015184820360408601526145688282614023565b915050606083015161457d606086018261401a565b50608083015184820360808601526144e38282613e1d565b805160009060a08401906145a98582613c7d565b5060208301516145bc6020860182614076565b50604083015184820360408601526145d48282614023565b91505060608301516145e9606086018261401a565b50608083015184820360808601526144e38282613e6b565b80516000906080840190614615858261401a565b506020830151848203602086015261462d8282613ce5565b915050604083015184820360408601526146478282613f75565b9150506060830151614438606086018261401a565b613c8681614cde565b6020810161067d8284613c7d565b604081016146818285613c7d565b8181036020830152611b478184614023565b604081016146a18285613c7d565b8181036020830152611b478184614529565b6020808252810161067a8184613c8c565b604080825281016146d58185613c8c565b90508181036020830152611b478184613f27565b6020808252810161067a8184613d33565b6020808252810161067a8184613eb9565b6020810161067d8284614011565b6040808252810161472a8185614023565b90508181036020830152611b478184614023565b6020808252810161067d8161407f565b6020808252810161067d816140c6565b6020808252810161067d816140ff565b6020808252810161067d8161414b565b6020808252810161067d81614184565b6020808252810161067d816141bd565b6020808252810161067d816141f6565b6020808252810161067d81614242565b6020808252810161067d816142a1565b6020808252810161067d816142da565b6020808252810161067d81614313565b6020808252810161067d8161434c565b6020808252810161067d81614385565b6020808252810161067a81846143d1565b6020810161067d8284614440565b6040810161483b8285614440565b611b4a6020830184613c7d565b608081016148568287614440565b6148636020830186613c7d565b6148706040830185613c7d565b81810360608301526148828184614023565b9695505050505050565b6080810161489a8287614440565b6148a76020830186613c7d565b81810360408301526148b98185614023565b905081810360608301526148828184614023565b606081016148db8286614440565b6148e86020830185613c7d565b613584604083018461401a565b60a081016149038288614440565b81810360208301526149158187613d81565b905081810360408301526149298186613fc3565b9050818103606083015261493d8185613fc3565b9050614882608083018461401a565b6040810161495a8285614440565b611b4a602083018461401a565b6101208101614976828c614440565b614983602083018b61401a565b614990604083018a61401a565b61499d606083018961401a565b6149aa608083018861401a565b81810360a08301526149bc8187614023565b90506149cb60c0830186613c7d565b6149d860e083018561465c565b8181036101008301526149eb8184614023565b9b9a5050505050505050505050565b60c08101614a088289614440565b614a15602083018861401a565b614a22604083018761401a565b614a2f606083018661401a565b614a3c608083018561465c565b81810360a0830152614a4e8184614023565b98975050505050505050565b60a08101614a688288614440565b614a75602083018761401a565b614a82604083018661401a565b614a8f606083018561465c565b8181036080830152614aa18184614023565b979650505050505050565b60a08101614aba8288614440565b614ac7602083018761401a565b614ad4604083018661465c565b614ae1606083018561465c565b614882608083018461401a565b60c08101614afc8289614440565b614b09602083018861401a565b614b16604083018761465c565b614b23606083018661465c565b614b30608083018561401a565b614aa160a083018461401a565b60608101614b4b8286614440565b6148e8602083018561401a565b60808101614b668287614440565b614b73602083018661401a565b614870604083018561401a565b6020808252810161067a8184614444565b6020808252810161067a8184614529565b60408082528101614bb38185614595565b9050611b4a602083018461401a565b6020810161067d828461401a565b60808101614bde828761401a565b614beb602083018661401a565b8181036040830152614bfd8185613c8c565b905081810360608301526148828184613f27565b6040518181016001600160401b0381118282101715614c2f57600080fd5b604052919050565b60006001600160401b03821115614c4d57600080fd5b5060209081020190565b60006001600160401b03821115614c6d57600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b600061067d82614cd2565b151590565b8061199081614d58565b8061199081614d62565b8061199081614d6c565b8061199081614d76565b6001600160a01b031690565b6001600160401b031690565b600061067d82614caa565b600061067d82614cb4565b600061067d82614cbe565b600061067d82614cc8565b82818337506000910152565b60005b83811015614d3d578181015183820152602001614d25565b838111156145235750506000910152565b601f01601f191690565b60028110612fa357fe5b60068110612fa357fe5b60048110612fa357fe5b60038110612fa357fe5b614d8981614c9a565b8114612fa357600080fd5b614d8981614c84565b60048110612fa357600080fd5b614d8981614cde56fea265627a7a72305820bf412fdef5d34b487d62a3935413fee6816c0cb9e77664fc383122f59fe1be6a6c6578706572696d656e74616cf50037","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106102325760003560e01c80639836ca3111610130578063c011b1c3116100b8578063df4da4611161007c578063df4da461146104f6578063ee6dcef9146104fe578063f2fde38b14610511578063f74e6e1d14610524578063f9a9b7ae1461053757610232565b8063c011b1c314610495578063c652b919146104b5578063ca2af5f2146104c8578063cbbc061d146104db578063d855a579146104ee57610232565b8063b34e97e8116100ff578063b34e97e81461044c578063b5c1499214610454578063b695ca7a14610467578063b9758c951461047a578063ba2526881461048257610232565b80639836ca31146103d4578063a0c39982146103f7578063a153ec6014610418578063a3bdae3e1461042b57610232565b806370266a47116101be5780638056b559116101825780638056b559146103645780638da5cb5b146103775780638e055b8b1461038c5780638ed057371461039f5780638f32d59b146103bf57610232565b806370266a47146102ff578063715018a61461031457806375bbf75b1461031c5780637624281e14610331578063786cd4d71461035157610232565b8063365a2cb311610205578063365a2cb31461029e57806347e7ef24146102b157806348cc3761146102c457806350946a9f146102d7578063550baa2f146102ea57610232565b806316f9a2a4146102375780631d40ff0b146102615780631f3c99c3146102815780632e1a7d4d1461028b575b600080fd5b61024a610245366004613824565b61054a565b6040516102589291906146c4565b60405180910390f35b61027461026f366004613b5d565b6105e4565b60405161025891906146b3565b610289610683565b005b610289610299366004613824565b6108dc565b6102896102ac366004613842565b610c23565b6102896102bf36600461368a565b610efc565b6102896102d2366004613842565b61114a565b6102896102e5366004613bff565b6113e5565b6102f261166c565b60405161025891906146e9565b6103076116c7565b60405161025891906146fa565b6102896117e1565b61032461183c565b6040516102589190614bc2565b61034461033f366004613824565b6118ce565b604051610258919061480e565b61028961035f366004613641565b611995565b61032461037236600461358c565b611a86565b61037f611b51565b6040516102589190614665565b6102f261039a366004613b5d565b611b60565b6103b26103ad366004613824565b611bf6565b6040516102589190614b80565b6103c7611d36565b604051610258919061470b565b6103e76103e2366004613824565b611d47565b6040516102589493929190614bd0565b61040a610405366004613566565b611dea565b604051610258929190614693565b6102896104263660046139ac565b61202d565b61043e610439366004613566565b6122f9565b604051610258929190614673565b61028961257b565b610324610462366004613ac4565b6127e7565b61028961047536600461377f565b612876565b61037f6128e6565b610289610490366004613a18565b6128f5565b6104a86104a3366004613566565b612965565b6040516102589190614b91565b6102896104c3366004613a5c565b612b16565b6102896104d6366004613920565b612b88565b6103246104e9366004613824565b612e57565b61037f612ee6565b610324612f02565b61028961050c366004613824565b612f08565b61028961051f366004613566565b612f89565b610289610532366004613566565b612fa6565b610324610545366004613566565b613054565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b815260040161058792919061494c565b60006040518083038186803b15801561059f57600080fd5b505af41580156105b3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105db91908101906136ee565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a906106269060009087908790600401614b3d565b60006040518083038186803b15801561063e57600080fd5b505af4158015610652573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067a91908101906136ba565b90505b92915050565b3361068c6130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156106d457fe5b60028111156106df57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561077c5780601f106107515761010080835404028352916020019161077c565b820191906000526020600020905b81548152906001019060200180831161075f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561082757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156107f557fe5b600381111561080057fe5b815260200160018201548152602001600282015481525050815260200190600101906107b4565b505050915250909150600190508160200151600281111561084457fe5b1461086d57604051600160e51b62461bcd028152600401610864906147be565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f49906108a89060009060040161481f565b60006040518083038186803b1580156108c057600080fd5b505af41580156108d4573d6000803e3d6000fd5b505050505050565b336108e56130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561092d57fe5b600281111561093857fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109d55780601f106109aa576101008083540402835291602001916109d5565b820191906000526020600020905b8154815290600101906020018083116109b857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610a8057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610a4e57fe5b6003811115610a5957fe5b81526020016001820154815260200160028201548152505081526020019060010190610a0d565b5050509152509091506002905081602001516002811115610a9d57fe5b14610abd57604051600160e51b62461bcd028152600401610864906147fe565b610ac561310d565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610b019085904390600401614ba2565b60606040518083038186803b158015610b1957600080fd5b505af4158015610b2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b519190810190613b21565b9050600281516003811115610b6257fe5b14610b8257604051600160e51b62461bcd0281526004016108649061475e565b8060200151610b9043612e57565b11610bb057604051600160e51b62461bcd028152600401610864906147ae565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df46490610bed90600090889060040161494c565b60006040518083038186803b158015610c0557600080fd5b505af4158015610c19573d6000803e3d6000fd5b5050505050505050565b6004546001600160a01b03163014610c5057604051600160e51b62461bcd0281526004016108649061477e565b33610c596130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610ca157fe5b6002811115610cac57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d495780601f10610d1e57610100808354040283529160200191610d49565b820191906000526020600020905b815481529060010190602001808311610d2c57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610df457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610dc257fe5b6003811115610dcd57fe5b81526020016001820154815260200160028201548152505081526020019060010190610d81565b5050509152509091506001905081602001516002811115610e1157fe5b14610e3157604051600160e51b62461bcd028152600401610864906147be565b8960016000828152601f602052604090206004015460ff166001811115610e5457fe5b14610e7457604051600160e51b62461bcd0281526004016108649061476e565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610ebf906000908f908f908f908f908f908f908f908f90600401614967565b60006040518083038186803b158015610ed757600080fd5b505af4158015610eeb573d6000803e3d6000fd5b505050505050505050505050505050565b6004546001600160a01b03163014610f2957604051600160e51b62461bcd0281526004016108649061477e565b81610f326130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610f7a57fe5b6002811115610f8557fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110225780601f10610ff757610100808354040283529160200191611022565b820191906000526020600020905b81548152906001019060200180831161100557829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110cd57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561109b57fe5b60038111156110a657fe5b8152602001600182015481526020016002820154815250508152602001906001019061105a565b50505091525090915060009050816020015160028111156110ea57fe5b141561110b57604051600160e51b62461bcd028152600401610864906147ce565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610bed90600090889088906004016148cd565b6004546001600160a01b0316301461117757604051600160e51b62461bcd0281526004016108649061477e565b336111806130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156111c857fe5b60028111156111d357fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112705780601f1061124557610100808354040283529160200191611270565b820191906000526020600020905b81548152906001019060200180831161125357829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561131b57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156112e957fe5b60038111156112f457fe5b815260200160018201548152602001600282015481525050815260200190600101906112a8565b505050915250909150600190508160200151600281111561133857fe5b1461135857604051600160e51b62461bcd028152600401610864906147be565b89600080828152601f602052604090206004015460ff16600181111561137a57fe5b1461139a57604051600160e51b62461bcd028152600401610864906147de565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610ebf906000908f908f908f908f908f908f908f908f90600401614967565b6004546001600160a01b0316301461141257604051600160e51b62461bcd0281526004016108649061477e565b3361141b6130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561146357fe5b600281111561146e57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561150b5780601f106114e05761010080835404028352916020019161150b565b820191906000526020600020905b8154815290600101906020018083116114ee57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156115b657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561158457fe5b600381111561158f57fe5b81526020016001820154815260200160028201548152505081526020019060010190611543565b50505091525090915060009050816020015160028111156115d357fe5b14156115f457604051600160e51b62461bcd028152600401610864906147ce565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b189061163590600090899089908990600401614b58565b60006040518083038186803b15801561164d57600080fd5b505af4158015611661573d6000803e3d6000fd5b505050505050505050565b60606000601b018054806020026020016040519081016040528092919081815260200182805480156116bd57602002820191906000526020600020905b8154815260200190600101908083116116a9575b5050505050905090565b6116cf61312f565b6040805160a08101909152600660056000835b828210156117d857838260040201604051806080016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561175e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611740575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156117b657602002820191906000526020600020905b8154815260200190600101908083116117a2575b50505050508152602001600382015481525050815260200190600101906116e2565b50505050905090565b6117e9611d36565b6117f257600080fd5b6023546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3602380546001600160a01b0319169055565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a33869061187990849060040161481f565b60206040518083038186803b15801561189157600080fd5b505af41580156118a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118c99190810190613b3f565b905090565b6118d661315d565b6000828152601f6020908152604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561195e57602002820191906000526020600020905b81548152602001906001019080831161194a575b5050509183525050600482015460209091019060ff16600181111561197f57fe5b600181111561198a57fe5b90525090505b919050565b6004546001600160a01b031630146119c257604051600160e51b62461bcd0281526004016108649061477e565b8260005b601a54811015611a4457816001600160a01b03166000601c01600080601a0184815481106119f057fe5b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902054161415611a3c57604051600160e51b62461bcd0281526004016108649061474e565b6001016119c6565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e2090610bed9060009088908890889060040161488c565b6004546000906001600160a01b03163314611ab657604051600160e51b62461bcd028152600401610864906147ee565b604051600160e01b632b1dfbd902815273__UpgradeImpl___________________________90632b1dfbd990611af790600090889088908890600401614848565b60206040518083038186803b158015611b0f57600080fd5b505af4158015611b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b479190810190613b3f565b90505b9392505050565b6023546001600160a01b031690565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a2600990611ba29060009087908790600401614b3d565b60006040518083038186803b158015611bba57600080fd5b505af4158015611bce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067a919081019061374b565b611bfe613188565b6000828152601d602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff90911690811115611c8d57fe5b6005811115611c9857fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611d265780601f10611cfb57610100808354040283529160200191611d26565b820191906000526020600020905b815481529060010190602001808311611d0957829003601f168201915b5050505050815250509050919050565b6023546001600160a01b0316331490565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611d8792919061494c565b60006040518083038186803b158015611d9f57600080fd5b505af4158015611db3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ddb9190810190613b7c565b93509350935093509193509193565b6000611df46130dd565b6000611dfe6130dd565b60005b601a5481101561202257601a8054601c9160009184908110611e1f57fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611e7557fe5b6002811115611e8057fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f1d5780601f10611ef257610100808354040283529160200191611f1d565b820191906000526020600020905b815481529060010190602001808311611f0057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611fc857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611f9657fe5b6003811115611fa157fe5b81526020016001820154815260200160028201548152505081526020019060010190611f55565b50505050815250509150856001600160a01b031682600001516001600160a01b0316141561201a57601a805482908110611ffe57fe5b6000918252602090912001546001600160a01b03169250612022565b600101611e01565b509092509050915091565b6004546001600160a01b0316301461205a57604051600160e51b62461bcd0281526004016108649061477e565b336120636130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156120ab57fe5b60028111156120b657fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121535780601f1061212857610100808354040283529160200191612153565b820191906000526020600020905b81548152906001019060200180831161213657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156121fe57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156121cc57fe5b60038111156121d757fe5b8152602001600182015481526020016002820154815250508152602001906001019061218b565b505050915250909150600190508160200151600281111561221b57fe5b1461223b57604051600160e51b62461bcd028152600401610864906147be565b85600080828152601f602052604090206004015460ff16600181111561225d57fe5b1461227d57604051600160e51b62461bcd028152600401610864906147de565b604051600160e21b6301c7aeeb02815273__TaskImpl______________________________9063071ebbac906122c0906000908b908b908b908b90600401614a5a565b60006040518083038186803b1580156122d857600080fd5b505af41580156122ec573d6000803e3d6000fd5b5050505050505050505050565b60006060826123066130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561234e57fe5b600281111561235957fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123f65780601f106123cb576101008083540402835291602001916123f6565b820191906000526020600020905b8154815290600101906020018083116123d957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156124a157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561246f57fe5b600381111561247a57fe5b8152602001600182015481526020016002820154815250508152602001906001019061242e565b50505091525090915060009050816020015160028111156124be57fe5b14156124df57604051600160e51b62461bcd028152600401610864906147ce565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f0319061251c90600090899060040161482d565b60006040518083038186803b15801561253457600080fd5b505af4158015612548573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261257091908101906135f0565b935093505050915091565b336125846130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156125cc57fe5b60028111156125d757fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126745780601f1061264957610100808354040283529160200191612674565b820191906000526020600020905b81548152906001019060200180831161265757829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561271f57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156126ed57fe5b60038111156126f857fe5b815260200160018201548152602001600282015481525050815260200190600101906126ac565b5050505081525050905061273243612e57565b61275157604051600160e51b62461bcd0281526004016108649061479e565b60028160200151600281111561276357fe5b1461278357604051600160e51b62461bcd028152600401610864906147fe565b602154606082015110156127ac57604051600160e51b62461bcd0281526004016108649061473e565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e2906108a89060009060040161481f565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________906396462368906128269086908690600401614719565b60206040518083038186803b15801561283e57600080fd5b505af4158015612852573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061067a9190810190613b3f565b6004546001600160a01b031630146128a357604051600160e51b62461bcd0281526004016108649061477e565b604051600160e01b63512e7a1702815273__TaskImpl______________________________9063512e7a1790610bed9060009088908890889088906004016148f5565b6004546001600160a01b031690565b6004546001600160a01b0316301461292257604051600160e51b62461bcd0281526004016108649061477e565b604051600160e01b638c91056d02815273__TaskImpl______________________________90638c91056d90610bed906000908890889088908890600401614aac565b61296d6130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156129b557fe5b60028111156129c057fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a5d5780601f10612a3257610100808354040283529160200191612a5d565b820191906000526020600020905b815481529060010190602001808311612a4057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612b0857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612ad657fe5b6003811115612ae157fe5b81526020016001820154815260200160028201548152505081526020019060010190612a95565b505050915250909392505050565b6004546001600160a01b03163014612b4357604051600160e51b62461bcd0281526004016108649061477e565b604051600160e01b6366e13f4302815273__TaskImpl______________________________906366e13f43906116359060009089908990899089908990600401614aee565b6004546001600160a01b03163014612bb557604051600160e51b62461bcd0281526004016108649061477e565b33612bbe6130dd565b6001600160a01b038281166000908152601c6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115612c0657fe5b6002811115612c1157fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612cae5780601f10612c8357610100808354040283529160200191612cae565b820191906000526020600020905b815481529060010190602001808311612c9157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015612d5957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115612d2757fe5b6003811115612d3257fe5b81526020016001820154815260200160028201548152505081526020019060010190612ce6565b5050509152509091506001905081602001516002811115612d7657fe5b14612d9657604051600160e51b62461bcd028152600401610864906147be565b8660016000828152601f602052604090206004015460ff166001811115612db957fe5b14612dd957604051600160e51b62461bcd0281526004016108649061476e565b604051600160e61b6289b28102815273__TaskImpl______________________________9063226ca04090612e1d906000908c908c908c908c908c906004016149fa565b60006040518083038186803b158015612e3557600080fd5b505af4158015612e49573d6000803e3d6000fd5b505050505050505050505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612e96908490869060040161494c565b60206040518083038186803b158015612eae57600080fd5b505af4158015612ec2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061067d9190810190613b3f565b336000908152601c60205260409020546001600160a01b031690565b60015490565b8060016000828152601d6020526040902060059081015460ff1690811115612f2c57fe5b14612f4c57604051600160e51b62461bcd0281526004016108649061478e565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b906108a890600090869060040161494c565b612f91611d36565b612f9a57600080fd5b612fa38161306e565b50565b612fae611d36565b612fb757600080fd5b6004546001600160a01b03163014612fe457604051600160e51b62461bcd0281526004016108649061477e565b604051600160e01b6368fac41b02815273__UpgradeImpl___________________________906368fac41b9061302190600090859060040161482d565b60006040518083038186803b15801561303957600080fd5b505af415801561304d573d6000803e3d6000fd5b5050505050565b6001600160a01b0316600090815260208052604090205490565b6001600160a01b03811661308157600080fd5b6023546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3602380546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b6131476131cd565b81526020019060019003908161313f5790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b803561067d81614d80565b805161067d81614d80565b600082601f83011261321c57600080fd5b815161322f61322a82614c37565b614c11565b9150818183526020840193506020810190508385602084028201111561325457600080fd5b60005b83811015613280578161326a8882613200565b8452506020928301929190910190600101613257565b5050505092915050565b600082601f83011261329b57600080fd5b81356132a961322a82614c37565b915081818352602084019350602081019050838560208402820111156132ce57600080fd5b60005b8381101561328057816132e4888261344a565b84525060209283019291909101906001016132d1565b600082601f83011261330b57600080fd5b815161331961322a82614c37565b9150818183526020840193506020810190508385602084028201111561333e57600080fd5b60005b8381101561328057816133548882613455565b8452506020928301929190910190600101613341565b600082601f83011261337b57600080fd5b815161338961322a82614c37565b915081818352602084019350602081019050838560208402820111156133ae57600080fd5b60005b8381101561328057816133c48882613455565b84525060209283019291909101906001016133b1565b600082601f8301126133eb57600080fd5b81356133f961322a82614c37565b9150818183526020840193506020810190508385602084028201111561341e57600080fd5b60005b838110156132805781613434888261355b565b8452506020928301929190910190600101613421565b803561067d81614d94565b805161067d81614d94565b600082601f83011261347157600080fd5b813561347f61322a82614c57565b9150808252602083016020830185838301111561349b57600080fd5b6134a6838284614d16565b50505092915050565b600082601f8301126134c057600080fd5b81516134ce61322a82614c57565b915080825260208301602083018583830111156134ea57600080fd5b6134a6838284614d22565b805161067d81614d9d565b60006060828403121561351257600080fd5b61351c6060614c11565b9050600061352a84846134f5565b825250602061353b84848301613455565b602083015250604061354f84828501613455565b60408301525092915050565b803561067d81614daa565b60006020828403121561357857600080fd5b600061358484846131f5565b949350505050565b6000806000606084860312156135a157600080fd5b60006135ad86866131f5565b93505060206135be868287016131f5565b92505060408401356001600160401b038111156135da57600080fd5b6135e686828701613460565b9150509250925092565b6000806040838503121561360357600080fd5b600061360f8585613200565b92505060208301516001600160401b0381111561362b57600080fd5b613637858286016134af565b9150509250929050565b60008060006060848603121561365657600080fd5b600061366286866131f5565b93505060208401356001600160401b0381111561367e57600080fd5b6135be86828701613460565b6000806040838503121561369d57600080fd5b60006136a985856131f5565b92505060206136378582860161344a565b6000602082840312156136cc57600080fd5b81516001600160401b038111156136e257600080fd5b6135848482850161320b565b6000806040838503121561370157600080fd5b82516001600160401b0381111561371757600080fd5b6137238582860161320b565b92505060208301516001600160401b0381111561373f57600080fd5b6136378582860161336a565b60006020828403121561375d57600080fd5b81516001600160401b0381111561377357600080fd5b613584848285016132fa565b6000806000806080858703121561379557600080fd5b84356001600160401b038111156137ab57600080fd5b6137b78782880161328a565b94505060208501356001600160401b038111156137d357600080fd5b6137df878288016133da565b93505060408501356001600160401b038111156137fb57600080fd5b613807878288016133da565b92505060606138188782880161344a565b91505092959194509250565b60006020828403121561383657600080fd5b6000613584848461344a565b600080600080600080600080610100898b03121561385f57600080fd5b600061386b8b8b61344a565b985050602061387c8b828c0161344a565b975050604061388d8b828c0161344a565b965050606061389e8b828c0161344a565b95505060808901356001600160401b038111156138ba57600080fd5b6138c68b828c01613460565b94505060a06138d78b828c016131f5565b93505060c06138e88b828c0161355b565b92505060e08901356001600160401b0381111561390457600080fd5b6139108b828c01613460565b9150509295985092959890939650565b600080600080600060a0868803121561393857600080fd5b6000613944888861344a565b95505060206139558882890161344a565b94505060406139668882890161344a565b93505060606139778882890161355b565b92505060808601356001600160401b0381111561399357600080fd5b61399f88828901613460565b9150509295509295909350565b600080600080608085870312156139c257600080fd5b60006139ce878761344a565b94505060206139df8782880161344a565b93505060406139f08782880161355b565b92505060608501356001600160401b03811115613a0c57600080fd5b61381887828801613460565b60008060008060808587031215613a2e57600080fd5b6000613a3a878761344a565b9450506020613a4b8782880161355b565b93505060406138078782880161355b565b600080600080600060a08688031215613a7457600080fd5b6000613a80888861344a565b9550506020613a918882890161355b565b9450506040613aa28882890161355b565b9350506060613ab38882890161344a565b925050608061399f8882890161344a565b60008060408385031215613ad757600080fd5b82356001600160401b03811115613aed57600080fd5b613af985828601613460565b92505060208301356001600160401b03811115613b1557600080fd5b61363785828601613460565b600060608284031215613b3357600080fd5b60006135848484613500565b600060208284031215613b5157600080fd5b60006135848484613455565b60008060408385031215613b7057600080fd5b60006136a9858561344a565b60008060008060808587031215613b9257600080fd5b6000613b9e8787613455565b9450506020613baf87828801613455565b93505060408501516001600160401b03811115613bcb57600080fd5b613bd78782880161320b565b92505060608501516001600160401b03811115613bf357600080fd5b6138188782880161336a565b600080600060608486031215613c1457600080fd5b6000613c20868661344a565b93505060206135be8682870161344a565b6000613c3d8383613c7d565b505060200190565b6000613c3d838361401a565b6000613c5d83836144ec565b505060600190565b600061067a8383614601565b6000613c3d838361465c565b613c8681614c9a565b82525050565b6000613c9782614c87565b613ca18185614c91565b9350613cac83614c7e565b8060005b83811015613cda578151613cc48882613c31565b9750613ccf83614c7e565b925050600101613cb0565b509495945050505050565b6000613cf082614c87565b613cfa8185614c91565b9350613d0583614c7e565b8060005b83811015613cda578151613d1d8882613c31565b9750613d2883614c7e565b925050600101613d09565b6000613d3e82614c87565b613d488185614c91565b9350613d5383614c7e565b8060005b83811015613cda578151613d6b8882613c45565b9750613d7683614c7e565b925050600101613d57565b6000613d8c82614c87565b613d968185614c91565b9350613da183614c7e565b8060005b83811015613cda578151613db98882613c45565b9750613dc483614c7e565b925050600101613da5565b6000613dda82614c87565b613de48185614c91565b9350613def83614c7e565b8060005b83811015613cda578151613e078882613c45565b9750613e1283614c7e565b925050600101613df3565b6000613e2882614c87565b613e328185614c91565b9350613e3d83614c7e565b8060005b83811015613cda578151613e558882613c51565b9750613e6083614c7e565b925050600101613e41565b6000613e7682614c87565b613e808185614c91565b9350613e8b83614c7e565b8060005b83811015613cda578151613ea38882613c51565b9750613eae83614c7e565b925050600101613e8f565b6000613ec482614c8b565b613ece8185611990565b935083602082028501613ee085614c84565b8060005b85811015613f1a5784840389528151613efd8582613c65565b9450613f0883614c7e565b60209a909a0199925050600101613ee4565b5091979650505050505050565b6000613f3282614c87565b613f3c8185614c91565b9350613f4783614c7e565b8060005b83811015613cda578151613f5f8882613c45565b9750613f6a83614c7e565b925050600101613f4b565b6000613f8082614c87565b613f8a8185614c91565b9350613f9583614c7e565b8060005b83811015613cda578151613fad8882613c45565b9750613fb883614c7e565b925050600101613f99565b6000613fce82614c87565b613fd88185614c91565b9350613fe383614c7e565b8060005b83811015613cda578151613ffb8882613c71565b975061400683614c7e565b925050600101613fe7565b613c8681614ca5565b613c8681614c84565b600061402e82614c87565b6140388185614c91565b9350614048818560208601614d22565b61405181614d4e565b9093019392505050565b613c8681614cea565b613c8681614cf5565b613c8681614d00565b613c8681614d0b565b600061408c602283614c91565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b60006140d3601883614c91565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b600061410c602783614c91565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000614158601c83614c91565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000614191601b83614c91565b7f4e6f74207570646174656420456e69676d6120636f6e74726163740000000000815260200192915050565b60006141ca601383614c91565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b6000614203602783614c91565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b600061424f602e83614c91565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b60006142ae601483614c91565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b60006142e7601383614c91565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b6000614320602083614c91565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000614359602083614c91565b7f4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374815260200192915050565b6000614392602783614c91565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a08401906143e58582613c7d565b5060208301516143f8602086018261401a565b50604083015161440b604086018261401a565b50606083015184820360608601526144238282613dcf565b9150506080830151614438608086018261405b565b509392505050565b9052565b80516000906101008401906144598582613c7d565b50602083015161446c602086018261401a565b50604083015161447f604086018261401a565b506060830151614492606086018261465c565b5060808301516144a5608086018261465c565b5060a08301516144b860a086018261401a565b5060c08301516144cb60c0860182614064565b5060e083015184820360e08601526144e38282614023565b95945050505050565b805160608301906144fd848261406d565b506020820151614510602085018261401a565b506040820151614523604085018261401a565b50505050565b805160009060a084019061453d8582613c7d565b5060208301516145506020860182614076565b50604083015184820360408601526145688282614023565b915050606083015161457d606086018261401a565b50608083015184820360808601526144e38282613e1d565b805160009060a08401906145a98582613c7d565b5060208301516145bc6020860182614076565b50604083015184820360408601526145d48282614023565b91505060608301516145e9606086018261401a565b50608083015184820360808601526144e38282613e6b565b80516000906080840190614615858261401a565b506020830151848203602086015261462d8282613ce5565b915050604083015184820360408601526146478282613f75565b9150506060830151614438606086018261401a565b613c8681614cde565b6020810161067d8284613c7d565b604081016146818285613c7d565b8181036020830152611b478184614023565b604081016146a18285613c7d565b8181036020830152611b478184614529565b6020808252810161067a8184613c8c565b604080825281016146d58185613c8c565b90508181036020830152611b478184613f27565b6020808252810161067a8184613d33565b6020808252810161067a8184613eb9565b6020810161067d8284614011565b6040808252810161472a8185614023565b90508181036020830152611b478184614023565b6020808252810161067d8161407f565b6020808252810161067d816140c6565b6020808252810161067d816140ff565b6020808252810161067d8161414b565b6020808252810161067d81614184565b6020808252810161067d816141bd565b6020808252810161067d816141f6565b6020808252810161067d81614242565b6020808252810161067d816142a1565b6020808252810161067d816142da565b6020808252810161067d81614313565b6020808252810161067d8161434c565b6020808252810161067d81614385565b6020808252810161067a81846143d1565b6020810161067d8284614440565b6040810161483b8285614440565b611b4a6020830184613c7d565b608081016148568287614440565b6148636020830186613c7d565b6148706040830185613c7d565b81810360608301526148828184614023565b9695505050505050565b6080810161489a8287614440565b6148a76020830186613c7d565b81810360408301526148b98185614023565b905081810360608301526148828184614023565b606081016148db8286614440565b6148e86020830185613c7d565b613584604083018461401a565b60a081016149038288614440565b81810360208301526149158187613d81565b905081810360408301526149298186613fc3565b9050818103606083015261493d8185613fc3565b9050614882608083018461401a565b6040810161495a8285614440565b611b4a602083018461401a565b6101208101614976828c614440565b614983602083018b61401a565b614990604083018a61401a565b61499d606083018961401a565b6149aa608083018861401a565b81810360a08301526149bc8187614023565b90506149cb60c0830186613c7d565b6149d860e083018561465c565b8181036101008301526149eb8184614023565b9b9a5050505050505050505050565b60c08101614a088289614440565b614a15602083018861401a565b614a22604083018761401a565b614a2f606083018661401a565b614a3c608083018561465c565b81810360a0830152614a4e8184614023565b98975050505050505050565b60a08101614a688288614440565b614a75602083018761401a565b614a82604083018661401a565b614a8f606083018561465c565b8181036080830152614aa18184614023565b979650505050505050565b60a08101614aba8288614440565b614ac7602083018761401a565b614ad4604083018661465c565b614ae1606083018561465c565b614882608083018461401a565b60c08101614afc8289614440565b614b09602083018861401a565b614b16604083018761465c565b614b23606083018661465c565b614b30608083018561401a565b614aa160a083018461401a565b60608101614b4b8286614440565b6148e8602083018561401a565b60808101614b668287614440565b614b73602083018661401a565b614870604083018561401a565b6020808252810161067a8184614444565b6020808252810161067a8184614529565b60408082528101614bb38185614595565b9050611b4a602083018461401a565b6020810161067d828461401a565b60808101614bde828761401a565b614beb602083018661401a565b8181036040830152614bfd8185613c8c565b905081810360608301526148828184613f27565b6040518181016001600160401b0381118282101715614c2f57600080fd5b604052919050565b60006001600160401b03821115614c4d57600080fd5b5060209081020190565b60006001600160401b03821115614c6d57600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b600061067d82614cd2565b151590565b8061199081614d58565b8061199081614d62565b8061199081614d6c565b8061199081614d76565b6001600160a01b031690565b6001600160401b031690565b600061067d82614caa565b600061067d82614cb4565b600061067d82614cbe565b600061067d82614cc8565b82818337506000910152565b60005b83811015614d3d578181015183820152602001614d25565b838111156145235750506000910152565b601f01601f191690565b60028110612fa357fe5b60068110612fa357fe5b60048110612fa357fe5b60038110612fa357fe5b614d8981614c9a565b8114612fa357600080fd5b614d8981614c84565b60048110612fa357600080fd5b614d8981614cde56fea265627a7a72305820bf412fdef5d34b487d62a3935413fee6816c0cb9e77664fc383122f59fe1be6a6c6578706572696d656e74616cf50037","sourceMap":"885:18493:0:-;;;1124:381;8:9:-1;5:2;;;30:1;27;20:12;5:2;1124:381:0;;;;;;;;;;;;;;;;;;;;;;515:6:32;:19;;-1:-1:-1;;;;;;515:19:32;524:10;515:19;;;;;549:40;;-1:-1:-1;;;;;582:6:32;;;;;515;;549:40;;515:6;;549:40;1217:5:0;:37;;-1:-1:-1;;;;;1217:37:0;;;-1:-1:-1;;;;;;1217:37:0;;;;;;;;1264:28;;;1326:3;1302:21;:27;1339:15;:28;;;;;;;;;;;;;;;;1377:34;:50;;;;;1422:4;1377:50;;;1437:22;:26;;;1473:21;:25;885:18493;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:134;224:13;;242:33;224:13;242:33;;287:535;;;;436:2;424:9;415:7;411:23;407:32;404:2;;;452:1;449;442:12;404:2;487:1;504:64;560:7;540:9;504:64;;;494:74;;466:108;605:2;623:64;679:7;670:6;659:9;655:22;623:64;;;613:74;;584:109;724:2;742:64;798:7;789:6;778:9;774:22;742:64;;;732:74;;703:109;398:424;;;;;;829:91;;-1:-1;;;;;989:54;;891:24;972:76;1055:72;1117:5;1100:27;1134:117;1203:24;1221:5;1203:24;;;1196:5;1193:35;1183:2;;1242:1;1239;1232:12;1183:2;1177:74;;1258:117;1327:24;1345:5;1327:24;;1301:74;885:18493:0;;;;;;","deployedSourceMap":"885:18493:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;885:18493:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16264:194;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17619:199;;;;;;;;;:::i;:::-;;;;;;;;7590:98;;;:::i;:::-;;7128:132;;;;;;;;;:::i;13922:574::-;;;;;;;;;:::i;6735:195::-;;;;;;;;;:::i;9023:603::-;;;;;;;;;:::i;15906:237::-;;;;;;;;;:::i;3069:121:10:-;;;:::i;:::-;;;;;;;;2823:130;;;:::i;:::-;;;;;;;;1347:137:32;;;:::i;9753:149:0:-;;;:::i;:::-;;;;;;;;2543::10;;;;;;;;;:::i;:::-;;;;;;;;6257:235:0;;;;;;;;;:::i;19101:275::-;;;;;;;;;:::i;659:77:32:-;;;:::i;:::-;;;;;;;;10115:211:0;;;;;;;;;:::i;2221:137:10:-;;;;;;;;;:::i;:::-;;;;;;;;979:90:32;;;:::i;:::-;;;;;;;;17084:198:0;;;;;;;;;:::i;:::-;;;;;;;;;;;1004:492:10;;;;;;;;;:::i;:::-;;;;;;;;;7996:352:0;;;;;;;;;:::i;17956:200::-;;;;;;;;;:::i;:::-;;;;;;;;;7423:90;;;:::i;18361:181::-;;;;;;;;;:::i;12992:326::-;;;;;;;;;:::i;3305:131:10:-;;;:::i;12092:289:0:-;;;;;;;;;:::i;679:131:10:-;;;;;;;;;:::i;:::-;;;;;;;;11179:338:0;;;;;;;;;:::i;14887:369::-;;;;;;;;;:::i;16633:167::-;;;;;;;;;:::i;399:115:10:-;;;:::i;1957:90::-;;;:::i;15423:147:0:-;;;;;;;;;:::i;1655:107:32:-;;;;;;;;;:::i;18683:226:0:-;;;;;;;;;:::i;1740:134:10:-;;;;;;;;;:::i;16264:194:0:-;16342:16;16360:13;16396;:34;16431:5;16438:12;16396:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16396:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16396:55:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16396:55:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16396:55:0;;;;;;;;;16389:62;;;;16264:194;;;:::o;17619:199::-;17751:60;;-1:-1:-1;;;;;17751:60:0;;17712:16;;17751:11;;:30;;:60;;17782:5;;17789:12;;17803:7;;17751:60;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17751:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17751:60:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;17751:60:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;17751:60:0;;;;;;;;;17744:67;;17619:199;;;;;:::o;7590:98::-;7630:10;2169:33;;:::i;:::-;-1:-1:-1;;;;;2205:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2169:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;-1:-1:-1;2169:56:0;;-1:-1:-1;2260:34:0;;-1:-1:-1;2243:6:0;:13;;;:51;;;;;;;;;2235:84;;;;-1:-1:-1;;;;;2235:84:0;;;;;;;;;;;;;;;;;7652:29;;-1:-1:-1;;;;;7652:29:0;;:11;;:22;;:29;;7675:5;;7652:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7652:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7652:29:0;;;;7590:98;;:::o;7128:132::-;7187:10;3414:33;;:::i;:::-;-1:-1:-1;;;;;3450:20:0;;;:5;:20;;;:13;:20;;;;;;;;;3414:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3414:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3414:56:0;;-1:-1:-1;3414:56:0;;-1:-1:-1;3505:35:0;;-1:-1:-1;3488:6:0;:13;;;:52;;;;;;;;;3480:104;;;;-1:-1:-1;;;;;3480:104:0;;;;;;;;;3594:39;;:::i;:::-;3636:56;;-1:-1:-1;;;;;3636:56:0;;:11;;:34;;:56;;3671:6;;3679:12;;3636:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3636:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3636:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3636:56:0;;;;;;;;;3594:98;-1:-1:-1;3739:33:0;3710:25;;:62;;;;;;;;;3702:126;;;;-1:-1:-1;;;;;3702:126:0;;;;;;;;;3882:9;:21;;;3846:33;3866:12;3846:19;:33::i;:::-;:57;3838:128;;;;-1:-1:-1;;;;;3838:128:0;;;;;;;;;7213:40;;-1:-1:-1;;;;;7213:40:0;;:11;;:24;;:40;;7238:5;;7245:7;;7213:40;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7213:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7213:40:0;;;;7128:132;;;;:::o;13922:574::-;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;14267:10;2169:33;;:::i;:::-;-1:-1:-1;;;;;2205:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2169:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;-1:-1:-1;2169:56:0;;-1:-1:-1;2260:34:0;;-1:-1:-1;2243:6:0;:13;;;:51;;;;;;;;;2235:84;;;;-1:-1:-1;;;;;2235:84:0;;;;;;;;;14300:7;4517:42;4482:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4474:118;;;;-1:-1:-1;;;;;4474:118:0;;;;;;;;;14323:166;;-1:-1:-1;;;;;14323:166:0;;:8;;:26;;:166;;14350:5;;14357:7;;14366;;14375:15;;14392:11;;14405:21;;14440:32;;14474:8;;14484:4;;14323:166;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14323:166:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14323:166:0;;;;2329:1;5505;;13922:574;;;;;;;;:::o;6735:195::-;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;6846:10;1805:33;;:::i;:::-;-1:-1:-1;;;;;1841:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1805:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1805:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1805:56:0;;-1:-1:-1;1805:56:0;;-1:-1:-1;1896:38:0;;-1:-1:-1;1879:6:0;:13;;;:55;;;;;;;;;;1871:87;;;;-1:-1:-1;;;;;1871:87:0;;;;;;;;;6872:51;;-1:-1:-1;;;;;6872:51:0;;:11;;:23;;:51;;6896:5;;6903:10;;6915:7;;6872:51;;;;9023:603;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;9382:10;2169:33;;:::i;:::-;-1:-1:-1;;;;;2205:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2169:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;-1:-1:-1;2169:56:0;;-1:-1:-1;2260:34:0;;-1:-1:-1;2243:6:0;:13;;;:51;;;;;;;;;2235:84;;;;-1:-1:-1;;;;;2235:84:0;;;;;;;;;9416:7;4204:43;4169:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;4161:123;;;;-1:-1:-1;;;;;4161:123:0;;;;;;;;;9439:180;;-1:-1:-1;;;;;9439:180:0;;:8;;:33;;:180;;9473:5;;9480:7;;9489:12;;9503:9;;9514:19;;9547:21;;9570:32;;9604:8;;9614:4;;9439:180;;;;15906:237;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;16042:10;1805:33;;:::i;:::-;-1:-1:-1;;;;;1841:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1805:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1805:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1805:56:0;;-1:-1:-1;1805:56:0;;-1:-1:-1;1896:38:0;;-1:-1:-1;1879:6:0;:13;;;:55;;;;;;;;;;1871:87;;;;-1:-1:-1;;;;;1871:87:0;;;;;;;;;16068:68;;-1:-1:-1;;;;;16068:68:0;;:13;;:34;;:68;;16103:5;;16110:12;;16124:5;;16131:4;;16068:68;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16068:68:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16068:68:0;;;;5505:1;;15906:237;;;:::o;3069:121:10:-;3131:16;3166:5;:17;;3159:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:121;:::o;2823:130::-;2872:36;;:::i;:::-;2920:26;;;;;;;;;2927:19;2920:26;2927:5;2920:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2920:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2823:130;:::o;1347:137:32:-;863:9;:7;:9::i;:::-;855:18;;;;;;1429:6;;1408:40;;1445:1;;-1:-1:-1;;;;;1429:6:32;;1408:40;;1445:1;;1408:40;1458:6;:19;;-1:-1:-1;;;;;;1458:19:32;;;1347:137::o;9753:149:0:-;9845:50;;-1:-1:-1;;;;;9845:50:0;;9818:4;;9845:18;;:43;;:50;;9818:4;;9845:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9845:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9845:50:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9845:50:0;;;;;;;;;9838:57;;9753:149;:::o;2543::10:-;2608:34;;:::i;:::-;2661:5;:24;;;:15;:24;;;;;;;;;2654:31;;;;;;;;;-1:-1:-1;;;;;2654:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2661:24;;2654:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2654:31:10;;;-1:-1:-1;;2654:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2654:31:10;-1:-1:-1;2543:149:10;;;;:::o;6257:235:0:-;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;6401:7;5080:6;5075:175;5096:21;:28;5092:32;;5075:175;;;5203:7;-1:-1:-1;;;;;5153:57:0;:5;:13;;:39;5167:5;:21;;5189:1;5167:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5167:24:0;;;5153:39;;;;;;;;;;;;;;;:46;;:57;;5145:94;;;;-1:-1:-1;;;;;5145:94:0;;;;;;;;;5126:3;;5075:175;;;-1:-1:-1;6424:61:0;;-1:-1:-1;;;;;6424:61:0;;:11;;:24;;:61;;6449:5;;6456:7;;6465;;6474:10;;6424:61;;;;19101:275;5676:34;;19255:7;;-1:-1:-1;;;;;5676:34:0;5662:10;:48;5654:93;;;;-1:-1:-1;;;;;5654:93:0;;;;;;;;;19285:84;;-1:-1:-1;;;;;19285:84:0;;:11;;:46;;:84;;19332:5;;19339:14;;19355:7;;19364:4;;19285:84;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19285:84:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19285:84:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;19285:84:0;;;;;;;;;19278:91;;5757:1;19101:275;;;;;:::o;659:77:32:-;723:6;;-1:-1:-1;;;;;723:6:32;659:77;:::o;10115:211:0:-;10248:71;;-1:-1:-1;;;;;10248:71:0;;10209:16;;10248:18;;:49;;:71;;10298:5;;10305:6;;10313:5;;10248:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10248:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10248:71:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;10248:71:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;10248:71:0;;;;;;;;2221:137:10;2282:30;;:::i;:::-;2331:5;:20;;;:11;:20;;;;;;;;;2324:27;;;;;;;;;-1:-1:-1;;;;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2331:20;2324:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2221:137;;;:::o;979:90:32:-;1056:6;;-1:-1:-1;;;;;1056:6:32;1042:10;:20;;979:90::o;17084:198:0:-;17161:4;17167;17173:16;17191:13;17223:11;:31;17255:5;17262:12;17223:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17223:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17223:52:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;17223:52:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;17223:52:0;;;;;;;;;17216:59;;;;;;;;17084:198;;;;;:::o;1004:492:10:-;1079:7;1088:26;;:::i;:::-;1126:15;1151:33;;:::i;:::-;1199:6;1194:262;1215:21;:28;1211:32;;1194:262;;;1287:21;:24;;1273:13;;:5;;1309:1;;1287:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1287:24:10;;;1273:39;;;;;;;;;;;;;;;;1264:48;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1264:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:7;-1:-1:-1;;;;;1330:24:10;:6;:13;;;-1:-1:-1;;;;;1330:24:10;;1326:120;;;1384:21;:24;;1406:1;;1384:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1384:24:10;;-1:-1:-1;1426:5:10;;1326:120;1245:3;;1194:262;;;-1:-1:-1;1473:7:10;;-1:-1:-1;1482:6:10;-1:-1:-1;1004:492:10;;;:::o;7996:352:0:-;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;8201:10;2169:33;;:::i;:::-;-1:-1:-1;;;;;2205:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2169:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;-1:-1:-1;2169:56:0;;-1:-1:-1;2260:34:0;;-1:-1:-1;2243:6:0;:13;;;:51;;;;;;;;;2235:84;;;;-1:-1:-1;;;;;2235:84:0;;;;;;;;;8235:7;4204:43;4169:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;4161:123;;;;-1:-1:-1;;;;;4161:123:0;;;;;;;;;8258:83;;-1:-1:-1;;;;;8258:83:0;;:8;;:40;;:83;;8299:5;;8306:7;;8315:9;;8326:8;;8336:4;;8258:83;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8258:83:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8258:83:0;;;;2329:1;5505;;7996:352;;;;:::o;17956:200::-;18061:7;18070:12;18036:10;1805:33;;:::i;:::-;-1:-1:-1;;;;;1841:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1805:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1805:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1805:56:0;;-1:-1:-1;1805:56:0;;-1:-1:-1;1896:38:0;;-1:-1:-1;1879:6:0;:13;;;:55;;;;;;;;;;1871:87;;;;-1:-1:-1;;;;;1871:87:0;;;;;;;;;18105:44;;-1:-1:-1;;;;;18105:44:0;;:11;;:25;;:44;;18131:5;;18138:10;;18105:44;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18105:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18105:44:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;18105:44:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;18105:44:0;;;;;;;;;18098:51;;;;17956:200;;;;;:::o;7423:90::-;7456:10;2861:33;;:::i;:::-;-1:-1:-1;;;;;2897:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2861:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2861:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2935:33;2955:12;2935:19;:33::i;:::-;2927:90;;;;-1:-1:-1;;;;;2927:90:0;;;;;;;;;3052:35;3035:6;:13;;;:52;;;;;;;;;3027:104;;;;-1:-1:-1;;;;;3027:104:0;;;;;;;;;3167:22;;3149:14;;;;:40;;3141:87;;;;-1:-1:-1;;;;;3141:87:0;;;;;;;;;7478:28;;-1:-1:-1;;;;;7478:28:0;;:11;;:21;;:28;;7500:5;;7478:28;;;;18361:181;18488:47;;-1:-1:-1;;;;;18488:47:0;;18461:4;;18488:11;;:28;;:47;;18517:5;;18524:10;;18488:47;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18488:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18488:47:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18488:47:0;;;;;;;;12992:326;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;13219:92;;-1:-1:-1;;;;;13219:92:0;;:8;;:30;;:92;;13250:5;;13257:13;;13272:10;;13284:7;;13293:17;;13219:92;;;;3305:131:10;3395:34;;-1:-1:-1;;;;;3395:34:10;3305:131;:::o;12092:289:0:-;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;12287:87;;-1:-1:-1;;;;;12287:87:0;;:8;;:29;;:87;;12317:5;;12324:11;;12337:9;;12348:6;;12356:17;;12287:87;;;;679:131:10;736:26;;:::i;:::-;-1:-1:-1;;;;;781:22:10;;;:5;:22;;;:13;:22;;;;;;;;;774:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;-1:-1:-1;774:29:10;;679:131;-1:-1:-1;;;679:131:10:o;11179:338:0:-;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;11405:105;;-1:-1:-1;;;;;11405:105:0;;:8;;:39;;:105;;11445:5;;11452:11;;11465:9;;11476:6;;11484:17;;11503:6;;11405:105;;;;14887:369;5429:34;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;15109:10;2169:33;;:::i;:::-;-1:-1:-1;;;;;2205:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2169:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2169:56:0;;-1:-1:-1;2169:56:0;;-1:-1:-1;2260:34:0;;-1:-1:-1;2243:6:0;:13;;;:51;;;;;;;;;2235:84;;;;-1:-1:-1;;;;;2235:84:0;;;;;;;;;15142:7;4517:42;4482:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4474:118;;;;-1:-1:-1;;;;;4474:118:0;;;;;;;;;15165:84;;-1:-1:-1;;;;;15165:84:0;;:8;;:30;;:84;;15196:5;;15203:7;;15212;;15221:11;;15234:8;;15244:4;;15165:84;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15165:84:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15165:84:0;;;;2329:1;5505;;14887:369;;;;;:::o;16633:167::-;16737:56;;-1:-1:-1;;;;;16737:56:0;;16714:4;;16737:11;;:35;;:56;;16714:4;;16780:12;;16737:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16737:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16737:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;16737:56:0;;;;;;;;399:115:10;489:10;449:7;475:25;;;:13;:25;;;;;:32;-1:-1:-1;;;;;475:32:10;399:115;:::o;1957:90::-;2025:15;;1957:90;:::o;15423:147:0:-;15494:7;4824:37;4793:5;:20;;;:11;:20;;;;;:27;;;;;;;;:68;;;;;;;;4785:100;;;;-1:-1:-1;;;;;4785:100:0;;;;;;;;;15517:46;;-1:-1:-1;;;;;15517:46:0;;:8;;:30;;:46;;15548:5;;15555:7;;15517:46;;;;1655:107:32;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;18683:226:0:-;863:9:32;:7;:9::i;:::-;855:18;;;;;;5429:34:0;;-1:-1:-1;;;;;5429:34:0;5420:4;5412:51;5404:91;;;;-1:-1:-1;;;;;5404:91:0;;;;;;;;;18827:75;;-1:-1:-1;;;;;18827:75:0;;:11;;:37;;:75;;18865:5;;18872:29;;18827:75;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18827:75:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18827:75:0;;;;18683:226;:::o;1740:134:10:-;-1:-1:-1;;;;;1833:34:10;1810:4;1833:34;;;:25;:34;;;;;;;1740:134::o;1906:183:32:-;-1:-1:-1;;;;;1979:22:32;;1971:31;;;;;;2038:6;;2017:38;;-1:-1:-1;;;;;2017:38:32;;;;2038:6;;2017:38;;2038:6;;2017:38;2065:6;:17;;-1:-1:-1;;;;;;2065:17:32;-1:-1:-1;;;;;2065:17:32;;;;;;;;;;1906:183::o;885:18493:0:-;;;;;;;;;;-1:-1:-1;885:18493:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;885:18493:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;885:18493:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;885:18493:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:722;;429:3;422:4;414:6;410:17;406:27;396:2;;447:1;444;437:12;396:2;477:6;471:13;499:80;514:64;571:6;514:64;;;499:80;;;490:89;;596:5;621:6;614:5;607:21;651:4;643:6;639:17;629:27;;673:4;668:3;664:14;657:21;;726:6;773:3;765:4;757:6;753:17;748:3;744:27;741:36;738:2;;;790:1;787;780:12;738:2;815:1;800:217;825:6;822:1;819:13;800:217;;;883:3;905:48;949:3;937:10;905:48;;;893:61;;-1:-1;977:4;968:14;;;;996;;;;;847:1;840:9;800:217;;;804:14;389:634;;;;;;;;1049:707;;1166:3;1159:4;1151:6;1147:17;1143:27;1133:2;;1184:1;1181;1174:12;1133:2;1221:6;1208:20;1243:80;1258:64;1315:6;1258:64;;1243:80;1234:89;;1340:5;1365:6;1358:5;1351:21;1395:4;1387:6;1383:17;1373:27;;1417:4;1412:3;1408:14;1401:21;;1470:6;1517:3;1509:4;1501:6;1497:17;1492:3;1488:27;1485:36;1482:2;;;1534:1;1531;1524:12;1482:2;1559:1;1544:206;1569:6;1566:1;1563:13;1544:206;;;1627:3;1649:37;1682:3;1670:10;1649:37;;;1637:50;;-1:-1;1710:4;1701:14;;;;1729;;;;;1591:1;1584:9;1544:206;;1782:722;;1910:3;1903:4;1895:6;1891:17;1887:27;1877:2;;1928:1;1925;1918:12;1877:2;1958:6;1952:13;1980:80;1995:64;2052:6;1995:64;;1980:80;1971:89;;2077:5;2102:6;2095:5;2088:21;2132:4;2124:6;2120:17;2110:27;;2154:4;2149:3;2145:14;2138:21;;2207:6;2254:3;2246:4;2238:6;2234:17;2229:3;2225:27;2222:36;2219:2;;;2271:1;2268;2261:12;2219:2;2296:1;2281:217;2306:6;2303:1;2300:13;2281:217;;;2364:3;2386:48;2430:3;2418:10;2386:48;;;2374:61;;-1:-1;2458:4;2449:14;;;;2477;;;;;2328:1;2321:9;2281:217;;2530:722;;2658:3;2651:4;2643:6;2639:17;2635:27;2625:2;;2676:1;2673;2666:12;2625:2;2706:6;2700:13;2728:80;2743:64;2800:6;2743:64;;2728:80;2719:89;;2825:5;2850:6;2843:5;2836:21;2880:4;2872:6;2868:17;2858:27;;2902:4;2897:3;2893:14;2886:21;;2955:6;3002:3;2994:4;2986:6;2982:17;2977:3;2973:27;2970:36;2967:2;;;3019:1;3016;3009:12;2967:2;3044:1;3029:217;3054:6;3051:1;3048:13;3029:217;;;3112:3;3134:48;3178:3;3166:10;3134:48;;;3122:61;;-1:-1;3206:4;3197:14;;;;3225;;;;;3076:1;3069:9;3029:217;;3277:704;;3393:3;3386:4;3378:6;3374:17;3370:27;3360:2;;3411:1;3408;3401:12;3360:2;3448:6;3435:20;3470:79;3485:63;3541:6;3485:63;;3470:79;3461:88;;3566:5;3591:6;3584:5;3577:21;3621:4;3613:6;3609:17;3599:27;;3643:4;3638:3;3634:14;3627:21;;3696:6;3743:3;3735:4;3727:6;3723:17;3718:3;3714:27;3711:36;3708:2;;;3760:1;3757;3750:12;3708:2;3785:1;3770:205;3795:6;3792:1;3789:13;3770:205;;;3853:3;3875:36;3907:3;3895:10;3875:36;;;3863:49;;-1:-1;3935:4;3926:14;;;;3954;;;;;3817:1;3810:9;3770:205;;3989:130;4056:20;;4081:33;4056:20;4081:33;;4126:134;4204:13;;4222:33;4204:13;4222:33;;4268:440;;4369:3;4362:4;4354:6;4350:17;4346:27;4336:2;;4387:1;4384;4377:12;4336:2;4424:6;4411:20;4446:64;4461:48;4502:6;4461:48;;4446:64;4437:73;;4530:6;4523:5;4516:21;4566:4;4558:6;4554:17;4599:4;4592:5;4588:16;4634:3;4625:6;4620:3;4616:16;4613:25;4610:2;;;4651:1;4648;4641:12;4610:2;4661:41;4695:6;4690:3;4685;4661:41;;;4329:379;;;;;;;;4717:442;;4829:3;4822:4;4814:6;4810:17;4806:27;4796:2;;4847:1;4844;4837:12;4796:2;4877:6;4871:13;4899:64;4914:48;4955:6;4914:48;;4899:64;4890:73;;4983:6;4976:5;4969:21;5019:4;5011:6;5007:17;5052:4;5045:5;5041:16;5087:3;5078:6;5073:3;5069:16;5066:25;5063:2;;;5104:1;5101;5094:12;5063:2;5114:39;5146:6;5141:3;5136;5114:39;;5167:170;5263:13;;5281:51;5263:13;5281:51;;5380:695;;5507:4;5495:9;5490:3;5486:19;5482:30;5479:2;;;5525:1;5522;5515:12;5479:2;5543:20;5558:4;5543:20;;;5534:29;-1:-1;5624:1;5655:78;5729:3;5709:9;5655:78;;;5631:103;;-1:-1;5802:2;5835:60;5891:3;5867:22;;;5835:60;;;5828:4;5821:5;5817:16;5810:86;5755:152;5960:2;5993:60;6049:3;6040:6;6029:9;6025:22;5993:60;;;5986:4;5979:5;5975:16;5968:86;5917:148;5473:602;;;;;6360:128;6426:20;;6451:32;6426:20;6451:32;;6495:241;;6599:2;6587:9;6578:7;6574:23;6570:32;6567:2;;;6615:1;6612;6605:12;6567:2;6650:1;6667:53;6712:7;6692:9;6667:53;;;6657:63;6561:175;-1:-1;;;;6561:175;6743:595;;;;6890:2;6878:9;6869:7;6865:23;6861:32;6858:2;;;6906:1;6903;6896:12;6858:2;6941:1;6958:53;7003:7;6983:9;6958:53;;;6948:63;;6920:97;7048:2;7066:53;7111:7;7102:6;7091:9;7087:22;7066:53;;;7056:63;;7027:98;7184:2;7173:9;7169:18;7156:32;-1:-1;;;;;7200:6;7197:30;7194:2;;;7240:1;7237;7230:12;7194:2;7260:62;7314:7;7305:6;7294:9;7290:22;7260:62;;;7250:72;;7135:193;6852:486;;;;;;7345:496;;;7486:2;7474:9;7465:7;7461:23;7457:32;7454:2;;;7502:1;7499;7492:12;7454:2;7537:1;7554:64;7610:7;7590:9;7554:64;;;7544:74;;7516:108;7676:2;7665:9;7661:18;7655:25;-1:-1;;;;;7692:6;7689:30;7686:2;;;7732:1;7729;7722:12;7686:2;7752:73;7817:7;7808:6;7797:9;7793:22;7752:73;;;7742:83;;7634:197;7448:393;;;;;;7848:699;;;;8004:2;7992:9;7983:7;7979:23;7975:32;7972:2;;;8020:1;8017;8010:12;7972:2;8055:1;8072:53;8117:7;8097:9;8072:53;;;8062:63;;8034:97;8190:2;8179:9;8175:18;8162:32;-1:-1;;;;;8206:6;8203:30;8200:2;;;8246:1;8243;8236:12;8200:2;8266:62;8320:7;8311:6;8300:9;8296:22;8266:62;;8554:366;;;8675:2;8663:9;8654:7;8650:23;8646:32;8643:2;;;8691:1;8688;8681:12;8643:2;8726:1;8743:53;8788:7;8768:9;8743:53;;;8733:63;;8705:97;8833:2;8851:53;8896:7;8887:6;8876:9;8872:22;8851:53;;8927:392;;9067:2;9055:9;9046:7;9042:23;9038:32;9035:2;;;9083:1;9080;9073:12;9035:2;9118:24;;-1:-1;;;;;9151:30;;9148:2;;;9194:1;9191;9184:12;9148:2;9214:89;9295:7;9286:6;9275:9;9271:22;9214:89;;9326:657;;;9508:2;9496:9;9487:7;9483:23;9479:32;9476:2;;;9524:1;9521;9514:12;9476:2;9559:24;;-1:-1;;;;;9592:30;;9589:2;;;9635:1;9632;9625:12;9589:2;9655:89;9736:7;9727:6;9716:9;9712:22;9655:89;;;9645:99;;9538:212;9802:2;9791:9;9787:18;9781:25;-1:-1;;;;;9818:6;9815:30;9812:2;;;9858:1;9855;9848:12;9812:2;9878:89;9959:7;9950:6;9939:9;9935:22;9878:89;;9990:392;;10130:2;10118:9;10109:7;10105:23;10101:32;10098:2;;;10146:1;10143;10136:12;10098:2;10181:24;;-1:-1;;;;;10214:30;;10211:2;;;10257:1;10254;10247:12;10211:2;10277:89;10358:7;10349:6;10338:9;10334:22;10277:89;;10389:1021;;;;;10617:3;10605:9;10596:7;10592:23;10588:33;10585:2;;;10634:1;10631;10624:12;10585:2;10669:31;;-1:-1;;;;;10709:30;;10706:2;;;10752:1;10749;10742:12;10706:2;10772:78;10842:7;10833:6;10822:9;10818:22;10772:78;;;10762:88;;10648:208;10915:2;10904:9;10900:18;10887:32;-1:-1;;;;;10931:6;10928:30;10925:2;;;10971:1;10968;10961:12;10925:2;10991:77;11060:7;11051:6;11040:9;11036:22;10991:77;;;10981:87;;10866:208;11133:2;11122:9;11118:18;11105:32;-1:-1;;;;;11149:6;11146:30;11143:2;;;11189:1;11186;11179:12;11143:2;11209:77;11278:7;11269:6;11258:9;11254:22;11209:77;;;11199:87;;11084:208;11323:2;11341:53;11386:7;11377:6;11366:9;11362:22;11341:53;;;11331:63;;11302:98;10579:831;;;;;;;;11417:241;;11521:2;11509:9;11500:7;11496:23;11492:32;11489:2;;;11537:1;11534;11527:12;11489:2;11572:1;11589:53;11634:7;11614:9;11589:53;;11665:1327;;;;;;;;;11905:3;11893:9;11884:7;11880:23;11876:33;11873:2;;;11922:1;11919;11912:12;11873:2;11957:1;11974:53;12019:7;11999:9;11974:53;;;11964:63;;11936:97;12064:2;12082:53;12127:7;12118:6;12107:9;12103:22;12082:53;;;12072:63;;12043:98;12172:2;12190:53;12235:7;12226:6;12215:9;12211:22;12190:53;;;12180:63;;12151:98;12280:2;12298:53;12343:7;12334:6;12323:9;12319:22;12298:53;;;12288:63;;12259:98;12416:3;12405:9;12401:19;12388:33;-1:-1;;;;;12433:6;12430:30;12427:2;;;12473:1;12470;12463:12;12427:2;12493:62;12547:7;12538:6;12527:9;12523:22;12493:62;;;12483:72;;12367:194;12592:3;12611:53;12656:7;12647:6;12636:9;12632:22;12611:53;;;12601:63;;12571:99;12701:3;12720:52;12764:7;12755:6;12744:9;12740:22;12720:52;;;12710:62;;12680:98;12837:3;12826:9;12822:19;12809:33;-1:-1;;;;;12854:6;12851:30;12848:2;;;12894:1;12891;12884:12;12848:2;12914:62;12968:7;12959:6;12948:9;12944:22;12914:62;;;12904:72;;12788:194;11867:1125;;;;;;;;;;;;12999:845;;;;;;13179:3;13167:9;13158:7;13154:23;13150:33;13147:2;;;13196:1;13193;13186:12;13147:2;13231:1;13248:53;13293:7;13273:9;13248:53;;;13238:63;;13210:97;13338:2;13356:53;13401:7;13392:6;13381:9;13377:22;13356:53;;;13346:63;;13317:98;13446:2;13464:53;13509:7;13500:6;13489:9;13485:22;13464:53;;;13454:63;;13425:98;13554:2;13572:52;13616:7;13607:6;13596:9;13592:22;13572:52;;;13562:62;;13533:97;13689:3;13678:9;13674:19;13661:33;-1:-1;;;;;13706:6;13703:30;13700:2;;;13746:1;13743;13736:12;13700:2;13766:62;13820:7;13811:6;13800:9;13796:22;13766:62;;;13756:72;;13640:194;13141:703;;;;;;;;;13851:719;;;;;14014:3;14002:9;13993:7;13989:23;13985:33;13982:2;;;14031:1;14028;14021:12;13982:2;14066:1;14083:53;14128:7;14108:9;14083:53;;;14073:63;;14045:97;14173:2;14191:53;14236:7;14227:6;14216:9;14212:22;14191:53;;;14181:63;;14152:98;14281:2;14299:52;14343:7;14334:6;14323:9;14319:22;14299:52;;;14289:62;;14260:97;14416:2;14405:9;14401:18;14388:32;-1:-1;;;;;14432:6;14429:30;14426:2;;;14472:1;14469;14462:12;14426:2;14492:62;14546:7;14537:6;14526:9;14522:22;14492:62;;14577:613;;;;;14730:3;14718:9;14709:7;14705:23;14701:33;14698:2;;;14747:1;14744;14737:12;14698:2;14782:1;14799:53;14844:7;14824:9;14799:53;;;14789:63;;14761:97;14889:2;14907:52;14951:7;14942:6;14931:9;14927:22;14907:52;;;14897:62;;14868:97;14996:2;15014:52;15058:7;15049:6;15038:9;15034:22;15014:52;;15197:739;;;;;;15367:3;15355:9;15346:7;15342:23;15338:33;15335:2;;;15384:1;15381;15374:12;15335:2;15419:1;15436:53;15481:7;15461:9;15436:53;;;15426:63;;15398:97;15526:2;15544:52;15588:7;15579:6;15568:9;15564:22;15544:52;;;15534:62;;15505:97;15633:2;15651:52;15695:7;15686:6;15675:9;15671:22;15651:52;;;15641:62;;15612:97;15740:2;15758:53;15803:7;15794:6;15783:9;15779:22;15758:53;;;15748:63;;15719:98;15848:3;15867:53;15912:7;15903:6;15892:9;15888:22;15867:53;;15943:574;;;16082:2;16070:9;16061:7;16057:23;16053:32;16050:2;;;16098:1;16095;16088:12;16050:2;16133:31;;-1:-1;;;;;16173:30;;16170:2;;;16216:1;16213;16206:12;16170:2;16236:62;16290:7;16281:6;16270:9;16266:22;16236:62;;;16226:72;;16112:192;16363:2;16352:9;16348:18;16335:32;-1:-1;;;;;16379:6;16376:30;16373:2;;;16419:1;16416;16409:12;16373:2;16439:62;16493:7;16484:6;16473:9;16469:22;16439:62;;16524:317;;16666:2;16654:9;16645:7;16641:23;16637:32;16634:2;;;16682:1;16679;16672:12;16634:2;16717:1;16734:91;16817:7;16797:9;16734:91;;17096:263;;17211:2;17199:9;17190:7;17186:23;17182:32;17179:2;;;17227:1;17224;17217:12;17179:2;17262:1;17279:64;17335:7;17315:9;17279:64;;17366:366;;;17487:2;17475:9;17466:7;17462:23;17458:32;17455:2;;;17503:1;17500;17493:12;17455:2;17538:1;17555:53;17600:7;17580:9;17555:53;;18112:930;;;;;18328:3;18316:9;18307:7;18303:23;18299:33;18296:2;;;18345:1;18342;18335:12;18296:2;18380:1;18397:64;18453:7;18433:9;18397:64;;;18387:74;;18359:108;18498:2;18516:64;18572:7;18563:6;18552:9;18548:22;18516:64;;;18506:74;;18477:109;18638:2;18627:9;18623:18;18617:25;-1:-1;;;;;18654:6;18651:30;18648:2;;;18694:1;18691;18684:12;18648:2;18714:89;18795:7;18786:6;18775:9;18771:22;18714:89;;;18704:99;;18596:213;18861:2;18850:9;18846:18;18840:25;-1:-1;;;;;18877:6;18874:30;18871:2;;;18917:1;18914;18907:12;18871:2;18937:89;19018:7;19009:6;18998:9;18994:22;18937:89;;19049:595;;;;19196:2;19184:9;19175:7;19171:23;19167:32;19164:2;;;19212:1;19209;19202:12;19164:2;19247:1;19264:53;19309:7;19289:9;19264:53;;;19254:63;;19226:97;19354:2;19372:53;19417:7;19408:6;19397:9;19393:22;19372:53;;19652:173;;19739:46;19781:3;19773:6;19739:46;;;-1:-1;;19814:4;19805:14;;19732:93;19834:173;;19921:46;19963:3;19955:6;19921:46;;20214:269;;20347:96;20439:3;20431:6;20347:96;;;-1:-1;;20472:4;20463:14;;20340:143;20786:265;;20941:104;21041:3;21033:6;20941:104;;21242:185;;21335:52;21383:3;21375:6;21335:52;;21435:103;21508:24;21526:5;21508:24;;;21503:3;21496:37;21490:48;;;21942:690;;22087:54;22135:5;22087:54;;;22154:86;22233:6;22228:3;22154:86;;;22147:93;;22261:56;22311:5;22261:56;;;22337:7;22365:1;22350:260;22375:6;22372:1;22369:13;22350:260;;;22442:6;22436:13;22463:63;22522:3;22507:13;22463:63;;;22456:70;;22543:60;22596:6;22543:60;;;22533:70;-1:-1;;22397:1;22390:9;22350:260;;;-1:-1;22623:3;;22066:566;-1:-1;;;;;22066:566;22671:654;;22802:50;22846:5;22802:50;;;22865:76;22934:6;22929:3;22865:76;;;22858:83;;22962:52;23008:5;22962:52;;;23034:7;23062:1;23047:256;23072:6;23069:1;23066:13;23047:256;;;23139:6;23133:13;23160:63;23219:3;23204:13;23160:63;;;23153:70;;23240:56;23289:6;23240:56;;;23230:66;-1:-1;;23094:1;23087:9;23047:256;;23364:690;;23509:54;23557:5;23509:54;;;23576:86;23655:6;23650:3;23576:86;;;23569:93;;23683:56;23733:5;23683:56;;;23759:7;23787:1;23772:260;23797:6;23794:1;23791:13;23772:260;;;23864:6;23858:13;23885:63;23944:3;23929:13;23885:63;;;23878:70;;23965:60;24018:6;23965:60;;;23955:70;-1:-1;;23819:1;23812:9;23772:260;;24093:714;;24246:54;24294:5;24246:54;;;24313:94;24400:6;24395:3;24313:94;;;24306:101;;24428:56;24478:5;24428:56;;;24504:7;24532:1;24517:268;24542:6;24539:1;24536:13;24517:268;;;24609:6;24603:13;24630:71;24697:3;24682:13;24630:71;;;24623:78;;24718:60;24771:6;24718:60;;;24708:70;-1:-1;;24564:1;24557:9;24517:268;;24846:654;;24977:50;25021:5;24977:50;;;25040:76;25109:6;25104:3;25040:76;;;25033:83;;25137:52;25183:5;25137:52;;;25209:7;25237:1;25222:256;25247:6;25244:1;25241:13;25222:256;;;25314:6;25308:13;25335:63;25394:3;25379:13;25335:63;;;25328:70;;25415:56;25464:6;25415:56;;;25405:66;-1:-1;;25269:1;25262:9;25222:256;;25583:838;;25760:73;25827:5;25760:73;;;25846:99;25938:6;25933:3;25846:99;;;25839:106;;25966:75;26035:5;25966:75;;;26061:7;26089:1;26074:325;26099:6;26096:1;26093:13;26074:325;;;26166:6;26160:13;26187:109;26292:3;26277:13;26187:109;;;26180:116;;26313:79;26385:6;26313:79;;;26303:89;-1:-1;;26121:1;26114:9;26074:325;;26504:862;;26689:73;26756:5;26689:73;;;26775:107;26875:6;26870:3;26775:107;;;26768:114;;26903:75;26972:5;26903:75;;;26998:7;27026:1;27011:333;27036:6;27033:1;27030:13;27011:333;;;27103:6;27097:13;27124:117;27237:3;27222:13;27124:117;;;27117:124;;27258:79;27330:6;27258:79;;;27248:89;-1:-1;;27058:1;27051:9;27011:333;;27459:1052;;27654:79;27727:5;27654:79;;;27746:111;27850:6;27845:3;27746:111;;;27739:118;;27880:3;27922:4;27914:6;27910:17;27905:3;27901:27;27949:81;28024:5;27949:81;;;28050:7;28078:1;28063:409;28088:6;28085:1;28082:13;28063:409;;;28150:9;28144:4;28140:20;28135:3;28128:33;28195:6;28189:13;28217:118;28330:4;28315:13;28217:118;;;28209:126;;28352:85;28430:6;28352:85;;;28460:4;28451:14;;;;;28342:95;-1:-1;;28110:1;28103:9;28063:409;;;-1:-1;28485:4;;27633:878;-1:-1;;;;;;;27633:878;28550:690;;28695:54;28743:5;28695:54;;;28762:86;28841:6;28836:3;28762:86;;;28755:93;;28869:56;28919:5;28869:56;;;28945:7;28973:1;28958:260;28983:6;28980:1;28977:13;28958:260;;;29050:6;29044:13;29071:63;29130:3;29115:13;29071:63;;;29064:70;;29151:60;29204:6;29151:60;;;29141:70;-1:-1;;29005:1;28998:9;28958:260;;29279:654;;29410:50;29454:5;29410:50;;;29473:76;29542:6;29537:3;29473:76;;;29466:83;;29570:52;29616:5;29570:52;;;29642:7;29670:1;29655:256;29680:6;29677:1;29674:13;29655:256;;;29747:6;29741:13;29768:63;29827:3;29812:13;29768:63;;;29761:70;;29848:56;29897:6;29848:56;;;29838:66;-1:-1;;29702:1;29695:9;29655:256;;29970:706;;30121:53;30168:5;30121:53;;;30187:93;30273:6;30268:3;30187:93;;;30180:100;;30301:55;30350:5;30301:55;;;30376:7;30404:1;30389:265;30414:6;30411:1;30408:13;30389:265;;;30481:6;30475:13;30502:69;30567:3;30552:13;30502:69;;;30495:76;;30588:59;30640:6;30588:59;;;30578:69;-1:-1;;30436:1;30429:9;30389:265;;30684:104;30761:21;30776:5;30761:21;;30795:103;30868:24;30886:5;30868:24;;31151:343;;31261:38;31293:5;31261:38;;;31311:70;31374:6;31369:3;31311:70;;;31304:77;;31386:52;31431:6;31426:3;31419:4;31412:5;31408:16;31386:52;;;31459:29;31481:6;31459:29;;;31450:39;;;;31241:253;-1:-1;;;31241:253;32527:162;32623:60;32677:5;32623:60;;32696:142;32782:50;32826:5;32782:50;;32845:148;32934:53;32981:5;32934:53;;33163:146;33251:52;33297:5;33251:52;;33478:465;;33638:67;33702:2;33697:3;33638:67;;;33738:66;33718:87;;-1:-1;;;;;33834:2;33825:12;;33818:88;33934:2;33925:12;;33624:319;-1:-1;;33624:319;33952:364;;34112:67;34176:2;34171:3;34112:67;;;34212:66;34192:87;;34307:2;34298:12;;34098:218;-1:-1;;34098:218;34325:465;;34485:67;34549:2;34544:3;34485:67;;;34585:66;34565:87;;-1:-1;;;;;34681:2;34672:12;;34665:88;34781:2;34772:12;;34471:319;-1:-1;;34471:319;34799:364;;34959:67;35023:2;35018:3;34959:67;;;35059:66;35039:87;;35154:2;35145:12;;34945:218;-1:-1;;34945:218;35172:364;;35332:67;35396:2;35391:3;35332:67;;;35432:66;35412:87;;35527:2;35518:12;;35318:218;-1:-1;;35318:218;35545:364;;35705:67;35769:2;35764:3;35705:67;;;35805:66;35785:87;;35900:2;35891:12;;35691:218;-1:-1;;35691:218;35918:465;;36078:67;36142:2;36137:3;36078:67;;;36178:66;36158:87;;-1:-1;;;;;36274:2;36265:12;;36258:88;36374:2;36365:12;;36064:319;-1:-1;;36064:319;36392:465;;36552:67;36616:2;36611:3;36552:67;;;36652:66;36632:87;;36753:66;36748:2;36739:12;;36732:88;36848:2;36839:12;;36538:319;-1:-1;;36538:319;36866:364;;37026:67;37090:2;37085:3;37026:67;;;37126:66;37106:87;;37221:2;37212:12;;37012:218;-1:-1;;37012:218;37239:364;;37399:67;37463:2;37458:3;37399:67;;;37499:66;37479:87;;37594:2;37585:12;;37385:218;-1:-1;;37385:218;37612:364;;37772:67;37836:2;37831:3;37772:67;;;37872:66;37852:87;;37967:2;37958:12;;37758:218;-1:-1;;37758:218;37985:364;;38145:67;38209:2;38204:3;38145:67;;;38245:66;38225:87;;38340:2;38331:12;;38131:218;-1:-1;;38131:218;38358:465;;38518:67;38582:2;38577:3;38518:67;;;38618:66;38598:87;;-1:-1;;;;;38714:2;38705:12;;38698:88;38814:2;38805:12;;38504:319;-1:-1;;38504:319;38910:1120;39142:22;;38910:1120;;39075:4;39066:14;;;39170:62;39070:3;39142:22;39170:62;;;39095:143;39318:4;39311:5;39307:16;39301:23;39330:63;39387:4;39382:3;39378:14;39364:12;39330:63;;;39248:151;39476:4;39469:5;39465:16;39459:23;39488:63;39545:4;39540:3;39536:14;39522:12;39488:63;;;39409:148;39642:4;39635:5;39631:16;39625:23;39694:3;39688:4;39684:14;39677:4;39672:3;39668:14;39661:38;39714:99;39808:4;39794:12;39714:99;;;39706:107;;39567:258;39900:4;39893:5;39889:16;39883:23;39912:86;39992:4;39987:3;39983:14;39969:12;39912:86;;;-1:-1;40021:4;39048:982;-1:-1;;;39048:982;40037:122;40136:18;;40130:29;40237:1532;40463:22;;40237:1532;;40394:5;40385:15;;;40491:62;40389:3;40463:22;40491:62;;;40415:144;40638:4;40631:5;40627:16;40621:23;40650:63;40707:4;40702:3;40698:14;40684:12;40650:63;;;40569:150;40798:4;40791:5;40787:16;40781:23;40810:63;40867:4;40862:3;40858:14;40844:12;40810:63;;;40729:150;40956:4;40949:5;40945:16;40939:23;40968:61;41023:4;41018:3;41014:14;41000:12;40968:61;;;40889:146;41109:4;41102:5;41098:16;41092:23;41121:61;41176:4;41171:3;41167:14;41153:12;41121:61;;;41045:143;41268:4;41261:5;41257:16;41251:23;41280:63;41337:4;41332:3;41328:14;41314:12;41280:63;;;41198:151;41424:4;41417:5;41413:16;41407:23;41436:76;41506:4;41501:3;41497:14;41483:12;41436:76;;;41359:159;41592:4;41585:5;41581:16;41575:23;41644:3;41638:4;41634:14;41627:4;41622:3;41618:14;41611:38;41664:67;41726:4;41712:12;41664:67;;;41656:75;40367:1402;-1:-1;;;;;40367:1402;41845:655;42055:22;;41978:4;41969:14;;;42083:78;41973:3;42055:22;42083:78;;;41998:169;42247:4;42240:5;42236:16;42230:23;42259:63;42316:4;42311:3;42307:14;42293:12;42259:63;;;42177:151;42404:4;42397:5;42393:16;42387:23;42416:63;42473:4;42468:3;42464:14;42450:12;42416:63;;;42338:147;41951:549;;;;43333:1201;43550:22;;43333:1201;;43482:4;43473:14;;;43578:62;43477:3;43550:22;43578:62;;;43502:144;43721:4;43714:5;43710:16;43704:23;43733:78;43805:4;43800:3;43796:14;43782:12;43733:78;;;43656:161;43892:4;43885:5;43881:16;43875:23;43944:3;43938:4;43934:14;43927:4;43922:3;43918:14;43911:38;43964:67;44026:4;44012:12;43964:67;;;43956:75;;43827:216;44119:4;44112:5;44108:16;44102:23;44131:63;44188:4;44183:3;44179:14;44165:12;44131:63;;;44053:147;44279:4;44272:5;44268:16;44262:23;44331:3;44325:4;44321:14;44314:4;44309:3;44305:14;44298:38;44351:145;44491:4;44477:12;44351:145;;44604:1249;44829:22;;44604:1249;;44761:4;44752:14;;;44857:70;44756:3;44829:22;44857:70;;;44781:152;45008:4;45001:5;44997:16;44991:23;45020:86;45100:4;45095:3;45091:14;45077:12;45020:86;;;44943:169;45187:4;45180:5;45176:16;45170:23;45239:3;45233:4;45229:14;45222:4;45217:3;45213:14;45206:38;45259:75;45329:4;45315:12;45259:75;;;45251:83;;45122:224;45422:4;45415:5;45411:16;45405:23;45434:71;45499:4;45494:3;45490:14;45476:12;45434:71;;;45356:155;45590:4;45583:5;45579:16;45573:23;45642:3;45636:4;45632:14;45625:4;45620:3;45616:14;45609:38;45662:153;45810:4;45796:12;45662:153;;45937:1020;46164:22;;45937:1020;;46086:4;46077:14;;;46192:62;46081:3;46164:22;46192:62;;;46106:154;46336:4;46329:5;46325:16;46319:23;46388:3;46382:4;46378:14;46371:4;46366:3;46362:14;46355:38;46408:99;46502:4;46488:12;46408:99;;;46400:107;;46270:249;46594:4;46587:5;46583:16;46577:23;46646:3;46640:4;46636:14;46629:4;46624:3;46620:14;46613:38;46666:99;46760:4;46746:12;46666:99;;;46658:107;;46529:248;46850:4;46843:5;46839:16;46833:23;46862:63;46919:4;46914:3;46910:14;46896:12;46862:63;;47440:100;47511:23;47528:5;47511:23;;47787:213;47905:2;47890:18;;47919:71;47894:9;47963:6;47919:71;;48007:408;48171:2;48156:18;;48185:71;48160:9;48229:6;48185:71;;;48304:9;48298:4;48294:20;48289:2;48278:9;48274:18;48267:48;48329:76;48400:4;48391:6;48329:76;;48422:468;48616:2;48601:18;;48630:71;48605:9;48674:6;48630:71;;;48749:9;48743:4;48739:20;48734:2;48723:9;48719:18;48712:48;48774:106;48875:4;48866:6;48774:106;;48897:361;49065:2;49079:47;;;49050:18;;49140:108;49050:18;49234:6;49140:108;;49265:620;49511:2;49525:47;;;49496:18;;49586:108;49496:18;49680:6;49586:108;;;49578:116;;49742:9;49736:4;49732:20;49727:2;49716:9;49712:18;49705:48;49767:108;49870:4;49861:6;49767:108;;49892:361;50060:2;50074:47;;;50045:18;;50135:108;50045:18;50229:6;50135:108;;50260:461;50478:2;50492:47;;;50463:18;;50553:158;50463:18;50697:6;50553:158;;50728:201;50840:2;50825:18;;50854:65;50829:9;50892:6;50854:65;;50936:516;51126:2;51140:47;;;51111:18;;51201:84;51111:18;51271:6;51201:84;;;51193:92;;51333:9;51327:4;51323:20;51318:2;51307:9;51303:18;51296:48;51358:84;51437:4;51428:6;51358:84;;51459:407;51650:2;51664:47;;;51635:18;;51725:131;51635:18;51725:131;;51873:407;52064:2;52078:47;;;52049:18;;52139:131;52049:18;52139:131;;52287:407;52478:2;52492:47;;;52463:18;;52553:131;52463:18;52553:131;;52701:407;52892:2;52906:47;;;52877:18;;52967:131;52877:18;52967:131;;53115:407;53306:2;53320:47;;;53291:18;;53381:131;53291:18;53381:131;;53529:407;53720:2;53734:47;;;53705:18;;53795:131;53705:18;53795:131;;53943:407;54134:2;54148:47;;;54119:18;;54209:131;54119:18;54209:131;;54357:407;54548:2;54562:47;;;54533:18;;54623:131;54533:18;54623:131;;54771:407;54962:2;54976:47;;;54947:18;;55037:131;54947:18;55037:131;;55185:407;55376:2;55390:47;;;55361:18;;55451:131;55361:18;55451:131;;55599:407;55790:2;55804:47;;;55775:18;;55865:131;55775:18;55865:131;;56013:407;56204:2;56218:47;;;56189:18;;56279:131;56189:18;56279:131;;56427:407;56618:2;56632:47;;;56603:18;;56693:131;56603:18;56693:131;;56841:389;57023:2;57037:47;;;57008:18;;57098:122;57008:18;57206:6;57098:122;;57237:269;57383:2;57368:18;;57397:99;57372:9;57469:6;57397:99;;57513:388;57687:2;57672:18;;57701:99;57676:9;57773:6;57701:99;;;57811:80;57887:2;57876:9;57872:18;57863:6;57811:80;;57908:711;58156:3;58141:19;;58171:99;58145:9;58243:6;58171:99;;;58281:80;58357:2;58346:9;58342:18;58333:6;58281:80;;;58372;58448:2;58437:9;58433:18;58424:6;58372:80;;;58500:9;58494:4;58490:20;58485:2;58474:9;58470:18;58463:48;58525:84;58604:4;58595:6;58525:84;;;58517:92;58127:492;-1:-1;;;;;;58127:492;58626:795;58892:3;58877:19;;58907:99;58881:9;58979:6;58907:99;;;59017:80;59093:2;59082:9;59078:18;59069:6;59017:80;;;59145:9;59139:4;59135:20;59130:2;59119:9;59115:18;59108:48;59170:84;59249:4;59240:6;59170:84;;;59162:92;;59302:9;59296:4;59292:20;59287:2;59276:9;59272:18;59265:48;59327:84;59406:4;59397:6;59327:84;;59428:507;59630:2;59615:18;;59644:99;59619:9;59716:6;59644:99;;;59754:80;59830:2;59819:9;59815:18;59806:6;59754:80;;;59845;59921:2;59910:9;59906:18;59897:6;59845:80;;59942:1183;60346:3;60331:19;;60361:99;60335:9;60433:6;60361:99;;;60508:9;60502:4;60498:20;60493:2;60482:9;60478:18;60471:48;60533:116;60644:4;60635:6;60533:116;;;60525:124;;60697:9;60691:4;60687:20;60682:2;60671:9;60667:18;60660:48;60722:114;60831:4;60822:6;60722:114;;;60714:122;;60884:9;60878:4;60874:20;60869:2;60858:9;60854:18;60847:48;60909:114;61018:4;61009:6;60909:114;;;60901:122;;61034:81;61110:3;61099:9;61095:19;61086:6;61034:81;;61132:388;61306:2;61291:18;;61320:99;61295:9;61392:6;61320:99;;;61430:80;61506:2;61495:9;61491:18;61482:6;61430:80;;61527:1391;61931:3;61916:19;;61946:99;61920:9;62018:6;61946:99;;;62056:80;62132:2;62121:9;62117:18;62108:6;62056:80;;;62147;62223:2;62212:9;62208:18;62199:6;62147:80;;;62238;62314:2;62303:9;62299:18;62290:6;62238:80;;;62329:81;62405:3;62394:9;62390:19;62381:6;62329:81;;;62459:9;62453:4;62449:20;62443:3;62432:9;62428:19;62421:49;62484:84;62563:4;62554:6;62484:84;;;62476:92;;62579:81;62655:3;62644:9;62640:19;62631:6;62579:81;;;62671:79;62745:3;62734:9;62730:19;62721:6;62671:79;;;62799:9;62793:4;62789:20;62783:3;62772:9;62768:19;62761:49;62824:84;62903:4;62894:6;62824:84;;;62816:92;61902:1016;-1:-1;;;;;;;;;;;61902:1016;62925:947;63227:3;63212:19;;63242:99;63216:9;63314:6;63242:99;;;63352:80;63428:2;63417:9;63413:18;63404:6;63352:80;;;63443;63519:2;63508:9;63504:18;63495:6;63443:80;;;63534;63610:2;63599:9;63595:18;63586:6;63534:80;;;63625:79;63699:3;63688:9;63684:19;63675:6;63625:79;;;63753:9;63747:4;63743:20;63737:3;63726:9;63722:19;63715:49;63778:84;63857:4;63848:6;63778:84;;;63770:92;63198:674;-1:-1;;;;;;;;63198:674;63879:827;64153:3;64138:19;;64168:99;64142:9;64240:6;64168:99;;;64278:80;64354:2;64343:9;64339:18;64330:6;64278:80;;;64369;64445:2;64434:9;64430:18;64421:6;64369:80;;;64460:78;64534:2;64523:9;64519:18;64510:6;64460:78;;;64587:9;64581:4;64577:20;64571:3;64560:9;64556:19;64549:49;64612:84;64691:4;64682:6;64612:84;;;64604:92;64124:582;-1:-1;;;;;;;64124:582;64713:739;64967:3;64952:19;;64982:99;64956:9;65054:6;64982:99;;;65092:80;65168:2;65157:9;65153:18;65144:6;65092:80;;;65183:78;65257:2;65246:9;65242:18;65233:6;65183:78;;;65272;65346:2;65335:9;65331:18;65322:6;65272:78;;;65361:81;65437:3;65426:9;65422:19;65413:6;65361:81;;65459:859;65741:3;65726:19;;65756:99;65730:9;65828:6;65756:99;;;65866:80;65942:2;65931:9;65927:18;65918:6;65866:80;;;65957:78;66031:2;66020:9;66016:18;66007:6;65957:78;;;66046;66120:2;66109:9;66105:18;66096:6;66046:78;;;66135:81;66211:3;66200:9;66196:19;66187:6;66135:81;;;66227;66303:3;66292:9;66288:19;66279:6;66227:81;;66720:507;66922:2;66907:18;;66936:99;66911:9;67008:6;66936:99;;;67046:80;67122:2;67111:9;67107:18;67098:6;67046:80;;67748:711;67996:3;67981:19;;68011:99;67985:9;68083:6;68011:99;;;68121:80;68197:2;68186:9;68182:18;68173:6;68121:80;;;68212;68288:2;68277:9;68273:18;68264:6;68212:80;;68466:373;68640:2;68654:47;;;68625:18;;68715:114;68625:18;68815:6;68715:114;;68846:357;69012:2;69026:47;;;68997:18;;69087:106;68997:18;69179:6;69087:106;;69210:492;69412:2;69426:47;;;69397:18;;69487:114;69397:18;69587:6;69487:114;;;69479:122;;69612:80;69688:2;69677:9;69673:18;69664:6;69612:80;;69709:213;69827:2;69812:18;;69841:71;69816:9;69885:6;69841:71;;69929:843;70231:3;70216:19;;70246:71;70220:9;70290:6;70246:71;;;70328:72;70396:2;70385:9;70381:18;70372:6;70328:72;;;70448:9;70442:4;70438:20;70433:2;70422:9;70418:18;70411:48;70473:108;70576:4;70567:6;70473:108;;;70465:116;;70629:9;70623:4;70619:20;70614:2;70603:9;70599:18;70592:48;70654:108;70757:4;70748:6;70654:108;;70779:256;70841:2;70835:9;70867:17;;;-1:-1;;;;;70927:34;;70963:22;;;70924:62;70921:2;;;70999:1;70996;70989:12;70921:2;71015;71008:22;70819:216;;-1:-1;70819:216;71042:258;;-1:-1;;;;;71193:6;71190:30;71187:2;;;71233:1;71230;71223:12;71187:2;-1:-1;71262:4;71250:17;;;71280:15;;71124:176;72101:258;;-1:-1;;;;;72236:6;72233:30;72230:2;;;72276:1;72273;72266:12;72230:2;-1:-1;72349:4;72320;72297:17;;;;-1:-1;;72293:33;72339:15;;72167:192;72369:119;72475:4;72463:17;;72443:45;73060:137;73183:6;73163:34;73610:103;73696:12;;73680:33;74191:123;-1:-1;74306:3;;74290:24;76097:168;76205:19;;;76254:4;76245:14;;76198:67;79013:91;;79075:24;79093:5;79075:24;;79111:85;79177:13;79170:21;;79153:43;79282:156;79369:5;79375:58;79369:5;79375:58;;79445:136;79522:5;79528:48;79522:5;79528:48;;79588:142;79668:5;79674:51;79668:5;79674:51;;79737:140;79816:5;79822:50;79816:5;79822:50;;79884:121;-1:-1;;;;;79946:54;;79929:76;80091:96;-1:-1;;;;;80152:30;;80135:52;80194:156;;80296:49;80339:5;80296:49;;80357:136;;80449:39;80482:5;80449:39;;80500:142;;80595:42;80631:5;80595:42;;80649:140;;80743:41;80778:5;80743:41;;80797:145;80878:6;80873:3;80868;80855:30;-1:-1;80934:1;80916:16;;80909:27;80848:94;80951:268;81016:1;81023:101;81037:6;81034:1;81031:13;81023:101;;;81104:11;;;81098:18;81085:11;;;81078:39;81059:2;81052:10;81023:101;;;81139:6;81136:1;81133:13;81130:2;;;-1:-1;;81204:1;81186:16;;81179:27;81000:219;81227:97;81315:2;81295:14;-1:-1;;81291:28;;81275:49;81332:116;81426:1;81419:5;81416:12;81406:2;;81432:9;81455:106;81539:1;81532:5;81529:12;81519:2;;81545:9;81568:109;81655:1;81648:5;81645:12;81635:2;;81661:9;81684:108;81770:1;81763:5;81760:12;81750:2;;81776:9;81799:117;81868:24;81886:5;81868:24;;;81861:5;81858:35;81848:2;;81907:1;81904;81897:12;81923:117;81992:24;82010:5;81992:24;;82047:112;82134:1;82127:5;82124:12;82114:2;;82150:1;82147;82140:12;82290:115;82358:23;82375:5;82358:23;","source":"pragma solidity ^0.5.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\"openzeppelin-solidity/contracts/math/SafeMath.sol\\";\\nimport \\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\";\\nimport \\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\";\\nimport \\"./utils/SolRsaVerify.sol\\";\\n\\nimport { WorkersImpl } from \\"./impl/WorkersImpl.sol\\";\\nimport { PrincipalImpl } from \\"./impl/PrincipalImpl.sol\\";\\nimport { TaskImpl } from \\"./impl/TaskImpl.sol\\";\\nimport { UpgradeImpl } from \\"./impl/UpgradeImpl.sol\\";\\nimport { SecretContractImpl } from \\"./impl/SecretContractImpl.sol\\";\\nimport { EnigmaCommon } from \\"./impl/EnigmaCommon.sol\\";\\nimport { EnigmaState } from \\"./impl/EnigmaState.sol\\";\\nimport { EnigmaEvents } from \\"./impl/EnigmaEvents.sol\\";\\nimport { EnigmaStorage } from \\"./impl/EnigmaStorage.sol\\";\\nimport { Getters } from \\"./impl/Getters.sol\\";\\nimport { ERC20 } from \\"./interfaces/ERC20.sol\\";\\n\\ncontract Enigma is EnigmaStorage, EnigmaEvents, Getters, Ownable {\\n    using SafeMath for uint256;\\n    using ECDSA for bytes32;\\n\\n    // ========================================== Constructor ==========================================\\n\\n    constructor(address _tokenAddress, address _principal, uint _epochSize)\\n    public {\\n        state.engToken = ERC20(_tokenAddress);\\n        state.epochSize = _epochSize;\\n        state.taskTimeoutSize = 200;\\n        state.principal = _principal;\\n        state.updatedEnigmaContractAddress = address(this);\\n        state.stakingThreshold = 1;\\n        state.workerGroupSize = 1;\\n    }\\n\\n    // ========================================== Modifiers ==========================================\\n\\n    /**\\n    * Checks if the custodian wallet is registered as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerRegistered(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status != EnigmaCommon.WorkerStatus.Unregistered, \\"Unregistered worker\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged in as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedIn, \\"Worker not logged in\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged out as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedOut(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not logged out\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if worker can log in\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canLogIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(getFirstBlockNumber(block.number) != 0, \\"Principal node has not been initialized\\");\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        require(worker.balance >= state.stakingThreshold, \\"Worker\'s balance is not sufficient\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the worker can withdraw\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canWithdraw(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        EnigmaCommon.WorkerLog memory workerLog = WorkersImpl.getLatestWorkerLogImpl(worker, block.number);\\n        require(workerLog.workerEventType == EnigmaCommon.WorkerLogType.LogOut,\\n            \\"Worker\'s last log is not of LogOut type\\");\\n        require(getFirstBlockNumber(block.number) > workerLog.blockNumber,\\n            \\"Cannot withdraw in same epoch as log out event\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has not been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractUndefined(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Undefined, \\"Secret contract already deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractDeployed(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Deployed, \\"Secret contract not deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks task record has been created and is still pending receipt\\n    *\\n    * @param _taskId Task ID\\n    */\\n    modifier taskWaiting(bytes32 _taskId) {\\n        require(state.tasks[_taskId].status == EnigmaCommon.TaskStatus.RecordCreated, \\"Task is not waiting\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure signing key used for registration is unique\\n    *\\n    * @param _signer Signing key\\n    */\\n    modifier isUniqueSigningKey(address _signer) {\\n        for (uint i = 0; i < state.workerAddresses.length; i++) {\\n            require(state.workers[state.workerAddresses[i]].signer != _signer, \\"Not a unique signing key\\");\\n        }\\n        _;\\n    }\\n\\n    /**\\n    * Ensure that the contract\'s context is the updated contract\\n    *\\n    */\\n    modifier isUpdatedEnigmaContract() {\\n        require(address(this) == state.updatedEnigmaContractAddress, \\"Not updated Enigma contract\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure the sender of the recent call is the updated contract\\n    *\\n    */\\n    modifier fromUpdatedEnigmaContract() {\\n        require(msg.sender == state.updatedEnigmaContractAddress, \\"Not from updated Enigma contract\\");\\n        _;\\n    }\\n\\n    // ========================================== Functions ==========================================\\n\\n    /**\\n    * Registers a new worker or change the signer parameters of an existing\\n    * worker. This should be called by every worker (and the principal)\\n    * node in order to receive tasks.\\n    *\\n    * @param _signer The signer address, derived from the enclave public key\\n    * @param _report The RLP encoded report returned by the IAS\\n    * @param _signature Signature\\n    */\\n    function register(address _signer, bytes memory _report, bytes memory _signature)\\n    public\\n    isUpdatedEnigmaContract\\n    isUniqueSigningKey(_signer)\\n    {\\n        WorkersImpl.registerImpl(state, _signer, _report, _signature);\\n    }\\n\\n    /**\\n    * Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    *\\n    * @param _custodian The worker\'s ETH address\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function deposit(address _custodian, uint _amount)\\n    public\\n    isUpdatedEnigmaContract\\n    workerRegistered(_custodian)\\n    {\\n        WorkersImpl.depositImpl(state, _custodian, _amount);\\n    }\\n\\n    /**\\n    * Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    *\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function withdraw(uint _amount)\\n    public\\n    canWithdraw(msg.sender)\\n    {\\n        WorkersImpl.withdrawImpl(state, _amount);\\n    }\\n\\n    /**\\n    * Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\n    * selection process.\\n    */\\n    function login() public canLogIn(msg.sender) {\\n        WorkersImpl.loginImpl(state);\\n    }\\n\\n    /**\\n    * Logout worker. Worker must be logged in to do so.\\n    */\\n    function logout() public workerLoggedIn(msg.sender) {\\n        WorkersImpl.logoutImpl(state);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContractFailure(\\n        bytes32 _taskId,\\n        bytes32 _codeHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractFailureImpl(state, _taskId, _codeHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _preCodeHash Predeployed bytecode hash\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContract(\\n        bytes32 _taskId,\\n        bytes32 _preCodeHash,\\n        bytes32 _codeHash,\\n        bytes32 _initStateDeltaHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractImpl(state, _taskId, _preCodeHash, _codeHash, _initStateDeltaHash,\\n            _optionalEthereumData, _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Check if secret contract has been deployed\\n    *\\n    * @return  Number of deployed secret contracts\\n    */\\n    function countSecretContracts()\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return SecretContractImpl.countSecretContractsImpl(state);\\n    }\\n\\n    /**\\n    * Get deployed secret contract addresses within a range\\n    *\\n    * @param _start Start of range\\n    * @param _stop End of range\\n    * @return Subset of deployed secret contract addresses\\n    */\\n    function getSecretContractAddresses(uint _start, uint _stop)\\n    public\\n    view\\n    returns (bytes32[] memory)\\n    {\\n        return SecretContractImpl.getSecretContractAddressesImpl(state, _start, _stop);\\n    }\\n\\n    /**\\n    * Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\n    * generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\n    * task deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\n    * the on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\n    * invalid.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    * @param _nonce Locally-computed nonce value for this deployment\\n    */\\n    function createDeploymentTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber,\\n        uint _nonce\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createDeploymentTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber, _nonce);\\n    }\\n\\n    /**\\n    * Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\n    * contract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\n    * the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\n    * transferring task fee from sender to contract, generating the unique taskId, saving the block number\\n    * when the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimits ENG gas limit\\n    * @param _gasPxs ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecords(\\n        bytes32[] memory _inputsHashes,\\n        uint64[] memory _gasLimits,\\n        uint64[] memory _gasPxs,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    {\\n        TaskImpl.createTaskRecordsImpl(state, _inputsHashes, _gasLimits, _gasPxs, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\n    * The task record is finalized and the worker is credited with the task fee.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _stateDeltaHash Input state delta hash\\n    * @param _outputHash Output state hash\\n    * @param _optionalEthereumData Output state hash\\n    * @param _optionalEthereumContractAddress Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitReceipt(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _stateDeltaHash,\\n        bytes32 _outputHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitReceiptImpl(state, _scAddr, _taskId, _stateDeltaHash, _outputHash, _optionalEthereumData,\\n            _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\n    * updated to indicate task failure.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _outputHash Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitTaskFailure(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _outputHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    isUpdatedEnigmaContract\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitTaskFailureImpl(state, _scAddr, _taskId, _outputHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    *\\n    * @param _taskId Unique taskId\\n    */\\n    function returnFeesForTask(bytes32 _taskId)\\n    public\\n    taskWaiting(_taskId)\\n    {\\n        TaskImpl.returnFeesForTaskImpl(state, _taskId);\\n    }\\n\\n    /**\\n    * Reparameterizing workers with a new seed\\n    * This should be called for each epoch by the Principal node\\n    *\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n    * @param _seed The random integer generated by the enclave\\n    * @param _sig Principal node\'s signature\\n    */\\n    function setWorkersParams(uint _blockNumber, uint _seed, bytes memory _sig)\\n    public\\n    isUpdatedEnigmaContract\\n    workerRegistered(msg.sender)\\n    {\\n        PrincipalImpl.setWorkersParamsImpl(state, _blockNumber, _seed, _sig);\\n    }\\n\\n    /**\\n    * Get active workers before a certain block number\\n    *\\n    * @param _blockNumber Block number\\n    */\\n    function getActiveWorkers(uint _blockNumber)\\n    public\\n    view\\n    returns (address[] memory, uint[] memory)\\n    {\\n        return PrincipalImpl.getActiveWorkersImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get the first block number of an epoch that a given block number belongs to\\n    *\\n    * @param _blockNumber Block number\\n    * @return Block number\\n    */\\n    function getFirstBlockNumber(uint _blockNumber)\\n    public\\n    view\\n    returns (uint) {\\n        return WorkersImpl.getFirstBlockNumberImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get worker params for an epoch given a particular block number\\n    *\\n    * @param _blockNumber Block number\\n    * @return Epoch\'s first block number\\n    * @return Seed\\n    * @return Array of worker\'s signing addresses\\n    * @return Array of worker\'s stakes\\n    */\\n    function getWorkerParams(uint _blockNumber)\\n    public\\n    view\\n    returns (uint, uint, address[] memory, uint[] memory) {\\n        return WorkersImpl.getWorkerParamsImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\n    * and the secret contract address.\\n    *\\n    * @param _blockNumber Block number the task record was mined\\n    * @param _scAddr Secret contract address\\n    * @return Selected workers\' addresses\\n    */\\n    function getWorkerGroup(uint _blockNumber, bytes32 _scAddr)\\n    public\\n    view\\n    returns (address[] memory)\\n    {\\n        return WorkersImpl.getWorkerGroupImpl(state, _blockNumber, _scAddr);\\n    }\\n\\n    /**\\n    * The RLP encoded report returned by the IAS server\\n    *\\n    * @param _custodian The worker\'s custodian address\\n    */\\n    function getReport(address _custodian)\\n    public\\n    view\\n    workerRegistered(_custodian)\\n    returns (address, bytes memory)\\n    {\\n        return WorkersImpl.getReportImpl(state, _custodian);\\n    }\\n\\n    /**\\n    * This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n    * @param _data The report itself\\n    * @param _signature The signature of the report\\n    */\\n    function verifyReport(bytes memory _data, bytes memory _signature)\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return WorkersImpl.verifyReportImpl(_data, _signature);\\n    }\\n\\n    /**\\n    * Upgrade Enigma Contract\\n    * @param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address\\n    */\\n    function upgradeEnigmaContract(address _updatedEnigmaContractAddress)\\n    public\\n    onlyOwner\\n    isUpdatedEnigmaContract\\n    {\\n        return UpgradeImpl.upgradeEnigmaContractImpl(state, _updatedEnigmaContractAddress);\\n    }\\n\\n    /**\\n    * Upgrade Enigma Contract\\n    * @param _workerAddress Newly-registered worker address\\n    * @param _signer Newly-registered worker address\\n    * @param _sig Signature\\n    */\\n    function transferWorkerStakePostUpgrade(address _workerAddress, address _signer, bytes memory _sig)\\n    public\\n    fromUpdatedEnigmaContract\\n    returns (uint256)\\n    {\\n        return UpgradeImpl.transferWorkerStakePostUpgradeImpl(state, _workerAddress, _signer, _sig);\\n    }\\n}\\n","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[927]},"id":928,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":928,"sourceUnit":17704,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":928,"sourceUnit":17576,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"openzeppelin-solidity/contracts/ownership/Ownable.sol","id":5,"nodeType":"ImportDirective","scope":928,"sourceUnit":17813,"src":"184:63:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":6,"nodeType":"ImportDirective","scope":928,"sourceUnit":17495,"src":"248:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":8,"nodeType":"ImportDirective","scope":928,"sourceUnit":9840,"src":"284:53:0","symbolAliases":[{"foreign":7,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":10,"nodeType":"ImportDirective","scope":928,"sourceUnit":3324,"src":"338:57:0","symbolAliases":[{"foreign":9,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":12,"nodeType":"ImportDirective","scope":928,"sourceUnit":6300,"src":"396:47:0","symbolAliases":[{"foreign":11,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol","file":"./impl/UpgradeImpl.sol","id":14,"nodeType":"ImportDirective","scope":928,"sourceUnit":8820,"src":"444:53:0","symbolAliases":[{"foreign":13,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":16,"nodeType":"ImportDirective","scope":928,"sourceUnit":3962,"src":"498:67:0","symbolAliases":[{"foreign":15,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":18,"nodeType":"ImportDirective","scope":928,"sourceUnit":2422,"src":"566:55:0","symbolAliases":[{"foreign":17,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":20,"nodeType":"ImportDirective","scope":928,"sourceUnit":2617,"src":"622:53:0","symbolAliases":[{"foreign":19,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":22,"nodeType":"ImportDirective","scope":928,"sourceUnit":2563,"src":"676:55:0","symbolAliases":[{"foreign":21,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":24,"nodeType":"ImportDirective","scope":928,"sourceUnit":2625,"src":"732:57:0","symbolAliases":[{"foreign":23,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":26,"nodeType":"ImportDirective","scope":928,"sourceUnit":2799,"src":"790:45:0","symbolAliases":[{"foreign":25,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":28,"nodeType":"ImportDirective","scope":928,"sourceUnit":10825,"src":"836:47:0","symbolAliases":[{"foreign":27,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":29,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2624,"src":"904:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2624","typeString":"contract EnigmaStorage"}},"id":30,"nodeType":"InheritanceSpecifier","src":"904:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":31,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2562,"src":"919:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2562","typeString":"contract EnigmaEvents"}},"id":32,"nodeType":"InheritanceSpecifier","src":"919:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":33,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2798,"src":"933:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2798","typeString":"contract Getters"}},"id":34,"nodeType":"InheritanceSpecifier","src":"933:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":35,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":17812,"src":"942:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$17812","typeString":"contract Ownable"}},"id":36,"nodeType":"InheritanceSpecifier","src":"942:7:0"}],"contractDependencies":[2562,2624,2798,17812],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":927,"linearizedBaseContracts":[927,17812,2798,2562,2624],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":39,"libraryName":{"contractScope":null,"id":37,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":17703,"src":"962:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$17703","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"956:27:0","typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":42,"libraryName":{"contractScope":null,"id":40,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":17575,"src":"994:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$17575","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"988:24:0","typeName":{"id":41,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1004:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":97,"nodeType":"Block","src":"1207:298:0","statements":[{"expression":{"argumentTypes":null,"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":51,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1217:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":53,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2571,"src":"1217:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10824","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":55,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1240:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":54,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10824,"src":"1234:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10824_$","typeString":"type(contract ERC20)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1234:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10824","typeString":"contract ERC20"}},"src":"1217:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10824","typeString":"contract ERC20"}},"id":58,"nodeType":"ExpressionStatement","src":"1217:37:0"},{"expression":{"argumentTypes":null,"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":59,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1264:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":61,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2573,"src":"1264:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":62,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1282:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1264:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":64,"nodeType":"ExpressionStatement","src":"1264:28:0"},{"expression":{"argumentTypes":null,"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":65,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1302:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":67,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2575,"src":"1302:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"323030","id":68,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1326:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"1302:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":70,"nodeType":"ExpressionStatement","src":"1302:27:0"},{"expression":{"argumentTypes":null,"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":71,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1339:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":73,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2577,"src":"1339:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":74,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1357:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1339:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":76,"nodeType":"ExpressionStatement","src":"1339:28:0"},{"expression":{"argumentTypes":null,"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":77,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1377:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":79,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2579,"src":"1377:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":81,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18436,"src":"1422:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$927","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$927","typeString":"contract Enigma"}],"id":80,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1377:50:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":84,"nodeType":"ExpressionStatement","src":"1377:50:0"},{"expression":{"argumentTypes":null,"id":89,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":85,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1437:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":87,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2612,"src":"1437:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":88,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1462:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1437:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":90,"nodeType":"ExpressionStatement","src":"1437:26:0"},{"expression":{"argumentTypes":null,"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":91,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1473:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":93,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2614,"src":"1473:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1497:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1473:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":96,"nodeType":"ExpressionStatement","src":"1473:25:0"}]},"documentation":null,"id":98,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":98,"src":"1136:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":46,"name":"_principal","nodeType":"VariableDeclaration","scope":98,"src":"1159:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":48,"name":"_epochSize","nodeType":"VariableDeclaration","scope":98,"src":"1179:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint","nodeType":"ElementaryTypeName","src":"1179:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1135:60:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[],"src":"1207:0:0"},"scope":927,"src":"1124:381:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":122,"nodeType":"Block","src":"1795:181:0","statements":[{"assignments":[105],"declarations":[{"constant":false,"id":105,"name":"worker","nodeType":"VariableDeclaration","scope":122,"src":"1805:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":104,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2328,"src":"1805:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":110,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":106,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1841:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2595,"src":"1841:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2328_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":109,"indexExpression":{"argumentTypes":null,"id":108,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1841:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1805:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":112,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"1879:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"1879:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":114,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"1896:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"1896:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2369_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1896:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1879:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1936:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":111,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"1871:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1871:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":120,"nodeType":"ExpressionStatement","src":"1871:87:0"},{"id":121,"nodeType":"PlaceholderStatement","src":"1968:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":123,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"name":"_user","nodeType":"VariableDeclaration","scope":123,"src":"1780:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"1780:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1779:15:0"},"src":"1754:222:0","visibility":"internal"},{"body":{"id":147,"nodeType":"Block","src":"2159:178:0","statements":[{"assignments":[130],"declarations":[{"constant":false,"id":130,"name":"worker","nodeType":"VariableDeclaration","scope":147,"src":"2169:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":129,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2328,"src":"2169:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":135,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":131,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"2205:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2595,"src":"2205:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2328_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":134,"indexExpression":{"argumentTypes":null,"id":133,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2219:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2205:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2169:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":137,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2243:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"2243:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":139,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"2260:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"2260:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2369_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2260:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2243:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2296:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":136,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"2235:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2235:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":145,"nodeType":"ExpressionStatement","src":"2235:84:0"},{"id":146,"nodeType":"PlaceholderStatement","src":"2329:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":148,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"name":"_user","nodeType":"VariableDeclaration","scope":148,"src":"2144:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"2144:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2143:15:0"},"src":"2120:217:0","visibility":"internal"},{"body":{"id":172,"nodeType":"Block","src":"2522:180:0","statements":[{"assignments":[155],"declarations":[{"constant":false,"id":155,"name":"worker","nodeType":"VariableDeclaration","scope":172,"src":"2532:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":154,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2328,"src":"2532:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":160,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":156,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"2568:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2595,"src":"2568:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2328_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":159,"indexExpression":{"argumentTypes":null,"id":158,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"2582:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2568:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2532:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":162,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2606:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"2606:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":164,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"2623:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"2623:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2369_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2623:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2606:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2660:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"2598:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2598:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":170,"nodeType":"ExpressionStatement","src":"2598:86:0"},{"id":171,"nodeType":"PlaceholderStatement","src":"2694:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":173,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"name":"_user","nodeType":"VariableDeclaration","scope":173,"src":"2507:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"2507:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2506:15:0"},"src":"2482:220:0","visibility":"internal"},{"body":{"id":216,"nodeType":"Block","src":"2851:395:0","statements":[{"assignments":[180],"declarations":[{"constant":false,"id":180,"name":"worker","nodeType":"VariableDeclaration","scope":216,"src":"2861:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":179,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2328,"src":"2861:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":185,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":181,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"2897:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2595,"src":"2897:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2328_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":184,"indexExpression":{"argumentTypes":null,"id":183,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"2911:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2897:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2861:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":188,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18376,"src":"2955:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2955:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":187,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"2935:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2935:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2972:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2935:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2975:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"2927:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2927:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"2927:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":197,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3035:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"3035:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":199,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"3052:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"3052:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2369_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3052:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3035:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3089:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":196,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"3027:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3027:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":205,"nodeType":"ExpressionStatement","src":"3027:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":207,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3149:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2324,"src":"3149:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":209,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"3167:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2612,"src":"3167:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3149:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3191:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"3141:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3141:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":214,"nodeType":"ExpressionStatement","src":"3141:87:0"},{"id":215,"nodeType":"PlaceholderStatement","src":"3238:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":217,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"name":"_user","nodeType":"VariableDeclaration","scope":217,"src":"2836:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"2836:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2835:15:0"},"src":"2818:428:0","visibility":"internal"},{"body":{"id":273,"nodeType":"Block","src":"3404:580:0","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"name":"worker","nodeType":"VariableDeclaration","scope":273,"src":"3414:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":223,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2328,"src":"3414:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":229,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":225,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"3450:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2595,"src":"3450:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2328_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":228,"indexExpression":{"argumentTypes":null,"id":227,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3464:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3450:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3414:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":231,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"3488:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"3488:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":233,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"3505:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"3505:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2369_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3505:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3488:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3542:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":230,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3480:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":239,"nodeType":"ExpressionStatement","src":"3480:104:0"},{"assignments":[243],"declarations":[{"constant":false,"id":243,"name":"workerLog","nodeType":"VariableDeclaration","scope":273,"src":"3594:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2346_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":242,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2346,"src":"3594:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2346_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":250,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":246,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"3671:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":247,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18376,"src":"3679:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3679:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":244,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"3636:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9838,"src":"3636:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2328_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2346_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3636:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2346_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3594:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2377","typeString":"enum EnigmaCommon.WorkerLogType"},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":252,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"3710:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2346_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2341,"src":"3710:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2377","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":254,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"3739:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2377,"src":"3739:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2377_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3739:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2377","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3710:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3786:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":251,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"3702:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3702:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":260,"nodeType":"ExpressionStatement","src":"3702:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":263,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18376,"src":"3866:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3866:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":262,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"3846:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":266,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"3882:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2346_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2343,"src":"3882:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3846:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3917:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"3838:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3838:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"ExpressionStatement","src":"3838:128:0"},{"id":272,"nodeType":"PlaceholderStatement","src":"3976:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":274,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"name":"_user","nodeType":"VariableDeclaration","scope":274,"src":"3389:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"3389:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3388:15:0"},"src":"3368:616:0","visibility":"internal"},{"body":{"id":292,"nodeType":"Block","src":"4151:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2372","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":279,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"4169:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2606,"src":"4169:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2358_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":282,"indexExpression":{"argumentTypes":null,"id":281,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"4185:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4169:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2358_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"4169:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2372","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":284,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"4204:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"4204:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2372_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4204:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2372","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4169:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4249:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"4161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4161:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":290,"nodeType":"ExpressionStatement","src":"4161:123:0"},{"id":291,"nodeType":"PlaceholderStatement","src":"4294:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":293,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"name":"_scAddr","nodeType":"VariableDeclaration","scope":293,"src":"4134:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4134:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4133:17:0"},"src":"4107:195:0","visibility":"internal"},{"body":{"id":311,"nodeType":"Block","src":"4464:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2372","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":298,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"4482:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2606,"src":"4482:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2358_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":301,"indexExpression":{"argumentTypes":null,"id":300,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4498:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4482:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2358_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"4482:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2372","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":303,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"4517:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"4517:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2372_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4517:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2372","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4482:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4561:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"4474:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4474:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":309,"nodeType":"ExpressionStatement","src":"4474:118:0"},{"id":310,"nodeType":"PlaceholderStatement","src":"4602:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":312,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"name":"_scAddr","nodeType":"VariableDeclaration","scope":312,"src":"4447:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4447:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4446:17:0"},"src":"4421:189:0","visibility":"internal"},{"body":{"id":330,"nodeType":"Block","src":"4775:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2365","typeString":"enum EnigmaCommon.TaskStatus"},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":317,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"4793:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2599,"src":"4793:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2316_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":320,"indexExpression":{"argumentTypes":null,"id":319,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"4805:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4793:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2316_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2313,"src":"4793:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2365","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":322,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"4824:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2365,"src":"4824:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2365_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4824:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2365","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4793:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4863:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"4785:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4785:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"4785:100:0"},{"id":329,"nodeType":"PlaceholderStatement","src":"4895:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":331,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"name":"_taskId","nodeType":"VariableDeclaration","scope":331,"src":"4758:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4758:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4757:17:0"},"src":"4737:166:0","visibility":"internal"},{"body":{"id":364,"nodeType":"Block","src":"5065:202:0","statements":[{"body":{"id":361,"nodeType":"Block","src":"5131:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":348,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"5153:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2595,"src":"5153:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2328_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":354,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":350,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"5167:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2588,"src":"5167:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":353,"indexExpression":{"argumentTypes":null,"id":352,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"5189:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5167:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5153:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2318,"src":"5153:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":356,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"5203:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5153:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5212:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"5145:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":360,"nodeType":"ExpressionStatement","src":"5145:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"5092:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":340,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"5096:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2588,"src":"5096:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5096:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5092:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":362,"initializationExpression":{"assignments":[336],"declarations":[{"constant":false,"id":336,"name":"i","nodeType":"VariableDeclaration","scope":362,"src":"5080:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint","nodeType":"ElementaryTypeName","src":"5080:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":338,"initialValue":{"argumentTypes":null,"hexValue":"30","id":337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5080:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5126:3:0","subExpression":{"argumentTypes":null,"id":344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"5126:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":346,"nodeType":"ExpressionStatement","src":"5126:3:0"},"nodeType":"ForStatement","src":"5075:175:0"},{"id":363,"nodeType":"PlaceholderStatement","src":"5259:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":365,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"name":"_signer","nodeType":"VariableDeclaration","scope":365,"src":"5048:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"5048:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5047:17:0"},"src":"5020:247:0","visibility":"internal"},{"body":{"id":378,"nodeType":"Block","src":"5394:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":369,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18436,"src":"5420:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$927","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$927","typeString":"contract Enigma"}],"id":368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5412:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5412:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":371,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"5429:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2579,"src":"5429:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5412:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74207570646174656420456e69676d6120636f6e7472616374","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5465:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""},"value":"Not updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""}],"id":367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"5404:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5404:91:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":376,"nodeType":"ExpressionStatement","src":"5404:91:0"},{"id":377,"nodeType":"PlaceholderStatement","src":"5505:1:0"}]},"documentation":"Ensure that the contract\'s context is the updated contract\\n    ","id":379,"name":"isUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"5391:2:0"},"src":"5359:154:0","visibility":"internal"},{"body":{"id":391,"nodeType":"Block","src":"5644:121:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":382,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"5662:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5662:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":384,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"5676:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2579,"src":"5676:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5662:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5712:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""},"value":"Not from updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""}],"id":381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"5654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5654:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":389,"nodeType":"ExpressionStatement","src":"5654:93:0"},{"id":390,"nodeType":"PlaceholderStatement","src":"5757:1:0"}]},"documentation":"Ensure the sender of the recent call is the updated contract\\n    ","id":392,"name":"fromUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"5641:2:0"},"src":"5607:158:0","visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"6414:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":409,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":410,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"6456:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":411,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"6465:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":412,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"6474:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":406,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"6424:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":9106,"src":"6424:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6424:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"ExpressionStatement","src":"6424:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":416,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":401,"modifierName":{"argumentTypes":null,"id":400,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6354:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6354:23:0"},{"arguments":[{"argumentTypes":null,"id":403,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"6401:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":404,"modifierName":{"argumentTypes":null,"id":402,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"6382:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6382:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"name":"_signer","nodeType":"VariableDeclaration","scope":416,"src":"6275:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"6275:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":396,"name":"_report","nodeType":"VariableDeclaration","scope":416,"src":"6292:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":395,"name":"bytes","nodeType":"ElementaryTypeName","src":"6292:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":398,"name":"_signature","nodeType":"VariableDeclaration","scope":416,"src":"6314:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":397,"name":"bytes","nodeType":"ElementaryTypeName","src":"6314:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6274:64:0"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"6414:0:0"},"scope":927,"src":"6257:235:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":436,"nodeType":"Block","src":"6862:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":431,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"6896:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":432,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"6903:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":433,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6915:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":428,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"6872:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":9312,"src":"6872:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6872:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"6872:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":437,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":423,"modifierName":{"argumentTypes":null,"id":422,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6801:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6801:23:0"},{"arguments":[{"argumentTypes":null,"id":425,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"6846:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":426,"modifierName":{"argumentTypes":null,"id":424,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"6829:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6829:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"name":"_custodian","nodeType":"VariableDeclaration","scope":437,"src":"6752:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"6752:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":420,"name":"_amount","nodeType":"VariableDeclaration","scope":437,"src":"6772:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint","nodeType":"ElementaryTypeName","src":"6772:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6751:34:0"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"6862:0:0"},"scope":927,"src":"6735:195:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":453,"nodeType":"Block","src":"7203:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":449,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"7238:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":450,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"7245:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":446,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"7213:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":9365,"src":"7213:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7213:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":452,"nodeType":"ExpressionStatement","src":"7213:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":454,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"7187:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7187:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":444,"modifierName":{"argumentTypes":null,"id":441,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7175:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7175:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"name":"_amount","nodeType":"VariableDeclaration","scope":454,"src":"7146:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint","nodeType":"ElementaryTypeName","src":"7146:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7145:14:0"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"7203:0:0"},"scope":927,"src":"7128:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":467,"nodeType":"Block","src":"7468:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":464,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"7500:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":461,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"7478:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":9210,"src":"7478:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7478:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"ExpressionStatement","src":"7478:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":468,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":457,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"7456:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7456:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":459,"modifierName":{"argumentTypes":null,"id":456,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"7447:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7447:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"7437:2:0"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"7468:0:0"},"scope":927,"src":"7423:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":481,"nodeType":"Block","src":"7642:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":478,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"7675:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":475,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"7652:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":9251,"src":"7652:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7652:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":480,"nodeType":"ExpressionStatement","src":"7652:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":482,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":471,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"7630:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7630:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":473,"modifierName":{"argumentTypes":null,"id":470,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"7615:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7615:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"7605:2:0"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"7642:0:0"},"scope":927,"src":"7590:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":512,"nodeType":"Block","src":"8248:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":505,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"8299:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":506,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"8306:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":507,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"8315:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":508,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"8326:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":509,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"8336:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":502,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"8258:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"8258:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8258:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"ExpressionStatement","src":"8258:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":513,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":493,"modifierName":{"argumentTypes":null,"id":492,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"8158:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8158:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":495,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"8201:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8201:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":497,"modifierName":{"argumentTypes":null,"id":494,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"8186:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8186:26:0"},{"arguments":[{"argumentTypes":null,"id":499,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"8235:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":500,"modifierName":{"argumentTypes":null,"id":498,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"8217:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8217:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"name":"_taskId","nodeType":"VariableDeclaration","scope":513,"src":"8042:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8042:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":486,"name":"_codeHash","nodeType":"VariableDeclaration","scope":513,"src":"8067:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8067:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":488,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":513,"src":"8094:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":487,"name":"uint64","nodeType":"ElementaryTypeName","src":"8094:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":490,"name":"_sig","nodeType":"VariableDeclaration","scope":513,"src":"8119:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":489,"name":"bytes","nodeType":"ElementaryTypeName","src":"8119:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8032:110:0"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[],"src":"8248:0:0"},"scope":927,"src":"7996:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":555,"nodeType":"Block","src":"9429:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":544,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"9473:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":545,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"9480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":546,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"9489:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":547,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9503:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":548,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9514:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":549,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"9547:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":550,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"9570:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":551,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"9604:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":552,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"9614:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":541,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"9439:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4826,"src":"9439:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9439:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"9439:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":556,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":532,"modifierName":{"argumentTypes":null,"id":531,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"9339:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9339:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":534,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"9382:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9382:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":536,"modifierName":{"argumentTypes":null,"id":533,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"9367:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"9367:26:0"},{"arguments":[{"argumentTypes":null,"id":538,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"9416:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":539,"modifierName":{"argumentTypes":null,"id":537,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"9398:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"9398:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"name":"_taskId","nodeType":"VariableDeclaration","scope":556,"src":"9062:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9062:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":517,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":556,"src":"9087:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9087:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":519,"name":"_codeHash","nodeType":"VariableDeclaration","scope":556,"src":"9117:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9117:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":521,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":556,"src":"9144:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9144:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":523,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":556,"src":"9181:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":522,"name":"bytes","nodeType":"ElementaryTypeName","src":"9181:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":525,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":556,"src":"9225:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"9225:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":527,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":556,"src":"9275:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":526,"name":"uint64","nodeType":"ElementaryTypeName","src":"9275:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":529,"name":"_sig","nodeType":"VariableDeclaration","scope":556,"src":"9300:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":528,"name":"bytes","nodeType":"ElementaryTypeName","src":"9300:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"9052:271:0"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"9429:0:0"},"scope":927,"src":"9023:603:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":566,"nodeType":"Block","src":"9828:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":563,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"9889:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":561,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"9845:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3961_$","typeString":"type(library SecretContractImpl)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3893,"src":"9845:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2615_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9845:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":560,"id":565,"nodeType":"Return","src":"9838:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":567,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[],"src":"9782:2:0"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"name":"","nodeType":"VariableDeclaration","scope":567,"src":"9818:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint","nodeType":"ElementaryTypeName","src":"9818:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9817:6:0"},"scope":927,"src":"9753:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":584,"nodeType":"Block","src":"10231:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":579,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"10298:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":580,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"10305:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":581,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"10313:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":577,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"10248:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3961_$","typeString":"type(library SecretContractImpl)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3960,"src":"10248:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2615_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10248:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":576,"id":583,"nodeType":"Return","src":"10241:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":585,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"name":"_start","nodeType":"VariableDeclaration","scope":585,"src":"10151:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint","nodeType":"ElementaryTypeName","src":"10151:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":571,"name":"_stop","nodeType":"VariableDeclaration","scope":585,"src":"10164:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint","nodeType":"ElementaryTypeName","src":"10164:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10150:25:0"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"name":"","nodeType":"VariableDeclaration","scope":585,"src":"10209:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":574,"length":null,"nodeType":"ArrayTypeName","src":"10209:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"10208:18:0"},"scope":927,"src":"10115:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":611,"nodeType":"Block","src":"11395:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":603,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"11445:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":604,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"11452:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":605,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"11465:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":606,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"11476:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":607,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"11484:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":608,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"11503:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":600,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"11405:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"11405:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11405:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":610,"nodeType":"ExpressionStatement","src":"11405:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":612,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":598,"modifierName":{"argumentTypes":null,"id":597,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"11367:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11367:23:0"}],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":612,"src":"11224:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11224:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":589,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":612,"src":"11253:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":588,"name":"uint64","nodeType":"ElementaryTypeName","src":"11253:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":591,"name":"_gasPx","nodeType":"VariableDeclaration","scope":612,"src":"11279:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":590,"name":"uint64","nodeType":"ElementaryTypeName","src":"11279:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":593,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":612,"src":"11302:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint","nodeType":"ElementaryTypeName","src":"11302:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":595,"name":"_nonce","nodeType":"VariableDeclaration","scope":612,"src":"11334:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint","nodeType":"ElementaryTypeName","src":"11334:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11214:137:0"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"11395:0:0"},"scope":927,"src":"11179:338:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":635,"nodeType":"Block","src":"12277:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":628,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"12317:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":629,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"12324:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":630,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"12337:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":631,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"12348:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":632,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"12356:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":625,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"12287:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"12287:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12287:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"ExpressionStatement","src":"12287:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":636,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":623,"modifierName":{"argumentTypes":null,"id":622,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"12249:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12249:23:0"}],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":636,"src":"12127:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12127:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":616,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":636,"src":"12156:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":615,"name":"uint64","nodeType":"ElementaryTypeName","src":"12156:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":618,"name":"_gasPx","nodeType":"VariableDeclaration","scope":636,"src":"12182:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":617,"name":"uint64","nodeType":"ElementaryTypeName","src":"12182:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":620,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":636,"src":"12205:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint","nodeType":"ElementaryTypeName","src":"12205:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12117:116:0"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[],"src":"12277:0:0"},"scope":927,"src":"12092:289:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":662,"nodeType":"Block","src":"13209:109:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":655,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"13250:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":656,"name":"_inputsHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"13257:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"argumentTypes":null,"id":657,"name":"_gasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"13272:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"}},{"argumentTypes":null,"id":658,"name":"_gasPxs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"13284:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"}},{"argumentTypes":null,"id":659,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"13293:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"},{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":652,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"13219:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordsImpl","nodeType":"MemberAccess","referencedDeclaration":5939,"src":"13219:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint64_$dyn_memory_ptr_$_t_array$_t_uint64_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32[] memory,uint64[] memory,uint64[] memory,uint256)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13219:92:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"13219:92:0"}]},"documentation":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\ntransferring task fee from sender to contract, generating the unique taskId, saving the block number\\nwhen the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimits ENG gas limit\\n@param _gasPxs ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":663,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":650,"modifierName":{"argumentTypes":null,"id":649,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"13181:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13181:23:0"}],"name":"createTaskRecords","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"name":"_inputsHashes","nodeType":"VariableDeclaration","scope":663,"src":"13028:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13028:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":638,"length":null,"nodeType":"ArrayTypeName","src":"13028:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":642,"name":"_gasLimits","nodeType":"VariableDeclaration","scope":663,"src":"13068:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":640,"name":"uint64","nodeType":"ElementaryTypeName","src":"13068:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":641,"length":null,"nodeType":"ArrayTypeName","src":"13068:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":645,"name":"_gasPxs","nodeType":"VariableDeclaration","scope":663,"src":"13104:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":643,"name":"uint64","nodeType":"ElementaryTypeName","src":"13104:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":644,"length":null,"nodeType":"ArrayTypeName","src":"13104:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":647,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":663,"src":"13137:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint","nodeType":"ElementaryTypeName","src":"13137:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"13018:147:0"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[],"src":"13209:0:0"},"scope":927,"src":"12992:326:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":705,"nodeType":"Block","src":"14313:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":694,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"14350:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":695,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"14357:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":696,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"14366:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":697,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"14375:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":698,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"14392:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":699,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"14405:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":700,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"14440:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":701,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"14474:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":702,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"14484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":691,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"14323:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5741,"src":"14323:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14323:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":704,"nodeType":"ExpressionStatement","src":"14323:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":706,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":682,"modifierName":{"argumentTypes":null,"id":681,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"14224:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14224:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":684,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"14267:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14267:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":686,"modifierName":{"argumentTypes":null,"id":683,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"14252:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14252:26:0"},{"arguments":[{"argumentTypes":null,"id":688,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"14300:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":689,"modifierName":{"argumentTypes":null,"id":687,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"14283:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14283:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"name":"_scAddr","nodeType":"VariableDeclaration","scope":706,"src":"13954:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13954:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":667,"name":"_taskId","nodeType":"VariableDeclaration","scope":706,"src":"13979:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13979:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":669,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":706,"src":"14004:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14004:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":671,"name":"_outputHash","nodeType":"VariableDeclaration","scope":706,"src":"14037:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14037:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":673,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":706,"src":"14066:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":672,"name":"bytes","nodeType":"ElementaryTypeName","src":"14066:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":675,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":706,"src":"14110:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"14110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":677,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":706,"src":"14160:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":676,"name":"uint64","nodeType":"ElementaryTypeName","src":"14160:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":679,"name":"_sig","nodeType":"VariableDeclaration","scope":706,"src":"14185:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":678,"name":"bytes","nodeType":"ElementaryTypeName","src":"14185:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13944:264:0"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"14313:0:0"},"scope":927,"src":"13922:574:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":739,"nodeType":"Block","src":"15155:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":731,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"15196:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":732,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"15203:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":733,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"15212:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":734,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"15221:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":735,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"15234:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":736,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"15244:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":728,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"15165:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5263,"src":"15165:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15165:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":738,"nodeType":"ExpressionStatement","src":"15165:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":740,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":719,"modifierName":{"argumentTypes":null,"id":718,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"15066:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15066:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":721,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"15109:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15109:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":723,"modifierName":{"argumentTypes":null,"id":720,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"15094:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"15094:26:0"},{"arguments":[{"argumentTypes":null,"id":725,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"15142:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":726,"modifierName":{"argumentTypes":null,"id":724,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"15125:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"15125:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"name":"_scAddr","nodeType":"VariableDeclaration","scope":740,"src":"14923:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14923:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":710,"name":"_taskId","nodeType":"VariableDeclaration","scope":740,"src":"14948:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":712,"name":"_outputHash","nodeType":"VariableDeclaration","scope":740,"src":"14973:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14973:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":714,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":740,"src":"15002:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":713,"name":"uint64","nodeType":"ElementaryTypeName","src":"15002:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":716,"name":"_sig","nodeType":"VariableDeclaration","scope":740,"src":"15027:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":715,"name":"bytes","nodeType":"ElementaryTypeName","src":"15027:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14913:137:0"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[],"src":"15155:0:0"},"scope":927,"src":"14887:369:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":755,"nodeType":"Block","src":"15507:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":751,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"15548:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":752,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"15555:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":748,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"15517:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6298,"src":"15517:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15517:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":754,"nodeType":"ExpressionStatement","src":"15517:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":756,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":745,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"15494:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":746,"modifierName":{"argumentTypes":null,"id":744,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"15482:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"15482:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"name":"_taskId","nodeType":"VariableDeclaration","scope":756,"src":"15450:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15450:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"15449:17:0"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[],"src":"15507:0:0"},"scope":927,"src":"15423:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":780,"nodeType":"Block","src":"16058:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":774,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"16103:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":775,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"16110:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":776,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"16124:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":777,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"16131:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":771,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"16068:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3323_$","typeString":"type(library PrincipalImpl)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3152,"src":"16068:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16068:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":779,"nodeType":"ExpressionStatement","src":"16068:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":781,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":765,"modifierName":{"argumentTypes":null,"id":764,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"15997:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15997:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":767,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"16042:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16042:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":769,"modifierName":{"argumentTypes":null,"id":766,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"16025:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"16025:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":781,"src":"15932:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint","nodeType":"ElementaryTypeName","src":"15932:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":760,"name":"_seed","nodeType":"VariableDeclaration","scope":781,"src":"15951:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint","nodeType":"ElementaryTypeName","src":"15951:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":762,"name":"_sig","nodeType":"VariableDeclaration","scope":781,"src":"15963:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":761,"name":"bytes","nodeType":"ElementaryTypeName","src":"15963:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"15931:50:0"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[],"src":"16058:0:0"},"scope":927,"src":"15906:237:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":798,"nodeType":"Block","src":"16379:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":794,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"16431:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":795,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"16438:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":792,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"16396:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3323_$","typeString":"type(library PrincipalImpl)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"16396:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2615_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16396:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":791,"id":797,"nodeType":"Return","src":"16389:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":799,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":799,"src":"16290:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint","nodeType":"ElementaryTypeName","src":"16290:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16289:19:0"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"name":"","nodeType":"VariableDeclaration","scope":799,"src":"16342:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"16342:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":786,"length":null,"nodeType":"ArrayTypeName","src":"16342:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":790,"name":"","nodeType":"VariableDeclaration","scope":799,"src":"16360:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":788,"name":"uint","nodeType":"ElementaryTypeName","src":"16360:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":789,"length":null,"nodeType":"ArrayTypeName","src":"16360:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16341:33:0"},"scope":927,"src":"16264:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":812,"nodeType":"Block","src":"16720:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":808,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"16773:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":809,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"16780:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":806,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"16737:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":9485,"src":"16737:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2615_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16737:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":805,"id":811,"nodeType":"Return","src":"16730:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":813,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":813,"src":"16662:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":800,"name":"uint","nodeType":"ElementaryTypeName","src":"16662:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16661:19:0"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"name":"","nodeType":"VariableDeclaration","scope":813,"src":"16714:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint","nodeType":"ElementaryTypeName","src":"16714:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16713:6:0"},"scope":927,"src":"16633:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":834,"nodeType":"Block","src":"17206:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":830,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"17255:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":831,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"17262:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":828,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"17223:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":9522,"src":"17223:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2615_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17223:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":827,"id":833,"nodeType":"Return","src":"17216:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":835,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":835,"src":"17109:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint","nodeType":"ElementaryTypeName","src":"17109:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17108:19:0"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"name":"","nodeType":"VariableDeclaration","scope":835,"src":"17161:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint","nodeType":"ElementaryTypeName","src":"17161:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":820,"name":"","nodeType":"VariableDeclaration","scope":835,"src":"17167:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint","nodeType":"ElementaryTypeName","src":"17167:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":823,"name":"","nodeType":"VariableDeclaration","scope":835,"src":"17173:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"17173:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":822,"length":null,"nodeType":"ArrayTypeName","src":"17173:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":826,"name":"","nodeType":"VariableDeclaration","scope":835,"src":"17191:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":824,"name":"uint","nodeType":"ElementaryTypeName","src":"17191:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":825,"length":null,"nodeType":"ArrayTypeName","src":"17191:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"17160:45:0"},"scope":927,"src":"17084:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":852,"nodeType":"Block","src":"17734:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":847,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"17782:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":848,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"17789:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":849,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"17803:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":845,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"17751:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9786,"src":"17751:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2615_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17751:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":844,"id":851,"nodeType":"Return","src":"17744:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":853,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":853,"src":"17643:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint","nodeType":"ElementaryTypeName","src":"17643:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":839,"name":"_scAddr","nodeType":"VariableDeclaration","scope":853,"src":"17662:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"17642:36:0"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"name":"","nodeType":"VariableDeclaration","scope":853,"src":"17712:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"17712:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":842,"length":null,"nodeType":"ArrayTypeName","src":"17712:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"17711:18:0"},"scope":927,"src":"17619:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":871,"nodeType":"Block","src":"18088:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":867,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"18131:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":868,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"18138:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":865,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"18105:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":9143,"src":"18105:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2615_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18105:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":864,"id":870,"nodeType":"Return","src":"18098:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":872,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":858,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"18036:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":859,"modifierName":{"argumentTypes":null,"id":857,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"18019:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"18019:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"name":"_custodian","nodeType":"VariableDeclaration","scope":872,"src":"17975:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"17975:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17974:20:0"},"returnParameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"name":"","nodeType":"VariableDeclaration","scope":872,"src":"18061:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"18061:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":863,"name":"","nodeType":"VariableDeclaration","scope":872,"src":"18070:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":862,"name":"bytes","nodeType":"ElementaryTypeName","src":"18070:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18060:23:0"},"scope":927,"src":"17956:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":887,"nodeType":"Block","src":"18471:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":883,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"18517:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":884,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"18524:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":881,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"18488:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":9169,"src":"18488:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18488:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":880,"id":886,"nodeType":"Return","src":"18481:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":888,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"name":"_data","nodeType":"VariableDeclaration","scope":888,"src":"18383:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":873,"name":"bytes","nodeType":"ElementaryTypeName","src":"18383:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":876,"name":"_signature","nodeType":"VariableDeclaration","scope":888,"src":"18403:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":875,"name":"bytes","nodeType":"ElementaryTypeName","src":"18403:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18382:45:0"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"name":"","nodeType":"VariableDeclaration","scope":888,"src":"18461:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint","nodeType":"ElementaryTypeName","src":"18461:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18460:6:0"},"scope":927,"src":"18361:181:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":903,"nodeType":"Block","src":"18810:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":899,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"18865:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":900,"name":"_updatedEnigmaContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"18872:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":897,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"18827:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8819_$","typeString":"type(library UpgradeImpl)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeEnigmaContractImpl","nodeType":"MemberAccess","referencedDeclaration":8740,"src":"18827:37:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18827:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":896,"id":902,"nodeType":"Return","src":"18820:82:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address","id":904,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":893,"modifierName":{"argumentTypes":null,"id":892,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17746,"src":"18768:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18768:9:0"},{"arguments":null,"id":895,"modifierName":{"argumentTypes":null,"id":894,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"18782:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18782:23:0"}],"name":"upgradeEnigmaContract","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"name":"_updatedEnigmaContractAddress","nodeType":"VariableDeclaration","scope":904,"src":"18714:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"18714:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"18713:39:0"},"returnParameters":{"id":896,"nodeType":"ParameterList","parameters":[],"src":"18810:0:0"},"scope":927,"src":"18683:226:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":925,"nodeType":"Block","src":"19268:108:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":919,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"19332:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":920,"name":"_workerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"19339:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":921,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"19355:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":922,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"19364:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":917,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"19285:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8819_$","typeString":"type(library UpgradeImpl)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferWorkerStakePostUpgradeImpl","nodeType":"MemberAccess","referencedDeclaration":8818,"src":"19285:46:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,address,address,bytes memory) returns (uint256)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19285:84:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":916,"id":924,"nodeType":"Return","src":"19278:91:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _workerAddress Newly-registered worker address\\n@param _signer Newly-registered worker address\\n@param _sig Signature","id":926,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":913,"modifierName":{"argumentTypes":null,"id":912,"name":"fromUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"19216:25:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"19216:25:0"}],"name":"transferWorkerStakePostUpgrade","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"name":"_workerAddress","nodeType":"VariableDeclaration","scope":926,"src":"19141:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"19141:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":908,"name":"_signer","nodeType":"VariableDeclaration","scope":926,"src":"19165:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"19165:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":910,"name":"_sig","nodeType":"VariableDeclaration","scope":926,"src":"19182:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":909,"name":"bytes","nodeType":"ElementaryTypeName","src":"19182:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"19140:60:0"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"name":"","nodeType":"VariableDeclaration","scope":926,"src":"19255:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"19255:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"19254:9:0"},"scope":927,"src":"19101:275:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":928,"src":"885:18493:0"}],"src":"0:19379:0"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[927]},"id":928,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":928,"sourceUnit":17704,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":928,"sourceUnit":17576,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/ownership/Ownable.sol","file":"openzeppelin-solidity/contracts/ownership/Ownable.sol","id":5,"nodeType":"ImportDirective","scope":928,"sourceUnit":17813,"src":"184:63:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":6,"nodeType":"ImportDirective","scope":928,"sourceUnit":17495,"src":"248:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":8,"nodeType":"ImportDirective","scope":928,"sourceUnit":9840,"src":"284:53:0","symbolAliases":[{"foreign":7,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":10,"nodeType":"ImportDirective","scope":928,"sourceUnit":3324,"src":"338:57:0","symbolAliases":[{"foreign":9,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":12,"nodeType":"ImportDirective","scope":928,"sourceUnit":6300,"src":"396:47:0","symbolAliases":[{"foreign":11,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/UpgradeImpl.sol","file":"./impl/UpgradeImpl.sol","id":14,"nodeType":"ImportDirective","scope":928,"sourceUnit":8820,"src":"444:53:0","symbolAliases":[{"foreign":13,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":16,"nodeType":"ImportDirective","scope":928,"sourceUnit":3962,"src":"498:67:0","symbolAliases":[{"foreign":15,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":18,"nodeType":"ImportDirective","scope":928,"sourceUnit":2422,"src":"566:55:0","symbolAliases":[{"foreign":17,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":20,"nodeType":"ImportDirective","scope":928,"sourceUnit":2617,"src":"622:53:0","symbolAliases":[{"foreign":19,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":22,"nodeType":"ImportDirective","scope":928,"sourceUnit":2563,"src":"676:55:0","symbolAliases":[{"foreign":21,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":24,"nodeType":"ImportDirective","scope":928,"sourceUnit":2625,"src":"732:57:0","symbolAliases":[{"foreign":23,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":26,"nodeType":"ImportDirective","scope":928,"sourceUnit":2799,"src":"790:45:0","symbolAliases":[{"foreign":25,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":28,"nodeType":"ImportDirective","scope":928,"sourceUnit":10825,"src":"836:47:0","symbolAliases":[{"foreign":27,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":29,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2624,"src":"904:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2624","typeString":"contract EnigmaStorage"}},"id":30,"nodeType":"InheritanceSpecifier","src":"904:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":31,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2562,"src":"919:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2562","typeString":"contract EnigmaEvents"}},"id":32,"nodeType":"InheritanceSpecifier","src":"919:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":33,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2798,"src":"933:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2798","typeString":"contract Getters"}},"id":34,"nodeType":"InheritanceSpecifier","src":"933:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":35,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":17812,"src":"942:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$17812","typeString":"contract Ownable"}},"id":36,"nodeType":"InheritanceSpecifier","src":"942:7:0"}],"contractDependencies":[2562,2624,2798,17812],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":927,"linearizedBaseContracts":[927,17812,2798,2562,2624],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":39,"libraryName":{"contractScope":null,"id":37,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":17703,"src":"962:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$17703","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"956:27:0","typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":42,"libraryName":{"contractScope":null,"id":40,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":17575,"src":"994:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$17575","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"988:24:0","typeName":{"id":41,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1004:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":97,"nodeType":"Block","src":"1207:298:0","statements":[{"expression":{"argumentTypes":null,"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":51,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1217:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":53,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2571,"src":"1217:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10824","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":55,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1240:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":54,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10824,"src":"1234:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10824_$","typeString":"type(contract ERC20)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1234:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10824","typeString":"contract ERC20"}},"src":"1217:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10824","typeString":"contract ERC20"}},"id":58,"nodeType":"ExpressionStatement","src":"1217:37:0"},{"expression":{"argumentTypes":null,"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":59,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1264:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":61,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2573,"src":"1264:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":62,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1282:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1264:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":64,"nodeType":"ExpressionStatement","src":"1264:28:0"},{"expression":{"argumentTypes":null,"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":65,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1302:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":67,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2575,"src":"1302:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"323030","id":68,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1326:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"1302:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":70,"nodeType":"ExpressionStatement","src":"1302:27:0"},{"expression":{"argumentTypes":null,"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":71,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1339:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":73,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2577,"src":"1339:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":74,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1357:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1339:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":76,"nodeType":"ExpressionStatement","src":"1339:28:0"},{"expression":{"argumentTypes":null,"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":77,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1377:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":79,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2579,"src":"1377:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":81,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18436,"src":"1422:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$927","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$927","typeString":"contract Enigma"}],"id":80,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1377:50:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":84,"nodeType":"ExpressionStatement","src":"1377:50:0"},{"expression":{"argumentTypes":null,"id":89,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":85,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1437:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":87,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2612,"src":"1437:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":88,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1462:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1437:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":90,"nodeType":"ExpressionStatement","src":"1437:26:0"},{"expression":{"argumentTypes":null,"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":91,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1473:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":93,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2614,"src":"1473:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1497:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1473:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":96,"nodeType":"ExpressionStatement","src":"1473:25:0"}]},"documentation":null,"id":98,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":98,"src":"1136:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":46,"name":"_principal","nodeType":"VariableDeclaration","scope":98,"src":"1159:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":48,"name":"_epochSize","nodeType":"VariableDeclaration","scope":98,"src":"1179:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint","nodeType":"ElementaryTypeName","src":"1179:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1135:60:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[],"src":"1207:0:0"},"scope":927,"src":"1124:381:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":122,"nodeType":"Block","src":"1795:181:0","statements":[{"assignments":[105],"declarations":[{"constant":false,"id":105,"name":"worker","nodeType":"VariableDeclaration","scope":122,"src":"1805:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":104,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2328,"src":"1805:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":110,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":106,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1841:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2595,"src":"1841:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2328_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":109,"indexExpression":{"argumentTypes":null,"id":108,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1841:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1805:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":112,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"1879:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"1879:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":114,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"1896:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"1896:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2369_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1896:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1879:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1936:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":111,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"1871:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1871:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":120,"nodeType":"ExpressionStatement","src":"1871:87:0"},{"id":121,"nodeType":"PlaceholderStatement","src":"1968:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":123,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"name":"_user","nodeType":"VariableDeclaration","scope":123,"src":"1780:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"1780:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1779:15:0"},"src":"1754:222:0","visibility":"internal"},{"body":{"id":147,"nodeType":"Block","src":"2159:178:0","statements":[{"assignments":[130],"declarations":[{"constant":false,"id":130,"name":"worker","nodeType":"VariableDeclaration","scope":147,"src":"2169:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":129,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2328,"src":"2169:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":135,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":131,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"2205:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2595,"src":"2205:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2328_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":134,"indexExpression":{"argumentTypes":null,"id":133,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2219:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2205:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2169:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":137,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2243:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"2243:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":139,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"2260:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"2260:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2369_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2260:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2243:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2296:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":136,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"2235:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2235:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":145,"nodeType":"ExpressionStatement","src":"2235:84:0"},{"id":146,"nodeType":"PlaceholderStatement","src":"2329:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":148,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"name":"_user","nodeType":"VariableDeclaration","scope":148,"src":"2144:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"2144:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2143:15:0"},"src":"2120:217:0","visibility":"internal"},{"body":{"id":172,"nodeType":"Block","src":"2522:180:0","statements":[{"assignments":[155],"declarations":[{"constant":false,"id":155,"name":"worker","nodeType":"VariableDeclaration","scope":172,"src":"2532:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":154,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2328,"src":"2532:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":160,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":156,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"2568:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2595,"src":"2568:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2328_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":159,"indexExpression":{"argumentTypes":null,"id":158,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"2582:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2568:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2532:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":162,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2606:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"2606:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":164,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"2623:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"2623:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2369_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2623:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2606:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2660:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"2598:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2598:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":170,"nodeType":"ExpressionStatement","src":"2598:86:0"},{"id":171,"nodeType":"PlaceholderStatement","src":"2694:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":173,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"name":"_user","nodeType":"VariableDeclaration","scope":173,"src":"2507:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"2507:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2506:15:0"},"src":"2482:220:0","visibility":"internal"},{"body":{"id":216,"nodeType":"Block","src":"2851:395:0","statements":[{"assignments":[180],"declarations":[{"constant":false,"id":180,"name":"worker","nodeType":"VariableDeclaration","scope":216,"src":"2861:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":179,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2328,"src":"2861:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":185,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":181,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"2897:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2595,"src":"2897:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2328_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":184,"indexExpression":{"argumentTypes":null,"id":183,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"2911:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2897:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2861:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":188,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18376,"src":"2955:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2955:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":187,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"2935:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2935:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2972:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2935:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2975:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"2927:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2927:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"2927:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":197,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3035:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"3035:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":199,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"3052:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"3052:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2369_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3052:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3035:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3089:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":196,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"3027:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3027:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":205,"nodeType":"ExpressionStatement","src":"3027:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":207,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3149:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2324,"src":"3149:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":209,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"3167:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2612,"src":"3167:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3149:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3191:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"3141:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3141:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":214,"nodeType":"ExpressionStatement","src":"3141:87:0"},{"id":215,"nodeType":"PlaceholderStatement","src":"3238:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":217,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"name":"_user","nodeType":"VariableDeclaration","scope":217,"src":"2836:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"2836:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2835:15:0"},"src":"2818:428:0","visibility":"internal"},{"body":{"id":273,"nodeType":"Block","src":"3404:580:0","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"name":"worker","nodeType":"VariableDeclaration","scope":273,"src":"3414:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":223,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2328,"src":"3414:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":229,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":225,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"3450:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2595,"src":"3450:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2328_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":228,"indexExpression":{"argumentTypes":null,"id":227,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3464:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3450:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3414:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":231,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"3488:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"3488:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":233,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"3505:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"3505:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2369_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3505:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2369","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3488:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3542:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":230,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3480:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":239,"nodeType":"ExpressionStatement","src":"3480:104:0"},{"assignments":[243],"declarations":[{"constant":false,"id":243,"name":"workerLog","nodeType":"VariableDeclaration","scope":273,"src":"3594:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2346_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":242,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2346,"src":"3594:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2346_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":250,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":246,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"3671:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":247,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18376,"src":"3679:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3679:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2328_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":244,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"3636:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9838,"src":"3636:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2328_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2346_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3636:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2346_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3594:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2377","typeString":"enum EnigmaCommon.WorkerLogType"},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":252,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"3710:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2346_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2341,"src":"3710:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2377","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":254,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"3739:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2377,"src":"3739:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2377_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3739:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2377","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3710:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3786:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":251,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"3702:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3702:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":260,"nodeType":"ExpressionStatement","src":"3702:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":263,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18376,"src":"3866:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3866:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":262,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"3846:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":266,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"3882:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2346_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2343,"src":"3882:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3846:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3917:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"3838:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3838:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"ExpressionStatement","src":"3838:128:0"},{"id":272,"nodeType":"PlaceholderStatement","src":"3976:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":274,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"name":"_user","nodeType":"VariableDeclaration","scope":274,"src":"3389:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"3389:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3388:15:0"},"src":"3368:616:0","visibility":"internal"},{"body":{"id":292,"nodeType":"Block","src":"4151:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2372","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":279,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"4169:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2606,"src":"4169:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2358_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":282,"indexExpression":{"argumentTypes":null,"id":281,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"4185:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4169:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2358_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"4169:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2372","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":284,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"4204:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"4204:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2372_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4204:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2372","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4169:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4249:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"4161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4161:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":290,"nodeType":"ExpressionStatement","src":"4161:123:0"},{"id":291,"nodeType":"PlaceholderStatement","src":"4294:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":293,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"name":"_scAddr","nodeType":"VariableDeclaration","scope":293,"src":"4134:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4134:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4133:17:0"},"src":"4107:195:0","visibility":"internal"},{"body":{"id":311,"nodeType":"Block","src":"4464:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2372","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":298,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"4482:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2606,"src":"4482:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2358_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":301,"indexExpression":{"argumentTypes":null,"id":300,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4498:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4482:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2358_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"4482:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2372","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":303,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"4517:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"4517:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2372_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4517:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2372","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4482:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4561:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"4474:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4474:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":309,"nodeType":"ExpressionStatement","src":"4474:118:0"},{"id":310,"nodeType":"PlaceholderStatement","src":"4602:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":312,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"name":"_scAddr","nodeType":"VariableDeclaration","scope":312,"src":"4447:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4447:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4446:17:0"},"src":"4421:189:0","visibility":"internal"},{"body":{"id":330,"nodeType":"Block","src":"4775:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2365","typeString":"enum EnigmaCommon.TaskStatus"},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":317,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"4793:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2599,"src":"4793:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2316_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":320,"indexExpression":{"argumentTypes":null,"id":319,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"4805:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4793:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2316_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2313,"src":"4793:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2365","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":322,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"4824:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2421_$","typeString":"type(library EnigmaCommon)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2365,"src":"4824:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2365_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4824:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2365","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4793:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4863:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"4785:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4785:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"4785:100:0"},{"id":329,"nodeType":"PlaceholderStatement","src":"4895:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":331,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"name":"_taskId","nodeType":"VariableDeclaration","scope":331,"src":"4758:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4758:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4757:17:0"},"src":"4737:166:0","visibility":"internal"},{"body":{"id":364,"nodeType":"Block","src":"5065:202:0","statements":[{"body":{"id":361,"nodeType":"Block","src":"5131:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":348,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"5153:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2595,"src":"5153:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2328_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":354,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":350,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"5167:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2588,"src":"5167:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":353,"indexExpression":{"argumentTypes":null,"id":352,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"5189:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5167:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5153:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2328_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2318,"src":"5153:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":356,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"5203:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5153:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5212:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"5145:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":360,"nodeType":"ExpressionStatement","src":"5145:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"5092:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":340,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"5096:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2588,"src":"5096:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5096:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5092:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":362,"initializationExpression":{"assignments":[336],"declarations":[{"constant":false,"id":336,"name":"i","nodeType":"VariableDeclaration","scope":362,"src":"5080:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint","nodeType":"ElementaryTypeName","src":"5080:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":338,"initialValue":{"argumentTypes":null,"hexValue":"30","id":337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5080:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5126:3:0","subExpression":{"argumentTypes":null,"id":344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"5126:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":346,"nodeType":"ExpressionStatement","src":"5126:3:0"},"nodeType":"ForStatement","src":"5075:175:0"},{"id":363,"nodeType":"PlaceholderStatement","src":"5259:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":365,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"name":"_signer","nodeType":"VariableDeclaration","scope":365,"src":"5048:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"5048:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5047:17:0"},"src":"5020:247:0","visibility":"internal"},{"body":{"id":378,"nodeType":"Block","src":"5394:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":369,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18436,"src":"5420:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Enigma_$927","typeString":"contract Enigma"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Enigma_$927","typeString":"contract Enigma"}],"id":368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5412:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5412:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":371,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"5429:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2579,"src":"5429:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5412:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74207570646174656420456e69676d6120636f6e7472616374","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5465:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""},"value":"Not updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afd81e1aaf1752128665237e45c16ea1ee561f524147cfb94d4ccc2790f74fa","typeString":"literal_string \\"Not updated Enigma contract\\""}],"id":367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"5404:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5404:91:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":376,"nodeType":"ExpressionStatement","src":"5404:91:0"},{"id":377,"nodeType":"PlaceholderStatement","src":"5505:1:0"}]},"documentation":"Ensure that the contract\'s context is the updated contract\\n    ","id":379,"name":"isUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"5391:2:0"},"src":"5359:154:0","visibility":"internal"},{"body":{"id":391,"nodeType":"Block","src":"5644:121:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":382,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"5662:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5662:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":384,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"5676:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},"id":385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updatedEnigmaContractAddress","nodeType":"MemberAccess","referencedDeclaration":2579,"src":"5676:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5662:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f742066726f6d207570646174656420456e69676d6120636f6e7472616374","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5712:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""},"value":"Not from updated Enigma contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7762a7b22935c919209980ba628b7b404f223d7a9a7dc8e4766e7ecb614dcaf","typeString":"literal_string \\"Not from updated Enigma contract\\""}],"id":381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[18389,18390],"referencedDeclaration":18390,"src":"5654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5654:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":389,"nodeType":"ExpressionStatement","src":"5654:93:0"},{"id":390,"nodeType":"PlaceholderStatement","src":"5757:1:0"}]},"documentation":"Ensure the sender of the recent call is the updated contract\\n    ","id":392,"name":"fromUpdatedEnigmaContract","nodeType":"ModifierDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"5641:2:0"},"src":"5607:158:0","visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"6414:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":409,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":410,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"6456:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":411,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"6465:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":412,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"6474:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":406,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"6424:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":9106,"src":"6424:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6424:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"ExpressionStatement","src":"6424:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":416,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":401,"modifierName":{"argumentTypes":null,"id":400,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6354:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6354:23:0"},{"arguments":[{"argumentTypes":null,"id":403,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"6401:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":404,"modifierName":{"argumentTypes":null,"id":402,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"6382:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6382:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"name":"_signer","nodeType":"VariableDeclaration","scope":416,"src":"6275:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"6275:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":396,"name":"_report","nodeType":"VariableDeclaration","scope":416,"src":"6292:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":395,"name":"bytes","nodeType":"ElementaryTypeName","src":"6292:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":398,"name":"_signature","nodeType":"VariableDeclaration","scope":416,"src":"6314:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":397,"name":"bytes","nodeType":"ElementaryTypeName","src":"6314:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6274:64:0"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"6414:0:0"},"scope":927,"src":"6257:235:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":436,"nodeType":"Block","src":"6862:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":431,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"6896:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":432,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"6903:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":433,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6915:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":428,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"6872:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":9312,"src":"6872:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6872:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"6872:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":437,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":423,"modifierName":{"argumentTypes":null,"id":422,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6801:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6801:23:0"},{"arguments":[{"argumentTypes":null,"id":425,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"6846:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":426,"modifierName":{"argumentTypes":null,"id":424,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"6829:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6829:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"name":"_custodian","nodeType":"VariableDeclaration","scope":437,"src":"6752:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"6752:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":420,"name":"_amount","nodeType":"VariableDeclaration","scope":437,"src":"6772:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint","nodeType":"ElementaryTypeName","src":"6772:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6751:34:0"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"6862:0:0"},"scope":927,"src":"6735:195:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":453,"nodeType":"Block","src":"7203:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":449,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"7238:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":450,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"7245:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":446,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"7213:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":9365,"src":"7213:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7213:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":452,"nodeType":"ExpressionStatement","src":"7213:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":454,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"7187:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7187:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":444,"modifierName":{"argumentTypes":null,"id":441,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7175:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7175:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"name":"_amount","nodeType":"VariableDeclaration","scope":454,"src":"7146:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint","nodeType":"ElementaryTypeName","src":"7146:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7145:14:0"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"7203:0:0"},"scope":927,"src":"7128:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":467,"nodeType":"Block","src":"7468:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":464,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"7500:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":461,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"7478:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":9210,"src":"7478:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7478:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"ExpressionStatement","src":"7478:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":468,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":457,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"7456:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7456:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":459,"modifierName":{"argumentTypes":null,"id":456,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"7447:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7447:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"7437:2:0"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"7468:0:0"},"scope":927,"src":"7423:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":481,"nodeType":"Block","src":"7642:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":478,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"7675:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":475,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"7652:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":9251,"src":"7652:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7652:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":480,"nodeType":"ExpressionStatement","src":"7652:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":482,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":471,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"7630:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7630:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":473,"modifierName":{"argumentTypes":null,"id":470,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"7615:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7615:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"7605:2:0"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"7642:0:0"},"scope":927,"src":"7590:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":512,"nodeType":"Block","src":"8248:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":505,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"8299:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":506,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"8306:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":507,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"8315:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":508,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"8326:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":509,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"8336:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":502,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"8258:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"8258:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8258:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"ExpressionStatement","src":"8258:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":513,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":493,"modifierName":{"argumentTypes":null,"id":492,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"8158:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8158:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":495,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"8201:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8201:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":497,"modifierName":{"argumentTypes":null,"id":494,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"8186:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8186:26:0"},{"arguments":[{"argumentTypes":null,"id":499,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"8235:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":500,"modifierName":{"argumentTypes":null,"id":498,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"8217:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8217:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"name":"_taskId","nodeType":"VariableDeclaration","scope":513,"src":"8042:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8042:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":486,"name":"_codeHash","nodeType":"VariableDeclaration","scope":513,"src":"8067:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8067:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":488,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":513,"src":"8094:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":487,"name":"uint64","nodeType":"ElementaryTypeName","src":"8094:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":490,"name":"_sig","nodeType":"VariableDeclaration","scope":513,"src":"8119:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":489,"name":"bytes","nodeType":"ElementaryTypeName","src":"8119:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8032:110:0"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[],"src":"8248:0:0"},"scope":927,"src":"7996:352:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":555,"nodeType":"Block","src":"9429:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":544,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"9473:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":545,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"9480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":546,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"9489:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":547,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9503:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":548,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9514:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":549,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"9547:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":550,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"9570:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":551,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"9604:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":552,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"9614:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":541,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"9439:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4826,"src":"9439:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9439:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"9439:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":556,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":532,"modifierName":{"argumentTypes":null,"id":531,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"9339:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9339:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":534,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"9382:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9382:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":536,"modifierName":{"argumentTypes":null,"id":533,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"9367:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"9367:26:0"},{"arguments":[{"argumentTypes":null,"id":538,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"9416:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":539,"modifierName":{"argumentTypes":null,"id":537,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"9398:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"9398:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"name":"_taskId","nodeType":"VariableDeclaration","scope":556,"src":"9062:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9062:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":517,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":556,"src":"9087:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9087:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":519,"name":"_codeHash","nodeType":"VariableDeclaration","scope":556,"src":"9117:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9117:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":521,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":556,"src":"9144:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9144:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":523,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":556,"src":"9181:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":522,"name":"bytes","nodeType":"ElementaryTypeName","src":"9181:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":525,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":556,"src":"9225:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"9225:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":527,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":556,"src":"9275:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":526,"name":"uint64","nodeType":"ElementaryTypeName","src":"9275:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":529,"name":"_sig","nodeType":"VariableDeclaration","scope":556,"src":"9300:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":528,"name":"bytes","nodeType":"ElementaryTypeName","src":"9300:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"9052:271:0"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"9429:0:0"},"scope":927,"src":"9023:603:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":566,"nodeType":"Block","src":"9828:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":563,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"9889:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":561,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"9845:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3961_$","typeString":"type(library SecretContractImpl)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3893,"src":"9845:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2615_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9845:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":560,"id":565,"nodeType":"Return","src":"9838:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":567,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[],"src":"9782:2:0"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"name":"","nodeType":"VariableDeclaration","scope":567,"src":"9818:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint","nodeType":"ElementaryTypeName","src":"9818:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9817:6:0"},"scope":927,"src":"9753:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":584,"nodeType":"Block","src":"10231:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":579,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"10298:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":580,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"10305:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":581,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"10313:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":577,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"10248:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3961_$","typeString":"type(library SecretContractImpl)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3960,"src":"10248:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2615_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10248:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":576,"id":583,"nodeType":"Return","src":"10241:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":585,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"name":"_start","nodeType":"VariableDeclaration","scope":585,"src":"10151:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint","nodeType":"ElementaryTypeName","src":"10151:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":571,"name":"_stop","nodeType":"VariableDeclaration","scope":585,"src":"10164:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint","nodeType":"ElementaryTypeName","src":"10164:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10150:25:0"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"name":"","nodeType":"VariableDeclaration","scope":585,"src":"10209:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":574,"length":null,"nodeType":"ArrayTypeName","src":"10209:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"10208:18:0"},"scope":927,"src":"10115:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":611,"nodeType":"Block","src":"11395:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":603,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"11445:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":604,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"11452:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":605,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"11465:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":606,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"11476:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":607,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"11484:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":608,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"11503:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":600,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"11405:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"11405:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11405:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":610,"nodeType":"ExpressionStatement","src":"11405:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":612,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":598,"modifierName":{"argumentTypes":null,"id":597,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"11367:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11367:23:0"}],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":612,"src":"11224:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11224:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":589,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":612,"src":"11253:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":588,"name":"uint64","nodeType":"ElementaryTypeName","src":"11253:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":591,"name":"_gasPx","nodeType":"VariableDeclaration","scope":612,"src":"11279:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":590,"name":"uint64","nodeType":"ElementaryTypeName","src":"11279:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":593,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":612,"src":"11302:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint","nodeType":"ElementaryTypeName","src":"11302:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":595,"name":"_nonce","nodeType":"VariableDeclaration","scope":612,"src":"11334:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint","nodeType":"ElementaryTypeName","src":"11334:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11214:137:0"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"11395:0:0"},"scope":927,"src":"11179:338:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":635,"nodeType":"Block","src":"12277:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":628,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"12317:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":629,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"12324:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":630,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"12337:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":631,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"12348:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":632,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"12356:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":625,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"12287:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"12287:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12287:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"ExpressionStatement","src":"12287:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":636,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":623,"modifierName":{"argumentTypes":null,"id":622,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"12249:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12249:23:0"}],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":636,"src":"12127:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12127:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":616,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":636,"src":"12156:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":615,"name":"uint64","nodeType":"ElementaryTypeName","src":"12156:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":618,"name":"_gasPx","nodeType":"VariableDeclaration","scope":636,"src":"12182:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":617,"name":"uint64","nodeType":"ElementaryTypeName","src":"12182:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":620,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":636,"src":"12205:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint","nodeType":"ElementaryTypeName","src":"12205:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12117:116:0"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[],"src":"12277:0:0"},"scope":927,"src":"12092:289:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":662,"nodeType":"Block","src":"13209:109:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":655,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"13250:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":656,"name":"_inputsHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"13257:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"argumentTypes":null,"id":657,"name":"_gasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"13272:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"}},{"argumentTypes":null,"id":658,"name":"_gasPxs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"13284:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"}},{"argumentTypes":null,"id":659,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"13293:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"},{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":652,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"13219:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordsImpl","nodeType":"MemberAccess","referencedDeclaration":5939,"src":"13219:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint64_$dyn_memory_ptr_$_t_array$_t_uint64_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32[] memory,uint64[] memory,uint64[] memory,uint256)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13219:92:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"13219:92:0"}]},"documentation":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\ntransferring task fee from sender to contract, generating the unique taskId, saving the block number\\nwhen the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimits ENG gas limit\\n@param _gasPxs ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":663,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":650,"modifierName":{"argumentTypes":null,"id":649,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"13181:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13181:23:0"}],"name":"createTaskRecords","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"name":"_inputsHashes","nodeType":"VariableDeclaration","scope":663,"src":"13028:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13028:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":638,"length":null,"nodeType":"ArrayTypeName","src":"13028:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":642,"name":"_gasLimits","nodeType":"VariableDeclaration","scope":663,"src":"13068:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":640,"name":"uint64","nodeType":"ElementaryTypeName","src":"13068:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":641,"length":null,"nodeType":"ArrayTypeName","src":"13068:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":645,"name":"_gasPxs","nodeType":"VariableDeclaration","scope":663,"src":"13104:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":643,"name":"uint64","nodeType":"ElementaryTypeName","src":"13104:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":644,"length":null,"nodeType":"ArrayTypeName","src":"13104:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":647,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":663,"src":"13137:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint","nodeType":"ElementaryTypeName","src":"13137:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"13018:147:0"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[],"src":"13209:0:0"},"scope":927,"src":"12992:326:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":705,"nodeType":"Block","src":"14313:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":694,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"14350:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":695,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"14357:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":696,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"14366:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":697,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"14375:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":698,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"14392:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":699,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"14405:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":700,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"14440:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":701,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"14474:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":702,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"14484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":691,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"14323:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5741,"src":"14323:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14323:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":704,"nodeType":"ExpressionStatement","src":"14323:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":706,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":682,"modifierName":{"argumentTypes":null,"id":681,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"14224:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14224:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":684,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"14267:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14267:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":686,"modifierName":{"argumentTypes":null,"id":683,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"14252:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14252:26:0"},{"arguments":[{"argumentTypes":null,"id":688,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"14300:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":689,"modifierName":{"argumentTypes":null,"id":687,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"14283:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14283:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"name":"_scAddr","nodeType":"VariableDeclaration","scope":706,"src":"13954:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13954:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":667,"name":"_taskId","nodeType":"VariableDeclaration","scope":706,"src":"13979:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13979:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":669,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":706,"src":"14004:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14004:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":671,"name":"_outputHash","nodeType":"VariableDeclaration","scope":706,"src":"14037:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14037:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":673,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":706,"src":"14066:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":672,"name":"bytes","nodeType":"ElementaryTypeName","src":"14066:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":675,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":706,"src":"14110:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"14110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":677,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":706,"src":"14160:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":676,"name":"uint64","nodeType":"ElementaryTypeName","src":"14160:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":679,"name":"_sig","nodeType":"VariableDeclaration","scope":706,"src":"14185:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":678,"name":"bytes","nodeType":"ElementaryTypeName","src":"14185:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13944:264:0"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"14313:0:0"},"scope":927,"src":"13922:574:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":739,"nodeType":"Block","src":"15155:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":731,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"15196:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":732,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"15203:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":733,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"15212:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":734,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"15221:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":735,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"15234:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":736,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"15244:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":728,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"15165:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":5263,"src":"15165:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15165:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":738,"nodeType":"ExpressionStatement","src":"15165:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":740,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":719,"modifierName":{"argumentTypes":null,"id":718,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"15066:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15066:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":721,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"15109:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15109:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":723,"modifierName":{"argumentTypes":null,"id":720,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"15094:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"15094:26:0"},{"arguments":[{"argumentTypes":null,"id":725,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"15142:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":726,"modifierName":{"argumentTypes":null,"id":724,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"15125:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"15125:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"name":"_scAddr","nodeType":"VariableDeclaration","scope":740,"src":"14923:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14923:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":710,"name":"_taskId","nodeType":"VariableDeclaration","scope":740,"src":"14948:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":712,"name":"_outputHash","nodeType":"VariableDeclaration","scope":740,"src":"14973:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14973:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":714,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":740,"src":"15002:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":713,"name":"uint64","nodeType":"ElementaryTypeName","src":"15002:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":716,"name":"_sig","nodeType":"VariableDeclaration","scope":740,"src":"15027:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":715,"name":"bytes","nodeType":"ElementaryTypeName","src":"15027:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14913:137:0"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[],"src":"15155:0:0"},"scope":927,"src":"14887:369:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":755,"nodeType":"Block","src":"15507:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":751,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"15548:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":752,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"15555:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":748,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"15517:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$6299_$","typeString":"type(library TaskImpl)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":6298,"src":"15517:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15517:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":754,"nodeType":"ExpressionStatement","src":"15517:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":756,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":745,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"15494:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":746,"modifierName":{"argumentTypes":null,"id":744,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"15482:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"15482:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"name":"_taskId","nodeType":"VariableDeclaration","scope":756,"src":"15450:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15450:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"15449:17:0"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[],"src":"15507:0:0"},"scope":927,"src":"15423:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":780,"nodeType":"Block","src":"16058:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":774,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"16103:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":775,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"16110:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":776,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"16124:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":777,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"16131:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":771,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"16068:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3323_$","typeString":"type(library PrincipalImpl)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":3152,"src":"16068:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16068:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":779,"nodeType":"ExpressionStatement","src":"16068:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":781,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":765,"modifierName":{"argumentTypes":null,"id":764,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"15997:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15997:23:0"},{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":767,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18386,"src":"16042:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16042:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":769,"modifierName":{"argumentTypes":null,"id":766,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"16025:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"16025:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":781,"src":"15932:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint","nodeType":"ElementaryTypeName","src":"15932:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":760,"name":"_seed","nodeType":"VariableDeclaration","scope":781,"src":"15951:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint","nodeType":"ElementaryTypeName","src":"15951:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":762,"name":"_sig","nodeType":"VariableDeclaration","scope":781,"src":"15963:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":761,"name":"bytes","nodeType":"ElementaryTypeName","src":"15963:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"15931:50:0"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[],"src":"16058:0:0"},"scope":927,"src":"15906:237:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":798,"nodeType":"Block","src":"16379:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":794,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"16431:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":795,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"16438:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":792,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"16396:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3323_$","typeString":"type(library PrincipalImpl)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"16396:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2615_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16396:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":791,"id":797,"nodeType":"Return","src":"16389:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":799,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":799,"src":"16290:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint","nodeType":"ElementaryTypeName","src":"16290:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16289:19:0"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"name":"","nodeType":"VariableDeclaration","scope":799,"src":"16342:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"16342:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":786,"length":null,"nodeType":"ArrayTypeName","src":"16342:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":790,"name":"","nodeType":"VariableDeclaration","scope":799,"src":"16360:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":788,"name":"uint","nodeType":"ElementaryTypeName","src":"16360:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":789,"length":null,"nodeType":"ArrayTypeName","src":"16360:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16341:33:0"},"scope":927,"src":"16264:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":812,"nodeType":"Block","src":"16720:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":808,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"16773:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":809,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"16780:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":806,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"16737:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":9485,"src":"16737:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2615_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16737:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":805,"id":811,"nodeType":"Return","src":"16730:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":813,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":813,"src":"16662:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":800,"name":"uint","nodeType":"ElementaryTypeName","src":"16662:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16661:19:0"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"name":"","nodeType":"VariableDeclaration","scope":813,"src":"16714:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint","nodeType":"ElementaryTypeName","src":"16714:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16713:6:0"},"scope":927,"src":"16633:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":834,"nodeType":"Block","src":"17206:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":830,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"17255:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":831,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"17262:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":828,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"17223:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":9522,"src":"17223:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2615_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17223:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":827,"id":833,"nodeType":"Return","src":"17216:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":835,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":835,"src":"17109:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint","nodeType":"ElementaryTypeName","src":"17109:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17108:19:0"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"name":"","nodeType":"VariableDeclaration","scope":835,"src":"17161:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint","nodeType":"ElementaryTypeName","src":"17161:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":820,"name":"","nodeType":"VariableDeclaration","scope":835,"src":"17167:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint","nodeType":"ElementaryTypeName","src":"17167:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":823,"name":"","nodeType":"VariableDeclaration","scope":835,"src":"17173:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"17173:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":822,"length":null,"nodeType":"ArrayTypeName","src":"17173:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":826,"name":"","nodeType":"VariableDeclaration","scope":835,"src":"17191:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":824,"name":"uint","nodeType":"ElementaryTypeName","src":"17191:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":825,"length":null,"nodeType":"ArrayTypeName","src":"17191:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"17160:45:0"},"scope":927,"src":"17084:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":852,"nodeType":"Block","src":"17734:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":847,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"17782:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":848,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"17789:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":849,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"17803:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":845,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"17751:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9786,"src":"17751:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2615_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17751:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":844,"id":851,"nodeType":"Return","src":"17744:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":853,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":853,"src":"17643:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint","nodeType":"ElementaryTypeName","src":"17643:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":839,"name":"_scAddr","nodeType":"VariableDeclaration","scope":853,"src":"17662:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"17642:36:0"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"name":"","nodeType":"VariableDeclaration","scope":853,"src":"17712:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"17712:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":842,"length":null,"nodeType":"ArrayTypeName","src":"17712:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"17711:18:0"},"scope":927,"src":"17619:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":871,"nodeType":"Block","src":"18088:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":867,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"18131:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":868,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"18138:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":865,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"18105:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":9143,"src":"18105:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2615_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18105:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":864,"id":870,"nodeType":"Return","src":"18098:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":872,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":858,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"18036:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":859,"modifierName":{"argumentTypes":null,"id":857,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"18019:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"18019:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"name":"_custodian","nodeType":"VariableDeclaration","scope":872,"src":"17975:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"17975:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"17974:20:0"},"returnParameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"name":"","nodeType":"VariableDeclaration","scope":872,"src":"18061:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"18061:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":863,"name":"","nodeType":"VariableDeclaration","scope":872,"src":"18070:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":862,"name":"bytes","nodeType":"ElementaryTypeName","src":"18070:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18060:23:0"},"scope":927,"src":"17956:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":887,"nodeType":"Block","src":"18471:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":883,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"18517:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":884,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"18524:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":881,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"18488:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9839_$","typeString":"type(library WorkersImpl)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":9169,"src":"18488:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18488:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":880,"id":886,"nodeType":"Return","src":"18481:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":888,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"name":"_data","nodeType":"VariableDeclaration","scope":888,"src":"18383:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":873,"name":"bytes","nodeType":"ElementaryTypeName","src":"18383:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":876,"name":"_signature","nodeType":"VariableDeclaration","scope":888,"src":"18403:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":875,"name":"bytes","nodeType":"ElementaryTypeName","src":"18403:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"18382:45:0"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"name":"","nodeType":"VariableDeclaration","scope":888,"src":"18461:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint","nodeType":"ElementaryTypeName","src":"18461:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18460:6:0"},"scope":927,"src":"18361:181:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":903,"nodeType":"Block","src":"18810:99:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":899,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"18865:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":900,"name":"_updatedEnigmaContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"18872:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":897,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"18827:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8819_$","typeString":"type(library UpgradeImpl)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeEnigmaContractImpl","nodeType":"MemberAccess","referencedDeclaration":8740,"src":"18827:37:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18827:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":896,"id":902,"nodeType":"Return","src":"18820:82:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _updatedEnigmaContractAddress Updated newly-deployed Enigma contract address","id":904,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":893,"modifierName":{"argumentTypes":null,"id":892,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17746,"src":"18768:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18768:9:0"},{"arguments":null,"id":895,"modifierName":{"argumentTypes":null,"id":894,"name":"isUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"18782:23:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18782:23:0"}],"name":"upgradeEnigmaContract","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"name":"_updatedEnigmaContractAddress","nodeType":"VariableDeclaration","scope":904,"src":"18714:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"18714:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"18713:39:0"},"returnParameters":{"id":896,"nodeType":"ParameterList","parameters":[],"src":"18810:0:0"},"scope":927,"src":"18683:226:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":925,"nodeType":"Block","src":"19268:108:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":919,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"19332:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":920,"name":"_workerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"19339:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":921,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"19355:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":922,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"19364:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2615_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":917,"name":"UpgradeImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"19285:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UpgradeImpl_$8819_$","typeString":"type(library UpgradeImpl)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferWorkerStakePostUpgradeImpl","nodeType":"MemberAccess","referencedDeclaration":8818,"src":"19285:46:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2615_storage_ptr_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,address,address,bytes memory) returns (uint256)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19285:84:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":916,"id":924,"nodeType":"Return","src":"19278:91:0"}]},"documentation":"Upgrade Enigma Contract\\n@param _workerAddress Newly-registered worker address\\n@param _signer Newly-registered worker address\\n@param _sig Signature","id":926,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":913,"modifierName":{"argumentTypes":null,"id":912,"name":"fromUpdatedEnigmaContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"19216:25:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"19216:25:0"}],"name":"transferWorkerStakePostUpgrade","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"name":"_workerAddress","nodeType":"VariableDeclaration","scope":926,"src":"19141:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"19141:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":908,"name":"_signer","nodeType":"VariableDeclaration","scope":926,"src":"19165:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"19165:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":910,"name":"_sig","nodeType":"VariableDeclaration","scope":926,"src":"19182:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":909,"name":"bytes","nodeType":"ElementaryTypeName","src":"19182:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"19140:60:0"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"name":"","nodeType":"VariableDeclaration","scope":926,"src":"19255:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"19255:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"19254:9:0"},"scope":927,"src":"19101:275:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":928,"src":"885:18493:0"}],"src":"0:19379:0"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event","signature":"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"},"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55":{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event","signature":"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55"},"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb":{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event","signature":"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb"},"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd":{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event","signature":"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd"},"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7"},"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7"},"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142"},"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event","signature":"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f"},"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454"},"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f"},"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event","signature":"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f"},"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5":{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event","signature":"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5"},"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9":{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event","signature":"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9"},"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158":{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event","signature":"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158"},"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d"},"0x5b00db39a072b9c10ede0c598bf9c262cd8e40a7057c19e3691a7d38dfa2c84e":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint64[]"},{"indexed":false,"name":"gasPxs","type":"uint64[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0x5b00db39a072b9c10ede0c598bf9c262cd8e40a7057c19e3691a7d38dfa2c84e"},"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9"}},"links":{"WorkersImpl":"0x991e0f6ae3c7BF2f0f515639AbD4B247B79AdE98","PrincipalImpl":"0xFFEc922ff7c3AcB1C58caF7f633a96af121Ca7a5","TaskImpl":"0xd1c0e836E260C6b82292bb8C86Ff49808B9875f5","SecretContractImpl":"0xd1C5383a0FffEBa75b3c1097eedAf7f2349386F9","UpgradeImpl":"0x7F52194BB21BFa564688E67119f7c6D9B084A466"},"address":"0x94df5De69e00e339A7689c7D6bd41dfE70549FEe","transactionHash":"0x8d2384cc6a8704322499c598d9f52929023b59c135faddc2e78198c611bf9143"}},"schemaVersion":"3.0.10","updatedAt":"2019-10-11T05:47:50.395Z","devdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_optionalEthereumContractAddress":"Output state hash","_optionalEthereumData":"Output state hash","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_stateDeltaHash":"Input state delta hash","_taskId":"Unique taskId"}},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_taskId":"Unique taskId"}},"countSecretContracts()":{"return":"Number of deployed secret contracts"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash","_nonce":"Locally-computed nonce value for this deployment"}},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"createTaskRecords(bytes32[],uint64[],uint64[],uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimits":"ENG gas limit","_gasPxs":"ENG gas price in grains format (10 ** 8)","_inputsHashes":"Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_initStateDeltaHash":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumContractAddress":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumData":"Initial state delta hash as a result of the contract\'s constructor","_preCodeHash":"Predeployed bytecode hash","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deposit(address,uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit","_custodian":"The worker\'s ETH address"}},"getActiveWorkers(uint256)":{"params":{"_blockNumber":"Block number"}},"getAllSecretContractAddresses()":{"return":"Array of secret contract addresses"},"getEpochSize()":{"return":"Epoch size"},"getFirstBlockNumber(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Block number"},"getReport(address)":{"params":{"_custodian":"The worker\'s custodian address"}},"getSecretContract(bytes32)":{"params":{"_scAddr":"Secret contract address"},"return":"SecretContract struct"},"getSecretContractAddresses(uint256,uint256)":{"params":{"_start":"Start of range","_stop":"End of range"},"return":"Subset of deployed secret contract addresses"},"getSigningAddress()":{"return":"Signing address"},"getTaskRecord(bytes32)":{"params":{"_taskId":"Unique identifier for a given task"},"return":"TaskRecord struct"},"getUpdatedEnigmaContractAddress()":{"return":"Updated Enigma contract address"},"getUserTaskDeployments(address)":{"params":{"_sender":"Task sender\'s ethereum address"},"return":"Current number for task deployments for user"},"getWorker(address)":{"params":{"_worker":"Worker\'s ethereum address"},"return":"Worker struct"},"getWorkerFromSigningAddress(address)":{"params":{"_signer":"Worker\'s signing address"},"return":"Ethereum addressWorker struct"},"getWorkerGroup(uint256,bytes32)":{"params":{"_blockNumber":"Block number the task record was mined","_scAddr":"Secret contract address"},"return":"Selected workers\' addresses"},"getWorkerParams(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes"},"getWorkersParams()":{"return":"Array of WorkersParams structs"},"isOwner()":{"return":"true if `msg.sender` is the owner of the contract."},"owner()":{"return":"the address of the owner."},"register(address,bytes,bytes)":{"params":{"_report":"The RLP encoded report returned by the IAS","_signature":"Signature","_signer":"The signer address, derived from the enclave public key"}},"renounceOwnership()":{"details":"Allows the current owner to relinquish control of the contract."},"returnFeesForTask(bytes32)":{"params":{"_taskId":"Unique taskId"}},"setWorkersParams(uint256,uint256,bytes)":{"params":{"_blockNumber":"Block number principal node is attempting to set worker params","_seed":"The random integer generated by the enclave","_sig":"Principal node\'s signature"}},"transferOwnership(address)":{"details":"Allows the current owner to transfer control of the contract to a newOwner.","params":{"newOwner":"The address to transfer ownership to."}},"transferWorkerStakePostUpgrade(address,address,bytes)":{"params":{"_sig":"Signature","_signer":"Newly-registered worker address","_workerAddress":"Newly-registered worker address"}},"upgradeEnigmaContract(address)":{"params":{"_updatedEnigmaContractAddress":"Updated newly-deployed Enigma contract address"}},"verifyReport(bytes,bytes)":{"params":{"_data":"The report itself","_signature":"The signature of the report"}},"withdraw(uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit"}}}},"userdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee."},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"notice":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure."},"countSecretContracts()":{"notice":"Check if secret contract has been deployed"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"notice":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid."},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"notice":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"createTaskRecords(bytes32[],uint64[],uint64[],uint256)":{"notice":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deposit(address,uint256)":{"notice":"Deposits ENG stake into contract from worker. Worker must be registered to do so."},"getActiveWorkers(uint256)":{"notice":"Get active workers before a certain block number"},"getAllSecretContractAddresses()":{"notice":"Get all secret contract addresses"},"getEpochSize()":{"notice":"Get the epoch block size"},"getFirstBlockNumber(uint256)":{"notice":"Get the first block number of an epoch that a given block number belongs to"},"getReport(address)":{"notice":"The RLP encoded report returned by the IAS server"},"getSecretContract(bytes32)":{"notice":"Get a SecretContract struct given a particular secret contract address"},"getSecretContractAddresses(uint256,uint256)":{"notice":"Get deployed secret contract addresses within a range"},"getSigningAddress()":{"notice":"Get signing address of calling worker"},"getTaskRecord(bytes32)":{"notice":"Get a TaskRecord struct given a particular task\'s ID"},"getUpdatedEnigmaContractAddress()":{"notice":"Get updated Enigma contract address"},"getUserTaskDeployments(address)":{"notice":"Get the current number/index (used as unique nonce value) of task deployments for a given user user"},"getWorker(address)":{"notice":"Get Worker struct from a given worker\'s ethereum address"},"getWorkerFromSigningAddress(address)":{"notice":"Get Worker struct from a given worker\'s signing address"},"getWorkerGroup(uint256,bytes32)":{"notice":"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address."},"getWorkerParams(uint256)":{"notice":"Get worker params for an epoch given a particular block number"},"getWorkersParams()":{"notice":"Get epoch-based history of worker params information"},"login()":{"notice":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process."},"logout()":{"notice":"Logout worker. Worker must be logged in to do so."},"register(address,bytes,bytes)":{"notice":"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks."},"renounceOwnership()":{"notice":"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."},"returnFeesForTask(bytes32)":{"notice":"Return the task fee to the task creator when too many blocks have elapsed without task resolution."},"setWorkersParams(uint256,uint256,bytes)":{"notice":"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node"},"transferWorkerStakePostUpgrade(address,address,bytes)":{"notice":"Upgrade Enigma Contract"},"upgradeEnigmaContract(address)":{"notice":"Upgrade Enigma Contract"},"verifyReport(bytes,bytes)":{"notice":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate."},"withdraw(uint256)":{"notice":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so."}}}}')},function(e){e.exports=JSON.parse('{"contractName":"EnigmaToken","abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"INITIAL_SUPPLY","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_from\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"INITIAL_SUPPLY\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"details\\":\\"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. \\",\\"methods\\":{\\"approve(address,uint256)\\":{\\"details\\":\\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\",\\"params\\":{\\"_spender\\":\\"The address which will spend the funds.\\",\\"_value\\":\\"The amount of tokens to be spent.\\"}},\\"balanceOf(address)\\":{\\"details\\":\\"Gets the balance of the specified address.\\",\\"params\\":{\\"owner\\":\\"The address to query the balance of.\\"},\\"return\\":\\"An uint256 representing the amount owned by the passed address.\\"},\\"constructor\\":{\\"details\\":\\"EnigmaToken Constructor Runs only on initial contract creation.\\"},\\"decimals()\\":{\\"return\\":\\"the number of decimals of the token.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"spender\\":\\"The address which will spend the funds.\\",\\"subtractedValue\\":\\"The amount of tokens to decrease the allowance by.\\"}},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"addedValue\\":\\"The amount of tokens to increase the allowance by.\\",\\"spender\\":\\"The address which will spend the funds.\\"}},\\"name()\\":{\\"return\\":\\"the name of the token.\\"},\\"symbol()\\":{\\"return\\":\\"the symbol of the token.\\"},\\"totalSupply()\\":{\\"details\\":\\"Total number of tokens in existence\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"Transfer token for a specified address when not paused\\",\\"params\\":{\\"_to\\":\\"The address to transfer to.\\",\\"_value\\":\\"The amount to be transferred.\\"}},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"Transfer tokens from one address to another when not paused\\",\\"params\\":{\\"_from\\":\\"address The address which you want to send tokens from\\",\\"_to\\":\\"address The address which you want to transfer to\\",\\"_value\\":\\"uint256 the amount of tokens to be transferred\\"}}},\\"title\\":\\"Enigma Token\\"},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":\\"EnigmaToken\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":{\\"keccak256\\":\\"0x1d072d408420008c3d39b1006b9adbbe472f55fc314a8eb80d9861edfeb54c73\\",\\"urls\\":[\\"bzzr://9ec40fae3d143258454c5d7c25811f7969f1ef64abbf88ab96d753d6322906a4\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\":{\\"keccak256\\":\\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\\",\\"urls\\":[\\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\":{\\"keccak256\\":\\"0xe195405e9993d575173cdb5dd408db7459a026b9a98085c1a3b676f020f46584\\",\\"urls\\":[\\"bzzr://4463a0d4f49767f59c02f2a987b90d48e0d31b3ed3424f3e743496f102f96044\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\":{\\"keccak256\\":\\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\\",\\"urls\\":[\\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b506040518060400160405280600681526020017f456e69676d6100000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f454e470000000000000000000000000000000000000000000000000000000000815250600882600390805190602001906100959291906101a9565b5081516100a99060049060208501906101a9565b506005805460ff191660ff92909216919091179055506100d990503366354a6ba7a180006100de602090811b901c565b610244565b6001600160a01b0382166100f157600080fd5b61010a8160025461019060201b6106741790919060201c565b6002556001600160a01b0382166000908152602081815260409091205461013a918390610674610190821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156101a257600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101ea57805160ff1916838001178555610217565b82800160010185558215610217579182015b828111156102175782518255916020019190600101906101fc565b50610223929150610227565b5090565b61024191905b80821115610223576000815560010161022d565b90565b6107d3806102536000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610452565b6100c161046d565b6101626004803603604081101561025c57600080fd5b506001600160a01b0381351690602001356104ce565b6101626004803603604081101561028857600080fd5b506001600160a01b038135169060200135610517565b61017e600480360360408110156102b457600080fd5b506001600160a01b0381358116916020013516610523565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e838361052f565b9392505050565b60025490565b60006103888484846105ab565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006001600160a01b0383166103b957600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61067416565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006001600160a01b0383166104e357600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61068616565b600061036e838361069b565b600061036e83836106b1565b60006001600160a01b03831661054457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6001600160a01b03831660009081526001602090815260408083203384529091528120546105df908363ffffffff61068616565b6001600160a01b038516600090815260016020908152604080832033845290915290205561060e8484846106dc565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561036e57600080fd5b60008282111561069557600080fd5b50900390565b60006106a83384846106dc565b50600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166106ef57600080fd5b6001600160a01b038316600090815260208190526040902054610718908263ffffffff61068616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461074d908263ffffffff61067416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820cd0470b2dddcc56c882132081664f5106c4c77a70e625dbc86f5a15d248f86ec0029","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063395093511161007157806339509351146101ec57806370a082311461021857806395d89b411461023e578063a457c2d714610246578063a9059cbb14610272578063dd62ed3e1461029e576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd146101905780632ff2e9dc146101c6578063313ce567146101ce575b600080fd5b6100c16102cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610362565b604080519115158252519081900360200190f35b61017e610375565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b0381358116916020810135909116906040013561037b565b61017e610390565b6101d661039b565b6040805160ff9092168252519081900360200190f35b6101626004803603604081101561020257600080fd5b506001600160a01b0381351690602001356103a4565b61017e6004803603602081101561022e57600080fd5b50356001600160a01b0316610452565b6100c161046d565b6101626004803603604081101561025c57600080fd5b506001600160a01b0381351690602001356104ce565b6101626004803603604081101561028857600080fd5b506001600160a01b038135169060200135610517565b61017e600480360360408110156102b457600080fd5b506001600160a01b0381358116916020013516610523565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b5050505050905090565b600061036e838361052f565b9392505050565b60025490565b60006103888484846105ab565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b60006001600160a01b0383166103b957600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61067416565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103585780601f1061032d57610100808354040283529160200191610358565b60006001600160a01b0383166104e357600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103ed908363ffffffff61068616565b600061036e838361069b565b600061036e83836106b1565b60006001600160a01b03831661054457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6001600160a01b03831660009081526001602090815260408083203384529091528120546105df908363ffffffff61068616565b6001600160a01b038516600090815260016020908152604080832033845290915290205561060e8484846106dc565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561036e57600080fd5b60008282111561069557600080fd5b50900390565b60006106a83384846106dc565b50600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166106ef57600080fd5b6001600160a01b038316600090815260208190526040902054610718908263ffffffff61068616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461074d908263ffffffff61067416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820cd0470b2dddcc56c882132081664f5106c4c77a70e625dbc86f5a15d248f86ec0029","sourceMap":"660:1642:2:-;;;913:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;913:105:2;405:163:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:1:2;501:4:28;493:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;515:16:28;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:28;:20;;-1:-1:-1;;541:20:28;;;;;;;;;;;;-1:-1:-1;978:33:2;;-1:-1:-1;984:10:2;753:17;978:5;;;;;:33;;:::i;:::-;660:1642;;6198:263:27;-1:-1:-1;;;;;6272:21:27;;6264:30;;;;;;6320:23;6337:5;6320:12;;:16;;;;;;:23;;;;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:27;;:9;:18;;;;;;;;;;;;:29;;6397:5;;6374:22;;;;;:29;;:::i;:::-;-1:-1:-1;;;;;6353:18:27;;:9;:18;;;;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;:9;;6418:36;;;;;;;;;;6198:263;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:26:o;660:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;660:1642:2;;;-1:-1:-1;660:1642:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","deployedSourceMap":"660:1642:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:1642:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:128:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2026:128:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;936:89:27;;;:::i;:::-;;;;;;;;;;;;;;;;1620:150:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1620:150:2;;;;;;;;;;;;;;;;;:::i;712:58::-;;;:::i;930:81:28:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4233:317:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:27;;;;;;;;:::i;1234:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:27;-1:-1:-1;;;;;1234:104:27;;:::i;771:85:28:-;;;:::i;5058:327:27:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:27;;;;;;;;:::i;1200:120:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1200:120:2;;;;;;;;:::i;2160:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2160:139:2;;;;;;;;;;:::i;628:81:28:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2026:128:2:-;2093:4;2116:31;2130:8;2140:6;2116:13;:31::i;:::-;2109:38;2026:128;-1:-1:-1;;;2026:128:2:o;936:89:27:-;1006:12;;936:89;:::o;1620:150:2:-;1702:4;1725:38;1744:5;1751:3;1756:6;1725:18;:38::i;:::-;1718:45;1620:150;-1:-1:-1;;;;1620:150:2:o;712:58::-;753:17;712:58;:::o;930:81:28:-;995:9;;;;930:81;:::o;4233:317:27:-;4313:4;-1:-1:-1;;;;;4337:21:27;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:27;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:27;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;4462:60;;;;;;;;;;;-1:-1:-1;4539:4:27;4233:317;;;;:::o;1234:104::-;-1:-1:-1;;;;;1315:16:27;1289:7;1315:16;;;;;;;;;;;;1234:104::o;771:85:28:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;5058:327:27;5143:4;-1:-1:-1;;;;;5167:21:27;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:27;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1200:120:2:-;1263:4;1286:27;1301:3;1306:6;1286:14;:27::i;2160:139::-;2234:7;2260:32;2276:6;2283:8;2260:15;:32::i;2735:238:27:-;2800:4;-1:-1:-1;;;;;2824:21:27;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:27;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;2909:36;;;;;;;;;;;-1:-1:-1;2962:4:27;2735:238;;;;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:27;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:27;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:27;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;;;;;;;;;;;;-1:-1:-1;3719:4:27;3436:294;;;;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;1205:145;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:26;;;1205:145::o;1962:137:27:-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;:::-;-1:-1:-1;2088:4:27;1962:137;;;;:::o;1669:129::-;-1:-1:-1;;;;;1767:15:27;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;5599:256::-;-1:-1:-1;;;;;5686:16:27;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:27;;:9;:15;;;;;;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:27;;;:9;:15;;;;;;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:27;;;:9;:13;;;;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o","source":"pragma solidity ^0.5.0;\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\";\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\";\\n\\n/**\\n * @title Enigma Token\\n * @dev ERC20 Enigma Token (ENG)\\n *\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\n * units referred to as \'Grains\'.\\n *\\n * ENG are displayed using 8 decimal places of precision.\\n *\\n * 1 ENG is equivalent to:\\n *   100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n *\\n * 150 million ENG (total supply) is equivalent to:\\n *   15000000000000000 == 150000000 * 10**8 == 1e17\\n *\\n * All initial ENG Grains are assigned to the creator of\\n * this contract.\\n *\\n */\\ncontract EnigmaToken is ERC20, ERC20Detailed {\\n\\n    uint256 public constant INITIAL_SUPPLY = 150000000 * 10**8;  // 150 million ENG specified in Grains\\n\\n    /**\\n    * @dev EnigmaToken Constructor\\n    * Runs only on initial contract creation.\\n    */\\n    constructor() public ERC20Detailed(\\"Enigma\\", \\"ENG\\", 8) {\\n        _mint(msg.sender, INITIAL_SUPPLY);\\n    }\\n\\n    /**\\n    * @dev Transfer token for a specified address when not paused\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\n        return super.transfer(_to, _value);\\n    }\\n\\n    /**\\n    * @dev Transfer tokens from one address to another when not paused\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint256 the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\n        return super.transferFrom(_from, _to, _value);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint256 _value) public returns (bool) {\\n        return super.approve(_spender, _value);\\n    }\\n\\n    function allowance(address _owner, address _spender) public view returns (uint256) {\\n        return super.allowance(_owner,_spender);\\n    }\\n\\n}","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1745]},"id":1746,"nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1650,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12706,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1651,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12764,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1652,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":12705,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$12705","typeString":"contract ERC20"}},"id":1653,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1654,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":12763,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$12763","typeString":"contract ERC20Detailed"}},"id":1655,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[12705,12763,12832],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1745,"linearizedBaseContracts":[1745,12763,12705,12832],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1662,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1745,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1676,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12847,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1673,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1670,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12620,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1677,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1668,"modifierName":{"argumentTypes":null,"id":1664,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12763,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$12763_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1745,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1692,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1688,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1689,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1686,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12349,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1685,"id":1691,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"name":"_to","nodeType":"VariableDeclaration","scope":1693,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1681,"name":"_value","nodeType":"VariableDeclaration","scope":1693,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"name":"","nodeType":"VariableDeclaration","scope":1693,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1745,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12349,"visibility":"public"},{"body":{"id":1711,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1706,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1707,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1708,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1704,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":12434,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1703,"id":1710,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"name":"_from","nodeType":"VariableDeclaration","scope":1712,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1697,"name":"_to","nodeType":"VariableDeclaration","scope":1712,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1699,"name":"_value","nodeType":"VariableDeclaration","scope":1712,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"name":"","nodeType":"VariableDeclaration","scope":1712,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1745,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":12434,"visibility":"public"},{"body":{"id":1727,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1723,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1724,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1721,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":12385,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1720,"id":1726,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"name":"_spender","nodeType":"VariableDeclaration","scope":1728,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1716,"name":"_value","nodeType":"VariableDeclaration","scope":1728,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"name":"","nodeType":"VariableDeclaration","scope":1728,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1745,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":12385,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1739,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1740,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1737,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12330,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1742,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"name":"_owner","nodeType":"VariableDeclaration","scope":1744,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1732,"name":"_spender","nodeType":"VariableDeclaration","scope":1744,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"name":"","nodeType":"VariableDeclaration","scope":1744,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1745,"src":"2160:139:2","stateMutability":"view","superFunction":12330,"visibility":"public"}],"scope":1746,"src":"660:1642:2"}],"src":"0:2302:2"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1745]},"id":1746,"nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1650,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12706,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1651,"nodeType":"ImportDirective","scope":1746,"sourceUnit":12764,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1652,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":12705,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$12705","typeString":"contract ERC20"}},"id":1653,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1654,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":12763,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$12763","typeString":"contract ERC20Detailed"}},"id":1655,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[12705,12763,12832],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1745,"linearizedBaseContracts":[1745,12763,12705,12832],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1662,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1745,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1676,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12847,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1673,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1670,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12620,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1677,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1668,"modifierName":{"argumentTypes":null,"id":1664,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12763,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$12763_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1745,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1692,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1688,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1689,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1686,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12349,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1685,"id":1691,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"name":"_to","nodeType":"VariableDeclaration","scope":1693,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1681,"name":"_value","nodeType":"VariableDeclaration","scope":1693,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"name":"","nodeType":"VariableDeclaration","scope":1693,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1745,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12349,"visibility":"public"},{"body":{"id":1711,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1706,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1707,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1708,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1704,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":12434,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1703,"id":1710,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"name":"_from","nodeType":"VariableDeclaration","scope":1712,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1697,"name":"_to","nodeType":"VariableDeclaration","scope":1712,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1699,"name":"_value","nodeType":"VariableDeclaration","scope":1712,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"name":"","nodeType":"VariableDeclaration","scope":1712,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1745,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":12434,"visibility":"public"},{"body":{"id":1727,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1723,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1724,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1721,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":12385,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1720,"id":1726,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"name":"_spender","nodeType":"VariableDeclaration","scope":1728,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1716,"name":"_value","nodeType":"VariableDeclaration","scope":1728,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"name":"","nodeType":"VariableDeclaration","scope":1728,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1745,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":12385,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1739,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1740,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1737,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12906,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1745","typeString":"contract super EnigmaToken"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12330,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1742,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"name":"_owner","nodeType":"VariableDeclaration","scope":1744,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1732,"name":"_spender","nodeType":"VariableDeclaration","scope":1744,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"name":"","nodeType":"VariableDeclaration","scope":1744,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1745,"src":"2160:139:2","stateMutability":"view","superFunction":12330,"visibility":"public"}],"scope":1746,"src":"660:1642:2"}],"src":"0:2302:2"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}},"links":{},"address":"0x3aa748695563bb9D3fe87746D802323e14D6B112","transactionHash":"0x3cbf15c2feef54e1a19d68f80ce1ad28a0752b6743484a4ba30f8d65acc27333"}},"schemaVersion":"3.0.10","updatedAt":"2019-10-11T05:47:50.352Z","devdoc":{"details":"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. ","methods":{"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.","params":{"_spender":"The address which will spend the funds.","_value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"Gets the balance of the specified address.","params":{"owner":"The address to query the balance of."},"return":"An uint256 representing the amount owned by the passed address."},"constructor":{"details":"EnigmaToken Constructor Runs only on initial contract creation."},"decimals()":{"return":"the number of decimals of the token."},"decreaseAllowance(address,uint256)":{"details":"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"spender":"The address which will spend the funds.","subtractedValue":"The amount of tokens to decrease the allowance by."}},"increaseAllowance(address,uint256)":{"details":"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"addedValue":"The amount of tokens to increase the allowance by.","spender":"The address which will spend the funds."}},"name()":{"return":"the name of the token."},"symbol()":{"return":"the symbol of the token."},"totalSupply()":{"details":"Total number of tokens in existence"},"transfer(address,uint256)":{"details":"Transfer token for a specified address when not paused","params":{"_to":"The address to transfer to.","_value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another when not paused","params":{"_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}}},"title":"Enigma Token"},"userdoc":{"methods":{}}}')},function(e,t){e.exports=require("jayson/lib/client/browser")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("retry")},function(e,t){e.exports=require("ethereumjs-abi")},function(e,t,n){e.exports=n(17)},function(e,t){e.exports=require("core-js/stable")},function(e,t){e.exports=require("regenerator-runtime/runtime")},function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"ERROR",function(){return h}),n.d(r,"DEPOSIT_TRANSACTION_HASH",function(){return v}),n.d(r,"DEPOSIT_CONFIRMATION",function(){return E}),n.d(r,"DEPOSIT_RECEIPT",function(){return C}),n.d(r,"WITHDRAW_TRANSACTION_HASH",function(){return V}),n.d(r,"WITHDRAW_CONFIRMATION",function(){return x}),n.d(r,"WITHDRAW_RECEIPT",function(){return N}),n.d(r,"LOGIN_TRANSACTION_HASH",function(){return L}),n.d(r,"LOGIN_CONFIRMATION",function(){return w}),n.d(r,"LOGIN_RECEIPT",function(){return P}),n.d(r,"LOGOUT_TRANSACTION_HASH",function(){return R}),n.d(r,"LOGOUT_CONFIRMATION",function(){return A}),n.d(r,"LOGOUT_RECEIPT",function(){return W}),n.d(r,"DEPLOY_SC_ADDR_RESULT",function(){return q}),n.d(r,"DEPLOY_SC_ETH_TRANSACTION_HASH",function(){return M}),n.d(r,"DEPLOY_SC_ETH_CONFIRMATION",function(){return U}),n.d(r,"DEPLOY_SC_ETH_RECEIPT",function(){return F}),n.d(r,"DEPLOY_SC_ENG_RECEIPT",function(){return H}),n.d(r,"CREATE_TASK",function(){return B}),n.d(r,"CREATE_TASK_INPUT",function(){return O}),n.d(r,"CREATE_TASK_RECORD_TRANSACTION_HASH",function(){return G}),n.d(r,"CREATE_TASK_RECORD_CONFIRMATION",function(){return z}),n.d(r,"CREATE_TASK_RECORD_RECEIPT",function(){return K}),n.d(r,"CREATE_TASK_RECORD",function(){return j}),n.d(r,"CREATE_TASK_RECORDS_TRANSACTION_HASH",function(){return Y}),n.d(r,"CREATE_TASK_RECORDS_CONFIRMATION",function(){return J}),n.d(r,"CREATE_TASK_RECORDS_RECEIPT",function(){return Z}),n.d(r,"CREATE_TASK_RECORDS",function(){return X}),n.d(r,"SEND_TASK_INPUT_RESULT",function(){return Q}),n.d(r,"POLL_TASK_STATUS_RESULT",function(){return ee}),n.d(r,"GET_TASK_RESULT_RESULT",function(){return te}),n.d(r,"DEPLOY_SECRET_CONTRACT_RESULT",function(){return ne}),n.d(r,"POLL_TASK_ETH_RESULT",function(){return re}),n.d(r,"RPC_SEND_TASK_INPUT",function(){return ae}),n.d(r,"RPC_DEPLOY_SECRET_CONTRACT",function(){return ie}),n.d(r,"RPC_GET_TASK_RESULT",function(){return se}),n.d(r,"RPC_GET_TASK_STATUS",function(){return oe}),n.d(r,"GET_TASK_RESULT_SUCCESS",function(){return de}),n.d(r,"GET_TASK_RESULT_FAILED",function(){return pe}),n.d(r,"GET_TASK_RESULT_UNVERIFIED",function(){return le}),n.d(r,"GET_TASK_RESULT_INPROGRESS",function(){return ce}),n.d(r,"ETH_STATUS_UNDEFINED",function(){return ye}),n.d(r,"ETH_STATUS_CREATED",function(){return ue}),n.d(r,"ETH_STATUS_VERIFIED",function(){return me}),n.d(r,"ETH_STATUS_FAILED",function(){return fe}),n.d(r,"ETH_STATUS_FAILED_ETH",function(){return _e}),n.d(r,"ETH_STATUS_FAILED_RETURN",function(){return be});n(15),n(16);var a=n(2),i=n.n(a),s=n(3),o=n.n(s),d=n(0),p=n.n(d),l=n(7),c=n.n(l),y=n(4),u=n(5),m=n.n(u);p.a.options.usePureJavaScript=!0;var f=c.a.ec;function _(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;d=g(d),e+=i.a.BigInt(d.length/2).toString(16).padStart(16,"0")+d}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function b(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;e=_(e+=i.a.BigInt(d.length).toString(16).padStart(16,"0"),d)}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function g(e){return"0x"==e.substring(0,2)?e.substring(2):e}var T={test:function(){return"hello2"},generateScAddr:function(e,t){return o.a.soliditySha3({t:"bytes",v:e},{t:"uint",v:t})},hash:function(e){var t=_("",e);return o.a.soliditySha3({t:"bytes",v:t})},principalHash:function(e,t,n,r){var a="";return a=b(a=_(a,[e,t]),[n,r]),o.a.soliditySha3({t:"bytes",v:a})},commitReceiptsHash:function(e,t,n,r,a,i,s,d,p){var l="";return l=_(l,[e]),l=_(l=b(l,[t]),[n]),l=_(l=b(l,[r,a,i]),[s,d,p]),o.a.soliditySha3({t:"bytes",v:l})},getDerivedKey:function(e,t){var n=new f("secp256k1");128==e.length&&(e="04"+e);var r=n.keyFromPrivate(t,"hex"),a=n.keyFromPublic(e,"hex").getPublic().mul(r.getPrivate()),i=2|(a.getY().isOdd()?1:0),s=a.getX(),o=y.Buffer.from([i]),d=s.toArrayLike(y.Buffer,"be",32),l=p.a.md.sha256.create();return l.update(o.toString("binary")),l.update(d.toString("binary")),l.digest().toHex()},encryptMessage:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:p.a.random.getBytesSync(12),r=p.a.util.hexToBytes(e),a=p.a.cipher.createCipher("AES-GCM",r);return a.start({iv:n}),a.update(p.a.util.createBuffer(t)),a.finish(),a.output.putBuffer(a.mode.tag).putBytes(n).toHex()},decryptMessage:function(e,t){var n=p.a.util.hexToBytes(e),r=y.Buffer.from(t,"hex"),a=p.a.util.createBuffer(r.slice(-12)),i=p.a.util.createBuffer(r.slice(-28,-12)),s=p.a.cipher.createDecipher("AES-GCM",n);if(s.start({iv:a,tag:i}),s.update(p.a.util.createBuffer(r.slice(0,-28))),s.finish())return s.output.toHex();throw new Error("decipher did not finish")},toGrains:function(e){return e*Math.pow(10,8)}};T.remove0x=g,T.hexToAscii=function(e){if("number"!=typeof e&&"string"!=typeof e)return"";e=e.toString().replace(/\s+/gi,"");for(var t=[],n=0;n<e.length;n+=2){var r=parseInt(e.substr(n,2),16);isNaN(r)||0===r||t.push(String.fromCharCode(r))}return t.join("")},T.sleep=function(e){return new Promise(function(t){return setTimeout(t,e)})},T.gzip=function(e){return new Promise(function(t,n){m.a.gzip(e,function(e,r){e?n(e):t(r)})})},T.gunzip=function(e){return new Promise(function(t,n){m.a.gunzip(e,function(e,r){e?n(e):t(r)})})};var D=T,S=n(8),I=n(9),k=n(1),$=n.n(k),h="error",v="depositTransactionHash",E="depositConfirmation",C="depositReceipt",V="withdrawTransactionHash",x="withdrawConfirmation",N="withdrawReceipt",L="loginTransactionHash",w="loginConfirmation",P="loginReceipt",R="logoutTransactionHash",A="logoutConfirmation",W="logoutReceipt",q="deploySCAddrResult",M="deploySCEthTransactionHash",U="deploySCEthConfirmation",F="deploySCEthReceipt",H="deploySCEngReceipt",B="createTask",O="createTaskInput",G="createTaskRecordTransactionHash",z="createTaskRecordConfirmation",K="createTaskRecordReceipt",j="createTaskRecord",Y="createTaskRecordsTransactionHash",J="createTaskRecordsConfirmation",Z="createTaskRecordsReceipt",X="createTaskRecords",Q="sendTaskInputResult",ee="pollTaskStatusResult",te="getTaskResultResult",ne="deploySecretContractResult",re="pollTaskETHResult",ae="sendTaskInput",ie="deploySecretContract",se="getTaskResult",oe="getTaskStatus",de="SUCCESS",pe="FAILED",le="UNVERIFIED",ce="INPROGRESS",ye=0,ue=1,me=2,fe=3,_e=4,be=5;function ge(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function Te(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){ge(i,r,a,s,o,"next",e)}function o(e){ge(i,r,a,s,o,"throw",e)}s(void 0)})}}function De(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Se=function(){function e(t,n,r,a,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.enigmaContract=n,this.tokenContract=r,this.txDefaults=a,this.enigma=i}var t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_;return t=e,(n=[{key:"findBySigningAddress",value:(_=Te(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorkerFromSigningAddress(t).call();case 2:return n=e.sent,e.abrupt("return",{account:n[0],status:parseInt(n[1][1]),report:n[1][2],balance:parseInt(n[1][3]),logs:n[1][4]});case 4:case"end":return e.stop()}},e,this)})),function(e){return _.apply(this,arguments)})},{key:"getWorkerStatus",value:(f=Te(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return n=e.sent,e.abrupt("return",parseInt(n.status));case 4:case"end":return e.stop()}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"isDeployed",value:(m=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getSecretContract(t).call();case 3:return e.t1=e.sent.status,e.t2=(0,e.t0)(e.t1),e.abrupt("return",1===e.t2);case 6:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"countSecretContracts",value:(u=Te(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.countSecretContracts().call();case 3:return e.t1=e.sent,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(){return u.apply(this,arguments)})},{key:"getSecretContractAddresses",value:(y=Te(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContractAddresses(t,n).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e,t){return y.apply(this,arguments)})},{key:"getAllSecretContractAddresses",value:(c=Te(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getAllSecretContractAddresses().call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(){return c.apply(this,arguments)})},{key:"getCodeHash",value:(l=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.codeHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"countStateDeltas",value:(p=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.stateDeltaHashes.length);case 3:case"end":return e.stop()}},e,this)})),function(e){return p.apply(this,arguments)})},{key:"getStateDeltaHash",value:(d=Te(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes[e.t0]);case 4:case"end":return e.stop()}},e,this)})),function(e,t){return d.apply(this,arguments)})},{key:"getStateDeltaHashes",value:(o=Te(regeneratorRuntime.mark(function e(t,n,r){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.t1=r,e.abrupt("return",e.sent.stateDeltaHashes.slice(e.t0,e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e,t,n){return o.apply(this,arguments)})},{key:"isValidDeltaHash",value:(s=Te(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes.includes(e.t0));case 4:case"end":return e.stop()}},e,this)})),function(e,t){return s.apply(this,arguments)})},{key:"login",value:function(e){var t=this,n=new $.a;return Te(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.login().send({from:e}).on("transactionHash",function(e){n.emit(L,e)}).on("confirmation",function(e,t){n.emit(w,e,t)}).on("receipt",function(e){n.emit(P,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(h,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"logout",value:function(e){var t=this,n=new $.a;return Te(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.logout().send({from:e}).on("transactionHash",function(e){n.emit(R,e)}).on("confirmation",function(e,t){n.emit(A,e,t)}).on("receipt",function(e){n.emit(W,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(h,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"deposit",value:function(e,t){var n=this,r=new $.a;return Te(regeneratorRuntime.mark(function a(){var i;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,n.tokenContract.methods.balanceOf(e).call();case 2:if(!(a.sent<t)){a.next=7;break}return"Not enough tokens in wallet",r.emit("error",{name:"NotEnoughTokens",message:"Not enough tokens in wallet"}),a.abrupt("return");case 7:return a.next=9,n.tokenContract.methods.approve(n.enigmaContract.options.address,t).send({from:e});case 9:return a.prev=9,a.next=12,n.enigmaContract.methods.deposit(e,t).send({from:e}).on("transactionHash",function(e){r.emit(v,e)}).on("confirmation",function(e,t){r.emit(E,e,t)});case 12:i=a.sent,r.emit(C,i),a.next=19;break;case 16:a.prev=16,a.t0=a.catch(9),r.emit(h,a.t0.message);case 19:case"end":return a.stop()}},a,null,[[9,16]])}))(),r}},{key:"withdraw",value:function(e,t){var n=this,r=new $.a;return Te(regeneratorRuntime.mark(function a(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,n.enigmaContract.methods.withdraw(t).send({from:e}).on("transactionHash",function(e){r.emit(V,e)}).on("confirmation",function(e,t){r.emit(x,e,t)}).on("receipt",function(e){r.emit(N,e)});case 3:a.next=8;break;case 5:a.prev=5,a.t0=a.catch(0),r.emit(h,a.t0.message);case 8:case"end":return a.stop()}},a,null,[[0,5]])}))(),r}},{key:"getBalance",value:(i=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getWorker(t).call();case 3:return e.t1=e.sent.balance,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e){return i.apply(this,arguments)})},{key:"getWorkerSignerAddr",value:(a=Te(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return e.abrupt("return",e.sent.signer);case 3:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})}])&&De(t.prototype,n),r&&De(t,r),e}();var Ie=function e(t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.inputsHash=D.hash([n,r,_?f:t,o]),this.scAddr=t,this.encryptedFn=n,this.encryptedAbiEncodedArgs=r,this.gasLimit=a,this.gasPx=i,this.msgId=s,this.userPubKey=o,this.firstBlockNumber=d,this.workerAddress=p,this.workerEncryptionKey=l,this.sender=c,this.userTaskSig=y,this.nonce=u,this.preCode=m,this.preCodeHash=f,this.isContractDeploymentTask=_,this.transactionHash="",this.taskId="",this.receipt="",this.ethStatus=0,this.proof="",this.creationBlockNumber=-1,this.encryptedAbiEncodedOutputs="",this.delta="",this.usedGas="",this.ethereumPayload="",this.ethereumAddress="",this.workerTaskSig="",this.engStatus="null",this.decryptedOutput=""},ke=n(10),$e=n.n(ke),he=n(11),ve=n.n(he),Ee=n(12),Ce=n.n(Ee),Ve=n(13),xe=n(6),Ne=n.n(xe);function Le(e){return(Le="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function we(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function Pe(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){we(i,r,a,s,o,"next",e)}function o(e){we(i,r,a,s,o,"throw",e)}s(void 0)})}}function Re(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Ae=function(){function e(t,n,r,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.txDefaults=i,this.config={},this.config.retry={},this.config.retry.retries=s.retry&&null!=s.retry.retries?s.retry.retries:5,this.config.retry.factor=s.retry&&null!=s.retry.factor?s.retry.factor:2,this.config.retry.minTimeout=s.retry&&null!=s.retry.minTimeout?s.retry.minTimeout:2e3,this.config.retry.maxTimeout=s.retry&&null!=s.retry.maxTimeout?s.retry.maxTimeout:"Infinity",this.config.retry.randomize=!s.retry||(null==s.retry.randomize||s.retry.randomize);this.client=$e()(function(e,t){ve.a.post(a,JSON.parse(e),{headers:{"Content-Type":"application/json",credentials:"include"}}).then(function(e){if(h in e.data)t(e.data.error,null);else{var n=JSON.stringify(e.data.result);t(null,n)}}).catch(function(e){t({code:-32e3,message:e.message},null)})},{}),this.workerParamsCache={},this.selectedWorkerGroupCache={},this.taskKeyLocalStorage={},this.createContracts(n,r)}var t,n,r,a,s,d,l,c,y,u,m,f;return t=e,n=[{key:"admin",value:function(){this.admin=new Se(this.web3,this.enigmaContract,this.tokenContract,this.txDefaults,this)}},{key:"createContracts",value:function(e,t){this.enigmaContract=new this.web3.eth.Contract(S.abi,e,this.txDefaults),this.tokenContract=new this.web3.eth.Contract(I.abi,t,this.txDefaults)}},{key:"createTask",value:function(e,t,n,r,a,i,s){var o=this,d=new $.a;return Pe(regeneratorRuntime.mark(function p(){var l,c,y,u,m,f,_,b,g,T,S,I,k,$,v,E,C,V,x,N,L,w,P,R,A,W,q,M;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:return p.t0=parseInt,p.next=3,o.enigmaContract.methods.getUserTaskDeployments(a).call();case 3:if(p.t1=p.sent,l=(0,p.t0)(p.t1),c=s?D.generateScAddr(a,l):i,!s){p.next=17;break}if(!Buffer.isBuffer(i)){p.next=14;break}return y=i,p.next=11,D.gzip(y);case 11:u=p.sent,p.next=15;break;case 14:throw Error("PreCode expected to be a Buffer, instead got "+Le(i));case 15:p.next=19;break;case 17:y="",u="";case 19:for(m=s?o.web3.utils.soliditySha3({t:"bytes",value:y.toString("hex")}):"",f=void 0===t||0===t.length?[[],[]]:t[0].map(function(e,n){return t.map(function(e){return e[n]})}),_=D.remove0x(o.web3.eth.abi.encodeParameters(f[1],f[0])),b=[],g=0;g<_.length;g+=2)b.push(parseInt(_.substr(g,2),16));return p.next=26,o.web3.eth.getBlockNumber();case 26:return T=p.sent,p.next=29,o.getWorkerParams(T);case 29:return S=p.sent,I=S.firstBlockNumber,p.next=33,o.selectWorkerGroup(c,S,1)[0];case 33:return k=(k=p.sent).toLowerCase().slice(-40),$=o.obtainTaskKeyPair(),v=$.publicKey,E=$.privateKey,p.prev=36,p.next=39,new Promise(function(e,t){o.client.request("getWorkerEncryptionKey",{workerAddress:k,userPubKey:v},function(n,r){n?t(n):e(r)})});case 39:if(C=p.sent,V=C.result,x=C.id,N=V.workerEncryptionKey,L=V.workerSig,w="0x0000000000000013456e69676d612055736572204d6573736167650000000000000040"+N,P=(P=Ne.a.recover("0x"+L,o.web3.utils.soliditySha3({t:"bytes",value:w}))).toLowerCase().slice(-40),k===P){p.next=50;break}console.error("Worker address",k,"!= recovered address",P),d.emit(h,{name:"InvalidWorker",message:"Invalid worker encryption key + signature combo ".concat(k," != ").concat(P)}),p.next=58;break;case 50:return R=D.getDerivedKey(N,E),A=D.encryptMessage(R,e),W=D.encryptMessage(R,Buffer.from(b)),q=o.web3.utils.soliditySha3({t:"bytes",v:A},{t:"bytes",v:W}),p.next=56,o.web3.eth.sign(q,a);case 56:M=p.sent,d.emit(B,new Ie(c,A,W,n,r,x,v,I,k,N,a,M,l,u.toString("base64"),m,s));case 58:p.next=63;break;case 60:p.prev=60,p.t2=p.catch(36),d.emit(h,p.t2);case 63:case"end":return p.stop()}},p,null,[[36,60]])}))(),d}},{key:"createTaskRecord",value:function(e){var t=this,n=new $.a;return Pe(regeneratorRuntime.mark(function r(){var a;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.tokenContract.methods.balanceOf(e.sender).call();case 2:if(!(r.sent<e.gasLimit*e.gasPx)){r.next=6;break}return n.emit(h,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 6:return r.next=8,t.tokenContract.methods.approve(t.enigmaContract.options.address,e.gasLimit*e.gasPx).send({from:e.sender});case 8:if(r.prev=8,!e.isContractDeploymentTask){r.next=15;break}return r.next=12,t.enigmaContract.methods.createDeploymentTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber,e.nonce).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(G,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 12:r.t0=r.sent,r.next=18;break;case 15:return r.next=17,t.enigmaContract.methods.createTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(G,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 17:r.t0=r.sent;case 18:a=r.t0,e.taskId=a.events.TaskRecordCreated.returnValues.taskId,e.receipt=a,e.ethStatus=1,e.creationBlockNumber=a.blockNumber,n.emit(K,a),n.emit(j,e),r.next=30;break;case 27:r.prev=27,r.t1=r.catch(8),n.emit(h,r.t1.message);case 30:case"end":return r.stop()}},r,null,[[8,27]])}))(),n}},{key:"createTaskRecords",value:function(e){var t=this,n=new $.a;return Pe(regeneratorRuntime.mark(function r(){var a,i,s,o,d,p;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return a=e.map(function(e){return e.inputsHash}),i=e.map(function(e){return e.gasLimit}),s=e.map(function(e){return e.gasPx}),o=e.map(function(e){return e.gasLimit*e.gasPx}),r.next=6,t.tokenContract.methods.balanceOf(e[0].sender).call();case 6:if(d=r.sent,p=o.reduce(function(e,t){return e+t},0),!(d<p)){r.next=11;break}return n.emit(h,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 11:return r.next=13,t.tokenContract.methods.approve(t.enigmaContract.options.address,p).send({from:e[0].sender});case 13:return r.next=15,t.enigmaContract.methods.createTaskRecords(a,i,s,e[0].firstBlockNumber).send({from:e[0].sender}).on("transactionHash",function(t){for(var r=0;r<e.length;r++)e[r].transactionHash=t;n.emit(Y,t)}).on("confirmation",function(e,t){n.emit(J,e,t)}).then(function(t){for(var r=t.events.TaskRecordsCreated.returnValues.taskIds,a=0;a<e.length;a++)e[a].taskId=r[a],e[a].receipt=t,e[a].ethStatus=1,e[a].creationBlockNumber=t.blockNumber;n.emit(Z,t),n.emit(X,e)});case 15:case"end":return r.stop()}},r)}))(),n}},{key:"getTaskRecordStatus",value:(f=Pe(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return n=e.sent,t.ethStatus=parseInt(n.status),t.proof=n.proof,e.abrupt("return",t);case 6:case"end":return e.stop()}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"getTaskRecordFromTaskId",value:(m=Pe(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t).call();case 2:return n=e.sent,e.abrupt("return",{sender:n.sender,inputsHash:n.inputsHash,outputHash:n.outputHash,gasLimit:parseInt(n.gasLimit),gasPx:parseInt(n.gasPx),blockNumber:parseInt(n.blockNumber),status:parseInt(n.status),proof:n.proof});case 4:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"getTaskOutputHash",value:(u=Pe(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return e.abrupt("return",e.sent.outputHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return u.apply(this,arguments)})},{key:"getReport",value:(y=Pe(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getReport(t).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e){return y.apply(this,arguments)})},{key:"getWorkerParams",value:(c=Pe(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(0===Object.keys(this.workerParamsCache).length||t-this.workerParamsCache.firstBlockNumber>=this.epochSize)){e.next=8;break}return e.next=3,this.enigmaContract.methods.getEpochSize().call();case 3:return this.epochSize=e.sent,e.next=6,this.enigmaContract.methods.getWorkerParams(t).call();case 6:n=e.sent,this.workerParamsCache={firstBlockNumber:parseInt(n[0]),seed:i.a.BigInt(n[1]),workers:n[2],stakes:n[3].map(function(e){return i.a.BigInt(e)})};case 8:return e.abrupt("return",this.workerParamsCache);case 9:case"end":return e.stop()}},e,this)})),function(e){return c.apply(this,arguments)})},{key:"selectWorkerGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5,r=t.stakes.reduce(function(e,t){return i.a.add(e,t)},i.a.BigInt(0)),a=0,s=[];do{for(var d=Ve.rawEncode(["uint256","bytes32","uint256"],[t.seed.toString(10),e,a]),p=o.a.keccak256(d),l=i.a.remainder(i.a.BigInt(p),r),c=t.workers[t.workers.length-1],y=0;y<t.workers.length;y++)if((l=i.a.subtract(l,t.stakes[y]))<=0){c=t.workers[y];break}s.includes(c)||s.push(c),a++}while(s.length<n);return s}},{key:"sendTaskInput",value:function(t){var n=this,r=new $.a;return Pe(regeneratorRuntime.mark(function a(){var i,s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return i=ae,s=Q,t.isContractDeploymentTask&&(i=ie,s=ne),a.prev=3,a.next=6,new Promise(function(r,a){n.client.request(i,e.serializeTask(t),function(e,t){e?a(e):r(t)})});case 6:r.emit(s,t),a.next=12;break;case 9:a.prev=9,a.t0=a.catch(3),r.emit(h,a.t0);case 12:case"end":return a.stop()}},a,null,[[3,9]])}))(),r}},{key:"getTaskResult",value:function(e){var t=this,n=new $.a,r=Ce.a.operation(this.config.retry);return r.attempt(function(){var a=Pe(regeneratorRuntime.mark(function a(i){var s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,new Promise(function(n,r){t.client.request(se,{taskId:D.remove0x(e.taskId)},function(e,t){e?r(e):n(t)})});case 3:if(!(s=a.sent).result){a.next=20;break}a.t0=s.result.status,a.next=a.t0===de?8:a.t0===pe?12:a.t0===le?15:a.t0===ce?15:17;break;case 8:e.delta=s.result.delta,e.ethereumPayload=s.result.ethereumPayload,e.ethereumAddress=s.result.ethereumAddress,e.preCodeHash=s.result.preCodeHash;case 12:e.encryptedAbiEncodedOutputs=s.result.output,e.usedGas=s.result.usedGas,e.workerTaskSig=s.result.signature;case 15:return e.engStatus=s.result.status,a.abrupt("break",18);case 17:throw new Error("Invalid task result status").message;case 18:a.next=26;break;case 20:if(!r.retry(!0)){a.next=25;break}return console.log("Warning: Got an empty TaskResult on attempt "+i+" of "+(t.config.retry.retries+1)+". Retrying..."),a.abrupt("return");case 25:e.engStatus=null;case 26:n.emit(te,e),a.next=32;break;case 29:a.prev=29,a.t1=a.catch(0),n.emit(h,a.t1);case 32:case"end":return a.stop()}},a,null,[[0,29]])}));return function(e){return a.apply(this,arguments)}}()),n}},{key:"decryptTaskResult",value:(l=Pe(regeneratorRuntime.mark(function e(t){var n,r,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("task.encryptedAbiEncodedOutputs is "+t.encryptedAbiEncodedOutputs),t.encryptedAbiEncodedOutputs?(n=this.obtainTaskKeyPair(),r=n.privateKey,a=D.getDerivedKey(t.workerEncryptionKey,r),t.decryptedOutput=D.decryptMessage(a,t.encryptedAbiEncodedOutputs)):(console.log("Warning: task.encryptedAbiEncodedOutputs is empty, there is nothing to decrypt."),t.decryptedOutput=null),e.abrupt("return",t);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"verifyTaskOutput",value:(d=Pe(regeneratorRuntime.mark(function e(t){var n,r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getTaskOutputHash(t);case 2:return n=e.sent,r=this.web3.utils.soliditySha3({t:"bytes",value:t.encryptedAbiEncodedOutputs.toString("hex")}),e.abrupt("return",n===r);case 5:case"end":return e.stop()}},e,this)})),function(e){return d.apply(this,arguments)})},{key:"verifyTaskStatus",value:(s=Pe(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getTaskRecordStatus(t);case 2:n=e.sent.ethStatus,e.t0=t.engStatus,e.next=e.t0===de?6:e.t0===pe?8:e.t0===le?10:e.t0===ce?10:12;break;case 6:return e.abrupt("return",n===me);case 8:return e.abrupt("return",n===fe);case 10:return e.abrupt("return",n===ue);case 12:return e.abrupt("return",n===ye);case 13:case"end":return e.stop()}},e,this)})),function(e){return s.apply(this,arguments)})},{key:"pollTaskStatusGen",value:regeneratorRuntime.mark(function e(t,n){var r=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,new Promise(function(e,a){r.client.request(oe,{taskId:D.remove0x(t.taskId),workerAddress:t.workerAddress,withResult:n},function(r,i){r?a(r):(t.engStatus=i.result.status,n&&(t.encryptedAbiEncodedOutputs=i.result.output),e(t))})});case 3:e.next=0;break;case 5:case"end":return e.stop()}},e)})},{key:"innerPollTaskStatus",value:function(e,t,n){var r=this;t.next().value.then(function(a){n.emit(ee,a),"SUCCESS"!==a.engStatus&&"FAILED"!==a.engStatus&&r.innerPollTaskStatus(e,t,n)}).catch(function(e){n.emit(h,e)})}},{key:"pollTaskStatus",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=new $.a,r=this.pollTaskStatusGen(e,t);return this.innerPollTaskStatus(e,r,n),n}},{key:"pollTaskETH",value:(a=Pe(regeneratorRuntime.mark(function e(t){var n,r=arguments;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=r.length>1&&void 0!==r[1]?r[1]:1e3;case 1:if(t.ethStatus!==ue){e.next=9;break}return e.next=4,this.getTaskRecordStatus(t);case 4:return t=e.sent,e.next=7,D.sleep(n);case 7:e.next=1;break;case 9:return e.abrupt("return",t);case 10:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})},{key:"obtainTaskKeyPair",value:function(){var e,t="undefined"!=typeof window,n=t?window.localStorage.getItem("encodedPrivateKey"):this.taskKeyLocalStorage.encodedPrivateKey;if(null==n)throw Error("Need to set task key pair first");return e=t?atob(n):Buffer.from(n,"base64").toString("binary"),{publicKey:Ne.a.publicKeyByPrivateKey(e),privateKey:e}}},{key:"setTaskKeyPair",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t="undefined"!=typeof window;if(""===e)for(var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",r=0;r<9;r++)e+=n.charAt(Math.floor(Math.random()*n.length));var a=p.a.random.createInstance();a.seedFileSync=function(t){return p.a.util.fillString(e,t)};var i=p.a.util.bytesToHex(a.getBytes(32));return t?window.localStorage.setItem("encodedPrivateKey",btoa(i)):this.taskKeyLocalStorage.encodedPrivateKey=Buffer.from(i,"binary").toString("base64"),e}},{key:"deploySecretContract",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return Pe(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!0).on(B,function(e){return o(e)}).on(h,function(e){return d(e)})});case 2:return p=o.sent,d.emit(B,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(h,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(ne,function(t){return e(t)}).on(h,function(e){return t(e)})});case 10:return d.emit(ne,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(h,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}},{key:"computeTask",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return Pe(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!1).on(B,function(e){return o(e)}).on(h,function(e){return d(e)})});case 2:return p=o.sent,d.emit(B,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(h,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(Q,function(t){return e(t)}).on(h,function(e){return t(e)})});case 10:return d.emit(Q,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(h,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}}],r=[{key:"serializeTask",value:function(e){return e.isContractDeploymentTask?{preCode:e.preCode,encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),encryptedFn:D.remove0x(e.encryptedFn),userDHKey:D.remove0x(e.userPubKey),contractAddress:D.remove0x(e.scAddr),workerAddress:e.workerAddress}:{taskId:D.remove0x(e.taskId),workerAddress:e.workerAddress,encryptedFn:D.remove0x(e.encryptedFn),encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),contractAddress:D.remove0x(e.scAddr),userDHKey:D.remove0x(e.userPubKey)}}},{key:"version",value:function(){return"0.0.1"}}],n&&Re(t.prototype,n),r&&Re(t,r),e}();n.d(t,"Enigma",function(){return Ae}),n.d(t,"utils",function(){return D}),n.d(t,"eeConstants",function(){return r})}])});
//# sourceMappingURL=enigma-js.node.min.js.map