!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("enigma-js",[],t):"object"==typeof exports?exports["enigma-js"]=t():e["enigma-js"]=t()}(global,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=13)}([function(e,t){e.exports=require("node-forge")},function(e,t){e.exports=require("eventemitter3")},function(e,t){e.exports=require("jsbi")},function(e,t){e.exports=require("web3-utils")},function(e,t){e.exports=require("buffer")},function(e,t){e.exports=require("zlib")},function(e,t){e.exports=require("eth-crypto")},function(e,t){e.exports=require("elliptic")},function(e){e.exports=JSON.parse('{"contractName":"Enigma","abi":[{"constant":true,"inputs":[],"name":"getAllSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getWorkersParams","outputs":[{"components":[{"name":"firstBlockNumber","type":"uint256"},{"name":"workers","type":"address[]"},{"name":"stakes","type":"uint256[]"},{"name":"seed","type":"uint256"}],"name":"","type":"tuple[5]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_scAddr","type":"bytes32"}],"name":"getSecretContract","outputs":[{"components":[{"name":"owner","type":"address"},{"name":"preCodeHash","type":"bytes32"},{"name":"codeHash","type":"bytes32"},{"name":"stateDeltaHashes","type":"bytes32[]"},{"name":"status","type":"uint8"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"getTaskRecord","outputs":[{"components":[{"name":"sender","type":"address"},{"name":"inputsHash","type":"bytes32"},{"name":"outputHash","type":"bytes32"},{"name":"gasLimit","type":"uint256"},{"name":"gasPx","type":"uint256"},{"name":"blockNumber","type":"uint256"},{"name":"status","type":"uint8"},{"name":"proof","type":"bytes"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_signer","type":"address"}],"name":"getWorkerFromSigningAddress","outputs":[{"name":"","type":"address"},{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_worker","type":"address"}],"name":"getWorker","outputs":[{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSigningAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEpochSize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_sender","type":"address"}],"name":"getUserTaskDeployments","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_tokenAddress","type":"address"},{"name":"_principal","type":"address"},{"name":"_epochSize","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event"},{"constant":false,"inputs":[{"name":"_signer","type":"address"},{"name":"_report","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_custodian","type":"address"},{"name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"login","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"logout","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContractFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_preCodeHash","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_initStateDeltaHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"countSecretContracts","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_start","type":"uint256"},{"name":"_stop","type":"uint256"}],"name":"getSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint256"},{"name":"_gasPx","type":"uint256"},{"name":"_firstBlockNumber","type":"uint256"},{"name":"_nonce","type":"uint256"}],"name":"createDeploymentTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint256"},{"name":"_gasPx","type":"uint256"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHashes","type":"bytes32[]"},{"name":"_gasLimits","type":"uint256[]"},{"name":"_gasPxs","type":"uint256[]"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecords","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_stateDeltaHash","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitReceipt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitTaskFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"returnFeesForTask","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_seed","type":"uint256"},{"name":"_sig","type":"bytes"}],"name":"setWorkersParams","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getActiveWorkers","outputs":[{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getFirstBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getWorkerParams","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_scAddr","type":"bytes32"}],"name":"getWorkerGroup","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_custodian","type":"address"}],"name":"getReport","outputs":[{"name":"","type":"address"},{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_data","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"verifyReport","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createDeploymentTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"_gasLimits\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"_gasPxs\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecords\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getActiveWorkers\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getWorkerGroup\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"logout\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitReceipt\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"deposit\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_initStateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_seed\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setWorkersParams\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContractFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getAllSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getWorkersParams\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple[5]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"countSecretContracts\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getSecretContract\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"register\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_start\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_stop\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getTaskRecord\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"gasPx\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"proof\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getWorkerParams\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorkerFromSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"login\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_data\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"verifyReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_worker\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorker\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitTaskFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getFirstBlockNumber\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getEpochSize\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"returnFeesForTask\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_sender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getUserTaskDeployments\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"name\\":\\"_tokenAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_principal\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_epochSize\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"custodian\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"Registered\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"hash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"workerAddr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"ValidatedSig\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"inclusionBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"indexed\\":false,\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WorkersParameterized\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"gasPx\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskIds\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimits\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"gasPxs\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordsCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"deltaHashIndex\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskIds\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"outputHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptsVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailedETH\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"TaskFeeReturned\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"DepositSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WithdrawSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"initStateDeltaHash\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"SecretContractDeployed\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_optionalEthereumContractAddress\\":\\"Output state hash\\",\\"_optionalEthereumData\\":\\"Output state hash\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_stateDeltaHash\\":\\"Input state delta hash\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"countSecretContracts()\\":{\\"return\\":\\"Number of deployed secret contracts\\"},\\"createDeploymentTaskRecord(bytes32,uint256,uint256,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\",\\"_nonce\\":\\"Locally-computed nonce value for this deployment\\"}},\\"createTaskRecord(bytes32,uint256,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"createTaskRecords(bytes32[],uint256[],uint256[],uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimits\\":\\"ENG gas limit\\",\\"_gasPxs\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHashes\\":\\"Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_initStateDeltaHash\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumContractAddress\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumData\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_preCodeHash\\":\\"Predeployed bytecode hash\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deploySecretContractFailure(bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deposit(address,uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\",\\"_custodian\\":\\"The worker\'s ETH address\\"}},\\"getActiveWorkers(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"}},\\"getAllSecretContractAddresses()\\":{\\"return\\":\\"Array of secret contract addresses\\"},\\"getEpochSize()\\":{\\"return\\":\\"Epoch size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Block number\\"},\\"getReport(address)\\":{\\"params\\":{\\"_custodian\\":\\"The worker\'s custodian address\\"}},\\"getSecretContract(bytes32)\\":{\\"params\\":{\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"SecretContract struct\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"params\\":{\\"_start\\":\\"Start of range\\",\\"_stop\\":\\"End of range\\"},\\"return\\":\\"Subset of deployed secret contract addresses\\"},\\"getSigningAddress()\\":{\\"return\\":\\"Signing address\\"},\\"getTaskRecord(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique identifier for a given task\\"},\\"return\\":\\"TaskRecord struct\\"},\\"getUserTaskDeployments(address)\\":{\\"params\\":{\\"_sender\\":\\"Task sender\'s ethereum address\\"},\\"return\\":\\"Current number for task deployments for user\\"},\\"getWorker(address)\\":{\\"params\\":{\\"_worker\\":\\"Worker\'s ethereum address\\"},\\"return\\":\\"Worker struct\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"params\\":{\\"_signer\\":\\"Worker\'s signing address\\"},\\"return\\":\\"Ethereum addressWorker struct\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number the task record was mined\\",\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"Selected workers\' addresses\\"},\\"getWorkerParams(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes\\"},\\"getWorkersParams()\\":{\\"return\\":\\"Array of WorkersParams structs\\"},\\"register(address,bytes,bytes)\\":{\\"params\\":{\\"_report\\":\\"The RLP encoded report returned by the IAS\\",\\"_signature\\":\\"Signature\\",\\"_signer\\":\\"The signer address, derived from the enclave public key\\"}},\\"returnFeesForTask(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique taskId\\"}},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number principal node is attempting to set worker params\\",\\"_seed\\":\\"The random integer generated by the enclave\\",\\"_sig\\":\\"Principal node\'s signature\\"}},\\"verifyReport(bytes,bytes)\\":{\\"params\\":{\\"_data\\":\\"The report itself\\",\\"_signature\\":\\"The signature of the report\\"}},\\"withdraw(uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\"}}}},\\"userdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee.\\"},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure.\\"},\\"countSecretContracts()\\":{\\"notice\\":\\"Check if secret contract has been deployed\\"},\\"createDeploymentTaskRecord(bytes32,uint256,uint256,uint256,uint256)\\":{\\"notice\\":\\"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid.\\"},\\"createTaskRecord(bytes32,uint256,uint256,uint256)\\":{\\"notice\\":\\"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"createTaskRecords(bytes32[],uint256[],uint256[],uint256)\\":{\\"notice\\":\\"Create task records for tasks (either contract deployment or regular tasks). This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deploySecretContractFailure(bytes32,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deposit(address,uint256)\\":{\\"notice\\":\\"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\"},\\"getActiveWorkers(uint256)\\":{\\"notice\\":\\"Get active workers before a certain block number\\"},\\"getAllSecretContractAddresses()\\":{\\"notice\\":\\"Get all secret contract addresses\\"},\\"getEpochSize()\\":{\\"notice\\":\\"Get the epoch block size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"notice\\":\\"Get the first block number of an epoch that a given block number belongs to\\"},\\"getReport(address)\\":{\\"notice\\":\\"The RLP encoded report returned by the IAS server\\"},\\"getSecretContract(bytes32)\\":{\\"notice\\":\\"Get a SecretContract struct given a particular secret contract address\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"notice\\":\\"Get deployed secret contract addresses within a range\\"},\\"getSigningAddress()\\":{\\"notice\\":\\"Get signing address of calling worker\\"},\\"getTaskRecord(bytes32)\\":{\\"notice\\":\\"Get a TaskRecord struct given a particular task\'s ID\\"},\\"getUserTaskDeployments(address)\\":{\\"notice\\":\\"Get the current number/index (used as unique nonce value) of task deployments for a given user user\\"},\\"getWorker(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s ethereum address\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s signing address\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"notice\\":\\"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address.\\"},\\"getWorkerParams(uint256)\\":{\\"notice\\":\\"Get worker params for an epoch given a particular block number\\"},\\"getWorkersParams()\\":{\\"notice\\":\\"Get epoch-based history of worker params information\\"},\\"login()\\":{\\"notice\\":\\"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process.\\"},\\"logout()\\":{\\"notice\\":\\"Logout worker. Worker must be logged in to do so.\\"},\\"register(address,bytes,bytes)\\":{\\"notice\\":\\"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks.\\"},\\"returnFeesForTask(bytes32)\\":{\\"notice\\":\\"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\"},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"notice\\":\\"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node\\"},\\"verifyReport(bytes,bytes)\\":{\\"notice\\":\\"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\"},\\"withdraw(uint256)\\":{\\"notice\\":\\"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\"}}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":\\"Enigma\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol\\":{\\"keccak256\\":\\"0xde69cc0f1646d11bce70afc19c08d5eb72094d5e50f9bde1dc863c56ac2a79c3\\",\\"urls\\":[\\"bzzr://f2b0fe31ad92813a81e055bba474b1b7d113985a59bea344cdf0675fe937fcac\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol\\":{\\"keccak256\\":\\"0xa3bc352b5936bd601aedf71599ed125dd31b648fa8d69085bafe16f8488a626d\\",\\"urls\\":[\\"bzzr://6bcecf144978d4f951e87ddede6f0c1f899a58cfcc0e3a951e4249e7f2fcabce\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol\\":{\\"keccak256\\":\\"0x0ad522a418f0667849a2358245a07cc64f8e91cc5875804002251cb64873e204\\",\\"urls\\":[\\"bzzr://1e30a5341a140274bd42ebc5081af0d0311bde223876b1e21bd685ab06652d2b\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol\\":{\\"keccak256\\":\\"0xa51a72e8404dbd12f291f205b02b0e9f5ecb505d78c38bc1b86bedb2257b7a28\\",\\"urls\\":[\\"bzzr://9f7f4cc58ebec18084bc7f0ce09692f6f132ab0e0c703fc09bdabec913736fda\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol\\":{\\"keccak256\\":\\"0xaba87ac6cd834c8a356a454c9eeca6373a159c772e70c2d444facb024907f087\\",\\"urls\\":[\\"bzzr://e8c6d14b96f76d84c547c841b61e0df7a87fdb3f099621cafbe70f45c79cbf05\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol\\":{\\"keccak256\\":\\"0xc9bd3a53a57a95af1958676186382951d915ec96f46a3db61164eb8d0298556e\\",\\"urls\\":[\\"bzzr://128fe282e7acd0f113926aaba8983c8fadaaab7c7060f23282d67a68a2c44b7d\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol\\":{\\"keccak256\\":\\"0xd2620fd3dd9691f88740477d06dd32b4ecb7f090f7c76fd1e99a3117f5072e4f\\",\\"urls\\":[\\"bzzr://1c4cc43db4ca854e6c8d25c09b139000545e942bc05722b95858d6761b425ee7\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol\\":{\\"keccak256\\":\\"0x4e00d7b1cd34e5f91b51a6d6cff4af44221cda6b193ce91e76f71a838fa889f1\\",\\"urls\\":[\\"bzzr://215fe7b649e59d98e2bb8c94efe38336b3364ea428f69fb2871b5896f65432be\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol\\":{\\"keccak256\\":\\"0x4b4a7717935b7a2ff66dc3ed678fef636986ea7803254f81b6b59a92f1909a82\\",\\"urls\\":[\\"bzzr://0acbcf0daf2fa9b4930d94f4b9db2fc78594458a180472412f9391678c9e2f41\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol\\":{\\"keccak256\\":\\"0xe918c3a32ffaa3be9a2ca32e0c156fa13f45df3a180b4afb966ed74beac68aee\\",\\"urls\\":[\\"bzzr://4cf87b0dd13996acd984d0964bef0de24f9f5b8a7f9c181ac6fcb2cdf04b2e38\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol\\":{\\"keccak256\\":\\"0xe21e3ce303a61dc1fe7e5ee8c77c94b0a96eaa9015f8abe6eb1fbce2d903b8ee\\",\\"urls\\":[\\"bzzr://ff90e3a82eb6fb10497c419d71bf240f43c544d0071b74b251204200dc08bba1\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Base64.sol\\":{\\"keccak256\\":\\"0x6b6fca483b4fd19ab6f282b45b24f02277ad2b0e2e65269c1f1f9b0672bf8ef3\\",\\"urls\\":[\\"bzzr://227cecb0afb5c808a338d0c757cedf9c085786a8f74fece5d9b14fac332f1301\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Bytes.sol\\":{\\"keccak256\\":\\"0xa9504cd72371444aaec522d40e02f930e9017fc59059c80b4d0b60afe6d3f151\\",\\"urls\\":[\\"bzzr://09e35d59d1fd6c478388e098f8f586d0eb3004af0e8402e5dc0c003b3d555e56\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/Memory.sol\\":{\\"keccak256\\":\\"0xbb69933fc38ebf561a60fc4496c8d48f4aef12b5cef49bb9dd2957d8c6478ce0\\",\\"urls\\":[\\"bzzr://a4b1117bcf978aebba7df92a10df9e866cf854033bc2f4d8e426e360ba78d1fa\\"]},\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol\\":{\\"keccak256\\":\\"0x171f88dc2ce91d601aa659bf84a240a2e7565d26d1a3ef1a0f98ec8181573498\\",\\"urls\\":[\\"bzzr://3830487ad541d0a7df9b761dee0a835cf065e369c6f1b2ac5f8409413f1777b6\\"]},\\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\":{\\"keccak256\\":\\"0xb48974d92a87053dc1d6c5389f3d1b2ad522dec23afcb508eaa935d98dfdc0b6\\",\\"urls\\":[\\"bzzr://e665a84309432c27a26e622665dd97ff29d4d6ad7ad655d6e2c50226a5e99b56\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]}},\\"version\\":1}","bytecode":"0x60806040523480156200001157600080fd5b50604051606080620048a883398101806040526200003391908101906200009b565b600080546001600160a01b039485166001600160a01b031991821617909155600191825560c86002556003805493909416921691909117909155601e819055601f5562000129565b8051620000888162000104565b92915050565b805162000088816200011e565b600080600060608486031215620000b157600080fd5b6000620000bf86866200007b565b9350506020620000d2868287016200007b565b9250506040620000e5868287016200008e565b9150509250925092565b60006001600160a01b03821662000088565b90565b6200010f81620000ef565b81146200011b57600080fd5b50565b6200010f8162000101565b61476f80620001396000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80637624281e1161010f578063b5c14992116100a2578063d855a57911610071578063d855a57914610454578063df4da46114610469578063ee6dcef914610471578063f9a9b7ae14610484576101e5565b8063b5c14992146103fb578063c011b1c31461040e578063ca2af5f21461042e578063cbbc061d14610441576101e5565b80639836ca31116100de5780639836ca311461038e578063a0c39982146103b1578063a3bdae3e146103d2578063b34e97e8146103f3576101e5565b80637624281e14610328578063786cd4d7146103485780638e055b8b1461035b5780638ed057371461036e576101e5565b8063365a2cb311610187578063516c826911610156578063516c8269146102d6578063550baa2f146102e957806370266a47146102fe57806375bbf75b14610313576101e5565b8063365a2cb31461028a57806347e7ef241461029d57806348cc3761146102b057806350946a9f146102c3576101e5565b806316f9a2a4116101c357806316f9a2a4146102255780631d40ff0b1461024f5780631f3c99c31461026f5780632e1a7d4d14610277576101e5565b806302e15a91146101ea57806310851876146101ff578063167e54b714610212575b600080fd5b6101fd6101f83660046134a3565b610497565b005b6101fd61020d366004613232565b610513565b6101fd61022036600461345f565b61058c565b6102386102333660046132d7565b6105cf565b6040516102469291906140b6565b60405180910390f35b61026261025d3660046135d6565b610669565b60405161024691906140a5565b6101fd610708565b6101fd6102853660046132d7565b610961565b6101fd6102983660046132f5565b610c72565b6101fd6102ab36600461313d565b610f1e565b6101fd6102be3660046132f5565b61113f565b6101fd6102d1366004613678565b6113ad565b6101fd6102e436600461350b565b6115d0565b6102f161186c565b60405161024691906140db565b6103066118c7565b60405161024691906140ec565b61031b6119e1565b6040516102469190614546565b61033b6103363660046132d7565b611a73565b60405161024691906141d2565b6101fd6103563660046130c2565b611b3a565b6102f16103693660046135d6565b611bfe565b61038161037c3660046132d7565b611c94565b6040516102469190614504565b6103a161039c3660046132d7565b611dc0565b6040516102469493929190614554565b6103c46103bf36600461304b565b611e63565b604051610246929190614085565b6103e56103e036600461304b565b6120a6565b604051610246929190614065565b6101fd612328565b61031b61040936600461353d565b612594565b61042161041c36600461304b565b612623565b6040516102469190614515565b6101fd61043c3660046133d3565b6127d4565b61031b61044f3660046132d7565b612a76565b61045c612b05565b6040516102469190614057565b61031b612b21565b6101fd61047f3660046132d7565b612b27565b61031b61049236600461304b565b612ba7565b604051600160e01b63f37f394502815273__TaskImpl______________________________9063f37f3945906104dc906000908990899089908990899060040161442d565b60006040518083038186803b1580156104f457600080fd5b505af4158015610508573d6000803e3d6000fd5b505050505050505050565b604051600160e01b63eeb3ea8f02815273__TaskImpl______________________________9063eeb3ea8f90610556906000908890889088908890600401614286565b60006040518083038186803b15801561056e57600080fd5b505af4158015610582573d6000803e3d6000fd5b5050505050505050565b604051600160e01b6327731d8102815273__TaskImpl______________________________906327731d81906105569060009088908890889088906004016143eb565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b815260040161060c9291906142dd565b60006040518083038186803b15801561062457600080fd5b505af4158015610638573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261066091908101906131a1565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a906106ab90600090879087906004016144c1565b60006040518083038186803b1580156106c357600080fd5b505af41580156106d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ff919081019061316d565b90505b92915050565b33610711612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561075957fe5b600281111561076457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108015780601f106107d657610100808354040283529160200191610801565b820191906000526020600020905b8154815290600101906020018083116107e457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108ac57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561087a57fe5b600381111561088557fe5b81526020016001820154815260200160028201548152505081526020019060010190610839565b50505091525090915060019050816020015160028111156108c957fe5b146108f257604051600160e51b62461bcd0281526004016108e990614192565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f499061092d906000906004016141e3565b60006040518083038186803b15801561094557600080fd5b505af4158015610959573d6000803e3d6000fd5b505050505050565b3361096a612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156109b257fe5b60028111156109bd57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a5a5780601f10610a2f57610100808354040283529160200191610a5a565b820191906000526020600020905b815481529060010190602001808311610a3d57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610b0557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610ad357fe5b6003811115610ade57fe5b81526020016001820154815260200160028201548152505081526020019060010190610a92565b5050509152509091506002905081602001516002811115610b2257fe5b14610b4257604051600160e51b62461bcd0281526004016108e9906141c2565b610b4a612bf2565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610b869085904390600401614526565b60606040518083038186803b158015610b9e57600080fd5b505af4158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bd6919081019061359a565b9050600281516003811115610be757fe5b14610c0757604051600160e51b62461bcd0281526004016108e990614142565b8060200151610c1543612a76565b11610c3557604051600160e51b62461bcd0281526004016108e990614182565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df464906105569060009088906004016142dd565b33610c7b612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610cc357fe5b6002811115610cce57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d6b5780601f10610d4057610100808354040283529160200191610d6b565b820191906000526020600020905b815481529060010190602001808311610d4e57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610e1657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610de457fe5b6003811115610def57fe5b81526020016001820154815260200160028201548152505081526020019060010190610da3565b5050509152509091506001905081602001516002811115610e3357fe5b14610e5357604051600160e51b62461bcd0281526004016108e990614192565b8960016000828152601c602052604090206004015460ff166001811115610e7657fe5b14610e9657604051600160e51b62461bcd0281526004016108e990614152565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610ee1906000908f908f908f908f908f908f908f908f906004016142f8565b60006040518083038186803b158015610ef957600080fd5b505af4158015610f0d573d6000803e3d6000fd5b505050505050505050505050505050565b81610f27612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610f6f57fe5b6002811115610f7a57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110175780601f10610fec57610100808354040283529160200191611017565b820191906000526020600020905b815481529060010190602001808311610ffa57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110c257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561109057fe5b600381111561109b57fe5b8152602001600182015481526020016002820154815250508152602001906001019061104f565b50505091525090915060009050816020015160028111156110df57fe5b141561110057604051600160e51b62461bcd0281526004016108e9906141a2565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610556906000908890889060040161425e565b33611148612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561119057fe5b600281111561119b57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112385780601f1061120d57610100808354040283529160200191611238565b820191906000526020600020905b81548152906001019060200180831161121b57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156112e357838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156112b157fe5b60038111156112bc57fe5b81526020016001820154815260200160028201548152505081526020019060010190611270565b505050915250909150600190508160200151600281111561130057fe5b1461132057604051600160e51b62461bcd0281526004016108e990614192565b89600080828152601c602052604090206004015460ff16600181111561134257fe5b1461136257604051600160e51b62461bcd0281526004016108e9906141b2565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610ee1906000908f908f908f908f908f908f908f908f906004016142f8565b336113b6612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156113fe57fe5b600281111561140957fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114a65780601f1061147b576101008083540402835291602001916114a6565b820191906000526020600020905b81548152906001019060200180831161148957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561155157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561151f57fe5b600381111561152a57fe5b815260200160018201548152602001600282015481525050815260200190600101906114de565b505050915250909150600090508160200151600281111561156e57fe5b141561158f57604051600160e51b62461bcd0281526004016108e9906141a2565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b18906104dc906000908990899089906004016144dc565b336115d9612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561162157fe5b600281111561162c57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116c95780601f1061169e576101008083540402835291602001916116c9565b820191906000526020600020905b8154815290600101906020018083116116ac57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561177457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561174257fe5b600381111561174d57fe5b81526020016001820154815260200160028201548152505081526020019060010190611701565b505050915250909150600190508160200151600281111561179157fe5b146117b157604051600160e51b62461bcd0281526004016108e990614192565b84600080828152601c602052604090206004015460ff1660018111156117d357fe5b146117f357604051600160e51b62461bcd0281526004016108e9906141b2565b604051600160e01b6370a2e43b02815273__TaskImpl______________________________906370a2e43b90611834906000908a908a908a90600401614487565b60006040518083038186803b15801561184c57600080fd5b505af4158015611860573d6000803e3d6000fd5b50505050505050505050565b606060006019018054806020026020016040519081016040528092919081815260200182805480156118bd57602002820191906000526020600020905b8154815260200190600101908083116118a9575b5050505050905090565b6118cf612c14565b6040805160a08101909152600460056000835b828210156119d857838260040201604051806080016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561195e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611940575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156119b657602002820191906000526020600020905b8154815260200190600101908083116119a2575b50505050508152602001600382015481525050815260200190600101906118e2565b50505050905090565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a338690611a1e9084906004016141e3565b60206040518083038186803b158015611a3657600080fd5b505af4158015611a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a6e91908101906135b8565b905090565b611a7b612c42565b6000828152601c6020908152604091829020825160a08101845281546001600160a01b031681526001820154818401526002820154818501526003820180548551818602810186019096528086529194929360608601939290830182828015611b0357602002820191906000526020600020905b815481526020019060010190808311611aef575b5050509183525050600482015460209091019060ff166001811115611b2457fe5b6001811115611b2f57fe5b90525090505b919050565b8260005b601854811015611bbc57816001600160a01b03166000601a016000806018018481548110611b6857fe5b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902054161415611bb457604051600160e51b62461bcd0281526004016108e990614132565b600101611b3e565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e209061055690600090889088908890600401614213565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a2600990611c4090600090879087906004016144c1565b60006040518083038186803b158015611c5857600080fd5b505af4158015611c6c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ff91908101906131fe565b611c9c612c6d565b6000828152601b602090815260409182902082516101008101845281546001600160a01b03168152600182015492810192909252600281015492820192909252600382015460608201526004820154608082015260058083015460a0830152600683015491929160c084019160ff90911690811115611d1757fe5b6005811115611d2257fe5b815260078201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611db05780601f10611d8557610100808354040283529160200191611db0565b820191906000526020600020905b815481529060010190602001808311611d9357829003601f168201915b5050505050815250509050919050565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611e009291906142dd565b60006040518083038186803b158015611e1857600080fd5b505af4158015611e2c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611e5491908101906135f5565b93509350935093509193509193565b6000611e6d612bc2565b6000611e77612bc2565b60005b60185481101561209b5760188054601a9160009184908110611e9857fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611eee57fe5b6002811115611ef957fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f965780601f10611f6b57610100808354040283529160200191611f96565b820191906000526020600020905b815481529060010190602001808311611f7957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561204157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561200f57fe5b600381111561201a57fe5b81526020016001820154815260200160028201548152505081526020019060010190611fce565b50505050815250509150856001600160a01b031682600001516001600160a01b0316141561209357601880548290811061207757fe5b6000918252602090912001546001600160a01b0316925061209b565b600101611e7a565b509092509050915091565b60006060826120b3612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156120fb57fe5b600281111561210657fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121a35780601f10612178576101008083540402835291602001916121a3565b820191906000526020600020905b81548152906001019060200180831161218657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561224e57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561221c57fe5b600381111561222757fe5b815260200160018201548152602001600282015481525050815260200190600101906121db565b505050915250909150600090508160200151600281111561226b57fe5b141561228c57604051600160e51b62461bcd0281526004016108e9906141a2565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f031906122c99060009089906004016141f1565b60006040518083038186803b1580156122e157600080fd5b505af41580156122f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261231d9190810190613071565b935093505050915091565b33612331612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561237957fe5b600281111561238457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124215780601f106123f657610100808354040283529160200191612421565b820191906000526020600020905b81548152906001019060200180831161240457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156124cc57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561249a57fe5b60038111156124a557fe5b81526020016001820154815260200160028201548152505081526020019060010190612459565b505050508152505090506124df43612a76565b6124fe57604051600160e51b62461bcd0281526004016108e990614172565b60028160200151600281111561251057fe5b1461253057604051600160e51b62461bcd0281526004016108e9906141c2565b601e546060820151101561255957604051600160e51b62461bcd0281526004016108e990614122565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e29061092d906000906004016141e3565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________906396462368906125d390869086906004016140fd565b60206040518083038186803b1580156125eb57600080fd5b505af41580156125ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106ff91908101906135b8565b61262b612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561267357fe5b600281111561267e57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561271b5780601f106126f05761010080835404028352916020019161271b565b820191906000526020600020905b8154815290600101906020018083116126fe57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156127c657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561279457fe5b600381111561279f57fe5b81526020016001820154815260200160028201548152505081526020019060010190612753565b505050915250909392505050565b336127dd612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561282557fe5b600281111561283057fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128cd5780601f106128a2576101008083540402835291602001916128cd565b820191906000526020600020905b8154815290600101906020018083116128b057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561297857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561294657fe5b600381111561295157fe5b81526020016001820154815260200160028201548152505081526020019060010190612905565b505050915250909150600190508160200151600281111561299557fe5b146129b557604051600160e51b62461bcd0281526004016108e990614192565b8660016000828152601c602052604090206004015460ff1660018111156129d857fe5b146129f857604051600160e51b62461bcd0281526004016108e990614152565b604051600160e61b6289b28102815273__TaskImpl______________________________9063226ca04090612a3c906000908c908c908c908c908c9060040161438b565b60006040518083038186803b158015612a5457600080fd5b505af4158015612a68573d6000803e3d6000fd5b505050505050505050505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612ab590849086906004016142dd565b60206040518083038186803b158015612acd57600080fd5b505af4158015612ae1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061070291908101906135b8565b336000908152601a60205260409020546001600160a01b031690565b60015490565b8060016000828152601b602052604090206006015460ff166005811115612b4a57fe5b14612b6a57604051600160e51b62461bcd0281526004016108e990614162565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b9061092d9060009086906004016142dd565b6001600160a01b03166000908152601d602052604090205490565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b612c2c612cb2565b815260200190600190039081612c245790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b803561070281614702565b805161070281614702565b600082601f830112612d0157600080fd5b8151612d14612d0f826145bb565b614595565b91508181835260208401935060208101905083856020840282011115612d3957600080fd5b60005b83811015612d655781612d4f8882612ce5565b8452506020928301929190910190600101612d3c565b5050505092915050565b600082601f830112612d8057600080fd5b8135612d8e612d0f826145bb565b91508181835260208401935060208101905083856020840282011115612db357600080fd5b60005b83811015612d655781612dc98882612f2f565b8452506020928301929190910190600101612db6565b600082601f830112612df057600080fd5b8151612dfe612d0f826145bb565b91508181835260208401935060208101905083856020840282011115612e2357600080fd5b60005b83811015612d655781612e398882612f3a565b8452506020928301929190910190600101612e26565b600082601f830112612e6057600080fd5b8135612e6e612d0f826145bb565b91508181835260208401935060208101905083856020840282011115612e9357600080fd5b60005b83811015612d655781612ea98882612f2f565b8452506020928301929190910190600101612e96565b600082601f830112612ed057600080fd5b8151612ede612d0f826145bb565b91508181835260208401935060208101905083856020840282011115612f0357600080fd5b60005b83811015612d655781612f198882612f3a565b8452506020928301929190910190600101612f06565b803561070281614716565b805161070281614716565b600082601f830112612f5657600080fd5b8135612f64612d0f826145db565b91508082526020830160208301858383011115612f8057600080fd5b612f8b838284614695565b50505092915050565b600082601f830112612fa557600080fd5b8151612fb3612d0f826145db565b91508082526020830160208301858383011115612fcf57600080fd5b612f8b8382846146a1565b80516107028161471f565b600060608284031215612ff757600080fd5b6130016060614595565b9050600061300f8484612fda565b825250602061302084848301612f3a565b602083015250604061303484828501612f3a565b60408301525092915050565b80356107028161472c565b60006020828403121561305d57600080fd5b60006130698484612cda565b949350505050565b6000806040838503121561308457600080fd5b60006130908585612ce5565b92505060208301516001600160401b038111156130ac57600080fd5b6130b885828601612f94565b9150509250929050565b6000806000606084860312156130d757600080fd5b60006130e38686612cda565b93505060208401356001600160401b038111156130ff57600080fd5b61310b86828701612f45565b92505060408401356001600160401b0381111561312757600080fd5b61313386828701612f45565b9150509250925092565b6000806040838503121561315057600080fd5b600061315c8585612cda565b92505060206130b885828601612f2f565b60006020828403121561317f57600080fd5b81516001600160401b0381111561319557600080fd5b61306984828501612cf0565b600080604083850312156131b457600080fd5b82516001600160401b038111156131ca57600080fd5b6131d685828601612cf0565b92505060208301516001600160401b038111156131f257600080fd5b6130b885828601612ebf565b60006020828403121561321057600080fd5b81516001600160401b0381111561322657600080fd5b61306984828501612ddf565b6000806000806080858703121561324857600080fd5b84356001600160401b0381111561325e57600080fd5b61326a87828801612d6f565b94505060208501356001600160401b0381111561328657600080fd5b61329287828801612e4f565b93505060408501356001600160401b038111156132ae57600080fd5b6132ba87828801612e4f565b92505060606132cb87828801612f2f565b91505092959194509250565b6000602082840312156132e957600080fd5b60006130698484612f2f565b600080600080600080600080610100898b03121561331257600080fd5b600061331e8b8b612f2f565b985050602061332f8b828c01612f2f565b97505060406133408b828c01612f2f565b96505060606133518b828c01612f2f565b95505060808901356001600160401b0381111561336d57600080fd5b6133798b828c01612f45565b94505060a061338a8b828c01612cda565b93505060c061339b8b828c01613040565b92505060e08901356001600160401b038111156133b757600080fd5b6133c38b828c01612f45565b9150509295985092959890939650565b600080600080600060a086880312156133eb57600080fd5b60006133f78888612f2f565b955050602061340888828901612f2f565b945050604061341988828901612f2f565b935050606061342a88828901613040565b92505060808601356001600160401b0381111561344657600080fd5b61345288828901612f45565b9150509295509295909350565b6000806000806080858703121561347557600080fd5b60006134818787612f2f565b945050602061349287828801612f2f565b93505060406132ba87828801612f2f565b600080600080600060a086880312156134bb57600080fd5b60006134c78888612f2f565b95505060206134d888828901612f2f565b94505060406134e988828901612f2f565b93505060606134fa88828901612f2f565b925050608061345288828901612f2f565b60008060006060848603121561352057600080fd5b600061352c8686612f2f565b935050602061310b86828701613040565b6000806040838503121561355057600080fd5b82356001600160401b0381111561356657600080fd5b61357285828601612f45565b92505060208301356001600160401b0381111561358e57600080fd5b6130b885828601612f45565b6000606082840312156135ac57600080fd5b60006130698484612fe5565b6000602082840312156135ca57600080fd5b60006130698484612f3a565b600080604083850312156135e957600080fd5b600061315c8585612f2f565b6000806000806080858703121561360b57600080fd5b60006136178787612f3a565b945050602061362887828801612f3a565b93505060408501516001600160401b0381111561364457600080fd5b61365087828801612cf0565b92505060608501516001600160401b0381111561366c57600080fd5b6132cb87828801612ebf565b60008060006060848603121561368d57600080fd5b60006136998686612f2f565b935050602061310b86828701612f2f565b60006136b683836136ea565b505060200190565b60006136b68383613a7e565b60006136d68383613ede565b505060600190565b60006106ff8383613ff3565b6136f38161461e565b82525050565b60006137048261460b565b61370e8185614615565b935061371983614602565b8060005b8381101561374757815161373188826136aa565b975061373c83614602565b92505060010161371d565b509495945050505050565b600061375d8261460b565b6137678185614615565b935061377283614602565b8060005b8381101561374757815161378a88826136aa565b975061379583614602565b925050600101613776565b60006137ab8261460b565b6137b58185614615565b93506137c083614602565b8060005b838110156137475781516137d888826136be565b97506137e383614602565b9250506001016137c4565b60006137f98261460b565b6138038185614615565b935061380e83614602565b8060005b8381101561374757815161382688826136be565b975061383183614602565b925050600101613812565b60006138478261460b565b6138518185614615565b935061385c83614602565b8060005b8381101561374757815161387488826136be565b975061387f83614602565b925050600101613860565b60006138958261460b565b61389f8185614615565b93506138aa83614602565b8060005b838110156137475781516138c288826136ca565b97506138cd83614602565b9250506001016138ae565b60006138e38261460b565b6138ed8185614615565b93506138f883614602565b8060005b8381101561374757815161391088826136ca565b975061391b83614602565b9250506001016138fc565b60006139318261460f565b61393b8185611b35565b93508360208202850161394d85614608565b8060005b85811015613987578484038952815161396a85826136de565b945061397583614602565b60209a909a0199925050600101613951565b5091979650505050505050565b600061399f8261460b565b6139a98185614615565b93506139b483614602565b8060005b838110156137475781516139cc88826136be565b97506139d783614602565b9250506001016139b8565b60006139ed8261460b565b6139f78185614615565b9350613a0283614602565b8060005b83811015613747578151613a1a88826136be565b9750613a2583614602565b925050600101613a06565b6000613a3b8261460b565b613a458185614615565b9350613a5083614602565b8060005b83811015613747578151613a6888826136be565b9750613a7383614602565b925050600101613a54565b6136f381614608565b6000613a928261460b565b613a9c8185614615565b9350613aac8185602086016146a1565b613ab5816146cd565b9093019392505050565b6136f381614669565b6136f381614674565b6136f38161467f565b6136f38161468a565b6000613af0602283614615565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b6000613b37601883614615565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b6000613b70602783614615565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000613bbc601c83614615565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000613bf5601383614615565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b6000613c2e602783614615565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b6000613c7a602e83614615565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b6000613cd9601483614615565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b6000613d12601383614615565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b6000613d4b602083614615565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000613d84602783614615565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a0840190613dd785826136ea565b506020830151613dea6020860182613a7e565b506040830151613dfd6040860182613a7e565b5060608301518482036060860152613e15828261383c565b9150506080830151613e2a6080860182613abf565b509392505050565b9052565b8051600090610100840190613e4b85826136ea565b506020830151613e5e6020860182613a7e565b506040830151613e716040860182613a7e565b506060830151613e846060860182613a7e565b506080830151613e976080860182613a7e565b5060a0830151613eaa60a0860182613a7e565b5060c0830151613ebd60c0860182613ac8565b5060e083015184820360e0860152613ed58282613a87565b95945050505050565b80516060830190613eef8482613ad1565b506020820151613f026020850182613a7e565b506040820151613f156040850182613a7e565b50505050565b805160009060a0840190613f2f85826136ea565b506020830151613f426020860182613ada565b5060408301518482036040860152613f5a8282613a87565b9150506060830151613f6f6060860182613a7e565b5060808301518482036080860152613ed5828261388a565b805160009060a0840190613f9b85826136ea565b506020830151613fae6020860182613ada565b5060408301518482036040860152613fc68282613a87565b9150506060830151613fdb6060860182613a7e565b5060808301518482036080860152613ed582826138d8565b805160009060808401906140078582613a7e565b506020830151848203602086015261401f8282613752565b915050604083015184820360408601526140398282613a30565b9150506060830151613e2a6060860182613a7e565b6136f38161465d565b6020810161070282846136ea565b6040810161407382856136ea565b81810360208301526130698184613a87565b6040810161409382856136ea565b81810360208301526130698184613f1b565b602080825281016106ff81846136f9565b604080825281016140c781856136f9565b905081810360208301526130698184613994565b602080825281016106ff81846137a0565b602080825281016106ff8184613926565b6040808252810161410e8185613a87565b905081810360208301526130698184613a87565b6020808252810161070281613ae3565b6020808252810161070281613b2a565b6020808252810161070281613b63565b6020808252810161070281613baf565b6020808252810161070281613be8565b6020808252810161070281613c21565b6020808252810161070281613c6d565b6020808252810161070281613ccc565b6020808252810161070281613d05565b6020808252810161070281613d3e565b6020808252810161070281613d77565b602080825281016106ff8184613dc3565b602081016107028284613e32565b604081016141ff8285613e32565b61420c60208301846136ea565b9392505050565b608081016142218287613e32565b61422e60208301866136ea565b81810360408301526142408185613a87565b905081810360608301526142548184613a87565b9695505050505050565b6060810161426c8286613e32565b61427960208301856136ea565b6130696040830184613a7e565b60a081016142948288613e32565b81810360208301526142a681876137ee565b905081810360408301526142ba81866139e2565b905081810360608301526142ce81856139e2565b90506142546080830184613a7e565b604081016142eb8285613e32565b61420c6020830184613a7e565b6101208101614307828c613e32565b614314602083018b613a7e565b614321604083018a613a7e565b61432e6060830189613a7e565b61433b6080830188613a7e565b81810360a083015261434d8187613a87565b905061435c60c08301866136ea565b61436960e083018561404e565b81810361010083015261437c8184613a87565b9b9a5050505050505050505050565b60c081016143998289613e32565b6143a66020830188613a7e565b6143b36040830187613a7e565b6143c06060830186613a7e565b6143cd608083018561404e565b81810360a08301526143df8184613a87565b98975050505050505050565b60a081016143f98288613e32565b6144066020830187613a7e565b6144136040830186613a7e565b6144206060830185613a7e565b6142546080830184613a7e565b60c0810161443b8289613e32565b6144486020830188613a7e565b6144556040830187613a7e565b6144626060830186613a7e565b61446f6080830185613a7e565b61447c60a0830184613a7e565b979650505050505050565b608081016144958287613e32565b6144a26020830186613a7e565b6144af604083018561404e565b81810360608301526142548184613a87565b606081016144cf8286613e32565b6142796020830185613a7e565b608081016144ea8287613e32565b6144f76020830186613a7e565b6144af6040830185613a7e565b602080825281016106ff8184613e36565b602080825281016106ff8184613f1b565b604080825281016145378185613f87565b905061420c6020830184613a7e565b602081016107028284613a7e565b608081016145628287613a7e565b61456f6020830186613a7e565b818103604083015261458181856136f9565b905081810360608301526142548184613994565b6040518181016001600160401b03811182821017156145b357600080fd5b604052919050565b60006001600160401b038211156145d157600080fd5b5060209081020190565b60006001600160401b038211156145f157600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b600061070282614651565b80611b35816146d7565b80611b35816146e4565b80611b35816146ee565b80611b35816146f8565b6001600160a01b031690565b6001600160401b031690565b600061070282614629565b600061070282614633565b60006107028261463d565b600061070282614647565b82818337506000910152565b60005b838110156146bc5781810151838201526020016146a4565b83811115613f155750506000910152565b601f01601f191690565b600281106146e157fe5b50565b600681106146e157fe5b600481106146e157fe5b600381106146e157fe5b61470b8161461e565b81146146e157600080fd5b61470b81614608565b600481106146e157600080fd5b61470b8161465d56fea265627a7a72305820eb6aaf61f295119c639bae9a4ad23ba4874ad5f439453892016a428bf123ad596c6578706572696d656e74616cf50037","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80637624281e1161010f578063b5c14992116100a2578063d855a57911610071578063d855a57914610454578063df4da46114610469578063ee6dcef914610471578063f9a9b7ae14610484576101e5565b8063b5c14992146103fb578063c011b1c31461040e578063ca2af5f21461042e578063cbbc061d14610441576101e5565b80639836ca31116100de5780639836ca311461038e578063a0c39982146103b1578063a3bdae3e146103d2578063b34e97e8146103f3576101e5565b80637624281e14610328578063786cd4d7146103485780638e055b8b1461035b5780638ed057371461036e576101e5565b8063365a2cb311610187578063516c826911610156578063516c8269146102d6578063550baa2f146102e957806370266a47146102fe57806375bbf75b14610313576101e5565b8063365a2cb31461028a57806347e7ef241461029d57806348cc3761146102b057806350946a9f146102c3576101e5565b806316f9a2a4116101c357806316f9a2a4146102255780631d40ff0b1461024f5780631f3c99c31461026f5780632e1a7d4d14610277576101e5565b806302e15a91146101ea57806310851876146101ff578063167e54b714610212575b600080fd5b6101fd6101f83660046134a3565b610497565b005b6101fd61020d366004613232565b610513565b6101fd61022036600461345f565b61058c565b6102386102333660046132d7565b6105cf565b6040516102469291906140b6565b60405180910390f35b61026261025d3660046135d6565b610669565b60405161024691906140a5565b6101fd610708565b6101fd6102853660046132d7565b610961565b6101fd6102983660046132f5565b610c72565b6101fd6102ab36600461313d565b610f1e565b6101fd6102be3660046132f5565b61113f565b6101fd6102d1366004613678565b6113ad565b6101fd6102e436600461350b565b6115d0565b6102f161186c565b60405161024691906140db565b6103066118c7565b60405161024691906140ec565b61031b6119e1565b6040516102469190614546565b61033b6103363660046132d7565b611a73565b60405161024691906141d2565b6101fd6103563660046130c2565b611b3a565b6102f16103693660046135d6565b611bfe565b61038161037c3660046132d7565b611c94565b6040516102469190614504565b6103a161039c3660046132d7565b611dc0565b6040516102469493929190614554565b6103c46103bf36600461304b565b611e63565b604051610246929190614085565b6103e56103e036600461304b565b6120a6565b604051610246929190614065565b6101fd612328565b61031b61040936600461353d565b612594565b61042161041c36600461304b565b612623565b6040516102469190614515565b6101fd61043c3660046133d3565b6127d4565b61031b61044f3660046132d7565b612a76565b61045c612b05565b6040516102469190614057565b61031b612b21565b6101fd61047f3660046132d7565b612b27565b61031b61049236600461304b565b612ba7565b604051600160e01b63f37f394502815273__TaskImpl______________________________9063f37f3945906104dc906000908990899089908990899060040161442d565b60006040518083038186803b1580156104f457600080fd5b505af4158015610508573d6000803e3d6000fd5b505050505050505050565b604051600160e01b63eeb3ea8f02815273__TaskImpl______________________________9063eeb3ea8f90610556906000908890889088908890600401614286565b60006040518083038186803b15801561056e57600080fd5b505af4158015610582573d6000803e3d6000fd5b5050505050505050565b604051600160e01b6327731d8102815273__TaskImpl______________________________906327731d81906105569060009088908890889088906004016143eb565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b815260040161060c9291906142dd565b60006040518083038186803b15801561062457600080fd5b505af4158015610638573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261066091908101906131a1565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a906106ab90600090879087906004016144c1565b60006040518083038186803b1580156106c357600080fd5b505af41580156106d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ff919081019061316d565b90505b92915050565b33610711612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561075957fe5b600281111561076457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108015780601f106107d657610100808354040283529160200191610801565b820191906000526020600020905b8154815290600101906020018083116107e457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156108ac57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561087a57fe5b600381111561088557fe5b81526020016001820154815260200160028201548152505081526020019060010190610839565b50505091525090915060019050816020015160028111156108c957fe5b146108f257604051600160e51b62461bcd0281526004016108e990614192565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f499061092d906000906004016141e3565b60006040518083038186803b15801561094557600080fd5b505af4158015610959573d6000803e3d6000fd5b505050505050565b3361096a612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156109b257fe5b60028111156109bd57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a5a5780601f10610a2f57610100808354040283529160200191610a5a565b820191906000526020600020905b815481529060010190602001808311610a3d57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610b0557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610ad357fe5b6003811115610ade57fe5b81526020016001820154815260200160028201548152505081526020019060010190610a92565b5050509152509091506002905081602001516002811115610b2257fe5b14610b4257604051600160e51b62461bcd0281526004016108e9906141c2565b610b4a612bf2565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610b869085904390600401614526565b60606040518083038186803b158015610b9e57600080fd5b505af4158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bd6919081019061359a565b9050600281516003811115610be757fe5b14610c0757604051600160e51b62461bcd0281526004016108e990614142565b8060200151610c1543612a76565b11610c3557604051600160e51b62461bcd0281526004016108e990614182565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df464906105569060009088906004016142dd565b33610c7b612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610cc357fe5b6002811115610cce57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d6b5780601f10610d4057610100808354040283529160200191610d6b565b820191906000526020600020905b815481529060010190602001808311610d4e57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610e1657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610de457fe5b6003811115610def57fe5b81526020016001820154815260200160028201548152505081526020019060010190610da3565b5050509152509091506001905081602001516002811115610e3357fe5b14610e5357604051600160e51b62461bcd0281526004016108e990614192565b8960016000828152601c602052604090206004015460ff166001811115610e7657fe5b14610e9657604051600160e51b62461bcd0281526004016108e990614152565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610ee1906000908f908f908f908f908f908f908f908f906004016142f8565b60006040518083038186803b158015610ef957600080fd5b505af4158015610f0d573d6000803e3d6000fd5b505050505050505050505050505050565b81610f27612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610f6f57fe5b6002811115610f7a57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110175780601f10610fec57610100808354040283529160200191611017565b820191906000526020600020905b815481529060010190602001808311610ffa57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156110c257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561109057fe5b600381111561109b57fe5b8152602001600182015481526020016002820154815250508152602001906001019061104f565b50505091525090915060009050816020015160028111156110df57fe5b141561110057604051600160e51b62461bcd0281526004016108e9906141a2565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610556906000908890889060040161425e565b33611148612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561119057fe5b600281111561119b57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112385780601f1061120d57610100808354040283529160200191611238565b820191906000526020600020905b81548152906001019060200180831161121b57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156112e357838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156112b157fe5b60038111156112bc57fe5b81526020016001820154815260200160028201548152505081526020019060010190611270565b505050915250909150600190508160200151600281111561130057fe5b1461132057604051600160e51b62461bcd0281526004016108e990614192565b89600080828152601c602052604090206004015460ff16600181111561134257fe5b1461136257604051600160e51b62461bcd0281526004016108e9906141b2565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610ee1906000908f908f908f908f908f908f908f908f906004016142f8565b336113b6612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156113fe57fe5b600281111561140957fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114a65780601f1061147b576101008083540402835291602001916114a6565b820191906000526020600020905b81548152906001019060200180831161148957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561155157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561151f57fe5b600381111561152a57fe5b815260200160018201548152602001600282015481525050815260200190600101906114de565b505050915250909150600090508160200151600281111561156e57fe5b141561158f57604051600160e51b62461bcd0281526004016108e9906141a2565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b18906104dc906000908990899089906004016144dc565b336115d9612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561162157fe5b600281111561162c57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116c95780601f1061169e576101008083540402835291602001916116c9565b820191906000526020600020905b8154815290600101906020018083116116ac57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561177457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561174257fe5b600381111561174d57fe5b81526020016001820154815260200160028201548152505081526020019060010190611701565b505050915250909150600190508160200151600281111561179157fe5b146117b157604051600160e51b62461bcd0281526004016108e990614192565b84600080828152601c602052604090206004015460ff1660018111156117d357fe5b146117f357604051600160e51b62461bcd0281526004016108e9906141b2565b604051600160e01b6370a2e43b02815273__TaskImpl______________________________906370a2e43b90611834906000908a908a908a90600401614487565b60006040518083038186803b15801561184c57600080fd5b505af4158015611860573d6000803e3d6000fd5b50505050505050505050565b606060006019018054806020026020016040519081016040528092919081815260200182805480156118bd57602002820191906000526020600020905b8154815260200190600101908083116118a9575b5050505050905090565b6118cf612c14565b6040805160a08101909152600460056000835b828210156119d857838260040201604051806080016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561195e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611940575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156119b657602002820191906000526020600020905b8154815260200190600101908083116119a2575b50505050508152602001600382015481525050815260200190600101906118e2565b50505050905090565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a338690611a1e9084906004016141e3565b60206040518083038186803b158015611a3657600080fd5b505af4158015611a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a6e91908101906135b8565b905090565b611a7b612c42565b6000828152601c6020908152604091829020825160a08101845281546001600160a01b031681526001820154818401526002820154818501526003820180548551818602810186019096528086529194929360608601939290830182828015611b0357602002820191906000526020600020905b815481526020019060010190808311611aef575b5050509183525050600482015460209091019060ff166001811115611b2457fe5b6001811115611b2f57fe5b90525090505b919050565b8260005b601854811015611bbc57816001600160a01b03166000601a016000806018018481548110611b6857fe5b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902054161415611bb457604051600160e51b62461bcd0281526004016108e990614132565b600101611b3e565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e209061055690600090889088908890600401614213565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a2600990611c4090600090879087906004016144c1565b60006040518083038186803b158015611c5857600080fd5b505af4158015611c6c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ff91908101906131fe565b611c9c612c6d565b6000828152601b602090815260409182902082516101008101845281546001600160a01b03168152600182015492810192909252600281015492820192909252600382015460608201526004820154608082015260058083015460a0830152600683015491929160c084019160ff90911690811115611d1757fe5b6005811115611d2257fe5b815260078201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611db05780601f10611d8557610100808354040283529160200191611db0565b820191906000526020600020905b815481529060010190602001808311611d9357829003601f168201915b5050505050815250509050919050565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611e009291906142dd565b60006040518083038186803b158015611e1857600080fd5b505af4158015611e2c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611e5491908101906135f5565b93509350935093509193509193565b6000611e6d612bc2565b6000611e77612bc2565b60005b60185481101561209b5760188054601a9160009184908110611e9857fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611eee57fe5b6002811115611ef957fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f965780601f10611f6b57610100808354040283529160200191611f96565b820191906000526020600020905b815481529060010190602001808311611f7957829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561204157838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561200f57fe5b600381111561201a57fe5b81526020016001820154815260200160028201548152505081526020019060010190611fce565b50505050815250509150856001600160a01b031682600001516001600160a01b0316141561209357601880548290811061207757fe5b6000918252602090912001546001600160a01b0316925061209b565b600101611e7a565b509092509050915091565b60006060826120b3612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156120fb57fe5b600281111561210657fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121a35780601f10612178576101008083540402835291602001916121a3565b820191906000526020600020905b81548152906001019060200180831161218657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561224e57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561221c57fe5b600381111561222757fe5b815260200160018201548152602001600282015481525050815260200190600101906121db565b505050915250909150600090508160200151600281111561226b57fe5b141561228c57604051600160e51b62461bcd0281526004016108e9906141a2565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f031906122c99060009089906004016141f1565b60006040518083038186803b1580156122e157600080fd5b505af41580156122f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261231d9190810190613071565b935093505050915091565b33612331612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561237957fe5b600281111561238457fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124215780601f106123f657610100808354040283529160200191612421565b820191906000526020600020905b81548152906001019060200180831161240457829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156124cc57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561249a57fe5b60038111156124a557fe5b81526020016001820154815260200160028201548152505081526020019060010190612459565b505050508152505090506124df43612a76565b6124fe57604051600160e51b62461bcd0281526004016108e990614172565b60028160200151600281111561251057fe5b1461253057604051600160e51b62461bcd0281526004016108e9906141c2565b601e546060820151101561255957604051600160e51b62461bcd0281526004016108e990614122565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e29061092d906000906004016141e3565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________906396462368906125d390869086906004016140fd565b60206040518083038186803b1580156125eb57600080fd5b505af41580156125ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106ff91908101906135b8565b61262b612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561267357fe5b600281111561267e57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561271b5780601f106126f05761010080835404028352916020019161271b565b820191906000526020600020905b8154815290600101906020018083116126fe57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156127c657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561279457fe5b600381111561279f57fe5b81526020016001820154815260200160028201548152505081526020019060010190612753565b505050915250909392505050565b336127dd612bc2565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561282557fe5b600281111561283057fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128cd5780601f106128a2576101008083540402835291602001916128cd565b820191906000526020600020905b8154815290600101906020018083116128b057829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561297857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561294657fe5b600381111561295157fe5b81526020016001820154815260200160028201548152505081526020019060010190612905565b505050915250909150600190508160200151600281111561299557fe5b146129b557604051600160e51b62461bcd0281526004016108e990614192565b8660016000828152601c602052604090206004015460ff1660018111156129d857fe5b146129f857604051600160e51b62461bcd0281526004016108e990614152565b604051600160e61b6289b28102815273__TaskImpl______________________________9063226ca04090612a3c906000908c908c908c908c908c9060040161438b565b60006040518083038186803b158015612a5457600080fd5b505af4158015612a68573d6000803e3d6000fd5b505050505050505050505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612ab590849086906004016142dd565b60206040518083038186803b158015612acd57600080fd5b505af4158015612ae1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061070291908101906135b8565b336000908152601a60205260409020546001600160a01b031690565b60015490565b8060016000828152601b602052604090206006015460ff166005811115612b4a57fe5b14612b6a57604051600160e51b62461bcd0281526004016108e990614162565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b9061092d9060009086906004016142dd565b6001600160a01b03166000908152601d602052604090205490565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b612c2c612cb2565b815260200190600190039081612c245790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b803561070281614702565b805161070281614702565b600082601f830112612d0157600080fd5b8151612d14612d0f826145bb565b614595565b91508181835260208401935060208101905083856020840282011115612d3957600080fd5b60005b83811015612d655781612d4f8882612ce5565b8452506020928301929190910190600101612d3c565b5050505092915050565b600082601f830112612d8057600080fd5b8135612d8e612d0f826145bb565b91508181835260208401935060208101905083856020840282011115612db357600080fd5b60005b83811015612d655781612dc98882612f2f565b8452506020928301929190910190600101612db6565b600082601f830112612df057600080fd5b8151612dfe612d0f826145bb565b91508181835260208401935060208101905083856020840282011115612e2357600080fd5b60005b83811015612d655781612e398882612f3a565b8452506020928301929190910190600101612e26565b600082601f830112612e6057600080fd5b8135612e6e612d0f826145bb565b91508181835260208401935060208101905083856020840282011115612e9357600080fd5b60005b83811015612d655781612ea98882612f2f565b8452506020928301929190910190600101612e96565b600082601f830112612ed057600080fd5b8151612ede612d0f826145bb565b91508181835260208401935060208101905083856020840282011115612f0357600080fd5b60005b83811015612d655781612f198882612f3a565b8452506020928301929190910190600101612f06565b803561070281614716565b805161070281614716565b600082601f830112612f5657600080fd5b8135612f64612d0f826145db565b91508082526020830160208301858383011115612f8057600080fd5b612f8b838284614695565b50505092915050565b600082601f830112612fa557600080fd5b8151612fb3612d0f826145db565b91508082526020830160208301858383011115612fcf57600080fd5b612f8b8382846146a1565b80516107028161471f565b600060608284031215612ff757600080fd5b6130016060614595565b9050600061300f8484612fda565b825250602061302084848301612f3a565b602083015250604061303484828501612f3a565b60408301525092915050565b80356107028161472c565b60006020828403121561305d57600080fd5b60006130698484612cda565b949350505050565b6000806040838503121561308457600080fd5b60006130908585612ce5565b92505060208301516001600160401b038111156130ac57600080fd5b6130b885828601612f94565b9150509250929050565b6000806000606084860312156130d757600080fd5b60006130e38686612cda565b93505060208401356001600160401b038111156130ff57600080fd5b61310b86828701612f45565b92505060408401356001600160401b0381111561312757600080fd5b61313386828701612f45565b9150509250925092565b6000806040838503121561315057600080fd5b600061315c8585612cda565b92505060206130b885828601612f2f565b60006020828403121561317f57600080fd5b81516001600160401b0381111561319557600080fd5b61306984828501612cf0565b600080604083850312156131b457600080fd5b82516001600160401b038111156131ca57600080fd5b6131d685828601612cf0565b92505060208301516001600160401b038111156131f257600080fd5b6130b885828601612ebf565b60006020828403121561321057600080fd5b81516001600160401b0381111561322657600080fd5b61306984828501612ddf565b6000806000806080858703121561324857600080fd5b84356001600160401b0381111561325e57600080fd5b61326a87828801612d6f565b94505060208501356001600160401b0381111561328657600080fd5b61329287828801612e4f565b93505060408501356001600160401b038111156132ae57600080fd5b6132ba87828801612e4f565b92505060606132cb87828801612f2f565b91505092959194509250565b6000602082840312156132e957600080fd5b60006130698484612f2f565b600080600080600080600080610100898b03121561331257600080fd5b600061331e8b8b612f2f565b985050602061332f8b828c01612f2f565b97505060406133408b828c01612f2f565b96505060606133518b828c01612f2f565b95505060808901356001600160401b0381111561336d57600080fd5b6133798b828c01612f45565b94505060a061338a8b828c01612cda565b93505060c061339b8b828c01613040565b92505060e08901356001600160401b038111156133b757600080fd5b6133c38b828c01612f45565b9150509295985092959890939650565b600080600080600060a086880312156133eb57600080fd5b60006133f78888612f2f565b955050602061340888828901612f2f565b945050604061341988828901612f2f565b935050606061342a88828901613040565b92505060808601356001600160401b0381111561344657600080fd5b61345288828901612f45565b9150509295509295909350565b6000806000806080858703121561347557600080fd5b60006134818787612f2f565b945050602061349287828801612f2f565b93505060406132ba87828801612f2f565b600080600080600060a086880312156134bb57600080fd5b60006134c78888612f2f565b95505060206134d888828901612f2f565b94505060406134e988828901612f2f565b93505060606134fa88828901612f2f565b925050608061345288828901612f2f565b60008060006060848603121561352057600080fd5b600061352c8686612f2f565b935050602061310b86828701613040565b6000806040838503121561355057600080fd5b82356001600160401b0381111561356657600080fd5b61357285828601612f45565b92505060208301356001600160401b0381111561358e57600080fd5b6130b885828601612f45565b6000606082840312156135ac57600080fd5b60006130698484612fe5565b6000602082840312156135ca57600080fd5b60006130698484612f3a565b600080604083850312156135e957600080fd5b600061315c8585612f2f565b6000806000806080858703121561360b57600080fd5b60006136178787612f3a565b945050602061362887828801612f3a565b93505060408501516001600160401b0381111561364457600080fd5b61365087828801612cf0565b92505060608501516001600160401b0381111561366c57600080fd5b6132cb87828801612ebf565b60008060006060848603121561368d57600080fd5b60006136998686612f2f565b935050602061310b86828701612f2f565b60006136b683836136ea565b505060200190565b60006136b68383613a7e565b60006136d68383613ede565b505060600190565b60006106ff8383613ff3565b6136f38161461e565b82525050565b60006137048261460b565b61370e8185614615565b935061371983614602565b8060005b8381101561374757815161373188826136aa565b975061373c83614602565b92505060010161371d565b509495945050505050565b600061375d8261460b565b6137678185614615565b935061377283614602565b8060005b8381101561374757815161378a88826136aa565b975061379583614602565b925050600101613776565b60006137ab8261460b565b6137b58185614615565b93506137c083614602565b8060005b838110156137475781516137d888826136be565b97506137e383614602565b9250506001016137c4565b60006137f98261460b565b6138038185614615565b935061380e83614602565b8060005b8381101561374757815161382688826136be565b975061383183614602565b925050600101613812565b60006138478261460b565b6138518185614615565b935061385c83614602565b8060005b8381101561374757815161387488826136be565b975061387f83614602565b925050600101613860565b60006138958261460b565b61389f8185614615565b93506138aa83614602565b8060005b838110156137475781516138c288826136ca565b97506138cd83614602565b9250506001016138ae565b60006138e38261460b565b6138ed8185614615565b93506138f883614602565b8060005b8381101561374757815161391088826136ca565b975061391b83614602565b9250506001016138fc565b60006139318261460f565b61393b8185611b35565b93508360208202850161394d85614608565b8060005b85811015613987578484038952815161396a85826136de565b945061397583614602565b60209a909a0199925050600101613951565b5091979650505050505050565b600061399f8261460b565b6139a98185614615565b93506139b483614602565b8060005b838110156137475781516139cc88826136be565b97506139d783614602565b9250506001016139b8565b60006139ed8261460b565b6139f78185614615565b9350613a0283614602565b8060005b83811015613747578151613a1a88826136be565b9750613a2583614602565b925050600101613a06565b6000613a3b8261460b565b613a458185614615565b9350613a5083614602565b8060005b83811015613747578151613a6888826136be565b9750613a7383614602565b925050600101613a54565b6136f381614608565b6000613a928261460b565b613a9c8185614615565b9350613aac8185602086016146a1565b613ab5816146cd565b9093019392505050565b6136f381614669565b6136f381614674565b6136f38161467f565b6136f38161468a565b6000613af0602283614615565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b6000613b37601883614615565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b6000613b70602783614615565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b6000613bbc601c83614615565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b6000613bf5601383614615565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b6000613c2e602783614615565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b6000613c7a602e83614615565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b6000613cd9601483614615565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b6000613d12601383614615565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b6000613d4b602083614615565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000613d84602783614615565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a0840190613dd785826136ea565b506020830151613dea6020860182613a7e565b506040830151613dfd6040860182613a7e565b5060608301518482036060860152613e15828261383c565b9150506080830151613e2a6080860182613abf565b509392505050565b9052565b8051600090610100840190613e4b85826136ea565b506020830151613e5e6020860182613a7e565b506040830151613e716040860182613a7e565b506060830151613e846060860182613a7e565b506080830151613e976080860182613a7e565b5060a0830151613eaa60a0860182613a7e565b5060c0830151613ebd60c0860182613ac8565b5060e083015184820360e0860152613ed58282613a87565b95945050505050565b80516060830190613eef8482613ad1565b506020820151613f026020850182613a7e565b506040820151613f156040850182613a7e565b50505050565b805160009060a0840190613f2f85826136ea565b506020830151613f426020860182613ada565b5060408301518482036040860152613f5a8282613a87565b9150506060830151613f6f6060860182613a7e565b5060808301518482036080860152613ed5828261388a565b805160009060a0840190613f9b85826136ea565b506020830151613fae6020860182613ada565b5060408301518482036040860152613fc68282613a87565b9150506060830151613fdb6060860182613a7e565b5060808301518482036080860152613ed582826138d8565b805160009060808401906140078582613a7e565b506020830151848203602086015261401f8282613752565b915050604083015184820360408601526140398282613a30565b9150506060830151613e2a6060860182613a7e565b6136f38161465d565b6020810161070282846136ea565b6040810161407382856136ea565b81810360208301526130698184613a87565b6040810161409382856136ea565b81810360208301526130698184613f1b565b602080825281016106ff81846136f9565b604080825281016140c781856136f9565b905081810360208301526130698184613994565b602080825281016106ff81846137a0565b602080825281016106ff8184613926565b6040808252810161410e8185613a87565b905081810360208301526130698184613a87565b6020808252810161070281613ae3565b6020808252810161070281613b2a565b6020808252810161070281613b63565b6020808252810161070281613baf565b6020808252810161070281613be8565b6020808252810161070281613c21565b6020808252810161070281613c6d565b6020808252810161070281613ccc565b6020808252810161070281613d05565b6020808252810161070281613d3e565b6020808252810161070281613d77565b602080825281016106ff8184613dc3565b602081016107028284613e32565b604081016141ff8285613e32565b61420c60208301846136ea565b9392505050565b608081016142218287613e32565b61422e60208301866136ea565b81810360408301526142408185613a87565b905081810360608301526142548184613a87565b9695505050505050565b6060810161426c8286613e32565b61427960208301856136ea565b6130696040830184613a7e565b60a081016142948288613e32565b81810360208301526142a681876137ee565b905081810360408301526142ba81866139e2565b905081810360608301526142ce81856139e2565b90506142546080830184613a7e565b604081016142eb8285613e32565b61420c6020830184613a7e565b6101208101614307828c613e32565b614314602083018b613a7e565b614321604083018a613a7e565b61432e6060830189613a7e565b61433b6080830188613a7e565b81810360a083015261434d8187613a87565b905061435c60c08301866136ea565b61436960e083018561404e565b81810361010083015261437c8184613a87565b9b9a5050505050505050505050565b60c081016143998289613e32565b6143a66020830188613a7e565b6143b36040830187613a7e565b6143c06060830186613a7e565b6143cd608083018561404e565b81810360a08301526143df8184613a87565b98975050505050505050565b60a081016143f98288613e32565b6144066020830187613a7e565b6144136040830186613a7e565b6144206060830185613a7e565b6142546080830184613a7e565b60c0810161443b8289613e32565b6144486020830188613a7e565b6144556040830187613a7e565b6144626060830186613a7e565b61446f6080830185613a7e565b61447c60a0830184613a7e565b979650505050505050565b608081016144958287613e32565b6144a26020830186613a7e565b6144af604083018561404e565b81810360608301526142548184613a87565b606081016144cf8286613e32565b6142796020830185613a7e565b608081016144ea8287613e32565b6144f76020830186613a7e565b6144af6040830185613a7e565b602080825281016106ff8184613e36565b602080825281016106ff8184613f1b565b604080825281016145378185613f87565b905061420c6020830184613a7e565b602081016107028284613a7e565b608081016145628287613a7e565b61456f6020830186613a7e565b818103604083015261458181856136f9565b905081810360608301526142548184613994565b6040518181016001600160401b03811182821017156145b357600080fd5b604052919050565b60006001600160401b038211156145d157600080fd5b5060209081020190565b60006001600160401b038211156145f157600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b600061070282614651565b80611b35816146d7565b80611b35816146e4565b80611b35816146ee565b80611b35816146f8565b6001600160a01b031690565b6001600160401b031690565b600061070282614629565b600061070282614633565b60006107028261463d565b600061070282614647565b82818337506000910152565b60005b838110156146bc5781810151838201526020016146a4565b83811115613f155750506000910152565b601f01601f191690565b600281106146e157fe5b50565b600681106146e157fe5b600481106146e157fe5b600381106146e157fe5b61470b8161461e565b81146146e157600080fd5b61470b81614608565b600481106146e157600080fd5b61470b8161465d56fea265627a7a72305820eb6aaf61f295119c639bae9a4ad23ba4874ad5f439453892016a428bf123ad596c6578706572696d656e74616cf50037","sourceMap":"767:16714:0:-;;;997:317;8:9:-1;5:2;;;30:1;27;20:12;5:2;997:317:0;;;;;;;;;;;;;;;;;;;;;;1086:5;:37;;-1:-1:-1;;;;;1086:37:0;;;-1:-1:-1;;;;;;1086:37:0;;;;;;;;1133:28;;;1195:3;1171:21;:27;1208:15;:28;;;;;;;;;;;;;;;1246:22;:26;;;1282:21;:25;767:16714;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:134;224:13;;242:33;224:13;242:33;;287:535;;;;436:2;424:9;415:7;411:23;407:32;404:2;;;452:1;449;442:12;404:2;487:1;504:64;560:7;540:9;504:64;;;494:74;;466:108;605:2;623:64;679:7;670:6;659:9;655:22;623:64;;;613:74;;584:109;724:2;742:64;798:7;789:6;778:9;774:22;742:64;;;732:74;;703:109;398:424;;;;;;829:91;;-1:-1;;;;;989:54;;891:24;972:76;1055:72;1117:5;1100:27;1134:117;1203:24;1221:5;1203:24;;;1196:5;1193:35;1183:2;;1242:1;1239;1232:12;1183:2;1177:74;;1258:117;1327:24;1345:5;1327:24;;1301:74;767:16714:0;;;;;;","deployedSourceMap":"767:16714:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;767:16714:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10296:306;;;;;;;;;:::i;:::-;;12045:294;;;;;;;;;:::i;11177:257::-;;;;;;;;;:::i;15201:194::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16556:199;;;;;;;;;:::i;:::-;;;;;;;;6847:98;;;:::i;6385:132::-;;;;;;;;;:::i;12943:546::-;;;;;;;;;:::i;6020:167::-;;;;;;;;;:::i;8168:575::-;;;;;;;;;:::i;14871:209::-;;;;;;;;;:::i;7207:286::-;;;;;;;;;:::i;3069:121:10:-;;;:::i;:::-;;;;;;;;2823:130;;;:::i;:::-;;;;;;;;8870:149:0;;;:::i;:::-;;;;;;;;2543::10;;;;;;;;;:::i;:::-;;;;;;;;5568:207:0;;;;;;;;;:::i;9232:211::-;;;;;;;;;:::i;2221:137:10:-;;;;;;;;;:::i;:::-;;;;;;;;16021:198:0;;;;;;;;;:::i;:::-;;;;;;;;;;;1004:492:10;;;;;;;;;:::i;:::-;;;;;;;;;16893:200:0;;;;;;;;;:::i;:::-;;;;;;;;;6680:90;;;:::i;17298:181::-;;;;;;;;;:::i;679:131:10:-;;;;;;;;;:::i;:::-;;;;;;;;13880:341:0;;;;;;;;;:::i;15570:167::-;;;;;;;;;:::i;399:115:10:-;;;:::i;:::-;;;;;;;;1957:90;;;:::i;14388:147:0:-;;;;;;;;;:::i;1740:134:10:-;;;;;;;;;:::i;10296:306:0:-;10490:105;;-1:-1:-1;;;;;10490:105:0;;:8;;:39;;:105;;10530:5;;10537:11;;10550:9;;10561:6;;10569:17;;10588:6;;10490:105;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10490:105:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10490:105:0;;;;10296:306;;;;;:::o;12045:294::-;12240:92;;-1:-1:-1;;;;;12240:92:0;;:8;;:30;;:92;;12271:5;;12278:13;;12293:10;;12305:7;;12314:17;;12240:92;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12240:92:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12240:92:0;;;;12045:294;;;;:::o;11177:257::-;11340:87;;-1:-1:-1;;;;;11340:87:0;;:8;;:29;;:87;;11370:5;;11377:11;;11390:9;;11401:6;;11409:17;;11340:87;;;;15201:194;15279:16;15297:13;15333;:34;15368:5;15375:12;15333:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15333:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15333:55:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15333:55:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15333:55:0;;;;;;;;;15326:62;;;;15201:194;;;:::o;16556:199::-;16688:60;;-1:-1:-1;;;;;16688:60:0;;16649:16;;16688:11;;:30;;:60;;16719:5;;16726:12;;16740:7;;16688:60;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16688:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16688:60:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16688:60:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16688:60:0;;;;;;;;;16681:67;;16556:199;;;;;:::o;6847:98::-;6887:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;;;;;;;;;6909:29;;-1:-1:-1;;;;;6909:29:0;;:11;;:22;;:29;;6932:5;;6909:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6909:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6909:29:0;;;;6847:98;;:::o;6385:132::-;6444:10;3223:33;;:::i;:::-;-1:-1:-1;;;;;3259:20:0;;;:5;:20;;;:13;:20;;;;;;;;;3223:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3223:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3223:56:0;;-1:-1:-1;3223:56:0;;-1:-1:-1;3314:35:0;;-1:-1:-1;3297:6:0;:13;;;:52;;;;;;;;;3289:104;;;;-1:-1:-1;;;;;3289:104:0;;;;;;;;;3403:39;;:::i;:::-;3445:56;;-1:-1:-1;;;;;3445:56:0;;:11;;:34;;:56;;3480:6;;3488:12;;3445:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3445:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3445:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3445:56:0;;;;;;;;;3403:98;-1:-1:-1;3548:33:0;3519:25;;:62;;;;;;;;;3511:126;;;;-1:-1:-1;;;;;3511:126:0;;;;;;;;;3691:9;:21;;;3655:33;3675:12;3655:19;:33::i;:::-;:57;3647:128;;;;-1:-1:-1;;;;;3647:128:0;;;;;;;;;6470:40;;-1:-1:-1;;;;;6470:40:0;;:11;;:24;;:40;;6495:5;;6502:7;;6470:40;;;;12943:546;13260:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;13293:7;4326:42;4291:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4283:118;;;;-1:-1:-1;;;;;4283:118:0;;;;;;;;;13316:166;;-1:-1:-1;;;;;13316:166:0;;:8;;:26;;:166;;13343:5;;13350:7;;13359;;13368:15;;13385:11;;13398:21;;13433:32;;13467:8;;13477:4;;13316:166;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13316:166:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13316:166:0;;;;2138:1;12943:546;;;;;;;;;;:::o;6020:167::-;6103:10;1614:33;;:::i;:::-;-1:-1:-1;;;;;1650:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1614:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;-1:-1:-1;1614:56:0;;-1:-1:-1;1705:38:0;;-1:-1:-1;1688:6:0;:13;;;:55;;;;;;;;;;1680:87;;;;-1:-1:-1;;;;;1680:87:0;;;;;;;;;6129:51;;-1:-1:-1;;;;;6129:51:0;;:11;;:23;;:51;;6153:5;;6160:10;;6172:7;;6129:51;;;;8168:575;8499:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;8533:7;4013:43;3978:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;3970:123;;;;-1:-1:-1;;;;;3970:123:0;;;;;;;;;8556:180;;-1:-1:-1;;;;;8556:180:0;;:8;;:33;;:180;;8590:5;;8597:7;;8606:12;;8620:9;;8631:19;;8664:21;;8687:32;;8721:8;;8731:4;;8556:180;;;;14871:209;14979:10;1614:33;;:::i;:::-;-1:-1:-1;;;;;1650:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1614:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;-1:-1:-1;1614:56:0;;-1:-1:-1;1705:38:0;;-1:-1:-1;1688:6:0;:13;;;:55;;;;;;;;;;1680:87;;;;-1:-1:-1;;;;;1680:87:0;;;;;;;;;15005:68;;-1:-1:-1;;;;;15005:68:0;;:13;;:34;;:68;;15040:5;;15047:12;;15061:5;;15068:4;;15005:68;;;;7207:286;7357:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;7391:7;4013:43;3978:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;3970:123;;;;-1:-1:-1;;;;;3970:123:0;;;;;;;;;7414:72;;-1:-1:-1;;;;;7414:72:0;;:8;;:40;;:72;;7455:5;;7462:7;;7471:8;;7481:4;;7414:72;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7414:72:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7414:72:0;;;;2138:1;7207:286;;;;;:::o;3069:121:10:-;3131:16;3166:5;:17;;3159:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:121;:::o;2823:130::-;2872:36;;:::i;:::-;2920:26;;;;;;;;;2927:19;2920:26;2927:5;2920:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2920:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2823:130;:::o;8870:149:0:-;8962:50;;-1:-1:-1;;;;;8962:50:0;;8935:4;;8962:18;;:43;;:50;;8935:4;;8962:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8962:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8962:50:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8962:50:0;;;;;;;;;8955:57;;8870:149;:::o;2543::10:-;2608:34;;:::i;:::-;2661:5;:24;;;:15;:24;;;;;;;;;2654:31;;;;;;;;;-1:-1:-1;;;;;2654:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2661:24;;2654:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2654:31:10;;;-1:-1:-1;;2654:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2654:31:10;-1:-1:-1;2543:149:10;;;;:::o;5568:207:0:-;5684:7;4889:6;4884:175;4905:21;:28;4901:32;;4884:175;;;5012:7;-1:-1:-1;;;;;4962:57:0;:5;:13;;:39;4976:5;:21;;4998:1;4976:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4976:24:0;;;4962:39;;;;;;;;;;;;;;;:46;;:57;;4954:94;;;;-1:-1:-1;;;;;4954:94:0;;;;;;;;;4935:3;;4884:175;;;-1:-1:-1;5707:61:0;;-1:-1:-1;;;;;5707:61:0;;:11;;:24;;:61;;5732:5;;5739:7;;5748;;5757:10;;5707:61;;;;9232:211;9365:71;;-1:-1:-1;;;;;9365:71:0;;9326:16;;9365:18;;:49;;:71;;9415:5;;9422:6;;9430:5;;9365:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9365:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9365:71:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;9365:71:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;9365:71:0;;;;;;;;2221:137:10;2282:30;;:::i;:::-;2331:5;:20;;;:11;:20;;;;;;;;;2324:27;;;;;;;;;-1:-1:-1;;;;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2331:20;2324:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2324:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2221:137;;;:::o;16021:198:0:-;16098:4;16104;16110:16;16128:13;16160:11;:31;16192:5;16199:12;16160:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16160:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16160:52:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16160:52:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16160:52:0;;;;;;;;;16153:59;;;;;;;;16021:198;;;;;:::o;1004:492:10:-;1079:7;1088:26;;:::i;:::-;1126:15;1151:33;;:::i;:::-;1199:6;1194:262;1215:21;:28;1211:32;;1194:262;;;1287:21;:24;;1273:13;;:5;;1309:1;;1287:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1287:24:10;;;1273:39;;;;;;;;;;;;;;;;1264:48;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1264:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:7;-1:-1:-1;;;;;1330:24:10;:6;:13;;;-1:-1:-1;;;;;1330:24:10;;1326:120;;;1384:21;:24;;1406:1;;1384:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1384:24:10;;-1:-1:-1;1426:5:10;;1326:120;1245:3;;1194:262;;;-1:-1:-1;1473:7:10;;-1:-1:-1;1482:6:10;-1:-1:-1;1004:492:10;;;:::o;16893:200:0:-;16998:7;17007:12;16973:10;1614:33;;:::i;:::-;-1:-1:-1;;;;;1650:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1614:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1614:56:0;;-1:-1:-1;1614:56:0;;-1:-1:-1;1705:38:0;;-1:-1:-1;1688:6:0;:13;;;:55;;;;;;;;;;1680:87;;;;-1:-1:-1;;;;;1680:87:0;;;;;;;;;17042:44;;-1:-1:-1;;;;;17042:44:0;;:11;;:25;;:44;;17068:5;;17075:10;;17042:44;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17042:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17042:44:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;17042:44:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;17042:44:0;;;;;;;;;17035:51;;;;16893:200;;;;;:::o;6680:90::-;6713:10;2670:33;;:::i;:::-;-1:-1:-1;;;;;2706:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2670:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2670:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2744:33;2764:12;2744:19;:33::i;:::-;2736:90;;;;-1:-1:-1;;;;;2736:90:0;;;;;;;;;2861:35;2844:6;:13;;;:52;;;;;;;;;2836:104;;;;-1:-1:-1;;;;;2836:104:0;;;;;;;;;2976:22;;2958:14;;;;:40;;2950:87;;;;-1:-1:-1;;;;;2950:87:0;;;;;;;;;6735:28;;-1:-1:-1;;;;;6735:28:0;;:11;;:21;;:28;;6757:5;;6735:28;;;;17298:181;17425:47;;-1:-1:-1;;;;;17425:47:0;;17398:4;;17425:11;;:28;;:47;;17454:5;;17461:10;;17425:47;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17425:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17425:47:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;17425:47:0;;;;;;;;679:131:10;736:26;;:::i;:::-;-1:-1:-1;;;;;781:22:10;;;:5;:22;;;:13;:22;;;;;;;;;774:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;-1:-1:-1;774:29:10;;679:131;-1:-1:-1;;;679:131:10:o;13880:341:0:-;14074:10;1978:33;;:::i;:::-;-1:-1:-1;;;;;2014:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1978:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:56:0;;-1:-1:-1;1978:56:0;;-1:-1:-1;2069:34:0;;-1:-1:-1;2052:6:0;:13;;;:51;;;;;;;;;2044:84;;;;-1:-1:-1;;;;;2044:84:0;;;;;;;;;14107:7;4326:42;4291:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4283:118;;;;-1:-1:-1;;;;;4283:118:0;;;;;;;;;14130:84;;-1:-1:-1;;;;;14130:84:0;;:8;;:30;;:84;;14161:5;;14168:7;;14177;;14186:11;;14199:8;;14209:4;;14130:84;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14130:84:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14130:84:0;;;;2138:1;13880:341;;;;;;;:::o;15570:167::-;15674:56;;-1:-1:-1;;;;;15674:56:0;;15651:4;;15674:11;;:35;;:56;;15651:4;;15717:12;;15674:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15674:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15674:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15674:56:0;;;;;;;;399:115:10;489:10;449:7;475:25;;;:13;:25;;;;;:32;-1:-1:-1;;;;;475:32:10;399:115;:::o;1957:90::-;2025:15;;1957:90;:::o;14388:147:0:-;14459:7;4633:37;4602:5;:20;;;:11;:20;;;;;:27;;;;;:68;;;;;;;;;4594:100;;;;-1:-1:-1;;;;;4594:100:0;;;;;;;;;14482:46;;-1:-1:-1;;;;;14482:46:0;;:8;;:30;;:46;;14513:5;;14520:7;;14482:46;;;;1740:134:10;-1:-1:-1;;;;;1833:34:10;1810:4;1833:34;;;:25;:34;;;;;;;1740:134::o;767:16714:0:-;;;;;;;;;;-1:-1:-1;767:16714:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;767:16714:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;767:16714:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;767:16714:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:722;;429:3;422:4;414:6;410:17;406:27;396:2;;447:1;444;437:12;396:2;477:6;471:13;499:80;514:64;571:6;514:64;;;499:80;;;490:89;;596:5;621:6;614:5;607:21;651:4;643:6;639:17;629:27;;673:4;668:3;664:14;657:21;;726:6;773:3;765:4;757:6;753:17;748:3;744:27;741:36;738:2;;;790:1;787;780:12;738:2;815:1;800:217;825:6;822:1;819:13;800:217;;;883:3;905:48;949:3;937:10;905:48;;;893:61;;-1:-1;977:4;968:14;;;;996;;;;;847:1;840:9;800:217;;;804:14;389:634;;;;;;;;1049:707;;1166:3;1159:4;1151:6;1147:17;1143:27;1133:2;;1184:1;1181;1174:12;1133:2;1221:6;1208:20;1243:80;1258:64;1315:6;1258:64;;1243:80;1234:89;;1340:5;1365:6;1358:5;1351:21;1395:4;1387:6;1383:17;1373:27;;1417:4;1412:3;1408:14;1401:21;;1470:6;1517:3;1509:4;1501:6;1497:17;1492:3;1488:27;1485:36;1482:2;;;1534:1;1531;1524:12;1482:2;1559:1;1544:206;1569:6;1566:1;1563:13;1544:206;;;1627:3;1649:37;1682:3;1670:10;1649:37;;;1637:50;;-1:-1;1710:4;1701:14;;;;1729;;;;;1591:1;1584:9;1544:206;;1782:722;;1910:3;1903:4;1895:6;1891:17;1887:27;1877:2;;1928:1;1925;1918:12;1877:2;1958:6;1952:13;1980:80;1995:64;2052:6;1995:64;;1980:80;1971:89;;2077:5;2102:6;2095:5;2088:21;2132:4;2124:6;2120:17;2110:27;;2154:4;2149:3;2145:14;2138:21;;2207:6;2254:3;2246:4;2238:6;2234:17;2229:3;2225:27;2222:36;2219:2;;;2271:1;2268;2261:12;2219:2;2296:1;2281:217;2306:6;2303:1;2300:13;2281:217;;;2364:3;2386:48;2430:3;2418:10;2386:48;;;2374:61;;-1:-1;2458:4;2449:14;;;;2477;;;;;2328:1;2321:9;2281:217;;2530:707;;2647:3;2640:4;2632:6;2628:17;2624:27;2614:2;;2665:1;2662;2655:12;2614:2;2702:6;2689:20;2724:80;2739:64;2796:6;2739:64;;2724:80;2715:89;;2821:5;2846:6;2839:5;2832:21;2876:4;2868:6;2864:17;2854:27;;2898:4;2893:3;2889:14;2882:21;;2951:6;2998:3;2990:4;2982:6;2978:17;2973:3;2969:27;2966:36;2963:2;;;3015:1;3012;3005:12;2963:2;3040:1;3025:206;3050:6;3047:1;3044:13;3025:206;;;3108:3;3130:37;3163:3;3151:10;3130:37;;;3118:50;;-1:-1;3191:4;3182:14;;;;3210;;;;;3072:1;3065:9;3025:206;;3263:722;;3391:3;3384:4;3376:6;3372:17;3368:27;3358:2;;3409:1;3406;3399:12;3358:2;3439:6;3433:13;3461:80;3476:64;3533:6;3476:64;;3461:80;3452:89;;3558:5;3583:6;3576:5;3569:21;3613:4;3605:6;3601:17;3591:27;;3635:4;3630:3;3626:14;3619:21;;3688:6;3735:3;3727:4;3719:6;3715:17;3710:3;3706:27;3703:36;3700:2;;;3752:1;3749;3742:12;3700:2;3777:1;3762:217;3787:6;3784:1;3781:13;3762:217;;;3845:3;3867:48;3911:3;3899:10;3867:48;;;3855:61;;-1:-1;3939:4;3930:14;;;;3958;;;;;3809:1;3802:9;3762:217;;3993:130;4060:20;;4085:33;4060:20;4085:33;;4130:134;4208:13;;4226:33;4208:13;4226:33;;4272:440;;4373:3;4366:4;4358:6;4354:17;4350:27;4340:2;;4391:1;4388;4381:12;4340:2;4428:6;4415:20;4450:64;4465:48;4506:6;4465:48;;4450:64;4441:73;;4534:6;4527:5;4520:21;4570:4;4562:6;4558:17;4603:4;4596:5;4592:16;4638:3;4629:6;4624:3;4620:16;4617:25;4614:2;;;4655:1;4652;4645:12;4614:2;4665:41;4699:6;4694:3;4689;4665:41;;;4333:379;;;;;;;;4721:442;;4833:3;4826:4;4818:6;4814:17;4810:27;4800:2;;4851:1;4848;4841:12;4800:2;4881:6;4875:13;4903:64;4918:48;4959:6;4918:48;;4903:64;4894:73;;4987:6;4980:5;4973:21;5023:4;5015:6;5011:17;5056:4;5049:5;5045:16;5091:3;5082:6;5077:3;5073:16;5070:25;5067:2;;;5108:1;5105;5098:12;5067:2;5118:39;5150:6;5145:3;5140;5118:39;;5171:170;5267:13;;5285:51;5267:13;5285:51;;5384:695;;5511:4;5499:9;5494:3;5490:19;5486:30;5483:2;;;5529:1;5526;5519:12;5483:2;5547:20;5562:4;5547:20;;;5538:29;-1:-1;5628:1;5659:78;5733:3;5713:9;5659:78;;;5635:103;;-1:-1;5806:2;5839:60;5895:3;5871:22;;;5839:60;;;5832:4;5825:5;5821:16;5814:86;5759:152;5964:2;5997:60;6053:3;6044:6;6033:9;6029:22;5997:60;;;5990:4;5983:5;5979:16;5972:86;5921:148;5477:602;;;;;6364:128;6430:20;;6455:32;6430:20;6455:32;;6499:241;;6603:2;6591:9;6582:7;6578:23;6574:32;6571:2;;;6619:1;6616;6609:12;6571:2;6654:1;6671:53;6716:7;6696:9;6671:53;;;6661:63;6565:175;-1:-1;;;;6565:175;6747:496;;;6888:2;6876:9;6867:7;6863:23;6859:32;6856:2;;;6904:1;6901;6894:12;6856:2;6939:1;6956:64;7012:7;6992:9;6956:64;;;6946:74;;6918:108;7078:2;7067:9;7063:18;7057:25;-1:-1;;;;;7094:6;7091:30;7088:2;;;7134:1;7131;7124:12;7088:2;7154:73;7219:7;7210:6;7199:9;7195:22;7154:73;;;7144:83;;7036:197;6850:393;;;;;;7250:699;;;;7406:2;7394:9;7385:7;7381:23;7377:32;7374:2;;;7422:1;7419;7412:12;7374:2;7457:1;7474:53;7519:7;7499:9;7474:53;;;7464:63;;7436:97;7592:2;7581:9;7577:18;7564:32;-1:-1;;;;;7608:6;7605:30;7602:2;;;7648:1;7645;7638:12;7602:2;7668:62;7722:7;7713:6;7702:9;7698:22;7668:62;;;7658:72;;7543:193;7795:2;7784:9;7780:18;7767:32;-1:-1;;;;;7811:6;7808:30;7805:2;;;7851:1;7848;7841:12;7805:2;7871:62;7925:7;7916:6;7905:9;7901:22;7871:62;;;7861:72;;7746:193;7368:581;;;;;;7956:366;;;8077:2;8065:9;8056:7;8052:23;8048:32;8045:2;;;8093:1;8090;8083:12;8045:2;8128:1;8145:53;8190:7;8170:9;8145:53;;;8135:63;;8107:97;8235:2;8253:53;8298:7;8289:6;8278:9;8274:22;8253:53;;8329:392;;8469:2;8457:9;8448:7;8444:23;8440:32;8437:2;;;8485:1;8482;8475:12;8437:2;8520:24;;-1:-1;;;;;8553:30;;8550:2;;;8596:1;8593;8586:12;8550:2;8616:89;8697:7;8688:6;8677:9;8673:22;8616:89;;8728:657;;;8910:2;8898:9;8889:7;8885:23;8881:32;8878:2;;;8926:1;8923;8916:12;8878:2;8961:24;;-1:-1;;;;;8994:30;;8991:2;;;9037:1;9034;9027:12;8991:2;9057:89;9138:7;9129:6;9118:9;9114:22;9057:89;;;9047:99;;8940:212;9204:2;9193:9;9189:18;9183:25;-1:-1;;;;;9220:6;9217:30;9214:2;;;9260:1;9257;9250:12;9214:2;9280:89;9361:7;9352:6;9341:9;9337:22;9280:89;;9392:392;;9532:2;9520:9;9511:7;9507:23;9503:32;9500:2;;;9548:1;9545;9538:12;9500:2;9583:24;;-1:-1;;;;;9616:30;;9613:2;;;9659:1;9656;9649:12;9613:2;9679:89;9760:7;9751:6;9740:9;9736:22;9679:89;;9791:1025;;;;;10021:3;10009:9;10000:7;9996:23;9992:33;9989:2;;;10038:1;10035;10028:12;9989:2;10073:31;;-1:-1;;;;;10113:30;;10110:2;;;10156:1;10153;10146:12;10110:2;10176:78;10246:7;10237:6;10226:9;10222:22;10176:78;;;10166:88;;10052:208;10319:2;10308:9;10304:18;10291:32;-1:-1;;;;;10335:6;10332:30;10329:2;;;10375:1;10372;10365:12;10329:2;10395:78;10465:7;10456:6;10445:9;10441:22;10395:78;;;10385:88;;10270:209;10538:2;10527:9;10523:18;10510:32;-1:-1;;;;;10554:6;10551:30;10548:2;;;10594:1;10591;10584:12;10548:2;10614:78;10684:7;10675:6;10664:9;10660:22;10614:78;;;10604:88;;10489:209;10729:2;10747:53;10792:7;10783:6;10772:9;10768:22;10747:53;;;10737:63;;10708:98;9983:833;;;;;;;;10823:241;;10927:2;10915:9;10906:7;10902:23;10898:32;10895:2;;;10943:1;10940;10933:12;10895:2;10978:1;10995:53;11040:7;11020:9;10995:53;;11071:1327;;;;;;;;;11311:3;11299:9;11290:7;11286:23;11282:33;11279:2;;;11328:1;11325;11318:12;11279:2;11363:1;11380:53;11425:7;11405:9;11380:53;;;11370:63;;11342:97;11470:2;11488:53;11533:7;11524:6;11513:9;11509:22;11488:53;;;11478:63;;11449:98;11578:2;11596:53;11641:7;11632:6;11621:9;11617:22;11596:53;;;11586:63;;11557:98;11686:2;11704:53;11749:7;11740:6;11729:9;11725:22;11704:53;;;11694:63;;11665:98;11822:3;11811:9;11807:19;11794:33;-1:-1;;;;;11839:6;11836:30;11833:2;;;11879:1;11876;11869:12;11833:2;11899:62;11953:7;11944:6;11933:9;11929:22;11899:62;;;11889:72;;11773:194;11998:3;12017:53;12062:7;12053:6;12042:9;12038:22;12017:53;;;12007:63;;11977:99;12107:3;12126:52;12170:7;12161:6;12150:9;12146:22;12126:52;;;12116:62;;12086:98;12243:3;12232:9;12228:19;12215:33;-1:-1;;;;;12260:6;12257:30;12254:2;;;12300:1;12297;12290:12;12254:2;12320:62;12374:7;12365:6;12354:9;12350:22;12320:62;;;12310:72;;12194:194;11273:1125;;;;;;;;;;;;12405:845;;;;;;12585:3;12573:9;12564:7;12560:23;12556:33;12553:2;;;12602:1;12599;12592:12;12553:2;12637:1;12654:53;12699:7;12679:9;12654:53;;;12644:63;;12616:97;12744:2;12762:53;12807:7;12798:6;12787:9;12783:22;12762:53;;;12752:63;;12723:98;12852:2;12870:53;12915:7;12906:6;12895:9;12891:22;12870:53;;;12860:63;;12831:98;12960:2;12978:52;13022:7;13013:6;13002:9;12998:22;12978:52;;;12968:62;;12939:97;13095:3;13084:9;13080:19;13067:33;-1:-1;;;;;13112:6;13109:30;13106:2;;;13152:1;13149;13142:12;13106:2;13172:62;13226:7;13217:6;13206:9;13202:22;13172:62;;;13162:72;;13046:194;12547:703;;;;;;;;;13257:617;;;;;13412:3;13400:9;13391:7;13387:23;13383:33;13380:2;;;13429:1;13426;13419:12;13380:2;13464:1;13481:53;13526:7;13506:9;13481:53;;;13471:63;;13443:97;13571:2;13589:53;13634:7;13625:6;13614:9;13610:22;13589:53;;;13579:63;;13550:98;13679:2;13697:53;13742:7;13733:6;13722:9;13718:22;13697:53;;13881:743;;;;;;14053:3;14041:9;14032:7;14028:23;14024:33;14021:2;;;14070:1;14067;14060:12;14021:2;14105:1;14122:53;14167:7;14147:9;14122:53;;;14112:63;;14084:97;14212:2;14230:53;14275:7;14266:6;14255:9;14251:22;14230:53;;;14220:63;;14191:98;14320:2;14338:53;14383:7;14374:6;14363:9;14359:22;14338:53;;;14328:63;;14299:98;14428:2;14446:53;14491:7;14482:6;14471:9;14467:22;14446:53;;;14436:63;;14407:98;14536:3;14555:53;14600:7;14591:6;14580:9;14576:22;14555:53;;14631:593;;;;14777:2;14765:9;14756:7;14752:23;14748:32;14745:2;;;14793:1;14790;14783:12;14745:2;14828:1;14845:53;14890:7;14870:9;14845:53;;;14835:63;;14807:97;14935:2;14953:52;14997:7;14988:6;14977:9;14973:22;14953:52;;15231:574;;;15370:2;15358:9;15349:7;15345:23;15341:32;15338:2;;;15386:1;15383;15376:12;15338:2;15421:31;;-1:-1;;;;;15461:30;;15458:2;;;15504:1;15501;15494:12;15458:2;15524:62;15578:7;15569:6;15558:9;15554:22;15524:62;;;15514:72;;15400:192;15651:2;15640:9;15636:18;15623:32;-1:-1;;;;;15667:6;15664:30;15661:2;;;15707:1;15704;15697:12;15661:2;15727:62;15781:7;15772:6;15761:9;15757:22;15727:62;;15812:317;;15954:2;15942:9;15933:7;15929:23;15925:32;15922:2;;;15970:1;15967;15960:12;15922:2;16005:1;16022:91;16105:7;16085:9;16022:91;;16384:263;;16499:2;16487:9;16478:7;16474:23;16470:32;16467:2;;;16515:1;16512;16505:12;16467:2;16550:1;16567:64;16623:7;16603:9;16567:64;;16654:366;;;16775:2;16763:9;16754:7;16750:23;16746:32;16743:2;;;16791:1;16788;16781:12;16743:2;16826:1;16843:53;16888:7;16868:9;16843:53;;17400:930;;;;;17616:3;17604:9;17595:7;17591:23;17587:33;17584:2;;;17633:1;17630;17623:12;17584:2;17668:1;17685:64;17741:7;17721:9;17685:64;;;17675:74;;17647:108;17786:2;17804:64;17860:7;17851:6;17840:9;17836:22;17804:64;;;17794:74;;17765:109;17926:2;17915:9;17911:18;17905:25;-1:-1;;;;;17942:6;17939:30;17936:2;;;17982:1;17979;17972:12;17936:2;18002:89;18083:7;18074:6;18063:9;18059:22;18002:89;;;17992:99;;17884:213;18149:2;18138:9;18134:18;18128:25;-1:-1;;;;;18165:6;18162:30;18159:2;;;18205:1;18202;18195:12;18159:2;18225:89;18306:7;18297:6;18286:9;18282:22;18225:89;;18337:595;;;;18484:2;18472:9;18463:7;18459:23;18455:32;18452:2;;;18500:1;18497;18490:12;18452:2;18535:1;18552:53;18597:7;18577:9;18552:53;;;18542:63;;18514:97;18642:2;18660:53;18705:7;18696:6;18685:9;18681:22;18660:53;;18940:173;;19027:46;19069:3;19061:6;19027:46;;;-1:-1;;19102:4;19093:14;;19020:93;19122:173;;19209:46;19251:3;19243:6;19209:46;;19502:269;;19635:96;19727:3;19719:6;19635:96;;;-1:-1;;19760:4;19751:14;;19628:143;20074:265;;20229:104;20329:3;20321:6;20229:104;;20727:103;20800:24;20818:5;20800:24;;;20795:3;20788:37;20782:48;;;21234:690;;21379:54;21427:5;21379:54;;;21446:86;21525:6;21520:3;21446:86;;;21439:93;;21553:56;21603:5;21553:56;;;21629:7;21657:1;21642:260;21667:6;21664:1;21661:13;21642:260;;;21734:6;21728:13;21755:63;21814:3;21799:13;21755:63;;;21748:70;;21835:60;21888:6;21835:60;;;21825:70;-1:-1;;21689:1;21682:9;21642:260;;;-1:-1;21915:3;;21358:566;-1:-1;;;;;21358:566;21963:654;;22094:50;22138:5;22094:50;;;22157:76;22226:6;22221:3;22157:76;;;22150:83;;22254:52;22300:5;22254:52;;;22326:7;22354:1;22339:256;22364:6;22361:1;22358:13;22339:256;;;22431:6;22425:13;22452:63;22511:3;22496:13;22452:63;;;22445:70;;22532:56;22581:6;22532:56;;;22522:66;-1:-1;;22386:1;22379:9;22339:256;;22656:690;;22801:54;22849:5;22801:54;;;22868:86;22947:6;22942:3;22868:86;;;22861:93;;22975:56;23025:5;22975:56;;;23051:7;23079:1;23064:260;23089:6;23086:1;23083:13;23064:260;;;23156:6;23150:13;23177:63;23236:3;23221:13;23177:63;;;23170:70;;23257:60;23310:6;23257:60;;;23247:70;-1:-1;;23111:1;23104:9;23064:260;;23385:714;;23538:54;23586:5;23538:54;;;23605:94;23692:6;23687:3;23605:94;;;23598:101;;23720:56;23770:5;23720:56;;;23796:7;23824:1;23809:268;23834:6;23831:1;23828:13;23809:268;;;23901:6;23895:13;23922:71;23989:3;23974:13;23922:71;;;23915:78;;24010:60;24063:6;24010:60;;;24000:70;-1:-1;;23856:1;23849:9;23809:268;;24138:654;;24269:50;24313:5;24269:50;;;24332:76;24401:6;24396:3;24332:76;;;24325:83;;24429:52;24475:5;24429:52;;;24501:7;24529:1;24514:256;24539:6;24536:1;24533:13;24514:256;;;24606:6;24600:13;24627:63;24686:3;24671:13;24627:63;;;24620:70;;24707:56;24756:6;24707:56;;;24697:66;-1:-1;;24561:1;24554:9;24514:256;;24875:838;;25052:73;25119:5;25052:73;;;25138:99;25230:6;25225:3;25138:99;;;25131:106;;25258:75;25327:5;25258:75;;;25353:7;25381:1;25366:325;25391:6;25388:1;25385:13;25366:325;;;25458:6;25452:13;25479:109;25584:3;25569:13;25479:109;;;25472:116;;25605:79;25677:6;25605:79;;;25595:89;-1:-1;;25413:1;25406:9;25366:325;;25796:862;;25981:73;26048:5;25981:73;;;26067:107;26167:6;26162:3;26067:107;;;26060:114;;26195:75;26264:5;26195:75;;;26290:7;26318:1;26303:333;26328:6;26325:1;26322:13;26303:333;;;26395:6;26389:13;26416:117;26529:3;26514:13;26416:117;;;26409:124;;26550:79;26622:6;26550:79;;;26540:89;-1:-1;;26350:1;26343:9;26303:333;;26751:1052;;26946:79;27019:5;26946:79;;;27038:111;27142:6;27137:3;27038:111;;;27031:118;;27172:3;27214:4;27206:6;27202:17;27197:3;27193:27;27241:81;27316:5;27241:81;;;27342:7;27370:1;27355:409;27380:6;27377:1;27374:13;27355:409;;;27442:9;27436:4;27432:20;27427:3;27420:33;27487:6;27481:13;27509:118;27622:4;27607:13;27509:118;;;27501:126;;27644:85;27722:6;27644:85;;;27752:4;27743:14;;;;;27634:95;-1:-1;;27402:1;27395:9;27355:409;;;-1:-1;27777:4;;26925:878;-1:-1;;;;;;;26925:878;27842:690;;27987:54;28035:5;27987:54;;;28054:86;28133:6;28128:3;28054:86;;;28047:93;;28161:56;28211:5;28161:56;;;28237:7;28265:1;28250:260;28275:6;28272:1;28269:13;28250:260;;;28342:6;28336:13;28363:63;28422:3;28407:13;28363:63;;;28356:70;;28443:60;28496:6;28443:60;;;28433:70;-1:-1;;28297:1;28290:9;28250:260;;28571:714;;28724:54;28772:5;28724:54;;;28791:94;28878:6;28873:3;28791:94;;;28784:101;;28906:56;28956:5;28906:56;;;28982:7;29010:1;28995:268;29020:6;29017:1;29014:13;28995:268;;;29087:6;29081:13;29108:71;29175:3;29160:13;29108:71;;;29101:78;;29196:60;29249:6;29196:60;;;29186:70;-1:-1;;29042:1;29035:9;28995:268;;29324:654;;29455:50;29499:5;29455:50;;;29518:76;29587:6;29582:3;29518:76;;;29511:83;;29615:52;29661:5;29615:52;;;29687:7;29715:1;29700:256;29725:6;29722:1;29719:13;29700:256;;;29792:6;29786:13;29813:63;29872:3;29857:13;29813:63;;;29806:70;;29893:56;29942:6;29893:56;;;29883:66;-1:-1;;29747:1;29740:9;29700:256;;29986:103;30059:24;30077:5;30059:24;;30342:343;;30452:38;30484:5;30452:38;;;30502:70;30565:6;30560:3;30502:70;;;30495:77;;30577:52;30622:6;30617:3;30610:4;30603:5;30599:16;30577:52;;;30650:29;30672:6;30650:29;;;30641:39;;;;30432:253;-1:-1;;;30432:253;31718:162;31814:60;31868:5;31814:60;;31887:142;31973:50;32017:5;31973:50;;32036:148;32125:53;32172:5;32125:53;;32354:146;32442:52;32488:5;32442:52;;32669:465;;32829:67;32893:2;32888:3;32829:67;;;32929:66;32909:87;;-1:-1;;;;;33025:2;33016:12;;33009:88;33125:2;33116:12;;32815:319;-1:-1;;32815:319;33143:364;;33303:67;33367:2;33362:3;33303:67;;;33403:66;33383:87;;33498:2;33489:12;;33289:218;-1:-1;;33289:218;33516:465;;33676:67;33740:2;33735:3;33676:67;;;33776:66;33756:87;;-1:-1;;;;;33872:2;33863:12;;33856:88;33972:2;33963:12;;33662:319;-1:-1;;33662:319;33990:364;;34150:67;34214:2;34209:3;34150:67;;;34250:66;34230:87;;34345:2;34336:12;;34136:218;-1:-1;;34136:218;34363:364;;34523:67;34587:2;34582:3;34523:67;;;34623:66;34603:87;;34718:2;34709:12;;34509:218;-1:-1;;34509:218;34736:465;;34896:67;34960:2;34955:3;34896:67;;;34996:66;34976:87;;-1:-1;;;;;35092:2;35083:12;;35076:88;35192:2;35183:12;;34882:319;-1:-1;;34882:319;35210:465;;35370:67;35434:2;35429:3;35370:67;;;35470:66;35450:87;;35571:66;35566:2;35557:12;;35550:88;35666:2;35657:12;;35356:319;-1:-1;;35356:319;35684:364;;35844:67;35908:2;35903:3;35844:67;;;35944:66;35924:87;;36039:2;36030:12;;35830:218;-1:-1;;35830:218;36057:364;;36217:67;36281:2;36276:3;36217:67;;;36317:66;36297:87;;36412:2;36403:12;;36203:218;-1:-1;;36203:218;36430:364;;36590:67;36654:2;36649:3;36590:67;;;36690:66;36670:87;;36785:2;36776:12;;36576:218;-1:-1;;36576:218;36803:465;;36963:67;37027:2;37022:3;36963:67;;;37063:66;37043:87;;-1:-1;;;;;37159:2;37150:12;;37143:88;37259:2;37250:12;;36949:319;-1:-1;;36949:319;37355:1120;37587:22;;37355:1120;;37520:4;37511:14;;;37615:62;37515:3;37587:22;37615:62;;;37540:143;37763:4;37756:5;37752:16;37746:23;37775:63;37832:4;37827:3;37823:14;37809:12;37775:63;;;37693:151;37921:4;37914:5;37910:16;37904:23;37933:63;37990:4;37985:3;37981:14;37967:12;37933:63;;;37854:148;38087:4;38080:5;38076:16;38070:23;38139:3;38133:4;38129:14;38122:4;38117:3;38113:14;38106:38;38159:99;38253:4;38239:12;38159:99;;;38151:107;;38012:258;38345:4;38338:5;38334:16;38328:23;38357:86;38437:4;38432:3;38428:14;38414:12;38357:86;;;-1:-1;38466:4;37493:982;-1:-1;;;37493:982;38482:122;38581:18;;38575:29;38682:1536;38908:22;;38682:1536;;38839:5;38830:15;;;38936:62;38834:3;38908:22;38936:62;;;38860:144;39083:4;39076:5;39072:16;39066:23;39095:63;39152:4;39147:3;39143:14;39129:12;39095:63;;;39014:150;39243:4;39236:5;39232:16;39226:23;39255:63;39312:4;39307:3;39303:14;39289:12;39255:63;;;39174:150;39401:4;39394:5;39390:16;39384:23;39413:63;39470:4;39465:3;39461:14;39447:12;39413:63;;;39334:148;39556:4;39549:5;39545:16;39539:23;39568:63;39625:4;39620:3;39616:14;39602:12;39568:63;;;39492:145;39717:4;39710:5;39706:16;39700:23;39729:63;39786:4;39781:3;39777:14;39763:12;39729:63;;;39647:151;39873:4;39866:5;39862:16;39856:23;39885:76;39955:4;39950:3;39946:14;39932:12;39885:76;;;39808:159;40041:4;40034:5;40030:16;40024:23;40093:3;40087:4;40083:14;40076:4;40071:3;40067:14;40060:38;40113:67;40175:4;40161:12;40113:67;;;40105:75;38812:1406;-1:-1;;;;;38812:1406;40294:655;40504:22;;40427:4;40418:14;;;40532:78;40422:3;40504:22;40532:78;;;40447:169;40696:4;40689:5;40685:16;40679:23;40708:63;40765:4;40760:3;40756:14;40742:12;40708:63;;;40626:151;40853:4;40846:5;40842:16;40836:23;40865:63;40922:4;40917:3;40913:14;40899:12;40865:63;;;40787:147;40400:549;;;;41782:1201;41999:22;;41782:1201;;41931:4;41922:14;;;42027:62;41926:3;41999:22;42027:62;;;41951:144;42170:4;42163:5;42159:16;42153:23;42182:78;42254:4;42249:3;42245:14;42231:12;42182:78;;;42105:161;42341:4;42334:5;42330:16;42324:23;42393:3;42387:4;42383:14;42376:4;42371:3;42367:14;42360:38;42413:67;42475:4;42461:12;42413:67;;;42405:75;;42276:216;42568:4;42561:5;42557:16;42551:23;42580:63;42637:4;42632:3;42628:14;42614:12;42580:63;;;42502:147;42728:4;42721:5;42717:16;42711:23;42780:3;42774:4;42770:14;42763:4;42758:3;42754:14;42747:38;42800:145;42940:4;42926:12;42800:145;;43053:1249;43278:22;;43053:1249;;43210:4;43201:14;;;43306:70;43205:3;43278:22;43306:70;;;43230:152;43457:4;43450:5;43446:16;43440:23;43469:86;43549:4;43544:3;43540:14;43526:12;43469:86;;;43392:169;43636:4;43629:5;43625:16;43619:23;43688:3;43682:4;43678:14;43671:4;43666:3;43662:14;43655:38;43708:75;43778:4;43764:12;43708:75;;;43700:83;;43571:224;43871:4;43864:5;43860:16;43854:23;43883:71;43948:4;43943:3;43939:14;43925:12;43883:71;;;43805:155;44039:4;44032:5;44028:16;44022:23;44091:3;44085:4;44081:14;44074:4;44069:3;44065:14;44058:38;44111:153;44259:4;44245:12;44111:153;;44386:1020;44613:22;;44386:1020;;44535:4;44526:14;;;44641:62;44530:3;44613:22;44641:62;;;44555:154;44785:4;44778:5;44774:16;44768:23;44837:3;44831:4;44827:14;44820:4;44815:3;44811:14;44804:38;44857:99;44951:4;44937:12;44857:99;;;44849:107;;44719:249;45043:4;45036:5;45032:16;45026:23;45095:3;45089:4;45085:14;45078:4;45073:3;45069:14;45062:38;45115:99;45209:4;45195:12;45115:99;;;45107:107;;44978:248;45299:4;45292:5;45288:16;45282:23;45311:63;45368:4;45363:3;45359:14;45345:12;45311:63;;45889:118;45978:23;45995:5;45978:23;;46014:213;46132:2;46117:18;;46146:71;46121:9;46190:6;46146:71;;46234:408;46398:2;46383:18;;46412:71;46387:9;46456:6;46412:71;;;46531:9;46525:4;46521:20;46516:2;46505:9;46501:18;46494:48;46556:76;46627:4;46618:6;46556:76;;46649:468;46843:2;46828:18;;46857:71;46832:9;46901:6;46857:71;;;46976:9;46970:4;46966:20;46961:2;46950:9;46946:18;46939:48;47001:106;47102:4;47093:6;47001:106;;47124:361;47292:2;47306:47;;;47277:18;;47367:108;47277:18;47461:6;47367:108;;47492:620;47738:2;47752:47;;;47723:18;;47813:108;47723:18;47907:6;47813:108;;;47805:116;;47969:9;47963:4;47959:20;47954:2;47943:9;47939:18;47932:48;47994:108;48097:4;48088:6;47994:108;;48119:361;48287:2;48301:47;;;48272:18;;48362:108;48272:18;48456:6;48362:108;;48487:461;48705:2;48719:47;;;48690:18;;48780:158;48690:18;48924:6;48780:158;;48955:516;49145:2;49159:47;;;49130:18;;49220:84;49130:18;49290:6;49220:84;;;49212:92;;49352:9;49346:4;49342:20;49337:2;49326:9;49322:18;49315:48;49377:84;49456:4;49447:6;49377:84;;49478:407;49669:2;49683:47;;;49654:18;;49744:131;49654:18;49744:131;;49892:407;50083:2;50097:47;;;50068:18;;50158:131;50068:18;50158:131;;50306:407;50497:2;50511:47;;;50482:18;;50572:131;50482:18;50572:131;;50720:407;50911:2;50925:47;;;50896:18;;50986:131;50896:18;50986:131;;51134:407;51325:2;51339:47;;;51310:18;;51400:131;51310:18;51400:131;;51548:407;51739:2;51753:47;;;51724:18;;51814:131;51724:18;51814:131;;51962:407;52153:2;52167:47;;;52138:18;;52228:131;52138:18;52228:131;;52376:407;52567:2;52581:47;;;52552:18;;52642:131;52552:18;52642:131;;52790:407;52981:2;52995:47;;;52966:18;;53056:131;52966:18;53056:131;;53204:407;53395:2;53409:47;;;53380:18;;53470:131;53380:18;53470:131;;53618:407;53809:2;53823:47;;;53794:18;;53884:131;53794:18;53884:131;;54032:389;54214:2;54228:47;;;54199:18;;54289:122;54199:18;54397:6;54289:122;;54428:269;54574:2;54559:18;;54588:99;54563:9;54660:6;54588:99;;54704:388;54878:2;54863:18;;54892:99;54867:9;54964:6;54892:99;;;55002:80;55078:2;55067:9;55063:18;55054:6;55002:80;;;54849:243;;;;;;55099:795;55365:3;55350:19;;55380:99;55354:9;55452:6;55380:99;;;55490:80;55566:2;55555:9;55551:18;55542:6;55490:80;;;55618:9;55612:4;55608:20;55603:2;55592:9;55588:18;55581:48;55643:84;55722:4;55713:6;55643:84;;;55635:92;;55775:9;55769:4;55765:20;55760:2;55749:9;55745:18;55738:48;55800:84;55879:4;55870:6;55800:84;;;55792:92;55336:558;-1:-1;;;;;;55336:558;55901:507;56103:2;56088:18;;56117:99;56092:9;56189:6;56117:99;;;56227:80;56303:2;56292:9;56288:18;56279:6;56227:80;;;56318;56394:2;56383:9;56379:18;56370:6;56318:80;;56415:1191;56823:3;56808:19;;56838:99;56812:9;56910:6;56838:99;;;56985:9;56979:4;56975:20;56970:2;56959:9;56955:18;56948:48;57010:116;57121:4;57112:6;57010:116;;;57002:124;;57174:9;57168:4;57164:20;57159:2;57148:9;57144:18;57137:48;57199:116;57310:4;57301:6;57199:116;;;57191:124;;57363:9;57357:4;57353:20;57348:2;57337:9;57333:18;57326:48;57388:116;57499:4;57490:6;57388:116;;;57380:124;;57515:81;57591:3;57580:9;57576:19;57567:6;57515:81;;57613:388;57787:2;57772:18;;57801:99;57776:9;57873:6;57801:99;;;57911:80;57987:2;57976:9;57972:18;57963:6;57911:80;;58008:1391;58412:3;58397:19;;58427:99;58401:9;58499:6;58427:99;;;58537:80;58613:2;58602:9;58598:18;58589:6;58537:80;;;58628;58704:2;58693:9;58689:18;58680:6;58628:80;;;58719;58795:2;58784:9;58780:18;58771:6;58719:80;;;58810:81;58886:3;58875:9;58871:19;58862:6;58810:81;;;58940:9;58934:4;58930:20;58924:3;58913:9;58909:19;58902:49;58965:84;59044:4;59035:6;58965:84;;;58957:92;;59060:81;59136:3;59125:9;59121:19;59112:6;59060:81;;;59152:79;59226:3;59215:9;59211:19;59202:6;59152:79;;;59280:9;59274:4;59270:20;59264:3;59253:9;59249:19;59242:49;59305:84;59384:4;59375:6;59305:84;;;59297:92;58383:1016;-1:-1;;;;;;;;;;;58383:1016;59406:947;59708:3;59693:19;;59723:99;59697:9;59795:6;59723:99;;;59833:80;59909:2;59898:9;59894:18;59885:6;59833:80;;;59924;60000:2;59989:9;59985:18;59976:6;59924:80;;;60015;60091:2;60080:9;60076:18;60067:6;60015:80;;;60106:79;60180:3;60169:9;60165:19;60156:6;60106:79;;;60234:9;60228:4;60224:20;60218:3;60207:9;60203:19;60196:49;60259:84;60338:4;60329:6;60259:84;;;60251:92;59679:674;-1:-1;;;;;;;;59679:674;60360:747;60618:3;60603:19;;60633:99;60607:9;60705:6;60633:99;;;60743:80;60819:2;60808:9;60804:18;60795:6;60743:80;;;60834;60910:2;60899:9;60895:18;60886:6;60834:80;;;60925;61001:2;60990:9;60986:18;60977:6;60925:80;;;61016:81;61092:3;61081:9;61077:19;61068:6;61016:81;;61114:867;61400:3;61385:19;;61415:99;61389:9;61487:6;61415:99;;;61525:80;61601:2;61590:9;61586:18;61577:6;61525:80;;;61616;61692:2;61681:9;61677:18;61668:6;61616:80;;;61707;61783:2;61772:9;61768:18;61759:6;61707:80;;;61798:81;61874:3;61863:9;61859:19;61850:6;61798:81;;;61890;61966:3;61955:9;61951:19;61942:6;61890:81;;;61371:610;;;;;;;;;;61988:707;62234:3;62219:19;;62249:99;62223:9;62321:6;62249:99;;;62359:80;62435:2;62424:9;62420:18;62411:6;62359:80;;;62450:78;62524:2;62513:9;62509:18;62500:6;62450:78;;;62576:9;62570:4;62566:20;62561:2;62550:9;62546:18;62539:48;62601:84;62680:4;62671:6;62601:84;;63097:507;63299:2;63284:18;;63313:99;63288:9;63385:6;63313:99;;;63423:80;63499:2;63488:9;63484:18;63475:6;63423:80;;64125:711;64373:3;64358:19;;64388:99;64362:9;64460:6;64388:99;;;64498:80;64574:2;64563:9;64559:18;64550:6;64498:80;;;64589;64665:2;64654:9;64650:18;64641:6;64589:80;;64843:373;65017:2;65031:47;;;65002:18;;65092:114;65002:18;65192:6;65092:114;;65223:357;65389:2;65403:47;;;65374:18;;65464:106;65374:18;65556:6;65464:106;;65587:492;65789:2;65803:47;;;65774:18;;65864:114;65774:18;65964:6;65864:114;;;65856:122;;65989:80;66065:2;66054:9;66050:18;66041:6;65989:80;;66086:213;66204:2;66189:18;;66218:71;66193:9;66262:6;66218:71;;66306:843;66608:3;66593:19;;66623:71;66597:9;66667:6;66623:71;;;66705:72;66773:2;66762:9;66758:18;66749:6;66705:72;;;66825:9;66819:4;66815:20;66810:2;66799:9;66795:18;66788:48;66850:108;66953:4;66944:6;66850:108;;;66842:116;;67006:9;67000:4;66996:20;66991:2;66980:9;66976:18;66969:48;67031:108;67134:4;67125:6;67031:108;;67156:256;67218:2;67212:9;67244:17;;;-1:-1;;;;;67304:34;;67340:22;;;67301:62;67298:2;;;67376:1;67373;67366:12;67298:2;67392;67385:22;67196:216;;-1:-1;67196:216;67419:258;;-1:-1;;;;;67570:6;67567:30;67564:2;;;67610:1;67607;67600:12;67564:2;-1:-1;67639:4;67627:17;;;67657:15;;67501:176;68214:258;;-1:-1;;;;;68349:6;68346:30;68343:2;;;68389:1;68386;68379:12;68343:2;-1:-1;68462:4;68433;68410:17;;;;-1:-1;;68406:33;68452:15;;68280:192;68482:119;68588:4;68576:17;;68556:45;69173:137;69296:6;69276:34;69588:103;69674:12;;69658:33;70169:123;-1:-1;70284:3;;70268:24;71828:168;71936:19;;;71985:4;71976:14;;71929:67;74745:91;;74807:24;74825:5;74807:24;;74922:156;75009:5;75015:58;75009:5;75015:58;;75085:136;75162:5;75168:48;75162:5;75168:48;;75228:142;75308:5;75314:51;75308:5;75314:51;;75377:140;75456:5;75462:50;75456:5;75462:50;;75524:121;-1:-1;;;;;75586:54;;75569:76;75731:96;-1:-1;;;;;75792:30;;75775:52;75834:156;;75936:49;75979:5;75936:49;;75997:136;;76089:39;76122:5;76089:39;;76140:142;;76235:42;76271:5;76235:42;;76289:140;;76383:41;76418:5;76383:41;;76437:145;76518:6;76513:3;76508;76495:30;-1:-1;76574:1;76556:16;;76549:27;76488:94;76591:268;76656:1;76663:101;76677:6;76674:1;76671:13;76663:101;;;76744:11;;;76738:18;76725:11;;;76718:39;76699:2;76692:10;76663:101;;;76779:6;76776:1;76773:13;76770:2;;;-1:-1;;76844:1;76826:16;;76819:27;76640:219;76867:97;76955:2;76935:14;-1:-1;;76931:28;;76915:49;76972:116;77066:1;77059:5;77056:12;77046:2;;77072:9;77046:2;77040:48;;77095:106;77179:1;77172:5;77169:12;77159:2;;77185:9;77208:109;77295:1;77288:5;77285:12;77275:2;;77301:9;77324:108;77410:1;77403:5;77400:12;77390:2;;77416:9;77439:117;77508:24;77526:5;77508:24;;;77501:5;77498:35;77488:2;;77547:1;77544;77537:12;77563:117;77632:24;77650:5;77632:24;;77687:112;77774:1;77767:5;77764:12;77754:2;;77790:1;77787;77780:12;77930:115;77998:23;78015:5;77998:23;","source":"pragma solidity ^0.5.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\"openzeppelin-solidity/contracts/math/SafeMath.sol\\";\\nimport \\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\";\\nimport \\"./utils/SolRsaVerify.sol\\";\\n\\nimport { WorkersImpl } from \\"./impl/WorkersImpl.sol\\";\\nimport { PrincipalImpl } from \\"./impl/PrincipalImpl.sol\\";\\nimport { TaskImpl } from \\"./impl/TaskImpl.sol\\";\\nimport { SecretContractImpl } from \\"./impl/SecretContractImpl.sol\\";\\nimport { EnigmaCommon } from \\"./impl/EnigmaCommon.sol\\";\\nimport { EnigmaState } from \\"./impl/EnigmaState.sol\\";\\nimport { EnigmaEvents } from \\"./impl/EnigmaEvents.sol\\";\\nimport { EnigmaStorage } from \\"./impl/EnigmaStorage.sol\\";\\nimport { Getters } from \\"./impl/Getters.sol\\";\\nimport { ERC20 } from \\"./interfaces/ERC20.sol\\";\\n\\ncontract Enigma is EnigmaStorage, EnigmaEvents, Getters {\\n    using SafeMath for uint256;\\n    using ECDSA for bytes32;\\n\\n    // ========================================== Constructor ==========================================\\n\\n    constructor(address _tokenAddress, address _principal, uint _epochSize) public {\\n        state.engToken = ERC20(_tokenAddress);\\n        state.epochSize = _epochSize;\\n        state.taskTimeoutSize = 200;\\n        state.principal = _principal;\\n        state.stakingThreshold = 1;\\n        state.workerGroupSize = 1;\\n    }\\n\\n    // ========================================== Modifiers ==========================================\\n\\n    /**\\n    * Checks if the custodian wallet is registered as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerRegistered(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status != EnigmaCommon.WorkerStatus.Unregistered, \\"Unregistered worker\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged in as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedIn, \\"Worker not logged in\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged out as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedOut(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not logged out\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if worker can log in\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canLogIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(getFirstBlockNumber(block.number) != 0, \\"Principal node has not been initialized\\");\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        require(worker.balance >= state.stakingThreshold, \\"Worker\'s balance is not sufficient\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the worker can withdraw\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canWithdraw(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        EnigmaCommon.WorkerLog memory workerLog = WorkersImpl.getLatestWorkerLogImpl(worker, block.number);\\n        require(workerLog.workerEventType == EnigmaCommon.WorkerLogType.LogOut,\\n            \\"Worker\'s last log is not of LogOut type\\");\\n        require(getFirstBlockNumber(block.number) > workerLog.blockNumber,\\n            \\"Cannot withdraw in same epoch as log out event\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has not been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractUndefined(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Undefined, \\"Secret contract already deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractDeployed(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Deployed, \\"Secret contract not deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks task record has been created and is still pending receipt\\n    *\\n    * @param _taskId Task ID\\n    */\\n    modifier taskWaiting(bytes32 _taskId) {\\n        require(state.tasks[_taskId].status == EnigmaCommon.TaskStatus.RecordCreated, \\"Task is not waiting\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure signing key used for registration is unique\\n    *\\n    * @param _signer Signing key\\n    */\\n    modifier isUniqueSigningKey(address _signer) {\\n        for (uint i = 0; i < state.workerAddresses.length; i++) {\\n            require(state.workers[state.workerAddresses[i]].signer != _signer, \\"Not a unique signing key\\");\\n        }\\n        _;\\n    }\\n\\n    // ========================================== Functions ==========================================\\n\\n    /**\\n    * Registers a new worker or change the signer parameters of an existing\\n    * worker. This should be called by every worker (and the principal)\\n    * node in order to receive tasks.\\n    *\\n    * @param _signer The signer address, derived from the enclave public key\\n    * @param _report The RLP encoded report returned by the IAS\\n    * @param _signature Signature\\n    */\\n    function register(address _signer, bytes memory _report, bytes memory _signature)\\n    public\\n    isUniqueSigningKey(_signer)\\n    {\\n        WorkersImpl.registerImpl(state, _signer, _report, _signature);\\n    }\\n//\\n    /**\\n    * Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    *\\n    * @param _custodian The worker\'s ETH address\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function deposit(address _custodian, uint _amount)\\n    public\\n    workerRegistered(_custodian)\\n    {\\n        WorkersImpl.depositImpl(state, _custodian, _amount);\\n    }\\n\\n    /**\\n    * Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    *\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function withdraw(uint _amount)\\n    public\\n    canWithdraw(msg.sender)\\n    {\\n        WorkersImpl.withdrawImpl(state, _amount);\\n    }\\n\\n    /**\\n    * Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\n    * selection process.\\n    */\\n    function login() public canLogIn(msg.sender) {\\n        WorkersImpl.loginImpl(state);\\n    }\\n\\n    /**\\n    * Logout worker. Worker must be logged in to do so.\\n    */\\n    function logout() public workerLoggedIn(msg.sender) {\\n        WorkersImpl.logoutImpl(state);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContractFailure(\\n        bytes32 _taskId,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractFailureImpl(state, _taskId, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _preCodeHash Predeployed bytecode hash\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContract(\\n        bytes32 _taskId,\\n        bytes32 _preCodeHash,\\n        bytes32 _codeHash,\\n        bytes32 _initStateDeltaHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractImpl(state, _taskId, _preCodeHash, _codeHash, _initStateDeltaHash,\\n            _optionalEthereumData, _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Check if secret contract has been deployed\\n    *\\n    * @return  Number of deployed secret contracts\\n    */\\n    function countSecretContracts()\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return SecretContractImpl.countSecretContractsImpl(state);\\n    }\\n\\n    /**\\n    * Get deployed secret contract addresses within a range\\n    *\\n    * @param _start Start of range\\n    * @param _stop End of range\\n    * @return Subset of deployed secret contract addresses\\n    */\\n    function getSecretContractAddresses(uint _start, uint _stop)\\n    public\\n    view\\n    returns (bytes32[] memory)\\n    {\\n        return SecretContractImpl.getSecretContractAddressesImpl(state, _start, _stop);\\n    }\\n\\n    /**\\n    * Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\n    * generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\n    * task deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\n    * the on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\n    * invalid.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    * @param _nonce Locally-computed nonce value for this deployment\\n    */\\n    function createDeploymentTaskRecord(\\n        bytes32 _inputsHash,\\n        uint _gasLimit,\\n        uint _gasPx,\\n        uint _firstBlockNumber,\\n        uint _nonce\\n    )\\n    public\\n    {\\n        TaskImpl.createDeploymentTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber, _nonce);\\n    }\\n\\n    /**\\n    * Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\n    * contract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\n    * the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecord(\\n        bytes32 _inputsHash,\\n        uint _gasLimit,\\n        uint _gasPx,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    {\\n        TaskImpl.createTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\n    * transferring task fee from sender to contract, generating the unique taskId, saving the block number\\n    * when the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimits ENG gas limit\\n    * @param _gasPxs ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecords(\\n        bytes32[] memory _inputsHashes,\\n        uint[] memory _gasLimits,\\n        uint[] memory _gasPxs,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    {\\n        TaskImpl.createTaskRecordsImpl(state, _inputsHashes, _gasLimits, _gasPxs, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\n    * The task record is finalized and the worker is credited with the task fee.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _stateDeltaHash Input state delta hash\\n    * @param _outputHash Output state hash\\n    * @param _optionalEthereumData Output state hash\\n    * @param _optionalEthereumContractAddress Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitReceipt(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _stateDeltaHash,\\n        bytes32 _outputHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitReceiptImpl(state, _scAddr, _taskId, _stateDeltaHash, _outputHash, _optionalEthereumData,\\n            _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\n    * updated to indicate task failure.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _outputHash Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitTaskFailure(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _outputHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitTaskFailureImpl(state, _scAddr, _taskId, _outputHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    *\\n    * @param _taskId Unique taskId\\n    */\\n    function returnFeesForTask(bytes32 _taskId)\\n    public\\n    taskWaiting(_taskId)\\n    {\\n        TaskImpl.returnFeesForTaskImpl(state, _taskId);\\n    }\\n\\n    /**\\n    * Reparameterizing workers with a new seed\\n    * This should be called for each epoch by the Principal node\\n    *\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n    * @param _seed The random integer generated by the enclave\\n    * @param _sig Principal node\'s signature\\n    */\\n    function setWorkersParams(uint _blockNumber, uint _seed, bytes memory _sig)\\n    public\\n    workerRegistered(msg.sender)\\n    {\\n        PrincipalImpl.setWorkersParamsImpl(state, _blockNumber, _seed, _sig);\\n    }\\n\\n    /**\\n    * Get active workers before a certain block number\\n    *\\n    * @param _blockNumber Block number\\n    */\\n    function getActiveWorkers(uint _blockNumber)\\n    public\\n    view\\n    returns (address[] memory, uint[] memory)\\n    {\\n        return PrincipalImpl.getActiveWorkersImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get the first block number of an epoch that a given block number belongs to\\n    *\\n    * @param _blockNumber Block number\\n    * @return Block number\\n    */\\n    function getFirstBlockNumber(uint _blockNumber)\\n    public\\n    view\\n    returns (uint) {\\n        return WorkersImpl.getFirstBlockNumberImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get worker params for an epoch given a particular block number\\n    *\\n    * @param _blockNumber Block number\\n    * @return Epoch\'s first block number\\n    * @return Seed\\n    * @return Array of worker\'s signing addresses\\n    * @return Array of worker\'s stakes\\n    */\\n    function getWorkerParams(uint _blockNumber)\\n    public\\n    view\\n    returns (uint, uint, address[] memory, uint[] memory) {\\n        return WorkersImpl.getWorkerParamsImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\n    * and the secret contract address.\\n    *\\n    * @param _blockNumber Block number the task record was mined\\n    * @param _scAddr Secret contract address\\n    * @return Selected workers\' addresses\\n    */\\n    function getWorkerGroup(uint _blockNumber, bytes32 _scAddr)\\n    public\\n    view\\n    returns (address[] memory)\\n    {\\n        return WorkersImpl.getWorkerGroupImpl(state, _blockNumber, _scAddr);\\n    }\\n\\n    /**\\n    * The RLP encoded report returned by the IAS server\\n    *\\n    * @param _custodian The worker\'s custodian address\\n    */\\n    function getReport(address _custodian)\\n    public\\n    view\\n    workerRegistered(_custodian)\\n    returns (address, bytes memory)\\n    {\\n        return WorkersImpl.getReportImpl(state, _custodian);\\n    }\\n\\n    /**\\n    * This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n    * @param _data The report itself\\n    * @param _signature The signature of the report\\n    */\\n    function verifyReport(bytes memory _data, bytes memory _signature)\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return WorkersImpl.verifyReportImpl(_data, _signature);\\n    }\\n}\\n","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[826]},"id":827,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":827,"sourceUnit":12296,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":827,"sourceUnit":12168,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":5,"nodeType":"ImportDirective","scope":827,"sourceUnit":12087,"src":"184:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":7,"nodeType":"ImportDirective","scope":827,"sourceUnit":9260,"src":"220:53:0","symbolAliases":[{"foreign":6,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":9,"nodeType":"ImportDirective","scope":827,"sourceUnit":3104,"src":"274:57:0","symbolAliases":[{"foreign":8,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":11,"nodeType":"ImportDirective","scope":827,"sourceUnit":5991,"src":"332:47:0","symbolAliases":[{"foreign":10,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":13,"nodeType":"ImportDirective","scope":827,"sourceUnit":3742,"src":"380:67:0","symbolAliases":[{"foreign":12,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":15,"nodeType":"ImportDirective","scope":827,"sourceUnit":2220,"src":"448:55:0","symbolAliases":[{"foreign":14,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":17,"nodeType":"ImportDirective","scope":827,"sourceUnit":2406,"src":"504:53:0","symbolAliases":[{"foreign":16,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":19,"nodeType":"ImportDirective","scope":827,"sourceUnit":2359,"src":"558:55:0","symbolAliases":[{"foreign":18,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":21,"nodeType":"ImportDirective","scope":827,"sourceUnit":2414,"src":"614:57:0","symbolAliases":[{"foreign":20,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":23,"nodeType":"ImportDirective","scope":827,"sourceUnit":2579,"src":"672:45:0","symbolAliases":[{"foreign":22,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":25,"nodeType":"ImportDirective","scope":827,"sourceUnit":10245,"src":"718:47:0","symbolAliases":[{"foreign":24,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":26,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2413,"src":"786:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2413","typeString":"contract EnigmaStorage"}},"id":27,"nodeType":"InheritanceSpecifier","src":"786:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":28,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2358,"src":"801:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2358","typeString":"contract EnigmaEvents"}},"id":29,"nodeType":"InheritanceSpecifier","src":"801:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":30,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2578,"src":"815:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2578","typeString":"contract Getters"}},"id":31,"nodeType":"InheritanceSpecifier","src":"815:7:0"}],"contractDependencies":[2358,2413,2578],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":826,"linearizedBaseContracts":[826,2578,2358,2413],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":34,"libraryName":{"contractScope":null,"id":32,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":12295,"src":"835:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$12295","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"829:27:0","typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":37,"libraryName":{"contractScope":null,"id":35,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":12167,"src":"867:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$12167","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"861:24:0","typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":84,"nodeType":"Block","src":"1076:238:0","statements":[{"expression":{"argumentTypes":null,"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":46,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1086:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":48,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2367,"src":"1086:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10244","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":50,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1109:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10244,"src":"1103:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10244_$","typeString":"type(contract ERC20)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1103:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10244","typeString":"contract ERC20"}},"src":"1086:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10244","typeString":"contract ERC20"}},"id":53,"nodeType":"ExpressionStatement","src":"1086:37:0"},{"expression":{"argumentTypes":null,"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":54,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1133:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":56,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"1133:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":57,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"1151:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1133:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":59,"nodeType":"ExpressionStatement","src":"1133:28:0"},{"expression":{"argumentTypes":null,"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":60,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1171:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":62,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2371,"src":"1171:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"323030","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1195:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"1171:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65,"nodeType":"ExpressionStatement","src":"1171:27:0"},{"expression":{"argumentTypes":null,"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":66,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1208:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":68,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2373,"src":"1208:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":69,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1226:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1208:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":71,"nodeType":"ExpressionStatement","src":"1208:28:0"},{"expression":{"argumentTypes":null,"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":72,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1246:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2401,"src":"1246:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1271:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1246:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":77,"nodeType":"ExpressionStatement","src":"1246:26:0"},{"expression":{"argumentTypes":null,"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":78,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1282:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":80,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"1282:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1306:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1282:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":83,"nodeType":"ExpressionStatement","src":"1282:25:0"}]},"documentation":null,"id":85,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":85,"src":"1009:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":41,"name":"_principal","nodeType":"VariableDeclaration","scope":85,"src":"1032:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":43,"name":"_epochSize","nodeType":"VariableDeclaration","scope":85,"src":"1052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint","nodeType":"ElementaryTypeName","src":"1052:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1008:60:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"1076:0:0"},"scope":826,"src":"997:317:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":109,"nodeType":"Block","src":"1604:181:0","statements":[{"assignments":[92],"declarations":[{"constant":false,"id":92,"name":"worker","nodeType":"VariableDeclaration","scope":109,"src":"1614:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":91,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2126,"src":"1614:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":97,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":93,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1650:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":94,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"1650:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2126_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":96,"indexExpression":{"argumentTypes":null,"id":95,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"1664:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1650:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1614:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":99,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1688:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"1688:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":101,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"1705:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"1705:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2167_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1705:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1688:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1745:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"1680:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1680:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"1680:87:0"},{"id":108,"nodeType":"PlaceholderStatement","src":"1777:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":110,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"name":"_user","nodeType":"VariableDeclaration","scope":110,"src":"1589:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1588:15:0"},"src":"1563:222:0","visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"1968:178:0","statements":[{"assignments":[117],"declarations":[{"constant":false,"id":117,"name":"worker","nodeType":"VariableDeclaration","scope":134,"src":"1978:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":116,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2126,"src":"1978:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":122,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":118,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"2014:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"2014:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2126_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":121,"indexExpression":{"argumentTypes":null,"id":120,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2028:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2014:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1978:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":124,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2052:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"2052:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":126,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2069:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"2069:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2167_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2069:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2052:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2105:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"2044:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2044:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"2044:84:0"},{"id":133,"nodeType":"PlaceholderStatement","src":"2138:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":135,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"name":"_user","nodeType":"VariableDeclaration","scope":135,"src":"1953:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"1953:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1952:15:0"},"src":"1929:217:0","visibility":"internal"},{"body":{"id":159,"nodeType":"Block","src":"2331:180:0","statements":[{"assignments":[142],"declarations":[{"constant":false,"id":142,"name":"worker","nodeType":"VariableDeclaration","scope":159,"src":"2341:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":141,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2126,"src":"2341:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":147,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":143,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"2377:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"2377:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2126_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":146,"indexExpression":{"argumentTypes":null,"id":145,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2391:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2377:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2341:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":149,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2415:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"2415:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":151,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2432:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"2432:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2167_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2432:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2415:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2469:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"2407:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2407:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":157,"nodeType":"ExpressionStatement","src":"2407:86:0"},{"id":158,"nodeType":"PlaceholderStatement","src":"2503:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":160,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"name":"_user","nodeType":"VariableDeclaration","scope":160,"src":"2316:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2315:15:0"},"src":"2291:220:0","visibility":"internal"},{"body":{"id":203,"nodeType":"Block","src":"2660:395:0","statements":[{"assignments":[167],"declarations":[{"constant":false,"id":167,"name":"worker","nodeType":"VariableDeclaration","scope":203,"src":"2670:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":166,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2126,"src":"2670:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":172,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":168,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"2706:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"2706:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2126_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":171,"indexExpression":{"argumentTypes":null,"id":170,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2720:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2706:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2670:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":175,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12859,"src":"2764:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2764:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":174,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"2744:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2744:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2781:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2744:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2784:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"2736:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":182,"nodeType":"ExpressionStatement","src":"2736:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":184,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2844:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"2844:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":186,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2861:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"2861:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2167_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2861:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2844:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2898:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"2836:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2836:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":192,"nodeType":"ExpressionStatement","src":"2836:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":194,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2958:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2122,"src":"2958:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":196,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"2976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2401,"src":"2976:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3000:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"2950:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2950:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"ExpressionStatement","src":"2950:87:0"},{"id":202,"nodeType":"PlaceholderStatement","src":"3047:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":204,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"name":"_user","nodeType":"VariableDeclaration","scope":204,"src":"2645:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"2645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2644:15:0"},"src":"2627:428:0","visibility":"internal"},{"body":{"id":260,"nodeType":"Block","src":"3213:580:0","statements":[{"assignments":[211],"declarations":[{"constant":false,"id":211,"name":"worker","nodeType":"VariableDeclaration","scope":260,"src":"3223:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":210,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2126,"src":"3223:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":216,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"3259:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"3259:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2126_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":215,"indexExpression":{"argumentTypes":null,"id":214,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"3273:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3259:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3223:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":218,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3297:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"3297:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":220,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"3314:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"3314:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2167_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3314:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3297:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3351:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"3289:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3289:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"ExpressionStatement","src":"3289:104:0"},{"assignments":[230],"declarations":[{"constant":false,"id":230,"name":"workerLog","nodeType":"VariableDeclaration","scope":260,"src":"3403:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2144_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":229,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2144,"src":"3403:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2144_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":237,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":233,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3480:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":234,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12859,"src":"3488:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3488:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":231,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"3445:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9258,"src":"3445:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2126_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2144_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3445:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2144_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3403:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2175","typeString":"enum EnigmaCommon.WorkerLogType"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3519:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2144_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"3519:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2175","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":241,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"3548:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2175,"src":"3548:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2175_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3548:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2175","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3519:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3595:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"3511:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3511:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"ExpressionStatement","src":"3511:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":250,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12859,"src":"3675:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3675:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":249,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3655:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3655:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":253,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3691:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2144_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2141,"src":"3691:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3655:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3726:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"3647:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3647:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":258,"nodeType":"ExpressionStatement","src":"3647:128:0"},{"id":259,"nodeType":"PlaceholderStatement","src":"3785:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":261,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"name":"_user","nodeType":"VariableDeclaration","scope":261,"src":"3198:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"3198:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3197:15:0"},"src":"3177:616:0","visibility":"internal"},{"body":{"id":279,"nodeType":"Block","src":"3960:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2170","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":266,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"3978:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2395,"src":"3978:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2156_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":269,"indexExpression":{"argumentTypes":null,"id":268,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3994:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3978:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2156_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2155,"src":"3978:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2170","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4013:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2170,"src":"4013:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2170_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4013:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2170","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"3978:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4058:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"3970:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"ExpressionStatement","src":"3970:123:0"},{"id":278,"nodeType":"PlaceholderStatement","src":"4103:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":280,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"name":"_scAddr","nodeType":"VariableDeclaration","scope":280,"src":"3943:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3943:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3942:17:0"},"src":"3916:195:0","visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"4273:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2170","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":285,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4291:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2395,"src":"4291:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2156_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":288,"indexExpression":{"argumentTypes":null,"id":287,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"4307:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4291:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2156_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2155,"src":"4291:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2170","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":290,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4326:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2170,"src":"4326:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2170_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4326:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2170","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4291:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4370:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"4283:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4283:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"ExpressionStatement","src":"4283:118:0"},{"id":297,"nodeType":"PlaceholderStatement","src":"4411:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":299,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"name":"_scAddr","nodeType":"VariableDeclaration","scope":299,"src":"4256:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4256:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4255:17:0"},"src":"4230:189:0","visibility":"internal"},{"body":{"id":317,"nodeType":"Block","src":"4584:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2163","typeString":"enum EnigmaCommon.TaskStatus"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":304,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4602:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2391,"src":"4602:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2114_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":307,"indexExpression":{"argumentTypes":null,"id":306,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"4614:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4602:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2114_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2111,"src":"4602:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2163","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":309,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4633:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2163,"src":"4633:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2163_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4633:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2163","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4602:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"4594:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4594:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":315,"nodeType":"ExpressionStatement","src":"4594:100:0"},{"id":316,"nodeType":"PlaceholderStatement","src":"4704:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":318,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"name":"_taskId","nodeType":"VariableDeclaration","scope":318,"src":"4567:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4567:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4566:17:0"},"src":"4546:166:0","visibility":"internal"},{"body":{"id":351,"nodeType":"Block","src":"4874:202:0","statements":[{"body":{"id":348,"nodeType":"Block","src":"4940:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":335,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4962:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"4962:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2126_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":341,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":337,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"4976:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":340,"indexExpression":{"argumentTypes":null,"id":339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4998:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4976:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4962:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"4962:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":343,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"5012:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4962:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5021:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"4954:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4954:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"4954:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4901:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":327,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4905:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"4905:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4905:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4901:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":349,"initializationExpression":{"assignments":[323],"declarations":[{"constant":false,"id":323,"name":"i","nodeType":"VariableDeclaration","scope":349,"src":"4889:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint","nodeType":"ElementaryTypeName","src":"4889:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":325,"initialValue":{"argumentTypes":null,"hexValue":"30","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4898:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4889:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4935:3:0","subExpression":{"argumentTypes":null,"id":331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4935:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"nodeType":"ExpressionStatement","src":"4935:3:0"},"nodeType":"ForStatement","src":"4884:175:0"},{"id":350,"nodeType":"PlaceholderStatement","src":"5068:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":352,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"name":"_signer","nodeType":"VariableDeclaration","scope":352,"src":"4857:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"4857:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4856:17:0"},"src":"4829:247:0","visibility":"internal"},{"body":{"id":373,"nodeType":"Block","src":"5697:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":367,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"5732:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":368,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5739:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":369,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5748:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":370,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5757:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":364,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"5707:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":8526,"src":"5707:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5707:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"5707:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":374,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":361,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":362,"modifierName":{"argumentTypes":null,"id":360,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"5665:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"5665:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"name":"_signer","nodeType":"VariableDeclaration","scope":374,"src":"5586:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"5586:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":356,"name":"_report","nodeType":"VariableDeclaration","scope":374,"src":"5603:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":355,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":358,"name":"_signature","nodeType":"VariableDeclaration","scope":374,"src":"5625:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":357,"name":"bytes","nodeType":"ElementaryTypeName","src":"5625:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5585:64:0"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"5697:0:0"},"scope":826,"src":"5568:207:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":392,"nodeType":"Block","src":"6119:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":387,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"6153:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":388,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6160:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":389,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"6172:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":384,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"6129:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":8732,"src":"6129:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6129:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"6129:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":393,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":381,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6103:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":382,"modifierName":{"argumentTypes":null,"id":380,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"6086:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6086:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"name":"_custodian","nodeType":"VariableDeclaration","scope":393,"src":"6037:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"6037:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":378,"name":"_amount","nodeType":"VariableDeclaration","scope":393,"src":"6057:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint","nodeType":"ElementaryTypeName","src":"6057:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6036:34:0"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"6119:0:0"},"scope":826,"src":"6020:167:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":409,"nodeType":"Block","src":"6460:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":405,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"6495:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":406,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":402,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"6470:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":8785,"src":"6470:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6470:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"6470:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":410,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":398,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"6444:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6444:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":400,"modifierName":{"argumentTypes":null,"id":397,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6432:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6432:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"name":"_amount","nodeType":"VariableDeclaration","scope":410,"src":"6403:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint","nodeType":"ElementaryTypeName","src":"6403:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6402:14:0"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"6460:0:0"},"scope":826,"src":"6385:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":423,"nodeType":"Block","src":"6725:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":420,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"6757:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":417,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"6735:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":8630,"src":"6735:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6735:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"6735:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":424,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"6713:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6713:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":415,"modifierName":{"argumentTypes":null,"id":412,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6704:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6704:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"6694:2:0"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"6725:0:0"},"scope":826,"src":"6680:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":437,"nodeType":"Block","src":"6899:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":434,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"6932:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":431,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"6909:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":8671,"src":"6909:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6909:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"6909:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":438,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":427,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"6887:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6887:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":429,"modifierName":{"argumentTypes":null,"id":426,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"6872:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6872:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"6862:2:0"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"6899:0:0"},"scope":826,"src":"6847:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":463,"nodeType":"Block","src":"7404:89:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":457,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"7455:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":458,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7462:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":459,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"7471:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":460,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7481:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":454,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"7414:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4187,"src":"7414:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,bytes memory)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7414:72:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"ExpressionStatement","src":"7414:72:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":464,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"7357:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7357:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":449,"modifierName":{"argumentTypes":null,"id":446,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"7342:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7342:26:0"},{"arguments":[{"argumentTypes":null,"id":451,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7391:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":452,"modifierName":{"argumentTypes":null,"id":450,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7373:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"7373:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"name":"_taskId","nodeType":"VariableDeclaration","scope":464,"src":"7253:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7253:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":442,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":464,"src":"7278:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":441,"name":"uint64","nodeType":"ElementaryTypeName","src":"7278:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":444,"name":"_sig","nodeType":"VariableDeclaration","scope":464,"src":"7303:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":443,"name":"bytes","nodeType":"ElementaryTypeName","src":"7303:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"7243:83:0"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"7404:0:0"},"scope":826,"src":"7207:286:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"8546:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":493,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"8590:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":494,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"8597:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":495,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"8606:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":496,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8620:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":497,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"8631:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":498,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"8664:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":499,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8687:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":500,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8721:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":501,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"8731:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":490,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"8556:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4557,"src":"8556:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8556:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"8556:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":505,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":483,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"8499:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8499:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":485,"modifierName":{"argumentTypes":null,"id":482,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"8484:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8484:26:0"},{"arguments":[{"argumentTypes":null,"id":487,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"8533:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":488,"modifierName":{"argumentTypes":null,"id":486,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"8515:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8515:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"name":"_taskId","nodeType":"VariableDeclaration","scope":505,"src":"8207:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8207:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":468,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":505,"src":"8232:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8232:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":470,"name":"_codeHash","nodeType":"VariableDeclaration","scope":505,"src":"8262:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8262:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":472,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":505,"src":"8289:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8289:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":474,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":505,"src":"8326:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":473,"name":"bytes","nodeType":"ElementaryTypeName","src":"8326:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":476,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":505,"src":"8370:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"8370:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":478,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":505,"src":"8420:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":477,"name":"uint64","nodeType":"ElementaryTypeName","src":"8420:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":480,"name":"_sig","nodeType":"VariableDeclaration","scope":505,"src":"8445:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":479,"name":"bytes","nodeType":"ElementaryTypeName","src":"8445:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8197:271:0"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[],"src":"8546:0:0"},"scope":826,"src":"8168:575:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":515,"nodeType":"Block","src":"8945:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":512,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"9006:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":510,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"8962:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3741_$","typeString":"type(library SecretContractImpl)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"8962:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2404_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8962:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":509,"id":514,"nodeType":"Return","src":"8955:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":516,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"8899:2:0"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"name":"","nodeType":"VariableDeclaration","scope":516,"src":"8935:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint","nodeType":"ElementaryTypeName","src":"8935:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8934:6:0"},"scope":826,"src":"8870:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":533,"nodeType":"Block","src":"9348:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":528,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"9415:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":529,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"9422:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":530,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9430:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":526,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"9365:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3741_$","typeString":"type(library SecretContractImpl)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3740,"src":"9365:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2404_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9365:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":525,"id":532,"nodeType":"Return","src":"9358:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":534,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"name":"_start","nodeType":"VariableDeclaration","scope":534,"src":"9268:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint","nodeType":"ElementaryTypeName","src":"9268:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":520,"name":"_stop","nodeType":"VariableDeclaration","scope":534,"src":"9281:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint","nodeType":"ElementaryTypeName","src":"9281:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9267:25:0"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"name":"","nodeType":"VariableDeclaration","scope":534,"src":"9326:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":523,"length":null,"nodeType":"ArrayTypeName","src":"9326:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"9325:18:0"},"scope":826,"src":"9232:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":558,"nodeType":"Block","src":"10480:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":550,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"10530:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":551,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"10537:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":552,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"10550:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":553,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"10561:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":554,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"10569:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":555,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"10588:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":547,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"10490:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4034,"src":"10490:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint256,uint256,uint256,uint256)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10490:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"ExpressionStatement","src":"10490:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":559,"implemented":true,"kind":"function","modifiers":[],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":559,"src":"10341:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10341:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":538,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":559,"src":"10370:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint","nodeType":"ElementaryTypeName","src":"10370:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":540,"name":"_gasPx","nodeType":"VariableDeclaration","scope":559,"src":"10394:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":539,"name":"uint","nodeType":"ElementaryTypeName","src":"10394:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":542,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":559,"src":"10415:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint","nodeType":"ElementaryTypeName","src":"10415:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":544,"name":"_nonce","nodeType":"VariableDeclaration","scope":559,"src":"10447:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint","nodeType":"ElementaryTypeName","src":"10447:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10331:133:0"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[],"src":"10480:0:0"},"scope":826,"src":"10296:306:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":580,"nodeType":"Block","src":"11330:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":573,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"11370:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":574,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"11377:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":575,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"11390:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":576,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"11401:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":577,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"11409:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":570,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"11340:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4792,"src":"11340:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint256,uint256,uint256)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11340:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":579,"nodeType":"ExpressionStatement","src":"11340:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":581,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":581,"src":"11212:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11212:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":563,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":581,"src":"11241:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":562,"name":"uint","nodeType":"ElementaryTypeName","src":"11241:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":565,"name":"_gasPx","nodeType":"VariableDeclaration","scope":581,"src":"11265:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint","nodeType":"ElementaryTypeName","src":"11265:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":567,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":581,"src":"11286:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint","nodeType":"ElementaryTypeName","src":"11286:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11202:112:0"},"returnParameters":{"id":569,"nodeType":"ParameterList","parameters":[],"src":"11330:0:0"},"scope":826,"src":"11177:257:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":605,"nodeType":"Block","src":"12230:109:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":598,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"12271:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":599,"name":"_inputsHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"12278:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"argumentTypes":null,"id":600,"name":"_gasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"12293:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"argumentTypes":null,"id":601,"name":"_gasPxs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"12305:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"argumentTypes":null,"id":602,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"12314:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":595,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"12240:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordsImpl","nodeType":"MemberAccess","referencedDeclaration":5630,"src":"12240:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32[] memory,uint256[] memory,uint256[] memory,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12240:92:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"ExpressionStatement","src":"12240:92:0"}]},"documentation":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\ntransferring task fee from sender to contract, generating the unique taskId, saving the block number\\nwhen the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimits ENG gas limit\\n@param _gasPxs ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":606,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecords","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"name":"_inputsHashes","nodeType":"VariableDeclaration","scope":606,"src":"12081:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12081:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":583,"length":null,"nodeType":"ArrayTypeName","src":"12081:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":587,"name":"_gasLimits","nodeType":"VariableDeclaration","scope":606,"src":"12121:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":585,"name":"uint","nodeType":"ElementaryTypeName","src":"12121:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":586,"length":null,"nodeType":"ArrayTypeName","src":"12121:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":590,"name":"_gasPxs","nodeType":"VariableDeclaration","scope":606,"src":"12155:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":588,"name":"uint","nodeType":"ElementaryTypeName","src":"12155:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":589,"length":null,"nodeType":"ArrayTypeName","src":"12155:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":592,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":606,"src":"12186:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint","nodeType":"ElementaryTypeName","src":"12186:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12071:143:0"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[],"src":"12230:0:0"},"scope":826,"src":"12045:294:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":646,"nodeType":"Block","src":"13306:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":635,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"13343:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":636,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"13350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":637,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"13359:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":638,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"13368:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":639,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"13385:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":640,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"13398:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":641,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"13433:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":642,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"13467:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":643,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"13477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":632,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"13316:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5432,"src":"13316:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13316:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"13316:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":647,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":625,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"13260:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13260:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":627,"modifierName":{"argumentTypes":null,"id":624,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"13245:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13245:26:0"},{"arguments":[{"argumentTypes":null,"id":629,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"13293:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":630,"modifierName":{"argumentTypes":null,"id":628,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"13276:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13276:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"name":"_scAddr","nodeType":"VariableDeclaration","scope":647,"src":"12975:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12975:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":610,"name":"_taskId","nodeType":"VariableDeclaration","scope":647,"src":"13000:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13000:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":612,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":647,"src":"13025:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13025:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":614,"name":"_outputHash","nodeType":"VariableDeclaration","scope":647,"src":"13058:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13058:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":616,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":647,"src":"13087:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":615,"name":"bytes","nodeType":"ElementaryTypeName","src":"13087:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":618,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":647,"src":"13131:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"13131:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":620,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":647,"src":"13181:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":619,"name":"uint64","nodeType":"ElementaryTypeName","src":"13181:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":622,"name":"_sig","nodeType":"VariableDeclaration","scope":647,"src":"13206:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":621,"name":"bytes","nodeType":"ElementaryTypeName","src":"13206:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"12965:264:0"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[],"src":"13306:0:0"},"scope":826,"src":"12943:546:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":678,"nodeType":"Block","src":"14120:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":670,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"14161:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":671,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"14168:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":672,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"14177:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":673,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"14186:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":674,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"14199:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":675,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"14209:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":667,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"14130:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4975,"src":"14130:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14130:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"14130:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":679,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":660,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"14074:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14074:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":662,"modifierName":{"argumentTypes":null,"id":659,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"14059:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14059:26:0"},{"arguments":[{"argumentTypes":null,"id":664,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"14107:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":665,"modifierName":{"argumentTypes":null,"id":663,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"14090:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14090:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"name":"_scAddr","nodeType":"VariableDeclaration","scope":679,"src":"13916:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13916:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":651,"name":"_taskId","nodeType":"VariableDeclaration","scope":679,"src":"13941:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13941:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":653,"name":"_outputHash","nodeType":"VariableDeclaration","scope":679,"src":"13966:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13966:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":655,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":679,"src":"13995:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":654,"name":"uint64","nodeType":"ElementaryTypeName","src":"13995:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":657,"name":"_sig","nodeType":"VariableDeclaration","scope":679,"src":"14020:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":656,"name":"bytes","nodeType":"ElementaryTypeName","src":"14020:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13906:137:0"},"returnParameters":{"id":666,"nodeType":"ParameterList","parameters":[],"src":"14120:0:0"},"scope":826,"src":"13880:341:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":694,"nodeType":"Block","src":"14472:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":690,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"14513:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":691,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"14520:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":687,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"14482:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":5989,"src":"14482:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14482:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":693,"nodeType":"ExpressionStatement","src":"14482:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":695,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":684,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"14459:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":685,"modifierName":{"argumentTypes":null,"id":683,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"14447:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14447:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"name":"_taskId","nodeType":"VariableDeclaration","scope":695,"src":"14415:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14415:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14414:17:0"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[],"src":"14472:0:0"},"scope":826,"src":"14388:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":717,"nodeType":"Block","src":"14995:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":711,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"15040:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":712,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"15047:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":713,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"15061:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":714,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"15068:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":708,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"15005:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3103_$","typeString":"type(library PrincipalImpl)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":2932,"src":"15005:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15005:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"ExpressionStatement","src":"15005:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":718,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":704,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"14979:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14979:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":706,"modifierName":{"argumentTypes":null,"id":703,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"14962:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14962:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":718,"src":"14897:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint","nodeType":"ElementaryTypeName","src":"14897:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":699,"name":"_seed","nodeType":"VariableDeclaration","scope":718,"src":"14916:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint","nodeType":"ElementaryTypeName","src":"14916:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":701,"name":"_sig","nodeType":"VariableDeclaration","scope":718,"src":"14928:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":700,"name":"bytes","nodeType":"ElementaryTypeName","src":"14928:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14896:50:0"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[],"src":"14995:0:0"},"scope":826,"src":"14871:209:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":735,"nodeType":"Block","src":"15316:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":731,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"15368:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":732,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"15375:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":729,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"15333:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3103_$","typeString":"type(library PrincipalImpl)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"15333:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2404_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15333:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":728,"id":734,"nodeType":"Return","src":"15326:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":736,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":736,"src":"15227:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":719,"name":"uint","nodeType":"ElementaryTypeName","src":"15227:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15226:19:0"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"name":"","nodeType":"VariableDeclaration","scope":736,"src":"15279:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"15279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":723,"length":null,"nodeType":"ArrayTypeName","src":"15279:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":727,"name":"","nodeType":"VariableDeclaration","scope":736,"src":"15297:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":725,"name":"uint","nodeType":"ElementaryTypeName","src":"15297:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":726,"length":null,"nodeType":"ArrayTypeName","src":"15297:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15278:33:0"},"scope":826,"src":"15201:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":749,"nodeType":"Block","src":"15657:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":745,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"15710:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":746,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"15717:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":743,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"15674:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":8905,"src":"15674:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2404_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15674:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":742,"id":748,"nodeType":"Return","src":"15667:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":750,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":750,"src":"15599:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint","nodeType":"ElementaryTypeName","src":"15599:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15598:19:0"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"name":"","nodeType":"VariableDeclaration","scope":750,"src":"15651:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint","nodeType":"ElementaryTypeName","src":"15651:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15650:6:0"},"scope":826,"src":"15570:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":771,"nodeType":"Block","src":"16143:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":767,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"16192:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":768,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"16199:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":765,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"16160:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":8942,"src":"16160:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2404_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16160:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":764,"id":770,"nodeType":"Return","src":"16153:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":772,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":772,"src":"16046:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint","nodeType":"ElementaryTypeName","src":"16046:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16045:19:0"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"name":"","nodeType":"VariableDeclaration","scope":772,"src":"16098:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint","nodeType":"ElementaryTypeName","src":"16098:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":757,"name":"","nodeType":"VariableDeclaration","scope":772,"src":"16104:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint","nodeType":"ElementaryTypeName","src":"16104:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":760,"name":"","nodeType":"VariableDeclaration","scope":772,"src":"16110:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":759,"length":null,"nodeType":"ArrayTypeName","src":"16110:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":763,"name":"","nodeType":"VariableDeclaration","scope":772,"src":"16128:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":761,"name":"uint","nodeType":"ElementaryTypeName","src":"16128:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":762,"length":null,"nodeType":"ArrayTypeName","src":"16128:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16097:45:0"},"scope":826,"src":"16021:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":789,"nodeType":"Block","src":"16671:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":784,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"16719:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":785,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"16726:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":786,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"16740:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":782,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"16688:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9206,"src":"16688:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2404_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16688:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":781,"id":788,"nodeType":"Return","src":"16681:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":790,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":790,"src":"16580:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint","nodeType":"ElementaryTypeName","src":"16580:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":776,"name":"_scAddr","nodeType":"VariableDeclaration","scope":790,"src":"16599:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16599:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16579:36:0"},"returnParameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"name":"","nodeType":"VariableDeclaration","scope":790,"src":"16649:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"16649:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":779,"length":null,"nodeType":"ArrayTypeName","src":"16649:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16648:18:0"},"scope":826,"src":"16556:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":808,"nodeType":"Block","src":"17025:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":804,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"17068:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":805,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"17075:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":802,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"17042:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":8563,"src":"17042:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2404_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17042:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":801,"id":807,"nodeType":"Return","src":"17035:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":809,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":795,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"16973:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":796,"modifierName":{"argumentTypes":null,"id":794,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"16956:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"16956:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"name":"_custodian","nodeType":"VariableDeclaration","scope":809,"src":"16912:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"16912:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16911:20:0"},"returnParameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"name":"","nodeType":"VariableDeclaration","scope":809,"src":"16998:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"16998:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":800,"name":"","nodeType":"VariableDeclaration","scope":809,"src":"17007:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":799,"name":"bytes","nodeType":"ElementaryTypeName","src":"17007:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"16997:23:0"},"scope":826,"src":"16893:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":824,"nodeType":"Block","src":"17408:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":820,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"17454:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":821,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"17461:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":818,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"17425:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":8589,"src":"17425:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17425:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":817,"id":823,"nodeType":"Return","src":"17418:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":825,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"name":"_data","nodeType":"VariableDeclaration","scope":825,"src":"17320:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":810,"name":"bytes","nodeType":"ElementaryTypeName","src":"17320:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":813,"name":"_signature","nodeType":"VariableDeclaration","scope":825,"src":"17340:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":812,"name":"bytes","nodeType":"ElementaryTypeName","src":"17340:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17319:45:0"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"name":"","nodeType":"VariableDeclaration","scope":825,"src":"17398:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint","nodeType":"ElementaryTypeName","src":"17398:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17397:6:0"},"scope":826,"src":"17298:181:0","stateMutability":"view","superFunction":null,"visibility":"public"}],"scope":827,"src":"767:16714:0"}],"src":"0:17482:0"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/Enigma.sol","exportedSymbols":{"Enigma":[826]},"id":827,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":827,"sourceUnit":12296,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":827,"sourceUnit":12168,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":5,"nodeType":"ImportDirective","scope":827,"sourceUnit":12087,"src":"184:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":7,"nodeType":"ImportDirective","scope":827,"sourceUnit":9260,"src":"220:53:0","symbolAliases":[{"foreign":6,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":9,"nodeType":"ImportDirective","scope":827,"sourceUnit":3104,"src":"274:57:0","symbolAliases":[{"foreign":8,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":11,"nodeType":"ImportDirective","scope":827,"sourceUnit":5991,"src":"332:47:0","symbolAliases":[{"foreign":10,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":13,"nodeType":"ImportDirective","scope":827,"sourceUnit":3742,"src":"380:67:0","symbolAliases":[{"foreign":12,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":15,"nodeType":"ImportDirective","scope":827,"sourceUnit":2220,"src":"448:55:0","symbolAliases":[{"foreign":14,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":17,"nodeType":"ImportDirective","scope":827,"sourceUnit":2406,"src":"504:53:0","symbolAliases":[{"foreign":16,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":19,"nodeType":"ImportDirective","scope":827,"sourceUnit":2359,"src":"558:55:0","symbolAliases":[{"foreign":18,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":21,"nodeType":"ImportDirective","scope":827,"sourceUnit":2414,"src":"614:57:0","symbolAliases":[{"foreign":20,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":23,"nodeType":"ImportDirective","scope":827,"sourceUnit":2579,"src":"672:45:0","symbolAliases":[{"foreign":22,"local":null}],"unitAlias":""},{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":25,"nodeType":"ImportDirective","scope":827,"sourceUnit":10245,"src":"718:47:0","symbolAliases":[{"foreign":24,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":26,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2413,"src":"786:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2413","typeString":"contract EnigmaStorage"}},"id":27,"nodeType":"InheritanceSpecifier","src":"786:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":28,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2358,"src":"801:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2358","typeString":"contract EnigmaEvents"}},"id":29,"nodeType":"InheritanceSpecifier","src":"801:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":30,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2578,"src":"815:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2578","typeString":"contract Getters"}},"id":31,"nodeType":"InheritanceSpecifier","src":"815:7:0"}],"contractDependencies":[2358,2413,2578],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":826,"linearizedBaseContracts":[826,2578,2358,2413],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":34,"libraryName":{"contractScope":null,"id":32,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":12295,"src":"835:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$12295","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"829:27:0","typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":37,"libraryName":{"contractScope":null,"id":35,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":12167,"src":"867:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$12167","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"861:24:0","typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":84,"nodeType":"Block","src":"1076:238:0","statements":[{"expression":{"argumentTypes":null,"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":46,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1086:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":48,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2367,"src":"1086:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10244","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":50,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1109:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10244,"src":"1103:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$10244_$","typeString":"type(contract ERC20)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1103:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10244","typeString":"contract ERC20"}},"src":"1086:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$10244","typeString":"contract ERC20"}},"id":53,"nodeType":"ExpressionStatement","src":"1086:37:0"},{"expression":{"argumentTypes":null,"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":54,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1133:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":56,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"1133:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":57,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"1151:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1133:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":59,"nodeType":"ExpressionStatement","src":"1133:28:0"},{"expression":{"argumentTypes":null,"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":60,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1171:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":62,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2371,"src":"1171:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"323030","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1195:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"1171:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65,"nodeType":"ExpressionStatement","src":"1171:27:0"},{"expression":{"argumentTypes":null,"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":66,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1208:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":68,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2373,"src":"1208:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":69,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1226:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1208:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":71,"nodeType":"ExpressionStatement","src":"1208:28:0"},{"expression":{"argumentTypes":null,"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":72,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1246:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2401,"src":"1246:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1271:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1246:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":77,"nodeType":"ExpressionStatement","src":"1246:26:0"},{"expression":{"argumentTypes":null,"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":78,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1282:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":80,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"1282:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1306:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1282:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":83,"nodeType":"ExpressionStatement","src":"1282:25:0"}]},"documentation":null,"id":85,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":85,"src":"1009:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":41,"name":"_principal","nodeType":"VariableDeclaration","scope":85,"src":"1032:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":43,"name":"_epochSize","nodeType":"VariableDeclaration","scope":85,"src":"1052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint","nodeType":"ElementaryTypeName","src":"1052:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1008:60:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"1076:0:0"},"scope":826,"src":"997:317:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":109,"nodeType":"Block","src":"1604:181:0","statements":[{"assignments":[92],"declarations":[{"constant":false,"id":92,"name":"worker","nodeType":"VariableDeclaration","scope":109,"src":"1614:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":91,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2126,"src":"1614:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":97,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":93,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1650:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":94,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"1650:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2126_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":96,"indexExpression":{"argumentTypes":null,"id":95,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"1664:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1650:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1614:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":99,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1688:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"1688:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":101,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"1705:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"1705:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2167_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1705:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1688:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1745:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"1680:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1680:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"1680:87:0"},{"id":108,"nodeType":"PlaceholderStatement","src":"1777:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":110,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"name":"_user","nodeType":"VariableDeclaration","scope":110,"src":"1589:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1588:15:0"},"src":"1563:222:0","visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"1968:178:0","statements":[{"assignments":[117],"declarations":[{"constant":false,"id":117,"name":"worker","nodeType":"VariableDeclaration","scope":134,"src":"1978:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":116,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2126,"src":"1978:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":122,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":118,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"2014:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"2014:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2126_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":121,"indexExpression":{"argumentTypes":null,"id":120,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2028:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2014:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1978:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":124,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2052:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"2052:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":126,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2069:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"2069:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2167_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2069:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2052:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2105:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"2044:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2044:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"2044:84:0"},{"id":133,"nodeType":"PlaceholderStatement","src":"2138:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":135,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"name":"_user","nodeType":"VariableDeclaration","scope":135,"src":"1953:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"1953:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1952:15:0"},"src":"1929:217:0","visibility":"internal"},{"body":{"id":159,"nodeType":"Block","src":"2331:180:0","statements":[{"assignments":[142],"declarations":[{"constant":false,"id":142,"name":"worker","nodeType":"VariableDeclaration","scope":159,"src":"2341:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":141,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2126,"src":"2341:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":147,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":143,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"2377:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"2377:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2126_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":146,"indexExpression":{"argumentTypes":null,"id":145,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2391:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2377:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2341:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":149,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2415:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"2415:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":151,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2432:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"2432:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2167_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2432:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2415:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2469:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"2407:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2407:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":157,"nodeType":"ExpressionStatement","src":"2407:86:0"},{"id":158,"nodeType":"PlaceholderStatement","src":"2503:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":160,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"name":"_user","nodeType":"VariableDeclaration","scope":160,"src":"2316:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2315:15:0"},"src":"2291:220:0","visibility":"internal"},{"body":{"id":203,"nodeType":"Block","src":"2660:395:0","statements":[{"assignments":[167],"declarations":[{"constant":false,"id":167,"name":"worker","nodeType":"VariableDeclaration","scope":203,"src":"2670:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":166,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2126,"src":"2670:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":172,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":168,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"2706:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"2706:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2126_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":171,"indexExpression":{"argumentTypes":null,"id":170,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2720:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2706:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2670:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":175,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12859,"src":"2764:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2764:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":174,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"2744:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2744:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2781:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2744:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2784:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"2736:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":182,"nodeType":"ExpressionStatement","src":"2736:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":184,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2844:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"2844:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":186,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2861:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"2861:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2167_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2861:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2844:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2898:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"2836:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2836:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":192,"nodeType":"ExpressionStatement","src":"2836:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":194,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2958:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2122,"src":"2958:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":196,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"2976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2401,"src":"2976:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3000:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"2950:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2950:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"ExpressionStatement","src":"2950:87:0"},{"id":202,"nodeType":"PlaceholderStatement","src":"3047:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":204,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"name":"_user","nodeType":"VariableDeclaration","scope":204,"src":"2645:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"2645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2644:15:0"},"src":"2627:428:0","visibility":"internal"},{"body":{"id":260,"nodeType":"Block","src":"3213:580:0","statements":[{"assignments":[211],"declarations":[{"constant":false,"id":211,"name":"worker","nodeType":"VariableDeclaration","scope":260,"src":"3223:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":210,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2126,"src":"3223:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":216,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"3259:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"3259:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2126_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":215,"indexExpression":{"argumentTypes":null,"id":214,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"3273:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3259:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3223:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":218,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3297:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"3297:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":220,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"3314:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"3314:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2167_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3314:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2167","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3297:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3351:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"3289:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3289:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"ExpressionStatement","src":"3289:104:0"},{"assignments":[230],"declarations":[{"constant":false,"id":230,"name":"workerLog","nodeType":"VariableDeclaration","scope":260,"src":"3403:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2144_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":229,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2144,"src":"3403:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2144_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":237,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":233,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3480:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":234,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12859,"src":"3488:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3488:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2126_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":231,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"3445:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":9258,"src":"3445:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2126_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2144_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3445:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2144_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3403:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2175","typeString":"enum EnigmaCommon.WorkerLogType"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3519:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2144_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"3519:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2175","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":241,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"3548:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2175,"src":"3548:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2175_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3548:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2175","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3519:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3595:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"3511:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3511:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"ExpressionStatement","src":"3511:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":250,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12859,"src":"3675:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3675:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":249,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3655:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3655:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":253,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3691:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2144_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2141,"src":"3691:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3655:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3726:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"3647:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3647:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":258,"nodeType":"ExpressionStatement","src":"3647:128:0"},{"id":259,"nodeType":"PlaceholderStatement","src":"3785:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":261,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"name":"_user","nodeType":"VariableDeclaration","scope":261,"src":"3198:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"3198:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3197:15:0"},"src":"3177:616:0","visibility":"internal"},{"body":{"id":279,"nodeType":"Block","src":"3960:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2170","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":266,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"3978:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2395,"src":"3978:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2156_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":269,"indexExpression":{"argumentTypes":null,"id":268,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3994:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3978:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2156_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2155,"src":"3978:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2170","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4013:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2170,"src":"4013:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2170_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4013:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2170","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"3978:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4058:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"3970:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"ExpressionStatement","src":"3970:123:0"},{"id":278,"nodeType":"PlaceholderStatement","src":"4103:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":280,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"name":"_scAddr","nodeType":"VariableDeclaration","scope":280,"src":"3943:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3943:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3942:17:0"},"src":"3916:195:0","visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"4273:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2170","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":285,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4291:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2395,"src":"4291:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2156_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":288,"indexExpression":{"argumentTypes":null,"id":287,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"4307:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4291:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2156_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2155,"src":"4291:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2170","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":290,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4326:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2170,"src":"4326:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2170_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4326:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2170","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4291:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4370:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"4283:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4283:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"ExpressionStatement","src":"4283:118:0"},{"id":297,"nodeType":"PlaceholderStatement","src":"4411:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":299,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"name":"_scAddr","nodeType":"VariableDeclaration","scope":299,"src":"4256:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4256:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4255:17:0"},"src":"4230:189:0","visibility":"internal"},{"body":{"id":317,"nodeType":"Block","src":"4584:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2163","typeString":"enum EnigmaCommon.TaskStatus"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":304,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4602:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2391,"src":"4602:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2114_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":307,"indexExpression":{"argumentTypes":null,"id":306,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"4614:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4602:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2114_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2111,"src":"4602:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2163","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":309,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4633:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2219_$","typeString":"type(library EnigmaCommon)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2163,"src":"4633:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2163_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4633:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2163","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4602:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"4594:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4594:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":315,"nodeType":"ExpressionStatement","src":"4594:100:0"},{"id":316,"nodeType":"PlaceholderStatement","src":"4704:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":318,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"name":"_taskId","nodeType":"VariableDeclaration","scope":318,"src":"4567:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4567:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4566:17:0"},"src":"4546:166:0","visibility":"internal"},{"body":{"id":351,"nodeType":"Block","src":"4874:202:0","statements":[{"body":{"id":348,"nodeType":"Block","src":"4940:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":335,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4962:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"4962:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2126_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":341,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":337,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4976:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"4976:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":340,"indexExpression":{"argumentTypes":null,"id":339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4998:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4976:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4962:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2126_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"4962:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":343,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"5012:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4962:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5021:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12872,12873],"referencedDeclaration":12873,"src":"4954:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4954:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"4954:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4901:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":327,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4905:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},"id":328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2380,"src":"4905:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4905:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4901:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":349,"initializationExpression":{"assignments":[323],"declarations":[{"constant":false,"id":323,"name":"i","nodeType":"VariableDeclaration","scope":349,"src":"4889:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint","nodeType":"ElementaryTypeName","src":"4889:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":325,"initialValue":{"argumentTypes":null,"hexValue":"30","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4898:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4889:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4935:3:0","subExpression":{"argumentTypes":null,"id":331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4935:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"nodeType":"ExpressionStatement","src":"4935:3:0"},"nodeType":"ForStatement","src":"4884:175:0"},{"id":350,"nodeType":"PlaceholderStatement","src":"5068:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":352,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"name":"_signer","nodeType":"VariableDeclaration","scope":352,"src":"4857:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"4857:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4856:17:0"},"src":"4829:247:0","visibility":"internal"},{"body":{"id":373,"nodeType":"Block","src":"5697:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":367,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"5732:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":368,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5739:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":369,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5748:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":370,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5757:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":364,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"5707:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":8526,"src":"5707:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5707:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"5707:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":374,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":361,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"5684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":362,"modifierName":{"argumentTypes":null,"id":360,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"5665:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"5665:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"name":"_signer","nodeType":"VariableDeclaration","scope":374,"src":"5586:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"5586:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":356,"name":"_report","nodeType":"VariableDeclaration","scope":374,"src":"5603:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":355,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":358,"name":"_signature","nodeType":"VariableDeclaration","scope":374,"src":"5625:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":357,"name":"bytes","nodeType":"ElementaryTypeName","src":"5625:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5585:64:0"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"5697:0:0"},"scope":826,"src":"5568:207:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":392,"nodeType":"Block","src":"6119:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":387,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"6153:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":388,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6160:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":389,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"6172:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":384,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"6129:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":8732,"src":"6129:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6129:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"6129:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":393,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":381,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6103:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":382,"modifierName":{"argumentTypes":null,"id":380,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"6086:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6086:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"name":"_custodian","nodeType":"VariableDeclaration","scope":393,"src":"6037:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"6037:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":378,"name":"_amount","nodeType":"VariableDeclaration","scope":393,"src":"6057:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint","nodeType":"ElementaryTypeName","src":"6057:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6036:34:0"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"6119:0:0"},"scope":826,"src":"6020:167:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":409,"nodeType":"Block","src":"6460:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":405,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"6495:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":406,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":402,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"6470:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":8785,"src":"6470:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6470:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"6470:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":410,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":398,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"6444:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6444:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":400,"modifierName":{"argumentTypes":null,"id":397,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6432:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6432:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"name":"_amount","nodeType":"VariableDeclaration","scope":410,"src":"6403:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint","nodeType":"ElementaryTypeName","src":"6403:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6402:14:0"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"6460:0:0"},"scope":826,"src":"6385:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":423,"nodeType":"Block","src":"6725:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":420,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"6757:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":417,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"6735:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":8630,"src":"6735:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6735:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"6735:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":424,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"6713:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6713:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":415,"modifierName":{"argumentTypes":null,"id":412,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6704:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6704:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"6694:2:0"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"6725:0:0"},"scope":826,"src":"6680:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":437,"nodeType":"Block","src":"6899:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":434,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"6932:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":431,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"6909:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":8671,"src":"6909:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6909:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"6909:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":438,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":427,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"6887:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6887:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":429,"modifierName":{"argumentTypes":null,"id":426,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"6872:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6872:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"6862:2:0"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"6899:0:0"},"scope":826,"src":"6847:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":463,"nodeType":"Block","src":"7404:89:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":457,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"7455:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":458,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7462:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":459,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"7471:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":460,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7481:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":454,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"7414:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4187,"src":"7414:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,bytes memory)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7414:72:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"ExpressionStatement","src":"7414:72:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":464,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"7357:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7357:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":449,"modifierName":{"argumentTypes":null,"id":446,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"7342:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7342:26:0"},{"arguments":[{"argumentTypes":null,"id":451,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7391:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":452,"modifierName":{"argumentTypes":null,"id":450,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7373:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"7373:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"name":"_taskId","nodeType":"VariableDeclaration","scope":464,"src":"7253:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7253:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":442,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":464,"src":"7278:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":441,"name":"uint64","nodeType":"ElementaryTypeName","src":"7278:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":444,"name":"_sig","nodeType":"VariableDeclaration","scope":464,"src":"7303:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":443,"name":"bytes","nodeType":"ElementaryTypeName","src":"7303:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"7243:83:0"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"7404:0:0"},"scope":826,"src":"7207:286:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"8546:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":493,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"8590:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":494,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"8597:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":495,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"8606:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":496,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8620:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":497,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"8631:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":498,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"8664:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":499,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8687:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":500,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8721:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":501,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"8731:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":490,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"8556:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4557,"src":"8556:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8556:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"8556:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":505,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":483,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"8499:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8499:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":485,"modifierName":{"argumentTypes":null,"id":482,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"8484:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8484:26:0"},{"arguments":[{"argumentTypes":null,"id":487,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"8533:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":488,"modifierName":{"argumentTypes":null,"id":486,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"8515:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8515:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"name":"_taskId","nodeType":"VariableDeclaration","scope":505,"src":"8207:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8207:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":468,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":505,"src":"8232:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8232:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":470,"name":"_codeHash","nodeType":"VariableDeclaration","scope":505,"src":"8262:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8262:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":472,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":505,"src":"8289:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8289:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":474,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":505,"src":"8326:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":473,"name":"bytes","nodeType":"ElementaryTypeName","src":"8326:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":476,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":505,"src":"8370:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"8370:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":478,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":505,"src":"8420:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":477,"name":"uint64","nodeType":"ElementaryTypeName","src":"8420:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":480,"name":"_sig","nodeType":"VariableDeclaration","scope":505,"src":"8445:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":479,"name":"bytes","nodeType":"ElementaryTypeName","src":"8445:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8197:271:0"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[],"src":"8546:0:0"},"scope":826,"src":"8168:575:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":515,"nodeType":"Block","src":"8945:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":512,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"9006:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":510,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"8962:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3741_$","typeString":"type(library SecretContractImpl)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"8962:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2404_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8962:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":509,"id":514,"nodeType":"Return","src":"8955:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":516,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"8899:2:0"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"name":"","nodeType":"VariableDeclaration","scope":516,"src":"8935:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint","nodeType":"ElementaryTypeName","src":"8935:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8934:6:0"},"scope":826,"src":"8870:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":533,"nodeType":"Block","src":"9348:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":528,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"9415:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":529,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"9422:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":530,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9430:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":526,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"9365:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3741_$","typeString":"type(library SecretContractImpl)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3740,"src":"9365:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2404_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9365:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":525,"id":532,"nodeType":"Return","src":"9358:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":534,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"name":"_start","nodeType":"VariableDeclaration","scope":534,"src":"9268:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint","nodeType":"ElementaryTypeName","src":"9268:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":520,"name":"_stop","nodeType":"VariableDeclaration","scope":534,"src":"9281:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint","nodeType":"ElementaryTypeName","src":"9281:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9267:25:0"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"name":"","nodeType":"VariableDeclaration","scope":534,"src":"9326:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":523,"length":null,"nodeType":"ArrayTypeName","src":"9326:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"9325:18:0"},"scope":826,"src":"9232:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":558,"nodeType":"Block","src":"10480:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":550,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"10530:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":551,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"10537:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":552,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"10550:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":553,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"10561:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":554,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"10569:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":555,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"10588:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":547,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"10490:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4034,"src":"10490:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint256,uint256,uint256,uint256)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10490:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"ExpressionStatement","src":"10490:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":559,"implemented":true,"kind":"function","modifiers":[],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":559,"src":"10341:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10341:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":538,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":559,"src":"10370:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint","nodeType":"ElementaryTypeName","src":"10370:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":540,"name":"_gasPx","nodeType":"VariableDeclaration","scope":559,"src":"10394:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":539,"name":"uint","nodeType":"ElementaryTypeName","src":"10394:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":542,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":559,"src":"10415:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint","nodeType":"ElementaryTypeName","src":"10415:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":544,"name":"_nonce","nodeType":"VariableDeclaration","scope":559,"src":"10447:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint","nodeType":"ElementaryTypeName","src":"10447:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10331:133:0"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[],"src":"10480:0:0"},"scope":826,"src":"10296:306:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":580,"nodeType":"Block","src":"11330:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":573,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"11370:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":574,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"11377:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":575,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"11390:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":576,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"11401:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":577,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"11409:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":570,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"11340:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4792,"src":"11340:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint256,uint256,uint256)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11340:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":579,"nodeType":"ExpressionStatement","src":"11340:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":581,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":581,"src":"11212:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11212:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":563,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":581,"src":"11241:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":562,"name":"uint","nodeType":"ElementaryTypeName","src":"11241:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":565,"name":"_gasPx","nodeType":"VariableDeclaration","scope":581,"src":"11265:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint","nodeType":"ElementaryTypeName","src":"11265:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":567,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":581,"src":"11286:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint","nodeType":"ElementaryTypeName","src":"11286:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11202:112:0"},"returnParameters":{"id":569,"nodeType":"ParameterList","parameters":[],"src":"11330:0:0"},"scope":826,"src":"11177:257:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":605,"nodeType":"Block","src":"12230:109:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":598,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"12271:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":599,"name":"_inputsHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"12278:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"argumentTypes":null,"id":600,"name":"_gasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"12293:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"argumentTypes":null,"id":601,"name":"_gasPxs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"12305:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"argumentTypes":null,"id":602,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"12314:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":595,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"12240:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordsImpl","nodeType":"MemberAccess","referencedDeclaration":5630,"src":"12240:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32[] memory,uint256[] memory,uint256[] memory,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12240:92:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"ExpressionStatement","src":"12240:92:0"}]},"documentation":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for\\ntransferring task fee from sender to contract, generating the unique taskId, saving the block number\\nwhen the record was mined, and incrementing the user\'s task deployment counter nonce.\\n    * @param _inputsHashes Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimits ENG gas limit\\n@param _gasPxs ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":606,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecords","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"name":"_inputsHashes","nodeType":"VariableDeclaration","scope":606,"src":"12081:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12081:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":583,"length":null,"nodeType":"ArrayTypeName","src":"12081:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":587,"name":"_gasLimits","nodeType":"VariableDeclaration","scope":606,"src":"12121:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":585,"name":"uint","nodeType":"ElementaryTypeName","src":"12121:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":586,"length":null,"nodeType":"ArrayTypeName","src":"12121:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":590,"name":"_gasPxs","nodeType":"VariableDeclaration","scope":606,"src":"12155:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":588,"name":"uint","nodeType":"ElementaryTypeName","src":"12155:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":589,"length":null,"nodeType":"ArrayTypeName","src":"12155:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":592,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":606,"src":"12186:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint","nodeType":"ElementaryTypeName","src":"12186:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12071:143:0"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[],"src":"12230:0:0"},"scope":826,"src":"12045:294:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":646,"nodeType":"Block","src":"13306:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":635,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"13343:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":636,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"13350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":637,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"13359:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":638,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"13368:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":639,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"13385:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":640,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"13398:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":641,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"13433:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":642,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"13467:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":643,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"13477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":632,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"13316:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5432,"src":"13316:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13316:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"13316:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":647,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":625,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"13260:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13260:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":627,"modifierName":{"argumentTypes":null,"id":624,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"13245:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13245:26:0"},{"arguments":[{"argumentTypes":null,"id":629,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"13293:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":630,"modifierName":{"argumentTypes":null,"id":628,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"13276:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13276:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"name":"_scAddr","nodeType":"VariableDeclaration","scope":647,"src":"12975:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12975:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":610,"name":"_taskId","nodeType":"VariableDeclaration","scope":647,"src":"13000:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13000:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":612,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":647,"src":"13025:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13025:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":614,"name":"_outputHash","nodeType":"VariableDeclaration","scope":647,"src":"13058:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13058:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":616,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":647,"src":"13087:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":615,"name":"bytes","nodeType":"ElementaryTypeName","src":"13087:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":618,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":647,"src":"13131:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"13131:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":620,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":647,"src":"13181:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":619,"name":"uint64","nodeType":"ElementaryTypeName","src":"13181:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":622,"name":"_sig","nodeType":"VariableDeclaration","scope":647,"src":"13206:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":621,"name":"bytes","nodeType":"ElementaryTypeName","src":"13206:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"12965:264:0"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[],"src":"13306:0:0"},"scope":826,"src":"12943:546:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":678,"nodeType":"Block","src":"14120:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":670,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"14161:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":671,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"14168:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":672,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"14177:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":673,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"14186:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":674,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"14199:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":675,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"14209:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":667,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"14130:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4975,"src":"14130:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14130:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"14130:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":679,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":660,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"14074:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14074:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":662,"modifierName":{"argumentTypes":null,"id":659,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"14059:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14059:26:0"},{"arguments":[{"argumentTypes":null,"id":664,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"14107:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":665,"modifierName":{"argumentTypes":null,"id":663,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"14090:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14090:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"name":"_scAddr","nodeType":"VariableDeclaration","scope":679,"src":"13916:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13916:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":651,"name":"_taskId","nodeType":"VariableDeclaration","scope":679,"src":"13941:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13941:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":653,"name":"_outputHash","nodeType":"VariableDeclaration","scope":679,"src":"13966:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13966:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":655,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":679,"src":"13995:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":654,"name":"uint64","nodeType":"ElementaryTypeName","src":"13995:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":657,"name":"_sig","nodeType":"VariableDeclaration","scope":679,"src":"14020:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":656,"name":"bytes","nodeType":"ElementaryTypeName","src":"14020:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13906:137:0"},"returnParameters":{"id":666,"nodeType":"ParameterList","parameters":[],"src":"14120:0:0"},"scope":826,"src":"13880:341:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":694,"nodeType":"Block","src":"14472:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":690,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"14513:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":691,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"14520:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":687,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"14482:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5990_$","typeString":"type(library TaskImpl)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":5989,"src":"14482:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14482:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":693,"nodeType":"ExpressionStatement","src":"14482:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":695,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":684,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"14459:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":685,"modifierName":{"argumentTypes":null,"id":683,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"14447:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"14447:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"name":"_taskId","nodeType":"VariableDeclaration","scope":695,"src":"14415:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14415:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"14414:17:0"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[],"src":"14472:0:0"},"scope":826,"src":"14388:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":717,"nodeType":"Block","src":"14995:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":711,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"15040:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":712,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"15047:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":713,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"15061:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":714,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"15068:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":708,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"15005:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3103_$","typeString":"type(library PrincipalImpl)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":2932,"src":"15005:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2404_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15005:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"ExpressionStatement","src":"15005:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":718,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":704,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12869,"src":"14979:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14979:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":706,"modifierName":{"argumentTypes":null,"id":703,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"14962:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14962:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":718,"src":"14897:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint","nodeType":"ElementaryTypeName","src":"14897:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":699,"name":"_seed","nodeType":"VariableDeclaration","scope":718,"src":"14916:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint","nodeType":"ElementaryTypeName","src":"14916:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":701,"name":"_sig","nodeType":"VariableDeclaration","scope":718,"src":"14928:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":700,"name":"bytes","nodeType":"ElementaryTypeName","src":"14928:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14896:50:0"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[],"src":"14995:0:0"},"scope":826,"src":"14871:209:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":735,"nodeType":"Block","src":"15316:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":731,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"15368:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":732,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"15375:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":729,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"15333:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3103_$","typeString":"type(library PrincipalImpl)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"15333:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2404_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15333:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":728,"id":734,"nodeType":"Return","src":"15326:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":736,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":736,"src":"15227:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":719,"name":"uint","nodeType":"ElementaryTypeName","src":"15227:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15226:19:0"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"name":"","nodeType":"VariableDeclaration","scope":736,"src":"15279:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"15279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":723,"length":null,"nodeType":"ArrayTypeName","src":"15279:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":727,"name":"","nodeType":"VariableDeclaration","scope":736,"src":"15297:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":725,"name":"uint","nodeType":"ElementaryTypeName","src":"15297:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":726,"length":null,"nodeType":"ArrayTypeName","src":"15297:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15278:33:0"},"scope":826,"src":"15201:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":749,"nodeType":"Block","src":"15657:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":745,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"15710:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":746,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"15717:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":743,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"15674:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":8905,"src":"15674:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2404_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15674:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":742,"id":748,"nodeType":"Return","src":"15667:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":750,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":750,"src":"15599:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint","nodeType":"ElementaryTypeName","src":"15599:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15598:19:0"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"name":"","nodeType":"VariableDeclaration","scope":750,"src":"15651:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint","nodeType":"ElementaryTypeName","src":"15651:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15650:6:0"},"scope":826,"src":"15570:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":771,"nodeType":"Block","src":"16143:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":767,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"16192:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":768,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"16199:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":765,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"16160:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":8942,"src":"16160:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2404_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16160:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":764,"id":770,"nodeType":"Return","src":"16153:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":772,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":772,"src":"16046:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint","nodeType":"ElementaryTypeName","src":"16046:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16045:19:0"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"name":"","nodeType":"VariableDeclaration","scope":772,"src":"16098:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint","nodeType":"ElementaryTypeName","src":"16098:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":757,"name":"","nodeType":"VariableDeclaration","scope":772,"src":"16104:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint","nodeType":"ElementaryTypeName","src":"16104:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":760,"name":"","nodeType":"VariableDeclaration","scope":772,"src":"16110:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":759,"length":null,"nodeType":"ArrayTypeName","src":"16110:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":763,"name":"","nodeType":"VariableDeclaration","scope":772,"src":"16128:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":761,"name":"uint","nodeType":"ElementaryTypeName","src":"16128:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":762,"length":null,"nodeType":"ArrayTypeName","src":"16128:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"16097:45:0"},"scope":826,"src":"16021:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":789,"nodeType":"Block","src":"16671:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":784,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"16719:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":785,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"16726:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":786,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"16740:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":782,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"16688:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":9206,"src":"16688:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2404_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16688:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":781,"id":788,"nodeType":"Return","src":"16681:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":790,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":790,"src":"16580:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint","nodeType":"ElementaryTypeName","src":"16580:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":776,"name":"_scAddr","nodeType":"VariableDeclaration","scope":790,"src":"16599:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16599:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"16579:36:0"},"returnParameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"name":"","nodeType":"VariableDeclaration","scope":790,"src":"16649:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"16649:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":779,"length":null,"nodeType":"ArrayTypeName","src":"16649:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"16648:18:0"},"scope":826,"src":"16556:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":808,"nodeType":"Block","src":"17025:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":804,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"17068:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":805,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"17075:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2404_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":802,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"17042:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":8563,"src":"17042:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2404_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17042:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":801,"id":807,"nodeType":"Return","src":"17035:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":809,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":795,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"16973:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":796,"modifierName":{"argumentTypes":null,"id":794,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"16956:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"16956:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"name":"_custodian","nodeType":"VariableDeclaration","scope":809,"src":"16912:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"16912:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16911:20:0"},"returnParameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"name":"","nodeType":"VariableDeclaration","scope":809,"src":"16998:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"16998:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":800,"name":"","nodeType":"VariableDeclaration","scope":809,"src":"17007:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":799,"name":"bytes","nodeType":"ElementaryTypeName","src":"17007:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"16997:23:0"},"scope":826,"src":"16893:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":824,"nodeType":"Block","src":"17408:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":820,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"17454:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":821,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"17461:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":818,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"17425:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$9259_$","typeString":"type(library WorkersImpl)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":8589,"src":"17425:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17425:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":817,"id":823,"nodeType":"Return","src":"17418:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":825,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"name":"_data","nodeType":"VariableDeclaration","scope":825,"src":"17320:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":810,"name":"bytes","nodeType":"ElementaryTypeName","src":"17320:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":813,"name":"_signature","nodeType":"VariableDeclaration","scope":825,"src":"17340:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":812,"name":"bytes","nodeType":"ElementaryTypeName","src":"17340:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"17319:45:0"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"name":"","nodeType":"VariableDeclaration","scope":825,"src":"17398:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint","nodeType":"ElementaryTypeName","src":"17398:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17397:6:0"},"scope":826,"src":"17298:181:0","stateMutability":"view","superFunction":null,"visibility":"public"}],"scope":827,"src":"767:16714:0"}],"src":"0:17482:0"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{},"links":{"WorkersImpl":"0x343C85DedF2044338f87C72D070B8c32D212ac8f","PrincipalImpl":"0xff15d03C2106614e378C13BD55E211cdF17Ec185","TaskImpl":"0xdE7323c0c405d467E660b508B15Fb6C5F2c9dD44","SecretContractImpl":"0x749f74d370fe3852B60d72D4B23550C376FBefc2"},"address":"0xD572d57EAFd44ee4332708a1E69FB0F5306fABFD","transactionHash":"0x6f3fb7d50cdcb08646e40c7764d07e1566357cda98493a7076ab4ae2c4612f57"}},"schemaVersion":"3.0.10","updatedAt":"2019-09-11T20:58:17.957Z","devdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_optionalEthereumContractAddress":"Output state hash","_optionalEthereumData":"Output state hash","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_stateDeltaHash":"Input state delta hash","_taskId":"Unique taskId"}},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_taskId":"Unique taskId"}},"countSecretContracts()":{"return":"Number of deployed secret contracts"},"createDeploymentTaskRecord(bytes32,uint256,uint256,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash","_nonce":"Locally-computed nonce value for this deployment"}},"createTaskRecord(bytes32,uint256,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"createTaskRecords(bytes32[],uint256[],uint256[],uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimits":"ENG gas limit","_gasPxs":"ENG gas price in grains format (10 ** 8)","_inputsHashes":"Hashes of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_initStateDeltaHash":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumContractAddress":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumData":"Initial state delta hash as a result of the contract\'s constructor","_preCodeHash":"Predeployed bytecode hash","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deploySecretContractFailure(bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deposit(address,uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit","_custodian":"The worker\'s ETH address"}},"getActiveWorkers(uint256)":{"params":{"_blockNumber":"Block number"}},"getAllSecretContractAddresses()":{"return":"Array of secret contract addresses"},"getEpochSize()":{"return":"Epoch size"},"getFirstBlockNumber(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Block number"},"getReport(address)":{"params":{"_custodian":"The worker\'s custodian address"}},"getSecretContract(bytes32)":{"params":{"_scAddr":"Secret contract address"},"return":"SecretContract struct"},"getSecretContractAddresses(uint256,uint256)":{"params":{"_start":"Start of range","_stop":"End of range"},"return":"Subset of deployed secret contract addresses"},"getSigningAddress()":{"return":"Signing address"},"getTaskRecord(bytes32)":{"params":{"_taskId":"Unique identifier for a given task"},"return":"TaskRecord struct"},"getUserTaskDeployments(address)":{"params":{"_sender":"Task sender\'s ethereum address"},"return":"Current number for task deployments for user"},"getWorker(address)":{"params":{"_worker":"Worker\'s ethereum address"},"return":"Worker struct"},"getWorkerFromSigningAddress(address)":{"params":{"_signer":"Worker\'s signing address"},"return":"Ethereum addressWorker struct"},"getWorkerGroup(uint256,bytes32)":{"params":{"_blockNumber":"Block number the task record was mined","_scAddr":"Secret contract address"},"return":"Selected workers\' addresses"},"getWorkerParams(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes"},"getWorkersParams()":{"return":"Array of WorkersParams structs"},"register(address,bytes,bytes)":{"params":{"_report":"The RLP encoded report returned by the IAS","_signature":"Signature","_signer":"The signer address, derived from the enclave public key"}},"returnFeesForTask(bytes32)":{"params":{"_taskId":"Unique taskId"}},"setWorkersParams(uint256,uint256,bytes)":{"params":{"_blockNumber":"Block number principal node is attempting to set worker params","_seed":"The random integer generated by the enclave","_sig":"Principal node\'s signature"}},"verifyReport(bytes,bytes)":{"params":{"_data":"The report itself","_signature":"The signature of the report"}},"withdraw(uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit"}}}},"userdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee."},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"notice":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure."},"countSecretContracts()":{"notice":"Check if secret contract has been deployed"},"createDeploymentTaskRecord(bytes32,uint256,uint256,uint256,uint256)":{"notice":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid."},"createTaskRecord(bytes32,uint256,uint256,uint256)":{"notice":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"createTaskRecords(bytes32[],uint256[],uint256[],uint256)":{"notice":"Create task records for tasks (either contract deployment or regular tasks). This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deploySecretContractFailure(bytes32,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deposit(address,uint256)":{"notice":"Deposits ENG stake into contract from worker. Worker must be registered to do so."},"getActiveWorkers(uint256)":{"notice":"Get active workers before a certain block number"},"getAllSecretContractAddresses()":{"notice":"Get all secret contract addresses"},"getEpochSize()":{"notice":"Get the epoch block size"},"getFirstBlockNumber(uint256)":{"notice":"Get the first block number of an epoch that a given block number belongs to"},"getReport(address)":{"notice":"The RLP encoded report returned by the IAS server"},"getSecretContract(bytes32)":{"notice":"Get a SecretContract struct given a particular secret contract address"},"getSecretContractAddresses(uint256,uint256)":{"notice":"Get deployed secret contract addresses within a range"},"getSigningAddress()":{"notice":"Get signing address of calling worker"},"getTaskRecord(bytes32)":{"notice":"Get a TaskRecord struct given a particular task\'s ID"},"getUserTaskDeployments(address)":{"notice":"Get the current number/index (used as unique nonce value) of task deployments for a given user user"},"getWorker(address)":{"notice":"Get Worker struct from a given worker\'s ethereum address"},"getWorkerFromSigningAddress(address)":{"notice":"Get Worker struct from a given worker\'s signing address"},"getWorkerGroup(uint256,bytes32)":{"notice":"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address."},"getWorkerParams(uint256)":{"notice":"Get worker params for an epoch given a particular block number"},"getWorkersParams()":{"notice":"Get epoch-based history of worker params information"},"login()":{"notice":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process."},"logout()":{"notice":"Logout worker. Worker must be logged in to do so."},"register(address,bytes,bytes)":{"notice":"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks."},"returnFeesForTask(bytes32)":{"notice":"Return the task fee to the task creator when too many blocks have elapsed without task resolution."},"setWorkersParams(uint256,uint256,bytes)":{"notice":"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node"},"verifyReport(bytes,bytes)":{"notice":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate."},"withdraw(uint256)":{"notice":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so."}}}}')},function(e){e.exports=JSON.parse('{"contractName":"EnigmaToken","abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"INITIAL_SUPPLY","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.0+commit.1d4f565a\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_from\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"INITIAL_SUPPLY\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"details\\":\\"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. \\",\\"methods\\":{\\"approve(address,uint256)\\":{\\"details\\":\\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\",\\"params\\":{\\"_spender\\":\\"The address which will spend the funds.\\",\\"_value\\":\\"The amount of tokens to be spent.\\"}},\\"balanceOf(address)\\":{\\"details\\":\\"Gets the balance of the specified address.\\",\\"params\\":{\\"owner\\":\\"The address to query the balance of.\\"},\\"return\\":\\"An uint256 representing the amount owned by the passed address.\\"},\\"constructor\\":{\\"details\\":\\"EnigmaToken Constructor Runs only on initial contract creation.\\"},\\"decimals()\\":{\\"return\\":\\"the number of decimals of the token.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"spender\\":\\"The address which will spend the funds.\\",\\"subtractedValue\\":\\"The amount of tokens to decrease the allowance by.\\"}},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"addedValue\\":\\"The amount of tokens to increase the allowance by.\\",\\"spender\\":\\"The address which will spend the funds.\\"}},\\"name()\\":{\\"return\\":\\"the name of the token.\\"},\\"symbol()\\":{\\"return\\":\\"the symbol of the token.\\"},\\"totalSupply()\\":{\\"details\\":\\"Total number of tokens in existence\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"Transfer token for a specified address when not paused\\",\\"params\\":{\\"_to\\":\\"The address to transfer to.\\",\\"_value\\":\\"The amount to be transferred.\\"}},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"Transfer tokens from one address to another when not paused\\",\\"params\\":{\\"_from\\":\\"address The address which you want to send tokens from\\",\\"_to\\":\\"address The address which you want to transfer to\\",\\"_value\\":\\"uint256 the amount of tokens to be transferred\\"}}},\\"title\\":\\"Enigma Token\\"},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":\\"EnigmaToken\\"},\\"evmVersion\\":\\"byzantium\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol\\":{\\"keccak256\\":\\"0x1d072d408420008c3d39b1006b9adbbe472f55fc314a8eb80d9861edfeb54c73\\",\\"urls\\":[\\"bzzr://9ec40fae3d143258454c5d7c25811f7969f1ef64abbf88ab96d753d6322906a4\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\":{\\"keccak256\\":\\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\\",\\"urls\\":[\\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\":{\\"keccak256\\":\\"0xe195405e9993d575173cdb5dd408db7459a026b9a98085c1a3b676f020f46584\\",\\"urls\\":[\\"bzzr://4463a0d4f49767f59c02f2a987b90d48e0d31b3ed3424f3e743496f102f96044\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\":{\\"keccak256\\":\\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\\",\\"urls\\":[\\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b50604080518082018252600681527f456e69676d6100000000000000000000000000000000000000000000000000006020808301918252835180850190945260038085527f454e47000000000000000000000000000000000000000000000000000000000091850191909152825192939260089261008e92916101aa565b5081516100a29060049060208501906101aa565b506005805460ff191660ff92909216919091179055506100d490503366354a6ba7a180006401000000006100d9810204565b610245565b600160a060020a03821615156100ee57600080fd5b600254610108908264010000000061071b61019182021704565b600255600160a060020a03821660009081526020819052604090205461013b908264010000000061071b61019182021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156101a357600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101eb57805160ff1916838001178555610218565b82800160010185558215610218579182015b828111156102185782518255916020019190600101906101fd565b50610224929150610228565b5090565b61024291905b80821115610224576000815560010161022e565b90565b61087c806102546000396000f3fe6080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461019557806323b872dd146101bc5780632ff2e9dc146101ff578063313ce56714610214578063395093511461023f57806370a082311461027857806395d89b41146102ab578063a457c2d7146102c0578063a9059cbb146102f9578063dd62ed3e14610332575b600080fd5b3480156100ca57600080fd5b506100d361036d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b506101816004803603604081101561016b57600080fd5b50600160a060020a038135169060200135610403565b604080519115158252519081900360200190f35b3480156101a157600080fd5b506101aa610416565b60408051918252519081900360200190f35b3480156101c857600080fd5b50610181600480360360608110156101df57600080fd5b50600160a060020a0381358116916020810135909116906040013561041c565b34801561020b57600080fd5b506101aa610431565b34801561022057600080fd5b5061022961043c565b6040805160ff9092168252519081900360200190f35b34801561024b57600080fd5b506101816004803603604081101561026257600080fd5b50600160a060020a038135169060200135610445565b34801561028457600080fd5b506101aa6004803603602081101561029b57600080fd5b5035600160a060020a03166104f5565b3480156102b757600080fd5b506100d3610510565b3480156102cc57600080fd5b50610181600480360360408110156102e357600080fd5b50600160a060020a038135169060200135610571565b34801561030557600080fd5b506101816004803603604081101561031c57600080fd5b50600160a060020a0381351690602001356105bc565b34801561033e57600080fd5b506101aa6004803603604081101561035557600080fd5b50600160a060020a03813581169160200135166105c8565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b600061040f83836105d4565b9392505050565b60025490565b6000610429848484610652565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b6000600160a060020a038316151561045c57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61071b16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b6000600160a060020a038316151561058857600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61072d16565b600061040f8383610742565b600061040f8383610758565b6000600160a060020a03831615156105eb57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600160a060020a0383166000908152600160209081526040808320338452909152812054610686908363ffffffff61072d16565b600160a060020a03851660009081526001602090815260408083203384529091529020556106b5848484610783565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561040f57600080fd5b60008282111561073c57600080fd5b50900390565b600061074f338484610783565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a038216151561079857600080fd5b600160a060020a0383166000908152602081905260409020546107c1908263ffffffff61072d16565b600160a060020a0380851660009081526020819052604080822093909355908416815220546107f6908263ffffffff61071b16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a723058202756d9a404d0e1e7e8b18a0d3d035998919ea3f4f578e6ae8a9d853e1d4a350a0029","deployedBytecode":"0x6080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461019557806323b872dd146101bc5780632ff2e9dc146101ff578063313ce56714610214578063395093511461023f57806370a082311461027857806395d89b41146102ab578063a457c2d7146102c0578063a9059cbb146102f9578063dd62ed3e14610332575b600080fd5b3480156100ca57600080fd5b506100d361036d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b506101816004803603604081101561016b57600080fd5b50600160a060020a038135169060200135610403565b604080519115158252519081900360200190f35b3480156101a157600080fd5b506101aa610416565b60408051918252519081900360200190f35b3480156101c857600080fd5b50610181600480360360608110156101df57600080fd5b50600160a060020a0381358116916020810135909116906040013561041c565b34801561020b57600080fd5b506101aa610431565b34801561022057600080fd5b5061022961043c565b6040805160ff9092168252519081900360200190f35b34801561024b57600080fd5b506101816004803603604081101561026257600080fd5b50600160a060020a038135169060200135610445565b34801561028457600080fd5b506101aa6004803603602081101561029b57600080fd5b5035600160a060020a03166104f5565b3480156102b757600080fd5b506100d3610510565b3480156102cc57600080fd5b50610181600480360360408110156102e357600080fd5b50600160a060020a038135169060200135610571565b34801561030557600080fd5b506101816004803603604081101561031c57600080fd5b50600160a060020a0381351690602001356105bc565b34801561033e57600080fd5b506101aa6004803603604081101561035557600080fd5b50600160a060020a03813581169160200135166105c8565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b600061040f83836105d4565b9392505050565b60025490565b6000610429848484610652565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b6000600160a060020a038316151561045c57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61071b16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b6000600160a060020a038316151561058857600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61072d16565b600061040f8383610742565b600061040f8383610758565b6000600160a060020a03831615156105eb57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600160a060020a0383166000908152600160209081526040808320338452909152812054610686908363ffffffff61072d16565b600160a060020a03851660009081526001602090815260408083203384529091529020556106b5848484610783565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561040f57600080fd5b60008282111561073c57600080fd5b50900390565b600061074f338484610783565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a038216151561079857600080fd5b600160a060020a0383166000908152602081905260409020546107c1908263ffffffff61072d16565b600160a060020a0380851660009081526020819052604080822093909355908416815220546107f6908263ffffffff61071b16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a723058202756d9a404d0e1e7e8b18a0d3d035998919ea3f4f578e6ae8a9d853e1d4a350a0029","sourceMap":"660:1642:2:-;;;913:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;405:163:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:12;;405:163;;;965:1:2;;493:12:28;;405:163;493:12;:::i;:::-;-1:-1:-1;515:16:28;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:28;:20;;-1:-1:-1;;541:20:28;;;;;;;;;;;;-1:-1:-1;978:33:2;;-1:-1:-1;984:10:2;753:17;978:5;;;;:33;:::i;:::-;660:1642;;6198:263:27;-1:-1:-1;;;;;6272:21:27;;;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:16;;;;;;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:27;;:9;:18;;;;;;;;;;;:29;;6397:5;6374:22;;;;;;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:27;;:9;:18;;;;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;:9;;6418:36;;;;;;;;;;6198:263;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:26:o;660:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;660:1642:2;;;-1:-1:-1;660:1642:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","deployedSourceMap":"660:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;628:81:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:128:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2026:128:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2026:128:2;;;;;;;;;;;;;;;;;;;;;;;;;;;936:89:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;936:89:27;;;;;;;;;;;;;;;;;;;;1620:150:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1620:150:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1620:150:2;;;;;;;;;;;;;;;;;;712:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;712:58:2;;;;930:81:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:81:28;;;;;;;;;;;;;;;;;;;;;;;4233:317:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4233:317:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:27;;;;;;;;;1234:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1234:104:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:27;-1:-1:-1;;;;;1234:104:27;;;771:85:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;771:85:28;;;;5058:327:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5058:327:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:27;;;;;;;;;1200:120:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1200:120:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1200:120:2;;;;;;;;;2160:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2160:139:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2160:139:2;;;;;;;;;;;628:81:28;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2026:128:2:-;2093:4;2116:31;2130:8;2140:6;2116:13;:31::i;:::-;2109:38;2026:128;-1:-1:-1;;;2026:128:2:o;936:89:27:-;1006:12;;936:89;:::o;1620:150:2:-;1702:4;1725:38;1744:5;1751:3;1756:6;1725:18;:38::i;:::-;1718:45;1620:150;-1:-1:-1;;;;1620:150:2:o;712:58::-;753:17;712:58;:::o;930:81:28:-;995:9;;;;930:81;:::o;4233:317:27:-;4313:4;-1:-1:-1;;;;;4337:21:27;;;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:27;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:27;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;4462:60;;;;;;;;;;;-1:-1:-1;4539:4:27;4233:317;;;;:::o;1234:104::-;-1:-1:-1;;;;;1315:16:27;1289:7;1315:16;;;;;;;;;;;;1234:104::o;771:85:28:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;5058:327:27;5143:4;-1:-1:-1;;;;;5167:21:27;;;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:27;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1200:120:2:-;1263:4;1286:27;1301:3;1306:6;1286:14;:27::i;2160:139::-;2234:7;2260:32;2276:6;2283:8;2260:15;:32::i;2735:238:27:-;2800:4;-1:-1:-1;;;;;2824:21:27;;;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:27;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;2909:36;;;;;;;;;;;-1:-1:-1;2962:4:27;2735:238;;;;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:27;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:27;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:27;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;;;;;;;;;;;;-1:-1:-1;3719:4:27;3436:294;;;;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;1205:145;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:26;;;1205:145::o;1962:137:27:-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;:::-;-1:-1:-1;2088:4:27;1962:137;;;;:::o;1669:129::-;-1:-1:-1;;;;;1767:15:27;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;5599:256::-;-1:-1:-1;;;;;5686:16:27;;;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:27;;:9;:15;;;;;;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:27;;;:9;:15;;;;;;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:27;;;:9;:13;;;;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o","source":"pragma solidity ^0.5.0;\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\";\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\";\\n\\n/**\\n * @title Enigma Token\\n * @dev ERC20 Enigma Token (ENG)\\n *\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\n * units referred to as \'Grains\'.\\n *\\n * ENG are displayed using 8 decimal places of precision.\\n *\\n * 1 ENG is equivalent to:\\n *   100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n *\\n * 150 million ENG (total supply) is equivalent to:\\n *   15000000000000000 == 150000000 * 10**8 == 1e17\\n *\\n * All initial ENG Grains are assigned to the creator of\\n * this contract.\\n *\\n */\\ncontract EnigmaToken is ERC20, ERC20Detailed {\\n\\n    uint256 public constant INITIAL_SUPPLY = 150000000 * 10**8;  // 150 million ENG specified in Grains\\n\\n    /**\\n    * @dev EnigmaToken Constructor\\n    * Runs only on initial contract creation.\\n    */\\n    constructor() public ERC20Detailed(\\"Enigma\\", \\"ENG\\", 8) {\\n        _mint(msg.sender, INITIAL_SUPPLY);\\n    }\\n\\n    /**\\n    * @dev Transfer token for a specified address when not paused\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\n        return super.transfer(_to, _value);\\n    }\\n\\n    /**\\n    * @dev Transfer tokens from one address to another when not paused\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint256 the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\n        return super.transferFrom(_from, _to, _value);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint256 _value) public returns (bool) {\\n        return super.approve(_spender, _value);\\n    }\\n\\n    function allowance(address _owner, address _spender) public view returns (uint256) {\\n        return super.allowance(_owner,_spender);\\n    }\\n\\n}","sourcePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","ast":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1835]},"id":1836,"nodeType":"SourceUnit","nodes":[{"id":1739,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1740,"nodeType":"ImportDirective","scope":1836,"sourceUnit":13349,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1741,"nodeType":"ImportDirective","scope":1836,"sourceUnit":13407,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1742,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":13348,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$13348","typeString":"contract ERC20"}},"id":1743,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1744,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":13406,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$13406","typeString":"contract ERC20Detailed"}},"id":1745,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[13348,13406,13475],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1835,"linearizedBaseContracts":[1835,13406,13348,13475],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1752,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1835,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1766,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13490,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1763,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1760,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13263,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1767,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1758,"modifierName":{"argumentTypes":null,"id":1754,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13406,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$13406_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1835,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1782,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1778,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1779,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1776,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12992,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1775,"id":1781,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"name":"_to","nodeType":"VariableDeclaration","scope":1783,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1771,"name":"_value","nodeType":"VariableDeclaration","scope":1783,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"name":"","nodeType":"VariableDeclaration","scope":1783,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1773,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1835,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12992,"visibility":"public"},{"body":{"id":1801,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1796,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1797,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1798,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1794,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":13077,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1793,"id":1800,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"name":"_from","nodeType":"VariableDeclaration","scope":1802,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1784,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1787,"name":"_to","nodeType":"VariableDeclaration","scope":1802,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1786,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1789,"name":"_value","nodeType":"VariableDeclaration","scope":1802,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"name":"","nodeType":"VariableDeclaration","scope":1802,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1791,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1835,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":13077,"visibility":"public"},{"body":{"id":1817,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1813,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1814,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1811,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":13028,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1810,"id":1816,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"name":"_spender","nodeType":"VariableDeclaration","scope":1818,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1806,"name":"_value","nodeType":"VariableDeclaration","scope":1818,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"name":"","nodeType":"VariableDeclaration","scope":1818,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1808,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1835,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":13028,"visibility":"public"},{"body":{"id":1833,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1829,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1830,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1827,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12973,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1826,"id":1832,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"name":"_owner","nodeType":"VariableDeclaration","scope":1834,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1819,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1822,"name":"_spender","nodeType":"VariableDeclaration","scope":1834,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"name":"","nodeType":"VariableDeclaration","scope":1834,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1835,"src":"2160:139:2","stateMutability":"view","superFunction":12973,"visibility":"public"}],"scope":1836,"src":"660:1642:2"}],"src":"0:2302:2"},"legacyAST":{"absolutePath":"/Users/adityapalepu/Startups/enigma/enigma-contract-internal/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1835]},"id":1836,"nodeType":"SourceUnit","nodes":[{"id":1739,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1740,"nodeType":"ImportDirective","scope":1836,"sourceUnit":13349,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1741,"nodeType":"ImportDirective","scope":1836,"sourceUnit":13407,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1742,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":13348,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$13348","typeString":"contract ERC20"}},"id":1743,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1744,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":13406,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$13406","typeString":"contract ERC20Detailed"}},"id":1745,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[13348,13406,13475],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1835,"linearizedBaseContracts":[1835,13406,13348,13475],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1752,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1835,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1766,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13490,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1763,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1760,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13263,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1767,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1758,"modifierName":{"argumentTypes":null,"id":1754,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13406,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$13406_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1835,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1782,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1778,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1779,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1776,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12992,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1775,"id":1781,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"name":"_to","nodeType":"VariableDeclaration","scope":1783,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1771,"name":"_value","nodeType":"VariableDeclaration","scope":1783,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"name":"","nodeType":"VariableDeclaration","scope":1783,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1773,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1835,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12992,"visibility":"public"},{"body":{"id":1801,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1796,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1797,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1798,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1794,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":13077,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1793,"id":1800,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"name":"_from","nodeType":"VariableDeclaration","scope":1802,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1784,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1787,"name":"_to","nodeType":"VariableDeclaration","scope":1802,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1786,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1789,"name":"_value","nodeType":"VariableDeclaration","scope":1802,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"name":"","nodeType":"VariableDeclaration","scope":1802,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1791,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1835,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":13077,"visibility":"public"},{"body":{"id":1817,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1813,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1814,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1811,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":13028,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1810,"id":1816,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"name":"_spender","nodeType":"VariableDeclaration","scope":1818,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1806,"name":"_value","nodeType":"VariableDeclaration","scope":1818,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"name":"","nodeType":"VariableDeclaration","scope":1818,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1808,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1835,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":13028,"visibility":"public"},{"body":{"id":1833,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1829,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1830,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1827,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12973,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1826,"id":1832,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"name":"_owner","nodeType":"VariableDeclaration","scope":1834,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1819,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1822,"name":"_spender","nodeType":"VariableDeclaration","scope":1834,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"name":"","nodeType":"VariableDeclaration","scope":1834,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1835,"src":"2160:139:2","stateMutability":"view","superFunction":12973,"visibility":"public"}],"scope":1836,"src":"660:1642:2"}],"src":"0:2302:2"},"compiler":{"name":"solc","version":"0.5.0+commit.1d4f565a.Emscripten.clang"},"networks":{"4447":{"events":{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}},"links":{},"address":"0x13E7eF4967C666C2fE0BB22A6487d937B8CEc5fd","transactionHash":"0xbcfb4286c8d6eefaef8d5b65367e58a98e27055e0b271f1a80229a28a7476fe8"}},"schemaVersion":"3.0.10","updatedAt":"2019-09-11T20:58:17.869Z","devdoc":{"details":"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. ","methods":{"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.","params":{"_spender":"The address which will spend the funds.","_value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"Gets the balance of the specified address.","params":{"owner":"The address to query the balance of."},"return":"An uint256 representing the amount owned by the passed address."},"constructor":{"details":"EnigmaToken Constructor Runs only on initial contract creation."},"decimals()":{"return":"the number of decimals of the token."},"decreaseAllowance(address,uint256)":{"details":"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"spender":"The address which will spend the funds.","subtractedValue":"The amount of tokens to decrease the allowance by."}},"increaseAllowance(address,uint256)":{"details":"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"addedValue":"The amount of tokens to increase the allowance by.","spender":"The address which will spend the funds."}},"name()":{"return":"the name of the token."},"symbol()":{"return":"the symbol of the token."},"totalSupply()":{"details":"Total number of tokens in existence"},"transfer(address,uint256)":{"details":"Transfer token for a specified address when not paused","params":{"_to":"The address to transfer to.","_value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another when not paused","params":{"_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}}},"title":"Enigma Token"},"userdoc":{"methods":{}}}')},function(e,t){e.exports=require("jayson/lib/client/browser")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("ethereumjs-abi")},function(e,t,n){e.exports=n(16)},function(e,t){e.exports=require("core-js/stable")},function(e,t){e.exports=require("regenerator-runtime/runtime")},function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"ERROR",function(){return h}),n.d(r,"DEPOSIT_TRANSACTION_HASH",function(){return v}),n.d(r,"DEPOSIT_CONFIRMATION",function(){return C}),n.d(r,"DEPOSIT_RECEIPT",function(){return E}),n.d(r,"WITHDRAW_TRANSACTION_HASH",function(){return V}),n.d(r,"WITHDRAW_CONFIRMATION",function(){return x}),n.d(r,"WITHDRAW_RECEIPT",function(){return L}),n.d(r,"LOGIN_TRANSACTION_HASH",function(){return N}),n.d(r,"LOGIN_CONFIRMATION",function(){return P}),n.d(r,"LOGIN_RECEIPT",function(){return w}),n.d(r,"LOGOUT_TRANSACTION_HASH",function(){return R}),n.d(r,"LOGOUT_CONFIRMATION",function(){return A}),n.d(r,"LOGOUT_RECEIPT",function(){return W}),n.d(r,"DEPLOY_SC_ADDR_RESULT",function(){return q}),n.d(r,"DEPLOY_SC_ETH_TRANSACTION_HASH",function(){return M}),n.d(r,"DEPLOY_SC_ETH_CONFIRMATION",function(){return F}),n.d(r,"DEPLOY_SC_ETH_RECEIPT",function(){return B}),n.d(r,"DEPLOY_SC_ENG_RECEIPT",function(){return H}),n.d(r,"CREATE_TASK",function(){return U}),n.d(r,"CREATE_TASK_INPUT",function(){return G}),n.d(r,"CREATE_TASK_RECORD_TRANSACTION_HASH",function(){return O}),n.d(r,"CREATE_TASK_RECORD_CONFIRMATION",function(){return z}),n.d(r,"CREATE_TASK_RECORD_RECEIPT",function(){return K}),n.d(r,"CREATE_TASK_RECORD",function(){return j}),n.d(r,"CREATE_TASK_RECORDS_TRANSACTION_HASH",function(){return Y}),n.d(r,"CREATE_TASK_RECORDS_CONFIRMATION",function(){return J}),n.d(r,"CREATE_TASK_RECORDS_RECEIPT",function(){return Z}),n.d(r,"CREATE_TASK_RECORDS",function(){return X}),n.d(r,"SEND_TASK_INPUT_RESULT",function(){return Q}),n.d(r,"POLL_TASK_STATUS_RESULT",function(){return ee}),n.d(r,"GET_TASK_RESULT_RESULT",function(){return te}),n.d(r,"DEPLOY_SECRET_CONTRACT_RESULT",function(){return ne}),n.d(r,"POLL_TASK_ETH_RESULT",function(){return re});n(14),n(15);var a=n(2),i=n.n(a),s=n(3),o=n.n(s),d=n(0),p=n.n(d),l=n(7),c=n.n(l),y=n(4),u=n(5),m=n.n(u);p.a.options.usePureJavaScript=!0;var f=c.a.ec;function _(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;d=g(d),e+=i.a.BigInt(d.length/2).toString(16).padStart(16,"0")+d}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function b(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;e=_(e+=i.a.BigInt(d.length).toString(16).padStart(16,"0"),d)}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function g(e){return"0x"==e.substring(0,2)?e.substring(2):e}var T={test:function(){return"hello2"},generateScAddr:function(e,t){return o.a.soliditySha3({t:"bytes",v:e},{t:"uint",v:t})},hash:function(e){var t=_("",e);return o.a.soliditySha3({t:"bytes",v:t})},principalHash:function(e,t,n,r){var a="";return a=b(a=_(a,[e,t]),[n,r]),o.a.soliditySha3({t:"bytes",v:a})},commitReceiptsHash:function(e,t,n,r,a,i,s,d,p){var l="";return l=_(l,[e]),l=_(l=b(l,[t]),[n]),l=_(l=b(l,[r,a,i]),[s,d,p]),o.a.soliditySha3({t:"bytes",v:l})},getDerivedKey:function(e,t){var n=new f("secp256k1");128==e.length&&(e="04"+e);var r=n.keyFromPrivate(t,"hex"),a=n.keyFromPublic(e,"hex").getPublic().mul(r.getPrivate()),i=2|(a.getY().isOdd()?1:0),s=a.getX(),o=y.Buffer.from([i]),d=s.toArrayLike(y.Buffer,"be",32),l=p.a.md.sha256.create();return l.update(o.toString("binary")),l.update(d.toString("binary")),l.digest().toHex()},encryptMessage:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:p.a.random.getBytesSync(12),r=p.a.util.hexToBytes(e),a=p.a.cipher.createCipher("AES-GCM",r);return a.start({iv:n}),a.update(p.a.util.createBuffer(t)),a.finish(),a.output.putBuffer(a.mode.tag).putBytes(n).toHex()},decryptMessage:function(e,t){var n=p.a.util.hexToBytes(e),r=y.Buffer.from(t,"hex"),a=p.a.util.createBuffer(r.slice(-12)),i=p.a.util.createBuffer(r.slice(-28,-12)),s=p.a.cipher.createDecipher("AES-GCM",n);if(s.start({iv:a,tag:i}),s.update(p.a.util.createBuffer(r.slice(0,-28))),s.finish())return s.output.toHex();throw new Error("decipher did not finish")},toGrains:function(e){return e*Math.pow(10,8)}};T.remove0x=g,T.hexToAscii=function(e){if("number"!=typeof e&&"string"!=typeof e)return"";e=e.toString().replace(/\s+/gi,"");for(var t=[],n=0;n<e.length;n+=2){var r=parseInt(e.substr(n,2),16);isNaN(r)||0===r||t.push(String.fromCharCode(r))}return t.join("")},T.sleep=function(e){return new Promise(function(t){return setTimeout(t,e)})},T.gzip=function(e){return new Promise(function(t,n){m.a.gzip(e,function(e,r){e?n(e):t(r)})})},T.gunzip=function(e){return new Promise(function(t,n){m.a.gunzip(e,function(e,r){e?n(e):t(r)})})};var D=T,S=n(8),I=n(9),k=n(1),$=n.n(k),h="error",v="depositTransactionHash",C="depositConfirmation",E="depositReceipt",V="withdrawTransactionHash",x="withdrawConfirmation",L="withdrawReceipt",N="loginTransactionHash",P="loginConfirmation",w="loginReceipt",R="logoutTransactionHash",A="logoutConfirmation",W="logoutReceipt",q="deploySCAddrResult",M="deploySCEthTransactionHash",F="deploySCEthConfirmation",B="deploySCEthReceipt",H="deploySCEngReceipt",U="createTask",G="createTaskInput",O="createTaskRecordTransactionHash",z="createTaskRecordConfirmation",K="createTaskRecordReceipt",j="createTaskRecord",Y="createTaskRecordsTransactionHash",J="createTaskRecordsConfirmation",Z="createTaskRecordsReceipt",X="createTaskRecords",Q="sendTaskInputResult",ee="pollTaskStatusResult",te="getTaskResultResult",ne="deploySecretContractResult",re="pollTaskETHResult";function ae(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function ie(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){ae(i,r,a,s,o,"next",e)}function o(e){ae(i,r,a,s,o,"throw",e)}s(void 0)})}}function se(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var oe=function(){function e(t,n,r,a,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.enigmaContract=n,this.tokenContract=r,this.txDefaults=a,this.enigma=i}var t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_;return t=e,(n=[{key:"findBySigningAddress",value:(_=ie(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorkerFromSigningAddress(t).call();case 2:return n=e.sent,e.abrupt("return",{account:n[0],status:parseInt(n[1][1]),report:n[1][2],balance:parseInt(n[1][3]),logs:n[1][4]});case 4:case"end":return e.stop()}},e,this)})),function(e){return _.apply(this,arguments)})},{key:"getWorkerStatus",value:(f=ie(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return n=e.sent,e.abrupt("return",parseInt(n.status));case 4:case"end":return e.stop()}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"isDeployed",value:(m=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getSecretContract(t).call();case 3:return e.t1=e.sent.status,e.t2=(0,e.t0)(e.t1),e.abrupt("return",1===e.t2);case 6:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"countSecretContracts",value:(u=ie(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.countSecretContracts().call();case 3:return e.t1=e.sent,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(){return u.apply(this,arguments)})},{key:"getSecretContractAddresses",value:(y=ie(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContractAddresses(t,n).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e,t){return y.apply(this,arguments)})},{key:"getAllSecretContractAddresses",value:(c=ie(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getAllSecretContractAddresses().call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(){return c.apply(this,arguments)})},{key:"getCodeHash",value:(l=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.codeHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"countStateDeltas",value:(p=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.stateDeltaHashes.length);case 3:case"end":return e.stop()}},e,this)})),function(e){return p.apply(this,arguments)})},{key:"getStateDeltaHash",value:(d=ie(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes[e.t0]);case 4:case"end":return e.stop()}},e,this)})),function(e,t){return d.apply(this,arguments)})},{key:"getStateDeltaHashes",value:(o=ie(regeneratorRuntime.mark(function e(t,n,r){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.t1=r,e.abrupt("return",e.sent.stateDeltaHashes.slice(e.t0,e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e,t,n){return o.apply(this,arguments)})},{key:"isValidDeltaHash",value:(s=ie(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes.includes(e.t0));case 4:case"end":return e.stop()}},e,this)})),function(e,t){return s.apply(this,arguments)})},{key:"login",value:function(e){var t=this,n=new $.a;return ie(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.login().send({from:e}).on("transactionHash",function(e){n.emit(N,e)}).on("confirmation",function(e,t){n.emit(P,e,t)}).on("receipt",function(e){n.emit(w,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(h,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"logout",value:function(e){var t=this,n=new $.a;return ie(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.logout().send({from:e}).on("transactionHash",function(e){n.emit(R,e)}).on("confirmation",function(e,t){n.emit(A,e,t)}).on("receipt",function(e){n.emit(W,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit(h,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"deposit",value:function(e,t){var n=this,r=new $.a;return ie(regeneratorRuntime.mark(function a(){var i;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,n.tokenContract.methods.balanceOf(e).call();case 2:if(!(a.sent<t)){a.next=7;break}return"Not enough tokens in wallet",r.emit("error",{name:"NotEnoughTokens",message:"Not enough tokens in wallet"}),a.abrupt("return");case 7:return a.next=9,n.tokenContract.methods.approve(n.enigmaContract.options.address,t).send({from:e});case 9:return a.prev=9,a.next=12,n.enigmaContract.methods.deposit(e,t).send({from:e}).on("transactionHash",function(e){r.emit(v,e)}).on("confirmation",function(e,t){r.emit(C,e,t)});case 12:i=a.sent,r.emit(E,i),a.next=19;break;case 16:a.prev=16,a.t0=a.catch(9),r.emit(h,a.t0.message);case 19:case"end":return a.stop()}},a,null,[[9,16]])}))(),r}},{key:"withdraw",value:function(e,t){var n=this,r=new $.a;return ie(regeneratorRuntime.mark(function a(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,n.enigmaContract.methods.withdraw(t).send({from:e}).on("transactionHash",function(e){r.emit(V,e)}).on("confirmation",function(e,t){r.emit(x,e,t)}).on("receipt",function(e){r.emit(L,e)});case 3:a.next=8;break;case 5:a.prev=5,a.t0=a.catch(0),r.emit(h,a.t0.message);case 8:case"end":return a.stop()}},a,null,[[0,5]])}))(),r}},{key:"getBalance",value:(i=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getWorker(t).call();case 3:return e.t1=e.sent.balance,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e){return i.apply(this,arguments)})},{key:"getWorkerSignerAddr",value:(a=ie(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return e.abrupt("return",e.sent.signer);case 3:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})}])&&se(t.prototype,n),r&&se(t,r),e}();var de=function e(t,n,r,a,i,s,o,d,p,l,c,y,u,m,f,_){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.inputsHash=D.hash([n,r,_?f:t,o]),this.scAddr=t,this.encryptedFn=n,this.encryptedAbiEncodedArgs=r,this.gasLimit=a,this.gasPx=i,this.msgId=s,this.userPubKey=o,this.firstBlockNumber=d,this.workerAddress=p,this.workerEncryptionKey=l,this.sender=c,this.userTaskSig=y,this.nonce=u,this.preCode=m,this.preCodeHash=f,this.isContractDeploymentTask=_,this.transactionHash="",this.taskId="",this.receipt="",this.ethStatus=0,this.proof="",this.creationBlockNumber=-1,this.encryptedAbiEncodedOutputs="",this.delta="",this.usedGas="",this.ethereumPayload="",this.ethereumAddress="",this.workerTaskSig="",this.engStatus="null",this.decryptedOutput=""},pe=n(10),le=n.n(pe),ce=n(11),ye=n.n(ce),ue=n(12),me=n(6),fe=n.n(me);function _e(e){return(_e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function be(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function ge(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){be(i,r,a,s,o,"next",e)}function o(e){be(i,r,a,s,o,"throw",e)}s(void 0)})}}function Te(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var De=function(){function e(t,n,r,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.txDefaults=i;this.client=le()(function(e,t){ye.a.post(a,JSON.parse(e),{headers:{"Content-Type":"application/json",credentials:"include"}}).then(function(e){if(h in e.data)t(e.data.error,null);else{var n=JSON.stringify(e.data.result);t(null,n)}}).catch(function(e){t({code:-32e3,message:e.message},null)})},{}),this.workerParamsCache={},this.selectedWorkerGroupCache={},this.taskKeyLocalStorage={},this.createContracts(n,r)}var t,n,r,a,s,d,l,c,y,u;return t=e,n=[{key:"admin",value:function(){this.admin=new oe(this.web3,this.enigmaContract,this.tokenContract,this.txDefaults,this)}},{key:"createContracts",value:function(e,t){this.enigmaContract=new this.web3.eth.Contract(S.abi,e,this.txDefaults),this.tokenContract=new this.web3.eth.Contract(I.abi,t,this.txDefaults)}},{key:"createTask",value:function(e,t,n,r,a,i,s){var o=this,d=new $.a;return ge(regeneratorRuntime.mark(function p(){var l,c,y,u,m,f,_,b,g,T,S,I,k,$,v,C,E,V,x,L,N,P,w,R,A,W,q,M;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:return p.t0=parseInt,p.next=3,o.enigmaContract.methods.getUserTaskDeployments(a).call();case 3:if(p.t1=p.sent,l=(0,p.t0)(p.t1),c=s?D.generateScAddr(a,l):i,!s){p.next=17;break}if(!Buffer.isBuffer(i)){p.next=14;break}return y=i,p.next=11,D.gzip(y);case 11:u=p.sent,p.next=15;break;case 14:throw Error("PreCode expected to be a Buffer, instead got "+_e(i));case 15:p.next=19;break;case 17:y="",u="";case 19:for(m=s?o.web3.utils.soliditySha3({t:"bytes",value:y.toString("hex")}):"",f=void 0===t||0===t.length?[[],[]]:t[0].map(function(e,n){return t.map(function(e){return e[n]})}),_=D.remove0x(o.web3.eth.abi.encodeParameters(f[1],f[0])),b=[],g=0;g<_.length;g+=2)b.push(parseInt(_.substr(g,2),16));return p.next=26,o.web3.eth.getBlockNumber();case 26:return T=p.sent,p.next=29,o.getWorkerParams(T);case 29:return S=p.sent,I=S.firstBlockNumber,p.next=33,o.selectWorkerGroup(c,S,1)[0];case 33:return k=(k=p.sent).toLowerCase().slice(-40),$=o.obtainTaskKeyPair(),v=$.publicKey,C=$.privateKey,p.prev=36,p.next=39,new Promise(function(e,t){o.client.request("getWorkerEncryptionKey",{workerAddress:k,userPubKey:v},function(n,r){n?t(n):e(r)})});case 39:if(E=p.sent,V=E.result,x=E.id,L=V.workerEncryptionKey,N=V.workerSig,P="0x0000000000000013456e69676d612055736572204d6573736167650000000000000040"+L,w=(w=fe.a.recover("0x"+N,o.web3.utils.soliditySha3({t:"bytes",value:P}))).toLowerCase().slice(-40),k===w){p.next=50;break}console.error("Worker address",k,"!= recovered address",w),d.emit(h,{name:"InvalidWorker",message:"Invalid worker encryption key + signature combo ".concat(k," != ").concat(w)}),p.next=58;break;case 50:return R=D.getDerivedKey(L,C),A=D.encryptMessage(R,e),W=D.encryptMessage(R,Buffer.from(b)),q=o.web3.utils.soliditySha3({t:"bytes",v:A},{t:"bytes",v:W}),p.next=56,o.web3.eth.sign(q,a);case 56:M=p.sent,d.emit(U,new de(c,A,W,n,r,x,v,I,k,L,a,M,l,u.toString("base64"),m,s));case 58:p.next=63;break;case 60:p.prev=60,p.t2=p.catch(36),d.emit(h,p.t2);case 63:case"end":return p.stop()}},p,null,[[36,60]])}))(),d}},{key:"createTaskRecord",value:function(e){var t=this,n=new $.a;return ge(regeneratorRuntime.mark(function r(){var a;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.tokenContract.methods.balanceOf(e.sender).call();case 2:if(!(r.sent<e.gasLimit*e.gasPx)){r.next=6;break}return n.emit(h,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 6:return r.next=8,t.tokenContract.methods.approve(t.enigmaContract.options.address,e.gasLimit*e.gasPx).send({from:e.sender});case 8:if(r.prev=8,!e.isContractDeploymentTask){r.next=15;break}return r.next=12,t.enigmaContract.methods.createDeploymentTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber,e.nonce).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(O,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 12:r.t0=r.sent,r.next=18;break;case 15:return r.next=17,t.enigmaContract.methods.createTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(O,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 17:r.t0=r.sent;case 18:a=r.t0,e.taskId=a.events.TaskRecordCreated.returnValues.taskId,e.receipt=a,e.ethStatus=1,e.creationBlockNumber=a.blockNumber,n.emit(K,a),n.emit(j,e),r.next=30;break;case 27:r.prev=27,r.t1=r.catch(8),n.emit(h,r.t1.message);case 30:case"end":return r.stop()}},r,null,[[8,27]])}))(),n}},{key:"createTaskRecords",value:function(e){var t=this,n=new $.a;return ge(regeneratorRuntime.mark(function r(){var a,i,s,o,d,p;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return a=e.map(function(e){return e.inputsHash}),i=e.map(function(e){return e.gasLimit}),s=e.map(function(e){return e.gasPx}),o=e.map(function(e){return e.gasLimit*e.gasPx}),r.next=6,t.tokenContract.methods.balanceOf(e[0].sender).call();case 6:if(d=r.sent,p=o.reduce(function(e,t){return e+t},0),!(d<p)){r.next=11;break}return n.emit(h,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 11:return r.next=13,t.tokenContract.methods.approve(t.enigmaContract.options.address,p).send({from:e[0].sender});case 13:return r.next=15,t.enigmaContract.methods.createTaskRecords(a,i,s,e[0].firstBlockNumber).send({from:e[0].sender}).on("transactionHash",function(t){for(var r=0;r<e.length;r++)e[r].transactionHash=t;n.emit(Y,t)}).on("confirmation",function(e,t){n.emit(J,e,t)}).then(function(t){for(var r=t.events.TaskRecordsCreated.returnValues.taskIds,a=0;a<e.length;a++)e[a].taskId=r[a],e[a].receipt=t,e[a].ethStatus=1,e[a].creationBlockNumber=t.blockNumber;n.emit(Z,t),n.emit(X,e)});case 15:case"end":return r.stop()}},r)}))(),n}},{key:"getTaskRecordStatus",value:(u=ge(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return n=e.sent,t.ethStatus=parseInt(n.status),t.proof=n.proof,e.abrupt("return",t);case 6:case"end":return e.stop()}},e,this)})),function(e){return u.apply(this,arguments)})},{key:"getTaskOutputHash",value:(y=ge(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return e.abrupt("return",e.sent.outputHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return y.apply(this,arguments)})},{key:"getReport",value:(c=ge(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getReport(t).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e){return c.apply(this,arguments)})},{key:"getWorkerParams",value:(l=ge(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(0===Object.keys(this.workerParamsCache).length||t-this.workerParamsCache.firstBlockNumber>=this.epochSize)){e.next=8;break}return e.next=3,this.enigmaContract.methods.getEpochSize().call();case 3:return this.epochSize=e.sent,e.next=6,this.enigmaContract.methods.getWorkerParams(t).call();case 6:n=e.sent,this.workerParamsCache={firstBlockNumber:parseInt(n[0]),seed:i.a.BigInt(n[1]),workers:n[2],stakes:n[3].map(function(e){return i.a.BigInt(e)})};case 8:return e.abrupt("return",this.workerParamsCache);case 9:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"selectWorkerGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5,r=t.stakes.reduce(function(e,t){return i.a.add(e,t)},i.a.BigInt(0)),a=0,s=[];do{for(var d=ue.rawEncode(["uint256","bytes32","uint256"],[t.seed.toString(10),e,a]),p=o.a.keccak256(d),l=i.a.remainder(i.a.BigInt(p),r),c=t.workers[t.workers.length-1],y=0;y<t.workers.length;y++)if((l=i.a.subtract(l,t.stakes[y]))<=0){c=t.workers[y];break}s.includes(c)||s.push(c),a++}while(s.length<n);return s}},{key:"sendTaskInput",value:function(t){var n=this,r=new $.a;return ge(regeneratorRuntime.mark(function a(){var i,s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return i="sendTaskInput",s=Q,t.isContractDeploymentTask&&(i="deploySecretContract",s=ne),a.prev=3,a.next=6,new Promise(function(r,a){n.client.request(i,e.serializeTask(t),function(e,t){e?a(e):r(t)})});case 6:r.emit(s,t),a.next=12;break;case 9:a.prev=9,a.t0=a.catch(3),r.emit(h,a.t0);case 12:case"end":return a.stop()}},a,null,[[3,9]])}))(),r}},{key:"getTaskResult",value:function(e){var t=this,n=new $.a;return ge(regeneratorRuntime.mark(function r(){var a;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,new Promise(function(n,r){t.client.request("getTaskResult",{taskId:D.remove0x(e.taskId)},function(e,t){e?r(e):n(t)})});case 3:if(!(a=r.sent).result){r.next=20;break}r.t0=a.result.status,r.next="SUCCESS"===r.t0?8:"FAILED"===r.t0?12:"UNVERIFIED"===r.t0?15:"INPROGRESS"===r.t0?15:17;break;case 8:e.delta=a.result.delta,e.ethereumPayload=a.result.ethereumPayload,e.ethereumAddress=a.result.ethereumAddress,e.preCodeHash=a.result.preCodeHash;case 12:e.encryptedAbiEncodedOutputs=a.result.output,e.usedGas=a.result.usedGas,e.workerTaskSig=a.result.signature;case 15:return e.engStatus=a.result.status,r.abrupt("break",18);case 17:throw new Error("Invalid task result status").message;case 18:r.next=21;break;case 20:e.engStatus=null;case 21:n.emit(te,e),r.next=27;break;case 24:r.prev=24,r.t1=r.catch(0),n.emit(h,r.t1);case 27:case"end":return r.stop()}},r,null,[[0,24]])}))(),n}},{key:"decryptTaskResult",value:(d=ge(regeneratorRuntime.mark(function e(t){var n,r,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=this.obtainTaskKeyPair(),r=n.privateKey,a=D.getDerivedKey(t.workerEncryptionKey,r),t.decryptedOutput=D.decryptMessage(a,t.encryptedAbiEncodedOutputs),e.abrupt("return",t);case 4:case"end":return e.stop()}},e,this)})),function(e){return d.apply(this,arguments)})},{key:"verifyTaskOutput",value:(s=ge(regeneratorRuntime.mark(function e(t){var n,r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getTaskOutputHash(t);case 2:return n=e.sent,r=this.web3.utils.soliditySha3({t:"bytes",value:t.encryptedAbiEncodedOutputs.toString("hex")}),e.abrupt("return",n===r);case 5:case"end":return e.stop()}},e,this)})),function(e){return s.apply(this,arguments)})},{key:"pollTaskStatusGen",value:regeneratorRuntime.mark(function e(t,n){var r=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,new Promise(function(e,a){r.client.request("getTaskStatus",{taskId:D.remove0x(t.taskId),workerAddress:t.workerAddress,withResult:n},function(r,i){r?a(r):(t.engStatus=i.result.status,n&&(t.encryptedAbiEncodedOutputs=i.result.output),e(t))})});case 3:e.next=0;break;case 5:case"end":return e.stop()}},e)})},{key:"innerPollTaskStatus",value:function(e,t,n){var r=this;t.next().value.then(function(a){n.emit(ee,a),"SUCCESS"!==a.engStatus&&"FAILED"!==a.engStatus&&r.innerPollTaskStatus(e,t,n)}).catch(function(e){n.emit(h,e)})}},{key:"pollTaskStatus",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=new $.a,r=this.pollTaskStatusGen(e,t);return this.innerPollTaskStatus(e,r,n),n}},{key:"pollTaskETH",value:(a=ge(regeneratorRuntime.mark(function e(t){var n,r=arguments;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=r.length>1&&void 0!==r[1]?r[1]:1e3;case 1:if(1!==t.ethStatus){e.next=9;break}return e.next=4,this.getTaskRecordStatus(t);case 4:return t=e.sent,e.next=7,D.sleep(n);case 7:e.next=1;break;case 9:return e.abrupt("return",t);case 10:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})},{key:"obtainTaskKeyPair",value:function(){var e,t="undefined"!=typeof window,n=t?window.localStorage.getItem("encodedPrivateKey"):this.taskKeyLocalStorage.encodedPrivateKey;if(null==n){var r=p.a.random.createInstance();r.seedFileSync=function(e){return p.a.util.fillString("cupcake",e)},e=p.a.util.bytesToHex(r.getBytes(32)),t?window.localStorage.setItem("encodedPrivateKey",btoa(e)):this.taskKeyLocalStorage.encodedPrivateKey=Buffer.from(e,"binary").toString("base64")}else e=t?atob(n):Buffer.from(n,"base64").toString("binary");return{publicKey:fe.a.publicKeyByPrivateKey(e),privateKey:e}}},{key:"deploySecretContract",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return ge(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!0).on(U,function(e){return o(e)}).on(h,function(e){return d(e)})});case 2:return p=o.sent,d.emit(U,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(h,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(ne,function(t){return e(t)}).on(h,function(e){return t(e)})});case 10:return d.emit(ne,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(h,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}},{key:"computeTask",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new $.a;return ge(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!1).on(U,function(e){return o(e)}).on(h,function(e){return d(e)})});case 2:return p=o.sent,d.emit(U,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on(h,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(Q,function(t){return e(t)}).on(h,function(e){return t(e)})});case 10:return d.emit(Q,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit(h,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}}],r=[{key:"serializeTask",value:function(e){return e.isContractDeploymentTask?{preCode:e.preCode,encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),encryptedFn:D.remove0x(e.encryptedFn),userDHKey:D.remove0x(e.userPubKey),contractAddress:D.remove0x(e.scAddr),workerAddress:e.workerAddress}:{taskId:D.remove0x(e.taskId),workerAddress:e.workerAddress,encryptedFn:D.remove0x(e.encryptedFn),encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),contractAddress:D.remove0x(e.scAddr),userDHKey:D.remove0x(e.userPubKey)}}},{key:"version",value:function(){return"0.0.1"}}],n&&Te(t.prototype,n),r&&Te(t,r),e}();n.d(t,"Enigma",function(){return De}),n.d(t,"utils",function(){return D}),n.d(t,"eeConstants",function(){return r})}])});
//# sourceMappingURL=enigma-js.node.min.js.map